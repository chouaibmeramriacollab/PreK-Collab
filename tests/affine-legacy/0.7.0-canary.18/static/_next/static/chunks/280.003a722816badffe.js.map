{"version":3,"file":"static/chunks/280.003a722816badffe.js","mappings":"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Awe,oBAAA,EAAoBniB,GAClDH,EAAAskB,aAAA,CAAA1gB,EAAA,CACAglB,OAAAhqB,EAAAspB,aAAA,EAAAU,OACAC,MAAAjqB,EAAAspB,aAAA,EAAAW,MACAC,QAAAlqB,EAAAspB,aAAA,EAAAY,OACA,EACA,CACA,OAAAhB,CACA,uKC5IO,IAAAiB,EAAA,CACP,uBACA,yBACA,2BACA,0BACA,uBACA,sBACA,0BACA,wBACA,yBACA,6BACA,uBACA,sBACA,+BACA,yBACA,yBACA,uBACA,4BACA,+BACA,8BACA,gCACA,8BACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,iBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,iBACA,iCACA,qCACA,uCACA,kCACA,oCACA,oCACA,oCACA,sCACA,kCACA,0CACA,oBACA,qBACA,oBACA,qBACA,sBACA,mBACA,oBACA,sBACA,sBACA,oBACA,+BACA,+BACA,kCACA,4BACA,gCACA,+BACA,6BACA,6BACA,8BACA,8BACA,8BACA,6BACA,gCACA,gCACA,mCACA,6BACA,iCACA,gCACA,8BACA,8BACA,+BACA,+BACA,+BACA,8BACA,mBACA,CACOC,EAAA,CACP,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,mBACA,mBACA,uBACA,yBACA,2BACA,CACOC,EAAA,CACP,uBACA,8BACA,4BACA,CACOC,EAAA,CACP,wBACA,sBACA,uBAEA,+BACA,0BACA,uBACA,+BACA,oBACA,oBACA,oBACA,2BACA,0BACA,gBACA,oBACAF,KACAD,KACAE,EACA,CACO,SAAAE,EAAAvtC,CAAA,EACP,OAAAstC,EAAAE,QAAA,CAAAxtC,EACA,8GC9GA,SAAAytC,EAAA5oB,CAAA,EACA,IAAA4O,EAAA5O,EAAAwL,OAAA,qBAEA,MADI,GAAA5D,EAAA7J,EAAA,EAAY6Q,GAChBA,CACA,CACO,SAAAia,EAAAC,CAAA,CAAAltB,CAAA,EACP,IAAAgT,EAAAga,EAAAE,GACA,OAAAla,EAAAma,aAAA,CAAAxwC,EAAA,CAAAqjB,E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","sources":["webpack://_N_E/../../node_modules/jszip/dist/jszip.min.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/clipboard/utils/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/clipboard/edgeless-clipboard.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/clipboard/page-clipboard.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/clipboard/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/clipboard/utils/commons.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/clipboard/utils/markdown.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/link-node/affine-link.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/link-node/mock-selection.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/link-node/create-link.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/link-node/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/reference-node.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/rich-text-operations.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/inline-suggestion.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/bracket-complete.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/keyboard.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/rich-text.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/virgo/affine-text.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/virgo/attribute-renderer.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/virgo/types.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/services.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/rich-text/markdown-convert.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/service/keymap.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/service/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/service/json2block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/theme/css-variables.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/theme/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/utils/check-line.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/utils/virgo.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/images/icons.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/components/bookmark-operation-popper.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/components/bookmark-toolbar.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/components/bookmark-edit-modal.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/components/bookmark-create-modal.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/components/loader.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/bookmark-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/images/banners.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/bookmark-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/bookmark-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/components/code-option.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/components/lang-list.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/code-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/utils/code-line-renderer.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/code-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/components/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/drag-handle.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/format-quick-bar/button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/format-quick-bar/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/format-quick-bar/format-bar-node.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/format-quick-bar/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/loader.js","webpack://_N_E/../../node_modules/@blocksuite/global/dist/config/icons/import-export.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/import-page/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/import-page/import-page.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/import-page/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/block-hub.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/menu-divider.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/remote-selection/remote-selection.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/selected-blocks.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/tooltip/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/link-popover/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/link-popover/link-popover.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/link-popover/create-link-popover.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/link-popover/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/linked-page/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/linked-page/linked-page-popover.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/linked-page/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/portal.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/slash-menu/config.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/slash-menu/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/slash-menu/slash-menu-popover.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/slash-menu/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/toast.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/tooltip/tooltip.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/database-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/selection/cell-selection.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/selection/row-selection.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/selection/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/selection-manager/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/divider-block/divider-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/divider-block/divider-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/divider-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/image/placeholder/circle-loading.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/image/placeholder/loading-card.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/image/placeholder/image-not-found.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/image/image-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/image/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/embed-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/embed-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/embed-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/frame-block/frame-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/frame-block/frame-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/frame-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/counter-block/counter-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/counter-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/utils/highlight-cache.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/code-block/affine-code-line.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/surface-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/types.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/edit-column-popup/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/edit-column-popup/column-type-popup.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/edit-column-popup/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/edit-column-popup/edit-column-popup.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-header/column-move/column-drag-indicator.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-header/column-move/column-drag-preview.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-header/column-move/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-header/column-width/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-header/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-header/column-header.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/register.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/cell-container.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/toolbar/toolbar-action-popup.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/toolbar/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/toolbar/toolbar.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/virgo-input/virgo-input.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/database-title.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/checkbox.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/multi-select.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/number.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/progress.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/rich-text.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/select/select-option.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/selection-manager/cell.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/select/select-option-popup.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/select/select-cell-editing.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/select/select.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/column-type/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/components/row-container.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/selection-manager/row.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/table/table-view.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/kanban/kanban-view.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/database-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/database-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/__internal__/theme/theme-observer.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/preset/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/list-block/list-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/list-block/utils/get-number-prefix.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/list-block/utils/get-list-icon.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/list-block/utils/get-list-info.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/list-block/list-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/list-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/list-block/utils/icons.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/color-panel.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/align-panel.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/component-toolbar/change-text-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/utils.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/heap.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/a-star.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/graph.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/create-graph/create-nodes.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/create-graph/create-rulers.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/create-graph/manual-generate-graph.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/create-graph/create-graph.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/route.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/surface-text-editor.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/backlink-popover.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/components.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/utils.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/block-drag-handlers.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/embed-resize-manager.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/native-drag-handlers.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/preview-drag-handlers.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/selection-state.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/selection-manager.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/selection-manager/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/default/default-page-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/tool-icon-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/shape-tool/shape-menu-config.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/shape-tool/shape-menu.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/line-size-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/line-style-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/panel-wrapper.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/line-styles-panel.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/component-toolbar/change-shape-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/component-toolbar/change-brush-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/component-toolbar/change-connector-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/component-toolbar/change-frame-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/component-toolbar/more-button.js","webpack://_N_E/../../node_modules/lit-html/directives/join.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/component-toolbar/component-toolbar.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/resize-handles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/resize-manager.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/single-connector-handles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/edgeless-selected-rect.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/shape-tool/shape-tool-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/brush-tool/brush-menu.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/brush-tool/brush-tool-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/connector-tool/connector-menu.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/connector-tool/connector-tool-button.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/toolbar/edgeless-toolbar.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/block-children-container.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/dragging-area.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/components/hover-rect.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/default-mode.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/create-drag-handle.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/frame-resize-observer.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/hotkey.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/brush-mode.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/connector-mode.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/note-mode.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/pan-mode.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/shape-mode.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/mode-controllers/text-mode.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/selection-manager.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/edgeless/edgeless-page-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/page-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/utils/bind-hotkey.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/database-modal/styles.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/database-modal/database-modal.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/components/database-modal/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/utils/const.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/utils/container-operations.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/utils/format-config.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/utils/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/page-block/utils/position.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/paragraph-block/paragraph-service.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/paragraph-block/paragraph-block.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/paragraph-block/index.js","webpack://_N_E/../../node_modules/@blocksuite/blocks/dist/std.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/rectangle.js","webpack://_N_E/../../node_modules/@blocksuite/connector/dist/simplify-path.js","webpack://_N_E/../../node_modules/@blocksuite/global/dist/config/consts/block-hub.js","webpack://_N_E/../../node_modules/@blocksuite/global/dist/config/icons/database.js","webpack://_N_E/../../node_modules/@blocksuite/global/dist/config/icons/edgeless.js","webpack://_N_E/../../node_modules/@blocksuite/global/dist/config/icons/utils.js","webpack://_N_E/../../node_modules/@blocksuite/global/dist/config/icons/text.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/width-disposable.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/element/shadowless-element.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/element/block-element.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/event/base.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/event/state.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/event/keyboard.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/event/utils.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/event/pointer.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/event/dispatcher.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/event/index.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/element/lit-root.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/element/index.js","webpack://_N_E/../../node_modules/@blocksuite/lit/dist/index.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/consts.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/connector/types.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/perfect-freehand/getStrokeRadius.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/perfect-freehand/vec.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/perfect-freehand/getStrokeOutlinePoints.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/perfect-freehand/getStrokePoints.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/perfect-freehand/getStroke.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/utils/vec.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/utils/tl-utils.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/utils/xywh.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/utils/bound.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/utils/hit-utils.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/surface-element.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/brush/brush-element.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/brush/constants.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/connector/utils.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/connector/connector-element.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/connector/constants.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/debug/debug-element.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/shape/constants.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/shape/shapes/diamond.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/shape/shapes/ellipse.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/shape/shapes/rect.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/shape/shapes/triangle.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/shape/shapes/index.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/shape/shape-element.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/text/constants.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/text/utils.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/text/text-element.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/elements/index.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/grid.js","webpack://_N_E/../../node_modules/roughjs/bin/geometry.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/scan-line-hachure.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/hachure-filler.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/zigzag-filler.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/hatch-filler.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/dot-filler.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/dashed-filler.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/zigzag-line-filler.js","webpack://_N_E/../../node_modules/roughjs/bin/fillers/filler.js","webpack://_N_E/../../node_modules/roughjs/bin/math.js","webpack://_N_E/../../node_modules/path-data-parser/lib/parser.js","webpack://_N_E/../../node_modules/path-data-parser/lib/absolutize.js","webpack://_N_E/../../node_modules/path-data-parser/lib/normalize.js","webpack://_N_E/../../node_modules/path-data-parser/lib/index.js","webpack://_N_E/../../node_modules/roughjs/bin/renderer.js","webpack://_N_E/../../node_modules/points-on-curve/lib/curve-to-bezier.js","webpack://_N_E/../../node_modules/points-on-curve/lib/index.js","webpack://_N_E/../../node_modules/points-on-path/lib/index.js","webpack://_N_E/../../node_modules/roughjs/bin/generator.js","webpack://_N_E/../../node_modules/roughjs/bin/canvas.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/renderer.js","webpack://_N_E/../../node_modules/fractional-indexing/src/index.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/utils/std.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/surface.js","webpack://_N_E/../../node_modules/@blocksuite/phasor/dist/index.js","webpack://_N_E/../../node_modules/lit-html/directives/class-map.js","webpack://_N_E/../../node_modules/lit/directives/class-map.js","webpack://_N_E/<anon>"],"sourcesContent":["/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).JSZip=e()}}(function(){return function s(a,o,h){function u(r,e){if(!o[r]){if(!a[r]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(r,!0);if(l)return l(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var i=o[r]={exports:{}};a[r][0].call(i.exports,function(e){var t=a[r][1][e];return u(t||e)},i,i.exports,s,a,o,h)}return o[r].exports}for(var l=\"function\"==typeof require&&require,e=0;e<h.length;e++)u(h[e]);return u}({1:[function(e,t,r){\"use strict\";var d=e(\"./utils\"),c=e(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(e){for(var t,r,n,i,s,a,o,h=[],u=0,l=e.length,f=l,c=\"string\"!==d.getTypeOf(e);u<e.length;)f=l-u,n=c?(t=e[u++],r=u<l?e[u++]:0,u<l?e[u++]:0):(t=e.charCodeAt(u++),r=u<l?e.charCodeAt(u++):0,u<l?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,a=1<f?(15&r)<<2|n>>6:64,o=2<f?63&n:64,h.push(p.charAt(i)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(e){var t,r,n,i,s,a,o=0,h=0,u=\"data:\";if(e.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(e=e.replace(/[^A-Za-z0-9+/=]/g,\"\")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&f--,e.charAt(e.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=c.uint8array?new Uint8Array(0|f):new Array(0|f);o<e.length;)t=p.indexOf(e.charAt(o++))<<2|(i=p.indexOf(e.charAt(o++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(o++)))>>2,n=(3&s)<<6|(a=p.indexOf(e.charAt(o++))),l[h++]=t,64!==s&&(l[h++]=r),64!==a&&(l[h++]=n);return l}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,r){\"use strict\";var n=e(\"./external\"),i=e(\"./stream/DataWorker\"),s=e(\"./stream/Crc32Probe\"),a=e(\"./stream/DataLengthProbe\");function o(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i}o.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,r){\"use strict\";var n=e(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(){return new n(\"STORE compression\")},uncompressWorker:function(){return new n(\"STORE decompression\")}},r.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,r){\"use strict\";var n=e(\"./utils\");var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==n.getTypeOf(e)?function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}(0|t,e,e.length,0):function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t.charCodeAt(a))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(e,t,r){\"use strict\";var n=null;n=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:n}},{lie:37}],7:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),s=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=n?\"uint8array\":\"array\";function h(e,t){a.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,e.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(e){return new h(\"Deflate\",e)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,r){\"use strict\";function A(e,t){var r,n=\"\";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function n(e,t,r,n,i,s){var a,o,h=e.file,u=e.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),c=I.transformTo(\"string\",O.utf8encode(h.name)),d=h.comment,p=I.transformTo(\"string\",s(d)),m=I.transformTo(\"string\",O.utf8encode(d)),_=c.length!==h.name.length,g=m.length!==d.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===i?(C=798,z|=function(e,t){var r=e;return e||(r=t?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(e){return 63&(e||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+c,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(n,4)+f+b+p}}var I=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),O=e(\"../utf8\"),B=e(\"../crc32\"),R=e(\"../signature\");function s(e,t,r,n){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,i),s.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}))},s.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=n(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,r=n(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),t)this.push({data:function(e){return R.DATA_DESCRIPTOR+A(e.crc32,4)+A(e.compressedSize,4)+A(e.uncompressedSize,4)}(e),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r=this.bytesWritten-e,n=function(e,t,r,n,i){var s=I.transformTo(\"string\",i(n));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(e,2)+A(e,2)+A(t,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,e,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()}),e.on(\"error\",function(e){t.error(e)}),this},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var r=0;r<t.length;r++)try{t[r].error(e)}catch(e){}return!0},s.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,r){\"use strict\";var u=e(\"../compressions\"),n=e(\"./ZipFileWorker\");r.generateWorker=function(e,a,t){var o=new n(a.streamFiles,t,a.platform,a.encodeFileName),h=0;try{e.forEach(function(e,t){h++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+\" is not a valid compression method !\");return n}(t.options.compression,a.compression),n=t.options.compressionOptions||a.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo(\"file\",{name:e,dir:i,date:s,comment:t.comment||\"\",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(e){o.error(e)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,r){\"use strict\";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var e=new n;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}(n.prototype=e(\"./object\")).loadAsync=e(\"./load\"),n.support=e(\"./support\"),n.defaults=e(\"./defaults\"),n.version=\"3.10.1\",n.loadAsync=function(e,t){return(new n).loadAsync(e,t)},n.external=e(\"./external\"),t.exports=n},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,r){\"use strict\";var u=e(\"./utils\"),i=e(\"./external\"),n=e(\"./utf8\"),s=e(\"./zipEntries\"),a=e(\"./stream/Crc32Probe\"),l=e(\"./nodejsUtils\");function f(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new a);r.on(\"error\",function(e){t(e)}).on(\"end\",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error(\"Corrupted zip : CRC32 mismatch\")):e()}).resume()})}t.exports=function(e,o){var h=this;return o=u.extend(o||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:n.utf8decode}),l.isNode&&l.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):u.prepareContent(\"the loaded zip file\",e,!0,o.optimizedBinaryString,o.base64).then(function(e){var t=new s(o);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(o.checkCRC32)for(var n=0;n<r.length;n++)t.push(f(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n],s=i.fileNameStr,a=u.resolve(i.fileNameStr);h.file(a,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:o.createFolders}),i.dir||(h.file(a).unsafeOriginalName=s)}return t.zipComment.length&&(h.comment=t.zipComment),h})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function s(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on(\"data\",function(e){t.push({data:e,meta:{percent:0}})}).on(\"error\",function(e){t.isPaused?this.generatedError=e:t.error(e)}).on(\"end\",function(){t.isPaused?t._upstreamEnded=!0:t.end()})},s.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,r){\"use strict\";var i=e(\"readable-stream\").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on(\"data\",function(e,t){n.push(e)||n._helper.pause(),r&&r(t)}).on(\"error\",function(e){n.emit(\"error\",e)}).on(\"end\",function(){n.push(null)})}e(\"../utils\").inherits(n,i),n.prototype._read=function(){this._helper.resume()},t.exports=n},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,r){\"use strict\";t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,r){\"use strict\";function s(e,t,r){var n,i=u.getTypeOf(t),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=g(e)),s.createFolders&&(n=_(e))&&b.call(this,n,!0);var a=\"string\"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t=\"\",s.compression=\"STORE\",i=\"string\");var o=null;o=t instanceof c||t instanceof l?t:p.isNode&&p.isStream(t)?new m(e,t):u.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var h=new d(e,o,s);this.files[e]=h}var i=e(\"./utf8\"),u=e(\"./utils\"),l=e(\"./stream/GenericWorker\"),a=e(\"./stream/StreamHelper\"),f=e(\"./defaults\"),c=e(\"./compressedObject\"),d=e(\"./zipObject\"),o=e(\"./generate\"),p=e(\"./nodejsUtils\"),m=e(\"./nodejs/NodejsStreamInputAdapter\"),_=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return 0<t?e.substring(0,t):\"\"},g=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},b=function(e,t){return t=void 0!==t?t:f.createFolders,e=g(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function h(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,r,n;for(t in this.files)n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n)},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t)}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(h(e)){var n=e;return this.filter(function(e,t){return!t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=b.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||(\"/\"!==r.slice(-1)&&(r+=\"/\"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,r={};try{if((r=u.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var n=r.comment||this.comment||\"\";t=o.generateWorker(this,r,n)}catch(e){(t=new l(\"error\")).error(e)}return new a(t,r.type||\"string\",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,r){\"use strict\";t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,r){\"use strict\";var n=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo(\"string\",this.readData(e))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,r){\"use strict\";var n=e(\"./Uint8ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,r){\"use strict\";var n=e(\"./ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../support\"),s=e(\"./ArrayReader\"),a=e(\"./StringReader\"),o=e(\"./NodeBufferReader\"),h=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new o(e):i.uint8array?new h(n.transformTo(\"uint8array\",e)):new s(n.transformTo(\"array\",e)):new a(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../utils\");function s(e){n.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../crc32\");function s(){n.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat()},function(e){t.error(e)})}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,r){\"use strict\";function n(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.end()}),e.on(\"error\",function(e){t.error(e)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=n},{}],29:[function(e,t,r){\"use strict\";var h=e(\"../utils\"),i=e(\"./ConvertWorker\"),s=e(\"./GenericWorker\"),u=e(\"../base64\"),n=e(\"../support\"),a=e(\"../external\"),o=null;if(n.nodestream)try{o=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,o){return new a.Promise(function(t,r){var n=[],i=e._internalType,s=e._outputType,a=e._mimeType;e.on(\"data\",function(e,t){n.push(e),o&&o(t)}).on(\"error\",function(e){n=[],r(e)}).on(\"end\",function(){try{var e=function(e,t,r){switch(e){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",t),r);case\"base64\":return u.encode(t);default:return h.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(i,n),a);t(e)}catch(e){r(e)}n=[]}).resume()})}function f(e,t,r){var n=t;switch(t){case\"blob\":case\"arraybuffer\":n=\"uint8array\";break;case\"base64\":n=\"string\"}try{this._internalType=n,this._outputType=t,this._mimeType=r,h.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock()}catch(e){this._worker=new s(\"error\"),this._worker.error(e)}}f.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var r=this;return\"data\"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta)}):this._worker.on(e,function(){h.delay(t,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob(\"application/zip\").size}catch(e){r.blob=!1}}}try{r.nodestream=!!e(\"readable-stream\").Readable}catch(e){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,s){\"use strict\";for(var o=e(\"./utils\"),h=e(\"./support\"),r=e(\"./nodejsUtils\"),n=e(\"./stream/GenericWorker\"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;u[254]=u[254]=1;function a(){n.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){n.call(this,\"utf-8 encode\")}s.utf8encode=function(e){return h.nodebuffer?r.newBufferFrom(e,\"utf-8\"):function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=h.uint8array?new Uint8Array(o):new Array(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return h.nodebuffer?o.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,r,n,i,s=e.length,a=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)a[r++]=n;else if(4<(i=u[n]))a[r++]=65533,t+=i-1;else{for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?a[r++]=65533:n<65536?a[r++]=n:(n-=65536,a[r++]=55296|n>>10&1023,a[r++]=56320|1023&n)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(e=o.transformTo(h.uint8array?\"uint8array\":\"array\",e))},o.inherits(a,n),a.prototype.processChunk=function(e){var t=o.transformTo(h.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(h.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,n),l.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,a){\"use strict\";var o=e(\"./support\"),h=e(\"./base64\"),r=e(\"./nodejsUtils\"),u=e(\"./external\");function n(e){return e}function l(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}e(\"setimmediate\"),a.newBlob=function(t,r){a.checkSupport(\"blob\");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var i={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)\"array\"===t||\"nodebuffer\"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join(\"\")},stringifyByChar:function(e){for(var t=\"\",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return!1}}()}};function s(e){var t=65536,r=a.getTypeOf(e),n=!0;if(\"uint8array\"===r?n=i.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(n=i.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return i.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return i.stringifyByChar(e)}function f(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=s;var c={};c.string={string:n,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:function(e){return l(e,r.allocBuffer(e.length))}},c.array={string:s,array:n,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return s(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:n,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:n,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:n},a.transformTo=function(e,t){if(t=t||\"\",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.resolve=function(e){for(var t=e.split(\"/\"),r=[],n=0;n<t.length;n++){var i=t[n];\".\"===i||\"\"===i&&0!==n&&n!==t.length-1||(\"..\"===i?r.pop():r.push(i))}return r.join(\"/\")},a.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":o.nodebuffer&&r.isBuffer(e)?\"nodebuffer\":o.uint8array&&e instanceof Uint8Array?\"uint8array\":o.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(e){if(!o[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n=\"\";for(r=0;r<(e||\"\").length;r++)n+=\"\\\\x\"+((t=e.charCodeAt(r))<16?\"0\":\"\")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){setImmediate(function(){e.apply(r||null,t||[])})},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(r,e,n,i,s){return u.Promise.resolve(e).then(function(n){return o.blob&&(n instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(n)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)},e.readAsArrayBuffer(n)}):n}).then(function(e){var t=a.getTypeOf(e);return t?(\"arraybuffer\"===t?e=a.transformTo(\"uint8array\",e):\"string\"===t&&(s?e=h.decode(e):n&&!0!==i&&(e=function(e){return l(e,o.uint8array?new Uint8Array(e.length):new Array(e.length))}(e))),e):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,setimmediate:54}],33:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),i=e(\"./utils\"),s=e(\"./signature\"),a=e(\"./zipEntry\"),o=e(\"./support\");function h(e){this.files=[],this.loadOptions=e}h.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=o.uint8array?\"uint8array\":\"array\",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(n)+\" bytes.\")},prepareReader:function(e){this.reader=n(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),s=e(\"./utils\"),i=e(\"./compressedObject\"),a=e(\"./crc32\"),o=e(\"./utf8\"),h=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in h)if(Object.prototype.hasOwnProperty.call(h,t)&&h[t].magic===e)return h[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var e=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileName)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileComment)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,r){\"use strict\";function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),h=e(\"./stream/GenericWorker\");n.prototype={internalStream:function(e){var t=null,r=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var n=\"string\"===(r=e.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new a.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new h(\"error\")).error(e)}return new s(t,r,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)n.prototype[u[f]]=l;t.exports=n},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(e,l,t){(function(t){\"use strict\";var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),a=t.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)r=\"document\"in t&&\"onreadystatechange\"in t.document.createElement(\"script\")?function(){var e=t.document.createElement(\"script\");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var o=new t.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var e,t;n=!0;for(var r=h.length;r;){for(t=h,h=[],e=-1;++e<r;)t[e]();r=h.length}n=!1}l.exports=function(e){1!==h.push(e)||n||r()}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,r){\"use strict\";var i=e(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],n=[\"PENDING\"];function o(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&d(this,e)}function h(e,t,r){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(t,r,n){i(function(){var e;try{e=r(n)}catch(e){return l.reject(t,e)}e===t?l.reject(t,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(t,e)})}function c(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,l.reject(t,e))}function i(e){r||(r=!0,l.resolve(t,e))}var s=p(function(){e(i,n)});\"error\"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status=\"success\"}catch(e){r.status=\"error\",r.value=e}return r}(t.exports=o).prototype.finally=function(t){if(\"function\"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===a||\"function\"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);this.state!==n?f(r,this.state===a?e:t,this.outcome):this.queue.push(new h(r,e,t));return r},h.prototype.callFulfilled=function(e){l.resolve(this.promise,e)},h.prototype.otherCallFulfilled=function(e){f(this.promise,this.onFulfilled,e)},h.prototype.callRejected=function(e){l.reject(this.promise,e)},h.prototype.otherCallRejected=function(e){f(this.promise,this.onRejected,e)},l.resolve=function(e,t){var r=p(c,t);if(\"error\"===r.status)return l.reject(e,r.value);var n=r.value;if(n)d(e,n);else{e.state=a,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t)}return e},l.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},o.resolve=function(e){if(e instanceof this)return e;return l.resolve(new this(u),e)},o.reject=function(e){var t=new this(u);return l.reject(t,e)},o.all=function(e){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,t=-1,o=new this(u);for(;++t<n;)h(e[t],t);return o;function h(e,t){r.resolve(e).then(function(e){s[t]=e,++a!==n||i||(i=!0,l.resolve(o,s))},function(e){i||(i=!0,l.reject(o,e))})}},o.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var r=e.length,n=!1;if(!r)return this.resolve([]);var i=-1,s=new this(u);for(;++i<r;)a=e[i],t.resolve(a).then(function(e){n||(n=!0,l.resolve(s,e))},function(e){n||(n=!0,l.reject(s,e))});var a;return s}},{immediate:36}],38:[function(e,t,r){\"use strict\";var n={};(0,e(\"./lib/utils/common\").assign)(n,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=n},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,r){\"use strict\";var a=e(\"./zlib/deflate\"),o=e(\"./utils/common\"),h=e(\"./utils/strings\"),i=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,c=0,d=8;function p(e){if(!(this instanceof p))return new p(e);this.options=o.assign({level:f,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:\"\"},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(i[r]);if(t.header&&a.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n=\"string\"==typeof t.dictionary?h.string2buf(t.dictionary):\"[object ArrayBuffer]\"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=a.deflateSetDictionary(this.strm,n))!==l)throw new Error(i[r]);this._dict_set=!0}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?4:0,\"string\"==typeof e?i.input=h.string2buf(e):\"[object ArrayBuffer]\"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new o.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=a.deflate(i,n))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(i.output,i.next_out))):this.onData(o.shrinkBuf(i.output,i.next_out)))}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==n||(this.onEnd(l),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e)},p.prototype.onEnd=function(e){e===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return(t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return(t=t||{}).gzip=!0,n(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,r){\"use strict\";var c=e(\"./zlib/inflate\"),d=e(\"./utils/common\"),p=e(\"./utils/strings\"),m=e(\"./zlib/constants\"),n=e(\"./zlib/messages\"),i=e(\"./zlib/zstream\"),s=e(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(e){if(!(this instanceof a))return new a(e);this.options=d.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=c.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,c.inflateGetHeader(this.strm,this.header)}function o(e,t){var r=new a(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}a.prototype.push=function(e,t){var r,n,i,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof e?h.input=p.binstring2buf(e):\"[object ArrayBuffer]\"===_.call(e)?h.input=new Uint8Array(e):h.input=e,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new d.Buf8(u),h.next_out=0,h.avail_out=u),(r=c.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=c.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(i=p.utf8border(h.output,h.next_out),s=h.next_out-i,a=p.buf2string(h.output,i),h.next_out=s,h.avail_out=u-s,s&&d.arraySet(h.output,h.output,i,s,0),this.onData(a)):this.onData(d.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=c.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(e){this.chunks.push(e)},a.prototype.onEnd=function(e){e===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(e,t){return(t=t||{}).raw=!0,o(e,t)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){var t,r,n,i,s,a;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(a=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],a.set(s,i),i+=s.length;return a}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){return[].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(n)},{}],42:[function(e,t,r){\"use strict\";var h=e(\"./common\"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var u=new h.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function l(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,h.shrinkBuf(e,t));for(var r=\"\",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=new h.Buf8(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return l(e,e.length)},r.binstring2buf=function(e){for(var t=new h.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,a=t||e.length,o=new Array(2*a);for(r=n=0;r<a;)if((i=e[r++])<128)o[n++]=i;else if(4<(s=u[i]))o[n++]=65533,r+=s-1;else{for(i&=2===s?31:3===s?15:7;1<s&&r<a;)i=i<<6|63&e[r++],s--;1<s?o[n++]=65533:i<65536?o[n++]=i:(i-=65536,o[n++]=55296|i>>10&1023,o[n++]=56320|1023&i)}return l(o,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}},{\"./common\":41}],43:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--a;);i%=65521,s%=65521}return i|s<<16|0}},{}],44:[function(e,t,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,r){\"use strict\";var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}},{}],46:[function(e,t,r){\"use strict\";var h,c=e(\"../utils/common\"),u=e(\"./trees\"),d=e(\"./adler32\"),p=e(\"./crc32\"),n=e(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,i=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(e,t){return e.msg=n[t],t}function T(e){return(e<<1)-(4<e?9:0)}function D(e){for(var t=e.length;0<=--t;)e[t]=0}function F(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(c.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function N(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,F(e.strm)}function U(e,t){e.pending_buf[e.pending++]=t}function P(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function L(e,t){var r,n,i=e.max_chain_length,s=e.strstart,a=e.prev_length,o=e.nice_match,h=e.strstart>e.w_size-z?e.strstart-(e.w_size-z):0,u=e.window,l=e.w_mask,f=e.prev,c=e.strstart+S,d=u[s+a-1],p=u[s+a];e.prev_length>=e.good_match&&(i>>=2),o>e.lookahead&&(o=e.lookahead);do{if(u[(r=t)+a]===p&&u[r+a-1]===d&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<c);if(n=S-(c-s),s=c-S,a<n){if(e.match_start=t,o<=(a=n))break;d=u[s+a-1],p=u[s+a]}}}while((t=f[t&l])>h&&0!=--i);return a<=e.lookahead?a:e.lookahead}function j(e){var t,r,n,i,s,a,o,h,u,l,f=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=f+(f-z)){for(c.arraySet(e.window,e.window,f,f,0),e.match_start-=f,e.strstart-=f,e.block_start-=f,t=r=e.hash_size;n=e.head[--t],e.head[t]=f<=n?n-f:0,--r;);for(t=r=f;n=e.prev[--t],e.prev[t]=f<=n?n-f:0,--r;);i+=f}if(0===e.strm.avail_in)break;if(a=e.strm,o=e.window,h=e.strstart+e.lookahead,u=i,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,c.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=d(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),e.lookahead+=r,e.lookahead+e.insert>=x)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+x-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<z&&0!==e.strm.avail_in)}function Z(e,t){for(var r,n;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r)),e.match_length>=x)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function W(e,t){for(var r,n,i;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===x&&4096<e.strstart-e.match_start)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-x,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=x-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return A}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return A}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function M(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new c.Buf16(2*w),this.dyn_dtree=new c.Buf16(2*(2*a+1)),this.bl_tree=new c.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new c.Buf16(k+1),this.heap=new c.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new c.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?C:E,e.adler=2===t.wrap?0:1,t.last_flush=l,u._tr_init(t),m):R(e,_)}function K(e){var t=G(e);return t===m&&function(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=h[e.level].max_lazy,e.good_match=h[e.level].good_length,e.nice_match=h[e.level].nice_length,e.max_chain_length=h[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0}(e.state),t}function Y(e,t,r,n,i,s){if(!e)return _;var a=1;if(t===g&&(t=6),n<0?(a=0,n=-n):15<n&&(a=2,n-=16),i<1||y<i||r!==v||n<8||15<n||t<0||9<t||s<0||b<s)return R(e,_);8===n&&(n=9);var o=new H;return(e.state=o).strm=e,o.wrap=a,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=i+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new c.Buf8(2*o.w_size),o.head=new c.Buf16(o.hash_size),o.prev=new c.Buf16(o.w_size),o.lit_bufsize=1<<i+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new c.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=r,K(e)}h=[new M(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(j(e),0===e.lookahead&&t===l)return A;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return A;if(e.strstart-e.block_start>=e.w_size-z&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(e,t){return Y(e,t,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?_:(e.state.gzhead=t,m):_},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?R(e,_):_;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&t!==f)return R(e,0===e.avail_out?-5:_);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===C)if(2===n.wrap)e.adler=0,U(n,31),U(n,139),U(n,8),n.gzhead?(U(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),U(n,255&n.gzhead.time),U(n,n.gzhead.time>>8&255),U(n,n.gzhead.time>>16&255),U(n,n.gzhead.time>>24&255),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(U(n,255&n.gzhead.extra.length),U(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(U(n,0),U(n,0),U(n,0),U(n,0),U(n,0),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,3),n.status=E);else{var a=v+(n.w_bits-8<<4)<<8;a|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(a|=32),a+=31-a%31,n.status=E,P(n,a),0!==n.strstart&&(P(n,e.adler>>>16),P(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending!==n.pending_buf_size));)U(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&F(e),n.pending+2<=n.pending_buf_size&&(U(n,255&e.adler),U(n,e.adler>>8&255),e.adler=0,n.status=E)):n.status=E),0!==n.pending){if(F(e),0===e.avail_out)return n.last_flush=-1,m}else if(0===e.avail_in&&T(t)<=T(r)&&t!==f)return R(e,-5);if(666===n.status&&0!==e.avail_in)return R(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&666!==n.status){var o=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(j(e),0===e.lookahead)){if(t===l)return A;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,a=e.window;;){if(e.lookahead<=S){if(j(e),e.lookahead<=S&&t===l)return A;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&0<e.strstart&&(n=a[i=e.strstart-1])===a[++i]&&n===a[++i]&&n===a[++i]){s=e.strstart+S;do{}while(n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&i<s);e.match_length=S-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(r=u._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):h[n.level].func(n,t);if(o!==O&&o!==B||(n.status=666),o===A||o===O)return 0===e.avail_out&&(n.last_flush=-1),m;if(o===I&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(D(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),F(e),0===e.avail_out))return n.last_flush=-1,m}return t!==f?m:n.wrap<=0?1:(2===n.wrap?(U(n,255&e.adler),U(n,e.adler>>8&255),U(n,e.adler>>16&255),U(n,e.adler>>24&255),U(n,255&e.total_in),U(n,e.total_in>>8&255),U(n,e.total_in>>16&255),U(n,e.total_in>>24&255)):(P(n,e.adler>>>16),P(n,65535&e.adler)),F(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?m:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==C&&69!==t&&73!==t&&91!==t&&103!==t&&t!==E&&666!==t?R(e,_):(e.state=null,t===E?R(e,-3):m):_},r.deflateSetDictionary=function(e,t){var r,n,i,s,a,o,h,u,l=t.length;if(!e||!e.state)return _;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(e.adler=d(e.adler,t,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new c.Buf8(r.w_size),c.arraySet(u,t,l-r.w_size,r.w_size,0),t=u,l=r.w_size),a=e.avail_in,o=e.next_in,h=e.input,e.avail_in=l,e.next_in=0,e.input=t,j(r);r.lookahead>=x;){for(n=r.strstart,i=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+x-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,e.next_in=o,e.input=h,e.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,r){\"use strict\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,r){\"use strict\";t.exports=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C;r=e.state,n=e.next_in,z=e.input,i=n+(e.avail_in-5),s=e.next_out,C=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,c=r.window,d=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=m[d&g];t:for(;;){if(d>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(d&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg=\"invalid literal/length code\",r.mode=30;break e}w=65535&v,(y&=15)&&(p<y&&(d+=z[n++]<<p,p+=8),w+=d&(1<<y)-1,d>>>=y,p-=y),p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=_[d&b];r:for(;;){if(d>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(d&(1<<y)-1)];continue r}e.msg=\"invalid distance code\",r.mode=30;break e}if(k=65535&v,p<(y&=15)&&(d+=z[n++]<<p,(p+=8)<y&&(d+=z[n++]<<p,p+=8)),h<(k+=d&(1<<y)-1)){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(d>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(S=c,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=c[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=c[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(n<i&&s<o);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<o?o-s+257:257-(s-o),r.hold=d,r.bits=p}},{}],49:[function(e,t,r){\"use strict\";var I=e(\"../utils/common\"),O=e(\"./adler32\"),B=e(\"./crc32\"),R=e(\"./inffast\"),T=e(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,n=852,i=592;function L(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=P,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new I.Buf32(n),t.distcode=t.distdyn=new I.Buf32(i),t.sane=1,t.back=-1,N):U}function o(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,a(e)):U}function h(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,o(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=h(e,t))!==N&&(e.state=null),r):U}var l,f,c=!0;function j(e){if(c){var t;for(l=new I.Buf32(512),f=new I.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(D,e.lens,0,288,l,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,f,0,e.work,{bits:5}),c=!1}e.lencode=l,e.lenbits=9,e.distcode=f,e.distbits=5}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),n>=s.wsize?(I.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),I.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(I.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,f=o,c=h,x=N;e:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){e.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){e.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){e.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(d=r.length)&&(d=o),d&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,n,s,d,k)),512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,r.length-=d),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(65535&r.check)){e.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}e.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,l-=2;break e;case 2:r.mode=17;break;case 3:e.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){e.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(d=r.length){if(o<d&&(d=o),h<d&&(d=h),0===d)break e;I.arraySet(i,n,s,d,a),o-=d,s+=d,h-=d,a+=d,r.length-=d;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){e.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){e.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],d=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+d>r.nlen+r.ndist){e.msg=\"invalid bit length repeat\",r.mode=30;break}for(;d--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){e.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=o&&258<=h){e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,R(e,c),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){e.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){e.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break e;if(d=c-h,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break}p=d>r.wnext?(d-=r.wnext,r.wsize-d):r.wnext-d,d>r.length&&(d=r.length),m=r.window}else m=i,p=a-r.offset,d=r.length;for(h<d&&(d=h),h-=d,r.length-=d;i[a++]=m[p++],--d;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break e;i[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break e;o--,u|=n[s++]<<l,l+=8}if(c-=h,e.total_out+=c,r.total+=c,c&&(e.adler=r.check=r.flags?B(r.check,i,c,a-c):O(r.check,i,c,a-c)),c=h,(r.flags?u:L(u))!==r.check){e.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(4294967295&r.total)){e.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return-4;case 32:default:return U}return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,(r.wsize||c!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,c-e.avail_out)?(r.mode=31,-4):(f-=e.avail_in,c-=e.avail_out,e.total_in+=f,e.total_out+=c,r.total+=c,r.wrap&&c&&(e.adler=r.check=r.flags?B(r.check,i,c,e.next_out-c):O(r.check,i,c,e.next_out-c)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===c||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,r){\"use strict\";var D=e(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,a,o){var h,u,l,f,c,d,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<n;v++)O[t[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return i[s++]=20971520,i[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===e||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<n;v++)0!==t[r+v]&&(a[B[t[r+v]]++]=v);if(d=0===e?(A=R=a,19):1===e?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,c=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===e&&852<C||2===e&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<d?(m=0,a[v]):a[v]>d?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;i[c+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=t[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),c+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===e&&852<C||2===e&&592<C)return 1;i[l=E&f]=k<<24|x<<16|c-s|0}}return 0!==E&&(i[c+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(e,t,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,r){\"use strict\";var i=e(\"../utils/common\"),o=0,h=1;function n(e){for(var t=e.length;0<=--t;)e[t]=0}var s=0,a=29,u=256,l=u+1+a,f=30,c=19,_=2*l+1,g=15,d=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));n(z);var C=new Array(2*f);n(C);var E=new Array(512);n(E);var A=new Array(256);n(A);var I=new Array(a);n(I);var O,B,R,T=new Array(f);function D(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length}function F(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function N(e){return e<256?E[e]:E[256+(e>>>7)]}function U(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function P(e,t,r){e.bi_valid>d-r?(e.bi_buf|=t<<e.bi_valid&65535,U(e,e.bi_buf),e.bi_buf=t>>d-e.bi_valid,e.bi_valid+=r-d):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function L(e,t,r){P(e,r[2*t],r[2*t+1])}function j(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function Z(e,t,r){var n,i,s=new Array(g+1),a=0;for(n=1;n<=g;n++)s[n]=a=a+r[n-1]<<1;for(i=0;i<=t;i++){var o=e[2*i+1];0!==o&&(e[2*i]=j(s[o]++,o))}}function W(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<f;t++)e.dyn_dtree[2*t]=0;for(t=0;t<c;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function M(e){8<e.bi_valid?U(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function G(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&H(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!H(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n}function K(e,t,r){var n,i,s,a,o=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],i=e.pending_buf[e.l_buf+o],o++,0===n?L(e,i,t):(L(e,(s=A[i])+u+1,t),0!==(a=w[s])&&P(e,i-=I[s],a),L(e,s=N(--n),r),0!==(a=k[s])&&P(e,n-=T[s],a)),o<e.last_lit;);L(e,m,t)}function Y(e,t){var r,n,i,s=t.dyn_tree,a=t.stat_desc.static_tree,o=t.stat_desc.has_stree,h=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,o&&(e.static_len-=a[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)G(e,s,r);for(i=h;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],G(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,G(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,a,o,h=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,c=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=g;s++)e.bl_count[s]=0;for(h[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<_;r++)p<(s=h[2*h[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),h[2*n+1]=s,u<n||(e.bl_count[s]++,a=0,d<=n&&(a=c[n-d]),o=h[2*n],e.opt_len+=o*(s+a),f&&(e.static_len+=o*(l[2*n+1]+a)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(h[2*i+1]!==s&&(e.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),n--)}}(e,t),Z(s,u,e.bl_count)}function X(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=t[2*(n+1)+1],++o<h&&i===a||(o<u?e.bl_tree[2*i]+=o:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[2*b]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4))}function V(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),n=0;n<=r;n++)if(i=a,a=t[2*(n+1)+1],!(++o<h&&i===a)){if(o<u)for(;L(e,i,e.bl_tree),0!=--o;);else 0!==i?(i!==s&&(L(e,i,e.bl_tree),o--),L(e,b,e.bl_tree),P(e,o-3,2)):o<=10?(L(e,v,e.bl_tree),P(e,o-3,3)):(L(e,y,e.bl_tree),P(e,o-11,7));s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4)}}n(T);var q=!1;function J(e,t,r,n){P(e,(s<<1)+(n?1:0),3),function(e,t,r,n){M(e),n&&(U(e,r),U(e,~r)),i.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}r._tr_init=function(e){q||(function(){var e,t,r,n,i,s=new Array(g+1);for(n=r=0;n<a-1;n++)for(I[n]=r,e=0;e<1<<w[n];e++)A[r++]=n;for(A[r-1]=n,n=i=0;n<16;n++)for(T[n]=i,e=0;e<1<<k[n];e++)E[i++]=n;for(i>>=7;n<f;n++)for(T[n]=i<<7,e=0;e<1<<k[n]-7;e++)E[256+i++]=n;for(t=0;t<=g;t++)s[t]=0;for(e=0;e<=143;)z[2*e+1]=8,e++,s[8]++;for(;e<=255;)z[2*e+1]=9,e++,s[9]++;for(;e<=279;)z[2*e+1]=7,e++,s[7]++;for(;e<=287;)z[2*e+1]=8,e++,s[8]++;for(Z(z,l+1,s),e=0;e<f;e++)C[2*e+1]=5,C[2*e]=j(e,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,c,p)}(),q=!0),e.l_desc=new F(e.dyn_ltree,O),e.d_desc=new F(e.dyn_dtree,B),e.bl_desc=new F(e.bl_tree,R),e.bi_buf=0,e.bi_valid=0,W(e)},r._tr_stored_block=J,r._tr_flush_block=function(e,t,r,n){var i,s,a=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return o;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return h;for(t=32;t<u;t++)if(0!==e.dyn_ltree[2*t])return h;return o}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=c-1;3<=t&&0===e.bl_tree[2*S[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?J(e,t,r,n):4===e.strategy||s===i?(P(e,2+(n?1:0),3),K(e,z,C)):(P(e,4+(n?1:0),3),function(e,t,r,n){var i;for(P(e,t-257,5),P(e,r-1,5),P(e,n-4,4),i=0;i<n;i++)P(e,e.bl_tree[2*S[i]+1],3);V(e,e.dyn_ltree,t-1),V(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),K(e,e.dyn_ltree,e.dyn_dtree)),W(e),n&&M(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(A[r]+u+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){P(e,2,3),L(e,m,z),function(e){16===e.bi_valid?(U(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,r){(function(e){!function(r,n){\"use strict\";if(!r.setImmediate){var i,s,t,a,o=1,h={},u=!1,l=r.document,e=Object.getPrototypeOf&&Object.getPrototypeOf(r);e=e&&e.setTimeout?e:r,i=\"[object process]\"==={}.toString.call(r.process)?function(e){process.nextTick(function(){c(e)})}:function(){if(r.postMessage&&!r.importScripts){var e=!0,t=r.onmessage;return r.onmessage=function(){e=!1},r.postMessage(\"\",\"*\"),r.onmessage=t,e}}()?(a=\"setImmediate$\"+Math.random()+\"$\",r.addEventListener?r.addEventListener(\"message\",d,!1):r.attachEvent(\"onmessage\",d),function(e){r.postMessage(a+e,\"*\")}):r.MessageChannel?((t=new MessageChannel).port1.onmessage=function(e){c(e.data)},function(e){t.port2.postMessage(e)}):l&&\"onreadystatechange\"in l.createElement(\"script\")?(s=l.documentElement,function(e){var t=l.createElement(\"script\");t.onreadystatechange=function(){c(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):function(e){setTimeout(c,0,e)},e.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return h[o]=n,i(o),o++},e.clearImmediate=f}function f(e){delete h[e]}function c(e){if(u)setTimeout(c,0,e);else{var t=h[e];if(t){u=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{f(e),u=!1}}}}function d(e){e.source===r&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&c(+e.data.slice(a.length))}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}]},{},[10])(10)});","export * from './commons.js';\nexport * from './markdown.js';\nexport * from './pure.js';\n//# sourceMappingURL=index.js.map","import { TextElement, } from '@blocksuite/phasor';\nimport { deserializeXYWH, getCommonBound, serializeXYWH, } from '@blocksuite/phasor';\nimport { assertExists } from '@blocksuite/store';\nimport { DEFAULT_FRAME_HEIGHT, DEFAULT_FRAME_WIDTH, isTopLevelBlock, } from '../../page-block/edgeless/utils.js';\nimport { deleteModelsByRange } from '../../page-block/utils/container-operations.js';\nimport { getService } from '../service.js';\nimport { addSerializedBlocks } from '../service/json2block.js';\nimport { activeEditorManager } from '../utils/active-editor-manager.js';\nimport { getCurrentBlockRange } from '../utils/block-range.js';\nimport { groupBy } from '../utils/std.js';\nimport { clipboardData2Blocks, copyBlocks, copySurfaceText, getBlockClipboardInfo, } from './utils/commons.js';\nimport { createSurfaceClipboardItems, getSurfaceClipboardData, performNativeCopy, } from './utils/index.js';\nexport class EdgelessClipboard {\n    constructor(page, edgeless) {\n        this._onCut = (e) => {\n            if (!activeEditorManager.isActive(this._edgeless)) {\n                return;\n            }\n            e.preventDefault();\n            this._onCopy(e);\n            const { state } = this.selection;\n            if (state.active) {\n                deleteModelsByRange(this._page);\n                return;\n            }\n            this._page.transact(() => {\n                state.selected.forEach(selected => {\n                    if (isTopLevelBlock(selected)) {\n                        this._page.deleteBlock(selected);\n                    }\n                    else {\n                        this.surface.removeElement(selected.id);\n                    }\n                });\n            });\n            this.slots.selectionUpdated.emit({ active: false, selected: [] });\n        };\n        this._onCopy = (e) => {\n            if (!activeEditorManager.isActive(this._edgeless)) {\n                return;\n            }\n            e.preventDefault();\n            const { state } = this.selection;\n            // when frame active, handle copy like page mode\n            if (state.active) {\n                if (state.selected[0] instanceof TextElement) {\n                    copySurfaceText(this._edgeless);\n                }\n                else {\n                    const range = getCurrentBlockRange(this._page);\n                    assertExists(range);\n                    copyBlocks(range);\n                }\n                return;\n            }\n            const data = state.selected\n                .map(selected => {\n                if (isTopLevelBlock(selected)) {\n                    return getBlockClipboardInfo(selected).json;\n                }\n                else {\n                    return selected.serialize();\n                }\n            })\n                .filter(d => !!d);\n            const clipboardItems = createSurfaceClipboardItems(data);\n            performNativeCopy(clipboardItems);\n        };\n        this._onPaste = async (e) => {\n            if (!activeEditorManager.isActive(this._edgeless)) {\n                return;\n            }\n            e.preventDefault();\n            const { state } = this.selection;\n            if (state.active) {\n                if (!(state.selected[0] instanceof TextElement)) {\n                    this._pasteInTextFrame(e);\n                }\n                // use build-in paste handler in virgo when paste in surface text element\n                return;\n            }\n            const elementsRawData = getSurfaceClipboardData(e);\n            if (!elementsRawData) {\n                return;\n            }\n            this._pasteShapesAndFrames(elementsRawData);\n        };\n        this._page = page;\n        this._edgeless = edgeless;\n    }\n    init(page = this._page) {\n        this._page = page;\n        document.body.addEventListener('cut', this._onCut);\n        document.body.addEventListener('copy', this._onCopy);\n        document.body.addEventListener('paste', this._onPaste);\n    }\n    get selection() {\n        return this._edgeless.selection;\n    }\n    get slots() {\n        return this._edgeless.slots;\n    }\n    get surface() {\n        return this._edgeless.surface;\n    }\n    dispose() {\n        document.body.removeEventListener('cut', this._onCut);\n        document.body.removeEventListener('copy', this._onCopy);\n        document.body.removeEventListener('paste', this._onPaste);\n    }\n    async _pasteInTextFrame(e) {\n        const blocks = await clipboardData2Blocks(this._page, e.clipboardData);\n        if (!blocks.length) {\n            return;\n        }\n        this._page.captureSync();\n        deleteModelsByRange(this._page);\n        const range = getCurrentBlockRange(this._page);\n        const focusedBlockModel = range?.models[0];\n        assertExists(focusedBlockModel);\n        const service = getService(focusedBlockModel.flavour);\n        assertExists(range);\n        await service.json2Block(focusedBlockModel, blocks, range);\n    }\n    _createPhasorElements(elements) {\n        const phasorElements = elements\n            ?.map(d => {\n            const id = this.surface.addElement(d.type, d);\n            const element = this.surface.pickById(id);\n            return element;\n        })\n            .filter(e => !!e) || [];\n        return phasorElements;\n    }\n    async _createFrameBlocks(frames, pasteX, pasteY, oldCommonBound) {\n        const frameIds = await Promise.all(frames.map(async ({ xywh, children, background }) => {\n            const [oldX, oldY, oldW, oldH] = xywh\n                ? deserializeXYWH(xywh)\n                : [\n                    oldCommonBound.x,\n                    oldCommonBound.y,\n                    DEFAULT_FRAME_WIDTH,\n                    DEFAULT_FRAME_HEIGHT,\n                ];\n            const newXywh = serializeXYWH(pasteX + oldX - oldCommonBound.x, pasteY + oldY - oldCommonBound.y, oldW, oldH);\n            const frameId = this._page.addBlock('affine:frame', {\n                xywh: newXywh,\n                background,\n            }, this._page.root?.id);\n            const frame = this._page.getBlockById(frameId);\n            assertExists(frame);\n            await addSerializedBlocks(this._page, children, frame, 0);\n            return frameId;\n        }));\n        return frameIds;\n    }\n    _getOldCommonBound(phasorElements, frames) {\n        const commonBound = getCommonBound([\n            ...phasorElements,\n            ...frames\n                .map(({ xywh }) => {\n                if (!xywh) {\n                    return;\n                }\n                const [x, y, w, h] = deserializeXYWH(xywh);\n                return {\n                    x,\n                    y,\n                    w,\n                    h,\n                };\n            })\n                .filter(b => !!b),\n        ]);\n        assertExists(commonBound);\n        return commonBound;\n    }\n    _emitSelectionChangeAfterPaste(phasorElementIds, frameIds) {\n        const newSelected = [\n            ...phasorElementIds\n                .map(id => this.surface.pickById(id))\n                .filter(e => !!e),\n            ...frameIds\n                .map(id => this._page.getBlockById(id))\n                .filter(f => !!f && f.flavour === 'affine:frame'),\n        ];\n        this.slots.selectionUpdated.emit({\n            active: false,\n            selected: newSelected,\n        });\n    }\n    async _pasteShapesAndFrames(elementsRawData) {\n        const groupedByType = groupBy(elementsRawData, data => isTopLevelBlock(data) ? 'frames' : 'elements');\n        const elements = this._createPhasorElements(groupedByType.elements || []);\n        const oldCommonBound = this._getOldCommonBound(elements, groupedByType.frames || []);\n        const { lastMousePos } = this.selection;\n        const [modelX, modelY] = this.surface.toModelCoord(lastMousePos.x, lastMousePos.y);\n        const pasteX = modelX - oldCommonBound.w / 2;\n        const pasteY = modelY - oldCommonBound.h / 2;\n        // update phasor elements' position to mouse position\n        elements.forEach(ele => {\n            const newXYWH = serializeXYWH(pasteX + ele.x - oldCommonBound.x, pasteY + ele.y - oldCommonBound.y, ele.w, ele.h);\n            this.surface.updateElement(ele.id, {\n                xywh: newXYWH,\n            });\n        });\n        // create and add blocks to page\n        const frameIds = await this._createFrameBlocks(groupedByType.frames || [], pasteX, pasteY, oldCommonBound);\n        this._emitSelectionChangeAfterPaste(elements.map(ele => ele.id), frameIds);\n    }\n}\n//# sourceMappingURL=edgeless-clipboard.js.map","import { assertExists } from '@blocksuite/store';\nimport { getService } from '../../__internal__/service.js';\nimport { deleteModelsByRange } from '../../page-block/index.js';\nimport { activeEditorManager } from '../utils/active-editor-manager.js';\nimport { getCurrentBlockRange } from '../utils/index.js';\nimport { clipboardData2Blocks, copyBlocks, normalizePasteBlocks, } from './utils/commons.js';\n// TODO: getCurrentBlockRange can not get embed block when selection is native, so clipboard can not copy embed block\nexport class PageClipboard {\n    constructor(pageEle) {\n        this._onPaste = async (e) => {\n            if (!activeEditorManager.isActive(this._ele)) {\n                return;\n            }\n            const range = getCurrentBlockRange(this._page);\n            if (!e.clipboardData || !range) {\n                return;\n            }\n            e.preventDefault();\n            const blocks = await clipboardData2Blocks(this._page, e.clipboardData);\n            const normalizedBlocks = normalizePasteBlocks(this._page, blocks);\n            if (!normalizedBlocks.length) {\n                return;\n            }\n            this._page.captureSync();\n            const focusedBlockModel = deleteModelsByRange(this._page, range);\n            // This assert is unreliable\n            // but it's reasonable to paste nothing when focus block is not found\n            assertExists(focusedBlockModel);\n            const service = getService(focusedBlockModel.flavour);\n            assertExists(range);\n            await service.json2Block(focusedBlockModel, normalizedBlocks, range);\n            this._page.captureSync();\n            this._page.slots.pasted.emit(blocks);\n        };\n        this._onCopy = (e, range = getCurrentBlockRange(this._page)) => {\n            if (!activeEditorManager.isActive(this._ele)) {\n                return;\n            }\n            if (!range) {\n                return;\n            }\n            e.preventDefault();\n            this._page.captureSync();\n            copyBlocks(range);\n            this._page.captureSync();\n            this._page.slots.copied.emit();\n        };\n        this._onCut = (e) => {\n            if (!activeEditorManager.isActive(this._ele)) {\n                return;\n            }\n            const range = getCurrentBlockRange(this._page);\n            if (!range) {\n                return;\n            }\n            e.preventDefault();\n            this._onCopy(e, range);\n            deleteModelsByRange(this._page, range);\n        };\n        this._ele = pageEle;\n    }\n    init(page) {\n        this._page = page;\n        document.body.addEventListener('cut', this._onCut);\n        document.body.addEventListener('copy', this._onCopy);\n        document.body.addEventListener('paste', this._onPaste);\n    }\n    dispose() {\n        document.body.removeEventListener('cut', this._onCut);\n        document.body.removeEventListener('copy', this._onCopy);\n        document.body.removeEventListener('paste', this._onPaste);\n    }\n}\n//# sourceMappingURL=page-clipboard.js.map","export * from './edgeless-clipboard.js';\nexport * from './page-clipboard.js';\nexport * from './type.js';\nexport * from './utils/commons.js';\n//# sourceMappingURL=index.js.map","import { assertExists, } from '@blocksuite/store';\nimport { ContentParser } from '../../content-parser/index.js';\nimport { getService } from '../../service.js';\nimport { getCurrentNativeRange, hasNativeSelection, resetNativeSelection, } from '../../utils/index.js';\nimport { ClipboardItem } from '../clipboard-item.js';\nimport markdownUtils from './markdown.js';\nimport { CLIPBOARD_MIMETYPE, createHTMLStringForCustomData, extractCustomDataFromHTMLString, isPureFileInClipboard, performNativeCopy, } from './pure.js';\nexport function getBlockClipboardInfo(model, begin, end) {\n    const service = getService(model.flavour);\n    const html = service.block2html(model, { begin, end });\n    const text = service.block2Text(model, { begin, end });\n    // FIXME: the presence of children is not considered\n    // Children json info is collected by its parent, but getCurrentBlockRange.models return parent and children at same time, it should be separated\n    const json = service.block2Json(model, begin, end);\n    return {\n        html,\n        text,\n        json,\n        model,\n    };\n}\nfunction createPageClipboardItems(range) {\n    const clipGroups = range.models.map((model, index) => {\n        if (index === 0) {\n            return getBlockClipboardInfo(model, range.startOffset, index === range.models.length - 1 ? range.endOffset : undefined);\n        }\n        if (index === range.models.length - 1) {\n            return getBlockClipboardInfo(model, undefined, range.endOffset);\n        }\n        return getBlockClipboardInfo(model);\n    });\n    const stringifiesData = JSON.stringify(clipGroups\n        .filter(group => {\n        if (!group.json) {\n            return false;\n        }\n        // XXX: should handle this issue here?\n        // Children json info is collected by its parent,\n        // but getCurrentBlockRange.models return parent and children at same time,\n        // children should be deleted from group\n        return !isChildBlock(range.models, group.model);\n    })\n        .map(group => group.json));\n    // Compatibility handling: In some environments, browsers do not support clipboard mime type other than `text/html` and `text/plain`, so need to store the copied json information in html\n    // Playwright issue: https://github.com/microsoft/playwright/issues/18013\n    const customClipboardFragment = createHTMLStringForCustomData(stringifiesData, CLIPBOARD_MIMETYPE.BLOCKSUITE_PAGE);\n    const textClipboardItem = new ClipboardItem(CLIPBOARD_MIMETYPE.TEXT, clipGroups.reduce((text, group, index) => {\n        return `${text}${group.text}${index === clipGroups.length - 1 ? '' : '\\n'}`;\n    }, ''));\n    const htmlClipboardItem = new ClipboardItem(CLIPBOARD_MIMETYPE.HTML, `${clipGroups.map(group => group.html).join('')}${customClipboardFragment}`);\n    const pageClipboardItem = new ClipboardItem(CLIPBOARD_MIMETYPE.BLOCKSUITE_PAGE, stringifiesData);\n    return [textClipboardItem, htmlClipboardItem, pageClipboardItem];\n}\nexport function copyBlocks(range) {\n    const clipboardItems = createPageClipboardItems(range);\n    const savedRange = hasNativeSelection() ? getCurrentNativeRange() : null;\n    performNativeCopy(clipboardItems);\n    if (savedRange) {\n        resetNativeSelection(savedRange);\n    }\n}\nfunction isChildBlock(blocks, block) {\n    for (let i = 0; i < blocks.length; i++) {\n        const parentBlock = blocks[i];\n        if (parentBlock.children) {\n            if (parentBlock.children.findIndex(childBlock => childBlock.id === block.id) > -1) {\n                return true;\n            }\n            if (isChildBlock(parentBlock.children, block)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport async function clipboardData2Blocks(page, clipboardData) {\n    if (!clipboardData) {\n        return [];\n    }\n    const contentParser = new ContentParser(page);\n    if (isPureFileInClipboard(clipboardData)) {\n        return contentParser.file2Blocks(clipboardData);\n    }\n    const HTMLClipboardData = clipboardData.getData(CLIPBOARD_MIMETYPE.HTML);\n    if (HTMLClipboardData) {\n        const blockSuiteClipboardData = extractCustomDataFromHTMLString(CLIPBOARD_MIMETYPE.BLOCKSUITE_PAGE, clipboardData.getData(CLIPBOARD_MIMETYPE.HTML));\n        if (blockSuiteClipboardData) {\n            return JSON.parse(blockSuiteClipboardData);\n        }\n    }\n    const textClipData = clipboardData.getData(CLIPBOARD_MIMETYPE.TEXT);\n    const shouldConvertMarkdown = markdownUtils.checkIfTextContainsMd(textClipData);\n    if (HTMLClipboardData && !shouldConvertMarkdown) {\n        return await contentParser.htmlText2Block(HTMLClipboardData);\n    }\n    if (shouldConvertMarkdown) {\n        return await contentParser.markdown2Block(textClipData);\n    }\n    return contentParser.text2blocks(textClipData);\n}\n/**\n * Note: This function will modify the deltas **in place**\n */\nexport function normalizeDelta(page, deltas) {\n    const backlinkIndexer = page.workspace.indexer.backlink;\n    deltas.forEach(delta => {\n        if (!(delta &&\n            delta.attributes &&\n            delta.attributes.reference &&\n            delta.attributes.reference.type === 'Subpage')) {\n            return;\n        }\n        const refNode = delta.attributes.reference;\n        const parentPage = backlinkIndexer.getParentPage(refNode.pageId);\n        if (!parentPage) {\n            return;\n        }\n        // Each subpage can only be referenced once in a workspace\n        delta.attributes = {\n            ...delta.attributes,\n            reference: {\n                ...refNode,\n                type: 'LinkedPage',\n            },\n        };\n    });\n    return deltas;\n}\n/**\n * Replace Subpage reference to LinkedPage reference when try to paste duplicated subpage\n */\nexport function normalizePasteBlocks(page, blocks) {\n    blocks\n        .filter(block => block.text)\n        .forEach(block => {\n        normalizeDelta(page, block.text);\n    });\n    return blocks;\n}\nexport function copySurfaceText(edgeless) {\n    const surfaceTextEditor = edgeless.querySelector('surface-text-editor');\n    if (surfaceTextEditor) {\n        const vEditor = surfaceTextEditor.vEditor;\n        assertExists(vEditor);\n        const vRange = vEditor.getVRange();\n        if (vRange) {\n            const text = vEditor.yText\n                .toString()\n                .slice(vRange.index, vRange.index + vRange.length);\n            const clipboardItem = new ClipboardItem(CLIPBOARD_MIMETYPE.TEXT, text);\n            surfaceTextEditor.setKeeping(true);\n            // this function will make virgo editor lose focus\n            performNativeCopy([clipboardItem]);\n            surfaceTextEditor.setKeeping(false);\n            // restore focus and selection\n            vEditor.rootElement.focus();\n            vEditor.setVRange(vRange);\n        }\n    }\n}\n//# sourceMappingURL=commons.js.map","class MarkdownUtils {\n    /** Extract some grammar rules to check whether a piece of text contains markdown grammar */\n    checkIfTextContainsMd(text) {\n        text = text.replace(/¨/g, '¨T');\n        text = text.replace(/\\$/g, '¨D'); // replace $ with ¨D\n        // Standardize the line position (unify mac, dos)\n        text = text.replace(/\\r\\n/g, '\\n'); // dos\n        text = text.replace(/\\r/g, '\\n'); // mac\n        text = text.replace(/\\u00A0/g, '&nbsp;'); // normalize spaces\n        // 2. Due to the grammatical characteristics of markdown (one \\n is not counted as a newline, two are counted), let the start and end of the text be a pair of newlines, so as to ensure that the first and last lines of the pasted content can be recognized normally\n        text = `\\n\\n${text}\\n\\n`; // 3. Convert tab to space\n        text = MarkdownUtils._detab(text); // 4. Delete lines consisting only of space and tab\n        for (let i = 0; i < MarkdownUtils._checkRegArr.length; i++) {\n            const text1 = i === 3 ? `${text}¨0` : text;\n            if (MarkdownUtils._checkRegArr[i].test(text1)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _detab(text) {\n        text = text.replace(/\\t(?=\\t)/g, ' '); // 1 tab === 4 space\n        // turn \\t into a placeholder\n        text = text.replace(/\\t/g, '¨A¨B');\n        // Use placeholders to mark tabs to prevent regular backtracking\n        text = text.replace(/¨B(.+?)¨A/g, (_wholeMatch, m1) => {\n            let leadingText = m1;\n            const numSpaces = 4 - (leadingText.length % 4);\n            for (let i = 0; i < numSpaces; i++) {\n                leadingText += ' ';\n            }\n            return leadingText;\n        });\n        // Convert placeholder to space\n        text = text.replace(/¨A/g, ' ');\n        text = text.replace(/¨B/g, '');\n        return text;\n    }\n}\nMarkdownUtils._checkRegArr = [\n    /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm,\n    /^ {0,3}\\|?.+\\|.+\\n {0,3}\\|?[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm,\n    /(?:^|\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\s`~]*)\\n([\\s\\S]*?)\\n(?: {0,3})\\1/g,\n    /(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n    /!\\[([^\\]]*?)] ?(?:\\n *)?\\[([\\s\\S]*?)]()()()()()/g,\n    /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n    /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<([^>]*)>(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(?:([\"'])([^\"]*?)\\6))?[ \\t]?\\)/g,\n    /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n    // eslint-disable-next-line\n    /!\\[([^\\[\\]]+)]()()()()()/g,\n    // eslint-disable-next-line\n    /\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    // eslint-disable-next-line\n    /\\[((?:\\[[^\\]]*]|[^\\[\\]])*)] ?(?:\\n *)?\\[(.*?)]()()()()/g,\n    // eslint-disable-next-line\n    /\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<([^>]*)>(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    // eslint-disable-next-line\n    /\\[([^\\[\\]]+)]()()()()()/g, // abbreviationlink\n];\nexport { MarkdownUtils };\nexport default new MarkdownUtils();\n//# sourceMappingURL=markdown.js.map","export * from './utils/index.js';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { FontLinkIcon } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { VEditor, ZERO_WIDTH_SPACE } from '@blocksuite/virgo';\nimport { css, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { showLinkPopover } from '../../../components/link-popover/index.js';\nimport { getModelByElement } from '../../utils/index.js';\nimport { affineTextStyles } from '../virgo/affine-text.js';\nlet AffineLink = class AffineLink extends ShadowlessElement {\n    get link() {\n        const link = this.delta.attributes?.link;\n        if (!link) {\n            return '';\n        }\n        return link;\n    }\n    constructor() {\n        super();\n        this.delta = {\n            insert: ZERO_WIDTH_SPACE,\n        };\n        this.popoverHoverOpenDelay = 150;\n        this._popoverTimer = 0;\n        this._isHovering = false;\n        this.addEventListener('mouseenter', this.onHover);\n        this.addEventListener('mouseleave', this._onHoverEnd);\n    }\n    onHover(e) {\n        if (this._isHovering) {\n            return;\n        }\n        else {\n            this._isHovering = true;\n        }\n        const model = getModelByElement(this);\n        if (model.page.readonly)\n            return;\n        this._popoverTimer = window.setTimeout(() => {\n            this.onDelayHover(e);\n        }, this.popoverHoverOpenDelay);\n    }\n    async onDelayHover(e) {\n        if (!(e.target instanceof HTMLElement) || !document.contains(e.target)) {\n            return;\n        }\n        const model = getModelByElement(this);\n        const text = this.delta.insert;\n        const linkState = await showLinkPopover({\n            anchorEl: e.target,\n            page: model.page,\n            text,\n            link: this.link,\n            showMask: false,\n            interactionKind: 'hover',\n        });\n        if (linkState.type === 'confirm') {\n            const link = linkState.link;\n            const newText = linkState.text;\n            const isUpdateText = newText !== text;\n            this._updateLink(link, isUpdateText ? newText : undefined);\n            return;\n        }\n        if (linkState.type === 'remove') {\n            this._updateLink();\n            return;\n        }\n        if (linkState.type === 'toBookmark') {\n            this._onConvertToBookmark();\n            return;\n        }\n    }\n    /**\n     * If no pass text, use the original text\n     */\n    _updateLink(link, text) {\n        const model = getModelByElement(this);\n        const { page } = model;\n        const oldStr = this.delta.insert;\n        const oldTextAttributes = this.delta.attributes;\n        const textElement = this.querySelector('[data-virgo-text=\"true\"]');\n        assertExists(textElement);\n        const textNode = Array.from(textElement.childNodes).find((node) => node instanceof Text);\n        assertExists(textNode);\n        const richText = this.closest('rich-text');\n        assertExists(richText);\n        const domPoint = VEditor.textPointToDomPoint(textNode, 0, richText.virgoContainer);\n        assertExists(domPoint);\n        const vEditor = richText.vEditor;\n        assertExists(vEditor);\n        if (link) {\n            if (text) {\n                page.captureSync();\n                vEditor.deleteText({\n                    index: domPoint.index,\n                    length: textNode.length,\n                });\n                vEditor.insertText({ index: domPoint.index, length: 0 }, text);\n                vEditor.formatText({\n                    index: domPoint.index,\n                    length: text.length,\n                }, { link });\n            }\n            else {\n                page.captureSync();\n                vEditor.formatText({\n                    index: domPoint.index,\n                    length: oldStr.length,\n                }, { link });\n            }\n        }\n        else {\n            page.captureSync();\n            const newAttributes = { ...oldTextAttributes };\n            delete newAttributes.link;\n            vEditor.formatText({\n                index: domPoint.index,\n                length: oldStr.length,\n            }, newAttributes, {\n                mode: 'replace',\n            });\n        }\n    }\n    _onConvertToBookmark() {\n        const model = getModelByElement(this);\n        const { page } = model;\n        const textElement = this.querySelector('[data-virgo-text=\"true\"]');\n        assertExists(textElement);\n        const textNode = Array.from(textElement.childNodes).find((node) => node instanceof Text);\n        assertExists(textNode);\n        const richText = this.closest('rich-text');\n        assertExists(richText);\n        const domPoint = VEditor.textPointToDomPoint(textNode, 0, richText.virgoContainer);\n        assertExists(domPoint);\n        const vEditor = richText.vEditor;\n        assertExists(vEditor);\n        const parent = page.getParent(model);\n        assertExists(parent);\n        const index = parent.children.indexOf(model);\n        page.addBlock('affine:bookmark', { url: this.link, title: this.delta.insert }, parent, index + 1);\n        vEditor.deleteText({\n            index: domPoint.index,\n            length: textNode.length,\n        });\n    }\n    _onHoverEnd(e) {\n        this._isHovering = false;\n        clearTimeout(this._popoverTimer);\n    }\n    // Workaround for links not working in contenteditable div\n    // see also https://stackoverflow.com/questions/12059211/how-to-make-clickable-anchor-in-contenteditable-div\n    //\n    // Note: We cannot use JS to directly open a new page as this may be blocked by the browser.\n    //\n    // Please also note that when readonly mode active,\n    // this workaround is not necessary and links work normally.\n    // see https://github.com/toeverything/AFFiNE/issues/1540\n    _onMouseUp(e) {\n        const anchorElement = this.querySelector('a');\n        assertExists(anchorElement);\n        if (!anchorElement.isContentEditable)\n            return;\n        anchorElement.contentEditable = 'false';\n        setTimeout(() => {\n            anchorElement.removeAttribute('contenteditable');\n        }, 0);\n    }\n    render() {\n        const style = this.delta.attributes\n            ? affineTextStyles(this.delta.attributes)\n            : styleMap({});\n        return html `<a\n      href=${this.link}\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      style=${style}\n      @mouseup=${this._onMouseUp}\n      >${FontLinkIcon}<v-text .str=${this.delta.insert}></v-text\n    ></a>`;\n    }\n};\nAffineLink.styles = css `\n    affine-link > a {\n      white-space: nowrap;\n      word-break: break-word;\n      color: var(--affine-link-color);\n      fill: var(--affine-link-color);\n      text-decoration: none;\n      cursor: pointer;\n    }\n\n    affine-link > a:hover [data-virgo-text='true'] {\n      text-decoration: underline;\n    }\n\n    affine-link > a > v-text {\n      white-space: break-spaces;\n    }\n  `;\n__decorate([\n    property({ type: Object })\n], AffineLink.prototype, \"delta\", void 0);\n__decorate([\n    property()\n], AffineLink.prototype, \"popoverHoverOpenDelay\", void 0);\n__decorate([\n    state()\n], AffineLink.prototype, \"_popoverTimer\", void 0);\nAffineLink = __decorate([\n    customElement('affine-link')\n], AffineLink);\nexport { AffineLink };\n//# sourceMappingURL=affine-link.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nlet LinkMockSelection = class LinkMockSelection extends LitElement {\n    constructor(rects) {\n        super();\n        this.rects = rects;\n    }\n    render() {\n        return html `\n      ${this.rects.map(rect => html `<div\n          style=\"${styleMap({\n            position: 'absolute',\n            width: `${rect.width}px`,\n            height: `${rect.height}px`,\n            top: `${rect.top}px`,\n            left: `${rect.left}px`,\n            backgroundColor: 'rgba(35, 131, 226, 0.28)',\n        })}\"\n        ></div>`)}\n    `;\n    }\n};\nLinkMockSelection = __decorate([\n    customElement('link-mock-selection')\n], LinkMockSelection);\nexport { LinkMockSelection };\n//# sourceMappingURL=mock-selection.js.map","import './affine-link.js';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { showLinkPopover } from '../../../components/link-popover/index.js';\nimport { blockRangeToNativeRange, getCurrentBlockRange, } from '../../utils/block-range.js';\nimport { getEditorContainer, getVirgoByModel } from '../../utils/index.js';\nimport { LinkMockSelection } from './mock-selection.js';\nexport function createLink(page) {\n    const blockRange = getCurrentBlockRange(page);\n    if (!blockRange)\n        return;\n    if (blockRange.models.length > 1) {\n        throw new Error(\"Can't create link with multiple blocks for now\");\n    }\n    const startModel = blockRange.models[0];\n    if (!startModel)\n        return;\n    const vEditor = getVirgoByModel(startModel);\n    assertExists(vEditor);\n    const vRange = {\n        index: blockRange.startOffset,\n        length: blockRange.endOffset - blockRange.startOffset,\n    };\n    if (vRange.length === 0) {\n        return;\n    }\n    // User can cancel link by pressing shortcut again\n    const format = vEditor.getFormat(vRange);\n    if (format.link) {\n        page.captureSync();\n        vEditor.formatText(vRange, { link: null });\n        vEditor.setVRange(vRange);\n        // recreate link\n        // setTimeout(() => {\n        //   createLink(page);\n        // });\n        return;\n    }\n    // mock a selection style\n    const range = blockRangeToNativeRange(blockRange);\n    assertExists(range);\n    const rects = Array.from(range.getClientRects());\n    const container = getEditorContainer(page);\n    assertExists(container);\n    const containerRect = container.getBoundingClientRect();\n    const mockSelection = new LinkMockSelection(rects.map(rect => new DOMRect(rect.left - containerRect.left, rect.top - containerRect.top, rect.width, rect.height)));\n    const affineEditorContainer = getEditorContainer(page);\n    assertExists(affineEditorContainer);\n    affineEditorContainer.appendChild(mockSelection);\n    setTimeout(async () => {\n        const linkState = await showLinkPopover({\n            anchorEl: mockSelection.shadowRoot?.querySelector('div'),\n            page,\n        });\n        mockSelection.remove();\n        if (linkState.type !== 'confirm')\n            return;\n        const link = linkState.link;\n        page.captureSync();\n        vEditor.formatText(vRange, { link });\n        vEditor.setVRange(vRange);\n    });\n}\n//# sourceMappingURL=create-link.js.map","import './affine-link.js';\nexport { AffineLink } from './affine-link.js';\nexport { createLink } from './create-link.js';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { FontLinkedPageIcon, FontPageIcon } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { ZERO_WIDTH_NON_JOINER, ZERO_WIDTH_SPACE, } from '@blocksuite/virgo';\nimport { css, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { getBlockElementById, getModelByElement } from '../utils/index.js';\nimport { affineTextStyles } from './virgo/affine-text.js';\nexport const REFERENCE_NODE = ' ';\nconst DEFAULT_PAGE_NAME = 'Untitled';\nlet AffineReference = class AffineReference extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this.delta = {\n            insert: ZERO_WIDTH_SPACE,\n            attributes: {},\n        };\n        this._refAttribute = {\n            type: 'LinkedPage',\n            pageId: '0',\n        };\n        this._updateRefMeta = (page) => {\n            const refAttribute = this.delta.attributes?.reference;\n            assertExists(refAttribute, 'Failed to get reference attribute!');\n            this._refAttribute = refAttribute;\n            this._refMeta = page.workspace.meta.pageMetas.find(page => page.id === refAttribute.pageId);\n        };\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.delta.insert !== REFERENCE_NODE) {\n            console.error(`Reference node must be initialized with '${REFERENCE_NODE}', but got '${this.delta.insert}'`);\n        }\n        const model = getModelByElement(this);\n        const page = model.page;\n        this._updateRefMeta(page);\n        this._disposables.add(model.page.workspace.slots.pagesUpdated.on(() => this._updateRefMeta(page)));\n        // TODO fix User may create a subpage ref node by paste or undo/redo.\n    }\n    _onClick(e) {\n        const refMeta = this._refMeta;\n        const model = getModelByElement(this);\n        if (!refMeta) {\n            // The page is deleted\n            console.warn('The page is deleted', this._refAttribute.pageId);\n            return;\n        }\n        if (refMeta.id === model.page.id) {\n            // the page is the current page.\n            return;\n        }\n        const targetPageId = refMeta.id;\n        const root = model.page.root;\n        assertExists(root);\n        const element = getBlockElementById(root?.id);\n        assertExists(element);\n        element.slots.pageLinkClicked.emit({ pageId: targetPageId });\n    }\n    render() {\n        const refMeta = this._refMeta;\n        const unavailable = !refMeta;\n        const title = unavailable\n            ? // Maybe the page is deleted\n                'Deleted page'\n            : refMeta.title;\n        const attributes = this.delta.attributes;\n        assertExists(attributes, 'Failed to get attributes!');\n        const type = attributes.reference?.type;\n        assertExists(type, 'Unable to get reference type!');\n        const style = affineTextStyles(attributes, unavailable\n            ? {\n                color: 'var(--affine-text-disable-color)',\n                fill: 'var(--affine-text-disable-color)',\n            }\n            : {});\n        // Sine reference title should not be edit by user,\n        // we set it into the `::before` pseudo element.\n        //\n        // There are some issues if you try to turn off the `contenteditable` attribute in the title node:\n        //   - the cursor may invisible when trying to move across the reference node using the keyboard\n        //\n        // see also [HTML contenteditable with non-editable islands](https://stackoverflow.com/questions/14615551/html-contenteditable-with-non-editable-islands)\n        //\n        // The virgo will skip the zero-width space when calculating the cursor position,\n        // so we use a other zero-width symbol to make the cursor work correctly.\n        // This node is under contenteditable=\"true\",\n        // so we should not add any extra white space between HTML tags\n        return html `<span\n      class=\"affine-reference\"\n      style=${style}\n      @click=${this._onClick}\n      >${type === 'LinkedPage' ? FontLinkedPageIcon : FontPageIcon}<span\n        class=\"affine-reference-title\"\n        data-title=${title || DEFAULT_PAGE_NAME}\n        data-virgo-text=\"true\"\n        data-virgo-text-value=${ZERO_WIDTH_NON_JOINER}\n        >${ZERO_WIDTH_NON_JOINER}</span\n      ></span\n    >`;\n    }\n};\nAffineReference.styles = css `\n    .affine-reference {\n      white-space: nowrap;\n      word-break: break-word;\n      color: var(--affine-link-color);\n      fill: var(--affine-link-color);\n      border-radius: 2px;\n      text-decoration: none;\n      cursor: pointer;\n      user-select: none;\n      padding: 0 2px;\n      margin: 0 2px;\n    }\n    .affine-reference:hover {\n      background: var(--affine-hover-color);\n    }\n\n    .affine-reference > svg {\n      margin-right: 4px;\n    }\n\n    .affine-reference > span {\n      white-space: break-spaces;\n    }\n\n    .affine-reference-title {\n      color: var(--affine-text-primary-color);\n    }\n    .affine-reference-title::before {\n      content: attr(data-title);\n      color: var(--affine-link-color);\n    }\n  `;\n__decorate([\n    property({ type: Object })\n], AffineReference.prototype, \"delta\", void 0);\n__decorate([\n    state()\n], AffineReference.prototype, \"_refMeta\", void 0);\nAffineReference = __decorate([\n    customElement('affine-reference')\n], AffineReference);\nexport { AffineReference };\n//# sourceMappingURL=reference-node.js.map","// operations used in rich-text level\nimport { ALLOW_DEFAULT, PREVENT_DEFAULT } from '@blocksuite/global/config';\nimport { assertExists, matchFlavours } from '@blocksuite/global/utils';\nimport { Text, Utils } from '@blocksuite/store';\nimport { checkFirstLine, checkLastLine } from '../utils/check-line.js';\nimport { asyncFocusRichText, asyncSetVRange, } from '../utils/common-operations.js';\nimport { getModelByElement, getNextBlock, getPreviousBlock, getVirgoByModel, } from '../utils/query.js';\nimport { focusBlockByModel, focusTitle, getCurrentNativeRange, } from '../utils/selection.js';\nimport { supportsChildren } from '../utils/std.js';\nexport function handleBlockEndEnter(page, model) {\n    const parent = page.getParent(model);\n    const nextSibling = page.getNextSibling(model);\n    if (!parent) {\n        return;\n    }\n    const getProps = () => {\n        const shouldInheritFlavour = matchFlavours(model, ['affine:list']);\n        if (shouldInheritFlavour) {\n            return [model.flavour, { type: model.type }];\n        }\n        return ['affine:paragraph', { type: 'text' }];\n    };\n    const [flavour, blockProps] = getProps();\n    if (Utils.isInsideBlockByFlavour(page, model, 'affine:database')) {\n        page.captureSync();\n        const index = parent.children.findIndex(child => child.id === model.id);\n        let newParent = parent;\n        let newBlockIndex = index + 1;\n        const childrenLength = parent.children.length;\n        if (index === childrenLength - 1 && model.text?.yText.length === 0) {\n            if (childrenLength !== 1) {\n                page.deleteBlock(model);\n            }\n            const nextModel = page.getNextSibling(newParent);\n            if (nextModel && matchFlavours(nextModel, ['affine:paragraph'])) {\n                asyncFocusRichText(page, nextModel.id, {\n                    index: nextModel.text.yText.length,\n                    length: 0,\n                });\n                return;\n            }\n            const prevParent = page.getParent(parent);\n            if (!prevParent)\n                return;\n            const prevIndex = prevParent.children.findIndex(child => child.id === parent.id);\n            newParent = prevParent;\n            newBlockIndex = prevIndex + 1;\n        }\n        const id = page.addBlock(flavour, blockProps, newParent, newBlockIndex);\n        asyncFocusRichText(page, id);\n        return;\n    }\n    const index = parent.children.indexOf(model);\n    if (index === -1) {\n        return;\n    }\n    // make adding text block by enter a standalone operation\n    page.captureSync();\n    const id = !model.children.length\n        ? page.addBlock(flavour, blockProps, parent, index + 1)\n        : // If the block has children, insert a new block as the first child\n            page.addBlock(flavour, blockProps, model, 0);\n    // 4. If the target block is a numbered list, update the prefix of next siblings\n    if (matchFlavours(model, ['affine:list']) && model.type === 'numbered') {\n        let next = nextSibling;\n        while (next &&\n            matchFlavours(next, ['affine:list']) &&\n            model.type === 'numbered') {\n            page.updateBlock(next, {});\n            next = page.getNextSibling(next);\n        }\n    }\n    asyncFocusRichText(page, id);\n}\nexport function handleSoftEnter(page, model, index, length) {\n    if (!model.text) {\n        console.error('Failed to handle soft enter! No text found!', model);\n        return;\n    }\n    page.captureSync();\n    model.text.replace(index, length, '\\n');\n}\nexport function handleBlockSplit(page, model, splitIndex, splitLength) {\n    if (!(model.text instanceof Text))\n        return;\n    // On press enter, it may convert symbols from yjs ContentString\n    // to yjs ContentFormat. Once it happens, the converted symbol will\n    // be deleted and not counted as model.text.yText.length.\n    // Example: \"`a`[enter]\" -> yText[<ContentFormat: Code>, \"a\", <ContentFormat: Code>]\n    // In this case, we should not split the block.\n    if (model.text.yText.length < splitIndex + splitLength)\n        return;\n    const parent = page.getParent(model);\n    if (!parent)\n        return;\n    page.captureSync();\n    const right = model.text.split(splitIndex, splitLength);\n    let newParent = parent;\n    let newBlockIndex = newParent.children.indexOf(model) + 1;\n    if (matchFlavours(model, ['affine:list']) && model.children.length > 0) {\n        newParent = model;\n        newBlockIndex = 0;\n    }\n    const children = [...model.children];\n    page.updateBlock(model, { children: [] });\n    const id = page.addBlock(model.flavour, {\n        text: right,\n        type: model.type,\n        children,\n    }, newParent, newBlockIndex);\n    return asyncFocusRichText(page, id);\n}\n/**\n * Move down\n * @example\n * ```\n * [ ]\n *  └─ [ ]\n * [x]     <- tab\n *  └─ [ ]\n *\n * ↓\n *\n * [ ]\n *  ├─ [ ]\n *  ├─ [x] <-\n *  └─ [ ]\n * ```\n */\nexport function handleIndent(page, model, offset = 0) {\n    const previousSibling = page.getPreviousSibling(model);\n    const nextSibling = page.getNextSibling(model);\n    if (!previousSibling || !supportsChildren(previousSibling)) {\n        // Bottom, can not indent, do nothing\n        return;\n    }\n    const parent = page.getParent(model);\n    if (!parent)\n        return;\n    page.captureSync();\n    // 1. backup target block children and remove them from target block\n    const children = model.children;\n    page.updateBlock(model, {\n        children: [],\n    });\n    // 2. remove target block from parent block\n    page.updateBlock(parent, {\n        children: parent.children.filter(child => child.id !== model.id),\n    });\n    // 3. append target block and children to previous sibling block\n    page.updateBlock(previousSibling, {\n        children: [...previousSibling.children, model, ...children],\n    });\n    // 4. If the target block is a numbered list, update the prefix of next siblings\n    if (matchFlavours(model, ['affine:list']) && model.type === 'numbered') {\n        let next = nextSibling;\n        while (next &&\n            matchFlavours(next, ['affine:list']) &&\n            model.type === 'numbered') {\n            page.updateBlock(next, {});\n            next = page.getNextSibling(next);\n        }\n    }\n    assertExists(model);\n    asyncSetVRange(model, { index: offset, length: 0 });\n}\nexport function handleMultiBlockIndent(page, models) {\n    if (!models.length)\n        return;\n    const previousSibling = page.getPreviousSibling(models[0]);\n    const nextSibling = page.getNextSibling(models.at(-1));\n    if (!previousSibling || !supportsChildren(previousSibling)) {\n        // Bottom, can not indent, do nothing\n        return;\n    }\n    if (!models.every((model, idx, array) => {\n        const previousModel = array.at(idx - 1);\n        if (!previousModel) {\n            return false;\n        }\n        const p1 = page.getParent(model);\n        const p2 = page.getParent(previousModel);\n        return p1 && p2 && p1.id === p2.id;\n    })) {\n        return;\n    }\n    page.captureSync();\n    const parent = page.getParent(models[0]);\n    assertExists(parent);\n    models.forEach(model => {\n        // 1. backup target block children and remove them from target block\n        const children = model.children;\n        page.updateBlock(model, {\n            children: [],\n        });\n        // 2. remove target block from parent block\n        page.updateBlock(parent, {\n            children: parent.children.filter(child => child.id !== model.id),\n        });\n        // 3. append target block and children to previous sibling block\n        page.updateBlock(previousSibling, {\n            children: [...previousSibling.children, model, ...children],\n        });\n        // 4. If the target block is a numbered list, update the prefix of next siblings\n        if (matchFlavours(model, ['affine:list']) && model.type === 'numbered') {\n            let next = nextSibling;\n            while (next &&\n                matchFlavours(next, ['affine:list']) &&\n                model.type === 'numbered') {\n                page.updateBlock(next, {});\n                next = page.getNextSibling(next);\n            }\n        }\n        assertExists(model);\n        asyncSetVRange(model, { index: 0, length: 0 });\n    });\n}\n/**\n * Move up\n * @example\n * ```\n * [ ]\n *  ├─ [ ]\n *  ├─ [x] <- shift + tab\n *  └─ [ ]\n *\n * ↓\n *\n * [ ]\n *  └─ [ ]\n * [x]     <-\n *  └─ [ ]\n * ```\n * Refer to https://github.com/toeverything/AFFiNE/blob/b59b010decb9c5decd9e3090f1a417696ce86f54/libs/components/editor-blocks/src/utils/indent.ts#L23-L122\n */\nexport function handleUnindent(page, model, offset = 0, capture = true) {\n    const parent = page.getParent(model);\n    if (!parent || matchFlavours(parent, ['affine:frame'])) {\n        // Topmost, do nothing\n        return;\n    }\n    const grandParent = page.getParent(parent);\n    if (!grandParent)\n        return;\n    // TODO: need better solution\n    if (capture) {\n        page.captureSync();\n    }\n    // 1. save child blocks of the parent block\n    const previousSiblings = page.getPreviousSiblings(model);\n    const nextSiblings = page.getNextSiblings(model);\n    // 2. remove all child blocks after the target block from the parent block\n    page.updateBlock(parent, {\n        children: previousSiblings,\n    });\n    // 3. insert target block to the grand block\n    const index = grandParent.children.indexOf(parent);\n    page.updateBlock(grandParent, {\n        children: [\n            ...grandParent.children.slice(0, index + 1),\n            model,\n            ...grandParent.children.slice(index + 1),\n        ],\n    });\n    // 4. append child blocks after the target block to the target block\n    page.updateBlock(model, {\n        children: [...model.children, ...nextSiblings],\n    });\n    // 5. If the target block is a numbered list, update the prefix of next siblings\n    const nextSibling = page.getNextSibling(model);\n    if (matchFlavours(model, ['affine:list']) && model.type === 'numbered') {\n        let next = nextSibling;\n        while (next &&\n            matchFlavours(next, ['affine:list']) &&\n            model.type === 'numbered') {\n            page.updateBlock(next, {});\n            next = page.getNextSibling(next);\n        }\n    }\n    assertExists(model);\n    asyncSetVRange(model, { index: offset, length: 0 });\n}\n// When deleting at line start of a code block,\n// select the code block itself\nfunction handleCodeBlockBackspace(page, model) {\n    if (!matchFlavours(model, ['affine:code']))\n        return false;\n    focusBlockByModel(model);\n    return true;\n}\nfunction handleDatabaseBlockBackspace(page, model) {\n    if (!Utils.isInsideBlockByFlavour(page, model, 'affine:database'))\n        return false;\n    return true;\n}\n// When deleting at line start of a list block,\n// switch it to normal paragraph block.\nfunction handleListBlockBackspace(page, model) {\n    if (!matchFlavours(model, ['affine:list']))\n        return false;\n    const parent = page.getParent(model);\n    if (!parent)\n        return false;\n    const index = parent.children.indexOf(model);\n    const blockProps = {\n        type: 'text',\n        text: model.text?.clone(),\n        children: model.children,\n    };\n    page.captureSync();\n    page.deleteBlock(model);\n    const id = page.addBlock('affine:paragraph', blockProps, parent, index);\n    asyncFocusRichText(page, id);\n    return true;\n}\nfunction handleParagraphDeleteActions(page, model) {\n    function handleParagraphOrListSibling(page, model, previousSibling, parent) {\n        if (!previousSibling ||\n            !matchFlavours(previousSibling, ['affine:paragraph', 'affine:list']))\n            return false;\n        page.captureSync();\n        const preTextLength = previousSibling.text?.length || 0;\n        model.text?.length && previousSibling.text?.join(model.text);\n        page.deleteBlock(model, {\n            bringChildrenTo: parent,\n        });\n        const vEditor = getVirgoByModel(previousSibling);\n        vEditor?.setVRange({\n            index: preTextLength,\n            length: 0,\n        });\n        return true;\n    }\n    function handleEmbedDividerCodeSibling(page, model, previousSibling) {\n        if (!previousSibling ||\n            !matchFlavours(previousSibling, [\n                'affine:embed',\n                'affine:divider',\n                'affine:code',\n            ]))\n            return false;\n        focusBlockByModel(previousSibling);\n        if (!model.text?.length) {\n            page.captureSync();\n            page.deleteBlock(model);\n        }\n        return true;\n    }\n    function handleNoPreviousSibling(page, model, previousSibling) {\n        if (previousSibling)\n            return false;\n        const text = model.text;\n        const titleElement = document.querySelector('.affine-default-page-block-title');\n        const pageModel = getModelByElement(titleElement);\n        const title = pageModel.title;\n        page.captureSync();\n        let textLength = 0;\n        if (text) {\n            textLength = text.length;\n            title.join(text);\n        }\n        page.deleteBlock(model);\n        focusTitle(page, title.length - textLength);\n        return true;\n    }\n    const parent = page.getParent(model);\n    if (!parent)\n        return false;\n    const previousSibling = getPreviousBlock(model);\n    if (matchFlavours(parent, ['affine:database'])) {\n        if (previousSibling) {\n            page.deleteBlock(model);\n            focusBlockByModel(previousSibling);\n            return true;\n        }\n        else {\n            return handleNoPreviousSibling(page, model, previousSibling);\n        }\n    }\n    else if (matchFlavours(parent, ['affine:frame'])) {\n        return (handleParagraphOrListSibling(page, model, previousSibling, parent) ||\n            handleEmbedDividerCodeSibling(page, model, previousSibling) ||\n            handleNoPreviousSibling(page, model, previousSibling));\n    }\n    return false;\n}\nfunction handleParagraphBlockBackspace(page, model) {\n    if (!matchFlavours(model, ['affine:paragraph']))\n        return false;\n    // When deleting at line start of a paragraph block,\n    // firstly switch it to normal text, then delete this empty block.\n    if (model.type !== 'text') {\n        // Try to switch to normal text\n        page.captureSync();\n        page.updateBlock(model, { type: 'text' });\n        return true;\n    }\n    const isHandled = handleParagraphDeleteActions(page, model);\n    if (isHandled)\n        return true;\n    // Before\n    // - line1\n    //   - | <- cursor here, press backspace\n    //   - line3\n    //\n    // After\n    // - line1\n    // - | <- cursor here\n    //   - line3\n    handleUnindent(page, model);\n    return true;\n}\nfunction handleUnknownBlockBackspace(model) {\n    throw new Error('Failed to handle backspace! Unknown block flavours! flavour:' +\n        model.flavour);\n}\nexport function handleLineStartBackspace(page, model) {\n    if (handleCodeBlockBackspace(page, model) ||\n        handleListBlockBackspace(page, model) ||\n        handleParagraphBlockBackspace(page, model)) {\n        handleDatabaseBlockBackspace(page, model);\n        return;\n    }\n    handleUnknownBlockBackspace(model);\n}\nexport function handleKeyUp(event, editableContainer) {\n    const range = getCurrentNativeRange();\n    if (!range.collapsed) {\n        // If the range is not collapsed,\n        // we assume that the caret is at the start of the range.\n        range.collapse(true);\n    }\n    const isFirstLine = checkFirstLine(range, editableContainer);\n    if (isFirstLine) {\n        // If the caret is at the first line of the block,\n        // default behavior will move the caret to the start of the line,\n        // which is not expected. so we need to prevent default behavior.\n        return PREVENT_DEFAULT;\n    }\n    // Avoid triggering hotkey bindings\n    event.stopPropagation();\n    return ALLOW_DEFAULT;\n}\nexport function handleKeyDown(block, event, editableContainer) {\n    const range = getCurrentNativeRange();\n    if (!range.collapsed) {\n        // If the range is not collapsed,\n        // we assume that the caret is at the end of the range.\n        range.collapse();\n    }\n    const isLastLine = checkLastLine(range, editableContainer);\n    if (isLastLine) {\n        // When the cursor is at the last line of the block,\n        // default ArrowDown behavior will move the cursor to the end of the line\n        // If the block is the last block of the page,\n        // we want the cursor to move to next block instead of the end of the line,\n        // thus we should prevent the default behavior.\n        // If the block is the last block of the page,\n        // let the cursor move to the end of line as default.\n        return getNextBlock(block) ? PREVENT_DEFAULT : ALLOW_DEFAULT;\n    }\n    // Avoid triggering hotkey bindings\n    event.stopPropagation();\n    return ALLOW_DEFAULT;\n}\n//# sourceMappingURL=rich-text-operations.js.map","import { assertExists, DisposableGroup, matchFlavours, } from '@blocksuite/store';\nimport { css, html, nothing, } from 'lit';\nimport { debounce } from '../utils/index.js';\nimport { getCurrentNativeRange, hasNativeSelection, } from '../utils/selection.js';\nclass InlineSuggestionController {\n    constructor(host) {\n        this._abortController = new AbortController();\n        this._disposables = new DisposableGroup();\n        this._suggestionState = {\n            show: false,\n            position: { x: 0, y: 0 },\n            loading: false,\n            text: '',\n        };\n        this.onFocusIn = (e) => {\n            const inlineSuggestProvider = this.provider;\n            if (!inlineSuggestProvider)\n                return;\n            assertExists(this.model);\n            const editor = this.vEditor;\n            assertExists(editor);\n            this._disposables.add(editor.slots.vRangeUpdated.on(async ([vRange, type]) => {\n                this._updateSuggestions(vRange);\n            }));\n        };\n        this.onFocusOut = (e) => {\n            this._abortController.abort();\n            // We should not observe text change when focus out\n            this._disposables.dispose();\n            this._disposables = new DisposableGroup();\n        };\n        this._updateSuggestions = debounce(async (vRange) => {\n            this._abortController.abort();\n            this._abortController = new AbortController();\n            assertExists(this.model);\n            const editor = this.vEditor;\n            assertExists(editor);\n            const len = editor.yText.length;\n            if (!len || vRange.length !== 0 || vRange.index !== len) {\n                return;\n            }\n            const pageBlock = this.model.page.root;\n            assertExists(pageBlock);\n            if (!matchFlavours(pageBlock, ['affine:page'])) {\n                throw new Error('Invalid page root');\n            }\n            this._setSuggestionState({\n                show: true,\n                loading: true,\n                position: this._updatePosition(),\n            });\n            const text = this.model.text;\n            assertExists(text);\n            const textStr = text.toString();\n            const title = pageBlock.title.toString();\n            const abortController = this._abortController;\n            abortController.signal.addEventListener('abort', () => {\n                this._setSuggestionState({\n                    show: false,\n                    loading: false,\n                });\n            });\n            try {\n                assertExists(this.provider);\n                const suggestion = await this.provider({\n                    title,\n                    text: textStr,\n                    abortSignal: abortController.signal,\n                });\n                if (abortController.signal.aborted) {\n                    this._setSuggestionState({\n                        show: false,\n                        loading: false,\n                    });\n                    return;\n                }\n                // Wait for native range to be updated\n                requestAnimationFrame(() => {\n                    this._setSuggestionState({\n                        show: true,\n                        loading: false,\n                        text: suggestion,\n                        position: this._updatePosition(),\n                    });\n                });\n            }\n            catch (error) {\n                console.error('Failed to get inline suggest', error);\n                this._setSuggestionState({\n                    show: false,\n                    loading: false,\n                });\n            }\n        }, 300, { leading: false });\n        this.onKeyDown = (e) => {\n            if (!this._suggestionState.show || this._suggestionState.loading)\n                return;\n            if (e.isComposing || e.key !== 'Tab') {\n                requestAnimationFrame(() => {\n                    const position = this._updatePosition();\n                    this._setSuggestionState({\n                        position,\n                    });\n                });\n                return;\n            }\n            // accept suggestion\n            const editor = this.vEditor;\n            assertExists(editor);\n            const vRange = editor.getVRange();\n            if (!vRange)\n                return;\n            const suggestion = this._suggestionState.text;\n            editor.insertText(vRange, suggestion);\n            editor.setVRange({\n                index: vRange.index + suggestion.length,\n                length: 0,\n            });\n            this._setSuggestionState({ text: '' });\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        host.addController(this);\n        this.host = host;\n    }\n    hostConnected() {\n        this._disposables = new DisposableGroup();\n    }\n    hostDisconnected() {\n        this._disposables.dispose();\n    }\n    init({ model, vEditor, provider, }) {\n        this.provider = provider;\n        this.model = model;\n        this.vEditor = vEditor;\n    }\n    _setSuggestionState(newState) {\n        const previousState = this._suggestionState;\n        this._suggestionState = { ...previousState, ...newState };\n        // TODO diff to optimize performance\n        this.host.requestUpdate();\n    }\n    _updatePosition() {\n        const richTextRect = this.host.getBoundingClientRect();\n        if (!hasNativeSelection())\n            return;\n        const range = getCurrentNativeRange();\n        const rangeRect = range.getBoundingClientRect();\n        return {\n            x: rangeRect.x - richTextRect.x,\n            y: -rangeRect.height,\n        };\n    }\n    render() {\n        if (!this._suggestionState.show)\n            return nothing;\n        const text = this._suggestionState.loading\n            ? '...'\n            : this._suggestionState.text;\n        const position = this._suggestionState.position;\n        if (!text)\n            return nothing;\n        return html `<div\n      class=\"inline-suggestion\"\n      style=\"text-indent: ${position.x + 2}px;\"\n    >\n      ${text}\n    </div>`;\n    }\n}\nInlineSuggestionController.styles = css `\n    .inline-suggestion {\n      display: flex;\n      align-items: center;\n      gap: 4px;\n      left: 0;\n      top: 0;\n      color: var(--affine-placeholder-color);\n      fill: var(--affine-placeholder-color);\n      margin-bottom: calc(-1 * var(--affine-line-height));\n      transform: translateY(calc(-1 * var(--affine-line-height)));\n      pointer-events: none;\n    }\n  `;\nexport { InlineSuggestionController };\n//# sourceMappingURL=inline-suggestion.js.map","import { ALLOW_DEFAULT, PREVENT_DEFAULT } from '@blocksuite/global/config';\nconst bracketPairs = [\n    {\n        name: 'parenthesis',\n        left: '(',\n        right: ')',\n    },\n    {\n        name: 'square bracket',\n        left: '[',\n        right: ']',\n    },\n    {\n        name: 'curly bracket',\n        left: '{',\n        right: '}',\n    },\n    {\n        name: 'single quote',\n        left: \"'\",\n        right: \"'\",\n    },\n    {\n        name: 'double quote',\n        left: '\"',\n        right: '\"',\n    },\n    // {\n    //   name: 'backtick',\n    //   left: '`',\n    //   right: '`',\n    // },\n    {\n        name: 'angle bracket',\n        left: '<',\n        right: '>',\n    },\n    {\n        name: 'fullwidth single quote',\n        left: '‘',\n        right: '’',\n    },\n    {\n        name: 'fullwidth double quote',\n        left: '“',\n        right: '”',\n    },\n    {\n        name: 'fullwidth parenthesis',\n        left: '（',\n        right: '）',\n    },\n    {\n        name: 'fullwidth square bracket',\n        left: '【',\n        right: '】',\n    },\n    {\n        name: 'fullwidth angle bracket',\n        left: '《',\n        right: '》',\n    },\n    {\n        name: 'corner bracket',\n        left: '「',\n        right: '」',\n    },\n    {\n        name: 'white corner bracket',\n        left: '『',\n        right: '』',\n    },\n];\nexport function createBracketAutoCompleteBindings(model) {\n    const bindings = {};\n    bracketPairs.forEach(pair => {\n        bindings[pair.name] = {\n            key: pair.left,\n            // Input some brackets need to press shift key\n            shiftKey: null,\n            collapsed: false,\n            handler(range) {\n                if (!model.text)\n                    return ALLOW_DEFAULT;\n                model.text.insert(pair.left, range.index);\n                model.text.insert(pair.right, range.index + range.length + 1);\n                this.vEditor.setVRange({\n                    index: range.index + 1,\n                    length: range.length,\n                });\n                return PREVENT_DEFAULT;\n            },\n        };\n    });\n    bindings['backtick'] = {\n        key: '`',\n        collapsed: false,\n        handler(range, context) {\n            if (!model.text)\n                return ALLOW_DEFAULT;\n            model.text.format(range.index, range.length, { code: true });\n            this.vEditor.setVRange({\n                index: range.index,\n                length: range.length,\n            });\n            return PREVENT_DEFAULT;\n        },\n    };\n    return bindings;\n}\n//# sourceMappingURL=bracket-complete.js.map","import { ALLOW_DEFAULT, IS_IOS, IS_MAC } from '@blocksuite/global/config';\nimport { matchFlavours } from '@blocksuite/global/utils';\nimport { showLinkedPagePopover } from '../../components/linked-page/index.js';\nimport { showSlashMenu } from '../../components/slash-menu/index.js';\nimport { getService } from '../service.js';\nimport { getCurrentNativeRange, hasNativeSelection } from '../utils/index.js';\nimport { createBracketAutoCompleteBindings } from './bracket-complete.js';\nexport function createKeyboardBindings(model, vEditor) {\n    const page = model.page;\n    const service = getService(model.flavour);\n    const blockKeyBinding = service.defineKeymap(model, vEditor);\n    const keyboardBindings = {\n        ...blockKeyBinding,\n        linkedPage: {\n            key: ['[', '【', '@'],\n            altKey: null,\n            shiftKey: null,\n            handler(range, { event, prefix }) {\n                if (range.length > 0) {\n                    // When select text and press `[[` should not trigger transform,\n                    // since it will break the bracket complete.\n                    // Expected `[[selected text]]` instead of `@selected text]]`\n                    return ALLOW_DEFAULT;\n                }\n                if ((event.key === '[' || event.key === '【') &&\n                    !prefix.endsWith(event.key)) {\n                    // not end with `[[` or `【【`\n                    return ALLOW_DEFAULT;\n                }\n                const flag = page.awarenessStore.getFlag('enable_linked_page');\n                if (!flag)\n                    return ALLOW_DEFAULT;\n                if (matchFlavours(model, ['affine:code'])) {\n                    return ALLOW_DEFAULT;\n                }\n                this.vEditor.slots.rangeUpdated.once(() => {\n                    if (event.key === '[' || event.key === '【') {\n                        // Convert to `@`\n                        this.vEditor.deleteText({ index: range.index - 1, length: 2 });\n                        this.vEditor.insertText({ index: range.index - 1, length: 0 }, '@');\n                        this.vEditor.setVRange({ index: range.index, length: 0 });\n                        this.vEditor.slots.rangeUpdated.once(() => {\n                            const curRange = getCurrentNativeRange();\n                            showLinkedPagePopover({ model, range: curRange });\n                        });\n                        return;\n                    }\n                    const curRange = getCurrentNativeRange();\n                    showLinkedPagePopover({ model, range: curRange });\n                });\n                return ALLOW_DEFAULT;\n            },\n        },\n        slash: {\n            key: [\n                '/',\n                // Compatible with CJK IME\n                '、',\n            ],\n            shiftKey: null,\n            // prefix non digit or empty string\n            // see https://stackoverflow.com/questions/19127384/what-is-a-regex-to-match-only-an-empty-string\n            // prefix: /[^\\d]$|^(?![\\s\\S])/,\n            handler(range, context) {\n                // TODO remove feature flag after slash menu is stable\n                const flag = page.awarenessStore.getFlag('enable_slash_menu');\n                if (!flag) {\n                    return ALLOW_DEFAULT;\n                }\n                // End of feature flag\n                if (matchFlavours(model, ['affine:code'])) {\n                    return ALLOW_DEFAULT;\n                }\n                // if (context.format['code'] === true) {\n                //   return ALLOW_DEFAULT;\n                // }\n                this.vEditor.slots.rangeUpdated.once(() => {\n                    const curRange = getCurrentNativeRange();\n                    showSlashMenu({ model, range: curRange });\n                });\n                return ALLOW_DEFAULT;\n            },\n        },\n        ...createBracketAutoCompleteBindings(model),\n    };\n    return keyboardBindings;\n}\nconst SHORT_KEY_PROPERTY = IS_IOS || IS_MAC ? 'metaKey' : 'ctrlKey';\nexport function createKeyDownHandler(vEditor, bindings, model) {\n    const bindingStore = {};\n    function normalize(binding) {\n        if (binding.shortKey) {\n            binding[SHORT_KEY_PROPERTY] = binding.shortKey;\n            delete binding.shortKey;\n        }\n        return binding;\n    }\n    function match(evt, binding) {\n        if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(key => {\n            return !!binding[key] !== evt[key] && binding[key] !== null;\n        })) {\n            return false;\n        }\n        return binding.key === evt.key || binding.key === evt.which;\n    }\n    function addBinding(keyBinding) {\n        const binding = normalize(keyBinding);\n        const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n        keys.forEach(key => {\n            const singleBinding = {\n                ...binding,\n                key,\n            };\n            bindingStore[key] = bindingStore[key] ?? [];\n            bindingStore[key].push(singleBinding);\n        });\n    }\n    Object.values(bindings).forEach(binding => {\n        addBinding(binding);\n    });\n    function keyDownHandler(evt) {\n        const parentModel = model.page.getParent(model);\n        const previousModel = model.page.getPreviousSibling(model);\n        if ((parentModel && matchFlavours(parentModel, ['affine:database'])) ||\n            (previousModel && matchFlavours(previousModel, ['affine:database']))) {\n            if (evt.key === 'Tab') {\n                evt.preventDefault();\n                evt.stopPropagation();\n                return;\n            }\n        }\n        if (evt.defaultPrevented || evt.isComposing)\n            return;\n        const keyBindings = (bindingStore[evt.key] || []).concat(bindingStore[evt.which] || []);\n        const matches = keyBindings.filter(binding => match(evt, binding));\n        if (matches.length === 0)\n            return;\n        const vRange = vEditor.getVRange();\n        if (!vRange)\n            return;\n        // edgeless mode\n        if (!hasNativeSelection())\n            return;\n        // if it is multi block selection, we should not handle the keydown event\n        const range = getCurrentNativeRange();\n        if (!range)\n            return;\n        if (!vEditor.rootElement.contains(range.startContainer) ||\n            !vEditor.rootElement.contains(range.endContainer)) {\n            return;\n        }\n        const [line, offset] = vEditor.getLine(vRange.index);\n        const [leafStart, offsetStart] = vEditor.getTextPoint(vRange.index);\n        const [leafEnd, offsetEnd] = vRange.length === 0\n            ? [leafStart, offsetStart]\n            : vEditor.getTextPoint(vRange.index + vRange.length);\n        const prefixText = leafStart.textContent\n            ? leafStart.textContent.slice(0, offsetStart)\n            : '';\n        const suffixText = leafEnd.textContent\n            ? leafEnd.textContent.slice(offsetEnd)\n            : '';\n        const curContext = {\n            collapsed: vRange.length === 0,\n            empty: vRange.length === 0 && line.textLength <= 1,\n            format: vEditor.getFormat(vRange),\n            line,\n            offset,\n            prefix: prefixText,\n            suffix: suffixText,\n            event: evt,\n        };\n        const prevented = matches.some(binding => {\n            if (binding.collapsed != null &&\n                binding.collapsed !== curContext.collapsed) {\n                return false;\n            }\n            if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n                return false;\n            }\n            if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n                return false;\n            }\n            return !binding.handler.call({\n                vEditor,\n                options: {\n                    bindings,\n                },\n            }, vRange, curContext);\n        });\n        if (prevented) {\n            evt.preventDefault();\n        }\n    }\n    return keyDownHandler;\n}\n//# sourceMappingURL=keyboard.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { assertExists } from '@blocksuite/store';\nimport { VEditor } from '@blocksuite/virgo';\nimport { css, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { activeEditorManager } from '../utils/active-editor-manager.js';\nimport { setupVirgoScroll } from '../utils/virgo.js';\nimport { InlineSuggestionController } from './inline-suggestion.js';\nimport { createKeyboardBindings, createKeyDownHandler } from './keyboard.js';\nimport {} from './virgo/types.js';\nconst IGNORED_ATTRIBUTES = ['code', 'reference'];\nconst autoIdentifyLink = (editor, context) => {\n    const vRange = editor.getVRange();\n    if (!vRange)\n        return;\n    if (context.attributes?.link && context.data === ' ') {\n        delete context.attributes['link'];\n        return;\n    }\n    const linkPattern = /.*\\.(com|cn|org|edu|net|gov|mil|info|biz|io|me)(\\/\\S*)?$/i;\n    if (context.attributes?.link) {\n        const linkDeltaInfo = editor.deltaService\n            .getDeltasByVRange(vRange)\n            .filter(([delta]) => delta.attributes?.link)[0];\n        const [delta, { index, length }] = linkDeltaInfo;\n        const rangePositionInDelta = vRange.index - index;\n        //It means the link has been custom edited\n        if (delta.attributes?.link !== delta.insert) {\n            // If the cursor is at the end of the link, we should not auto identify it\n            if (rangePositionInDelta === length) {\n                delete context.attributes['link'];\n                return;\n            }\n            // If the cursor is not at the end of the link, we should only update the link text\n            return;\n        }\n        const newText = delta.insert.slice(0, rangePositionInDelta) +\n            context.data +\n            delta.insert.slice(rangePositionInDelta);\n        const match = linkPattern.exec(newText);\n        // If the new text with original link text is not pattern matched, we should reset the text\n        if (!match) {\n            editor.resetText({ index, length });\n            delete context.attributes['link'];\n            return;\n        }\n        // If the new text with original link text is pattern matched, we should update the link text\n        editor.formatText({\n            index,\n            length,\n        }, {\n            link: newText,\n        });\n        context.attributes = {\n            ...context.attributes,\n            link: newText,\n        };\n        return;\n    }\n    const [line] = editor.getLine(vRange.index);\n    const prefixText = line.textContent.slice(0, vRange.index);\n    const match = linkPattern.exec(prefixText + context.data);\n    if (!match) {\n        return;\n    }\n    const linkText = match[0];\n    const startIndex = vRange.index - linkText.length;\n    editor.formatText({\n        index: startIndex,\n        length: linkText.length,\n    }, {\n        link: linkText,\n    });\n    context.attributes = {\n        ...context.attributes,\n        link: linkText,\n    };\n};\nlet RichText = class RichText extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this._vEditor = null;\n        this._inlineSuggestController = new InlineSuggestionController(this);\n    }\n    get virgoContainer() {\n        return this._virgoContainer;\n    }\n    get vEditor() {\n        return this._vEditor;\n    }\n    firstUpdated() {\n        assertExists(this.model.text, 'rich-text need text to init.');\n        this._vEditor = new VEditor(this.model.text.yText, {\n            active: () => activeEditorManager.isActive(this),\n        });\n        setupVirgoScroll(this.model.page, this._vEditor);\n        const textSchema = this.textSchema;\n        assertExists(textSchema, 'Failed to render rich-text! textSchema not found');\n        this._vEditor.setAttributeSchema(textSchema.attributesSchema);\n        this._vEditor.setAttributeRenderer(textSchema.textRenderer());\n        const keyboardBindings = createKeyboardBindings(this.model, this._vEditor);\n        const keyDownHandler = createKeyDownHandler(this._vEditor, keyboardBindings, this.model);\n        let ifPrefixSpace = false;\n        this._vEditor.mount(this._virgoContainer);\n        this._vEditor.bindHandlers({\n            keydown: keyDownHandler,\n            virgoInput: ctx => {\n                const vEditor = this._vEditor;\n                assertExists(vEditor);\n                const vRange = vEditor.getVRange();\n                if (!vRange || vRange.length !== 0) {\n                    return ctx;\n                }\n                const { data, event } = ctx;\n                const deltas = vEditor.getDeltasByVRange(vRange);\n                // Overwrite the default behavior (Insert period when consecutive spaces) of IME.\n                if (event.inputType === 'insertText' && data === ' ') {\n                    ifPrefixSpace = true;\n                }\n                else if (data !== '. ' && data !== '。 ') {\n                    ifPrefixSpace = false;\n                }\n                if (ifPrefixSpace && (data === '. ' || data === '。 ')) {\n                    ctx.data = ' ';\n                }\n                if (data && data.length > 0 && data !== '\\n') {\n                    if (deltas.length > 1 ||\n                        (deltas.length === 1 && vRange.index !== 0)) {\n                        const { attributes } = deltas[0][0];\n                        if (deltas.length !== 1 || vRange.index === vEditor.yText.length) {\n                            IGNORED_ATTRIBUTES.forEach(attr => {\n                                delete attributes?.[attr];\n                            });\n                        }\n                        ctx.attributes = attributes ?? null;\n                    }\n                }\n                autoIdentifyLink(vEditor, ctx);\n                return ctx;\n            },\n            virgoCompositionEnd: ctx => {\n                const vEditor = this._vEditor;\n                assertExists(vEditor);\n                const vRange = vEditor.getVRange();\n                if (!vRange || vRange.length !== 0) {\n                    return ctx;\n                }\n                const { data } = ctx;\n                const deltas = vEditor.getDeltasByVRange(vRange);\n                if (data && data.length > 0 && data !== '\\n') {\n                    if (deltas.length > 1 ||\n                        (deltas.length === 1 && vRange.index !== 0)) {\n                        const attributes = deltas[0][0].attributes;\n                        if (deltas.length !== 1 || vRange.index === vEditor.yText.length) {\n                            IGNORED_ATTRIBUTES.forEach(attr => {\n                                delete attributes?.[attr];\n                            });\n                        }\n                        ctx.attributes = attributes ?? null;\n                    }\n                }\n                autoIdentifyLink(vEditor, ctx);\n                return ctx;\n            },\n        });\n        this._vEditor.setReadonly(this.model.page.readonly);\n        const inlineSuggestionProvider = this.model.page.workspace.inlineSuggestionProvider;\n        if (inlineSuggestionProvider) {\n            this._inlineSuggestController.init({\n                provider: inlineSuggestionProvider,\n                model: this.model,\n                vEditor: this._vEditor,\n            });\n        }\n    }\n    updated() {\n        if (this._vEditor) {\n            this._vEditor.setReadonly(this.model.page.readonly);\n        }\n    }\n    render() {\n        return html `<div\n        class=\"affine-rich-text virgo-editor\"\n        @keydown=${this._inlineSuggestController.onKeyDown}\n        @focusin=${this._inlineSuggestController.onFocusIn}\n        @focusout=${this._inlineSuggestController.onFocusOut}\n      ></div>\n      ${this._inlineSuggestController.render()}`;\n    }\n};\nRichText.styles = css `\n    .affine-rich-text {\n      height: 100%;\n      width: 100%;\n      outline: none;\n      cursor: text;\n    }\n\n    v-line {\n      scroll-margin-top: 50px;\n      scroll-margin-bottom: 30px;\n    }\n\n    ${InlineSuggestionController.styles}\n  `;\n__decorate([\n    query('.affine-rich-text')\n], RichText.prototype, \"_virgoContainer\", void 0);\n__decorate([\n    property()\n], RichText.prototype, \"model\", void 0);\n__decorate([\n    property()\n], RichText.prototype, \"textSchema\", void 0);\nRichText = __decorate([\n    customElement('rich-text')\n], RichText);\nexport { RichText };\n//# sourceMappingURL=rich-text.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { ZERO_WIDTH_SPACE } from '@blocksuite/virgo';\nimport { css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nexport function affineTextStyles(props, override) {\n    let textDecorations = '';\n    if (props.underline) {\n        textDecorations += 'underline';\n    }\n    if (props.strike) {\n        textDecorations += ' line-through';\n    }\n    let inlineCodeStyle = {};\n    if (props.code) {\n        inlineCodeStyle = {\n            'font-family': 'var(--affine-font-code-family)',\n            background: 'var(--affine-background-code-block)',\n            color: 'var(--affine-text-primary-color)',\n            'border-radius': '4px',\n            padding: '3px 6px',\n            'font-size': 'calc(var(--affine-font-base) - 4px)',\n            'font-variant-ligatures': 'none',\n            'line-height': 'var(--affine-font-base)',\n            border: '1px solid var(--affine-border-color)',\n        };\n    }\n    return styleMap({\n        'font-weight': props.bold ? 'bold' : 'normal',\n        'font-style': props.italic ? 'italic' : 'normal',\n        'text-decoration': textDecorations.length > 0 ? textDecorations : 'none',\n        ...inlineCodeStyle,\n        ...override,\n    });\n}\nlet AffineText = class AffineText extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this.delta = {\n            insert: ZERO_WIDTH_SPACE,\n        };\n    }\n    render() {\n        const style = this.delta.attributes\n            ? affineTextStyles(this.delta.attributes)\n            : styleMap({});\n        // we need to avoid \\n appearing before and after the span element, which will\n        // cause the unexpected space\n        return html `<span style=${style}\n      ><v-text .str=${this.delta.insert}></v-text\n    ></span>`;\n    }\n};\nAffineText.styles = css `\n    affine-text {\n      white-space: break-spaces;\n      word-break: break-word;\n    }\n  `;\n__decorate([\n    property({ type: Object })\n], AffineText.prototype, \"delta\", void 0);\nAffineText = __decorate([\n    customElement('affine-text')\n], AffineText);\nexport { AffineText };\n//# sourceMappingURL=affine-text.js.map","import { html } from 'lit';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { REFERENCE_NODE } from '../reference-node.js';\nexport const attributeRenderer = () => delta => {\n    const defaultTemplate = html `<affine-text .delta=${delta}></affine-text>`;\n    if (!delta.attributes) {\n        return defaultTemplate;\n    }\n    const attributes = delta.attributes;\n    if (attributes.link) {\n        if (attributes.reference) {\n            console.error('Invalid attributes: link and reference cannot be used together', delta);\n        }\n        return html `<affine-link .delta=${delta}></affine-link>`;\n    }\n    if (attributes.reference) {\n        // https://github.com/toeverything/blocksuite/issues/2136\n        return html `${repeat(Array.from(delta.insert).map((_, index) => ({\n            delta: {\n                insert: REFERENCE_NODE,\n                attributes,\n            },\n            index,\n        })), item => item.index, item => html `<affine-reference .delta=${item.delta}></affine-reference>`)}`;\n    }\n    return defaultTemplate;\n};\n//# sourceMappingURL=attribute-renderer.js.map","import { baseTextAttributes } from '@blocksuite/virgo';\nimport { z } from 'zod';\nexport const affineTextAttributes = baseTextAttributes.extend({\n    reference: z\n        .object({\n        type: z.enum(['Subpage', 'LinkedPage']),\n        pageId: z.string(),\n    })\n        .optional(),\n});\n//# sourceMappingURL=types.js.map","import { BookmarkBlockService } from './bookmark-block/index.js';\nimport { CodeBlockService } from './code-block/index.js';\nimport { DatabaseBlockService } from './database-block/database-service.js';\nimport { DividerBlockService } from './divider-block/index.js';\nimport { EmbedBlockService } from './embed-block/index.js';\nimport { FrameBlockService } from './frame-block/index.js';\nimport { ListBlockService } from './list-block/index.js';\nimport { ParagraphBlockService } from './paragraph-block/index.js';\nexport const blockService = {\n    'affine:code': CodeBlockService,\n    'affine:database': DatabaseBlockService,\n    'affine:paragraph': ParagraphBlockService,\n    'affine:list': ListBlockService,\n    'affine:embed': EmbedBlockService,\n    'affine:divider': DividerBlockService,\n    'affine:frame': FrameBlockService,\n    'affine:bookmark': BookmarkBlockService,\n};\n//# sourceMappingURL=services.js.map","import { blockService } from '../services.js';\nimport { BaseService } from './service/index.js';\nconst services = new Map();\nexport function hasService(flavour) {\n    return services.has(flavour);\n}\nexport function registerService(flavour, Constructor) {\n    if (services.has(flavour)) {\n        return;\n    }\n    const service = new Constructor();\n    services.set(flavour, service);\n    return;\n}\nexport function getService(flavour) {\n    const service = services.get(flavour);\n    if (!service) {\n        throw new Error(`cannot find service by flavour ${flavour}`);\n    }\n    return service;\n}\nexport function getServiceOrRegister(flavour) {\n    const service = services.get(flavour);\n    if (!service) {\n        const Constructor = blockService[flavour] ?? BaseService;\n        const result = registerService(flavour, Constructor);\n        if (result instanceof Promise) {\n            return result.then(() => services.get(flavour));\n        }\n        else {\n            return services.get(flavour);\n        }\n    }\n    return service;\n}\n//# sourceMappingURL=service.js.map","import { ALLOW_DEFAULT, PREVENT_DEFAULT } from '@blocksuite/global/config';\nimport { assertExists, isEqual, matchFlavours } from '@blocksuite/global/utils';\nimport { getStandardLanguage } from '../../code-block/utils/code-languages.js';\nimport { FALLBACK_LANG } from '../../code-block/utils/consts.js';\nimport { asyncSetVRange, convertToDivider, convertToList, convertToParagraph, } from '../utils/index.js';\nconst matches = [\n    {\n        name: 'bolditalic',\n        pattern: /(?:\\*){3}(.+?)(?:\\*){3}$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            const match = pattern.exec(text);\n            if (!match) {\n                return false;\n            }\n            const annotatedText = match[0];\n            const startIndex = selection.index - annotatedText.length;\n            if (text.match(/^([* \\n]+)$/g)) {\n                return false;\n            }\n            vEditor.insertText({\n                index: startIndex + annotatedText.length,\n                length: 0,\n            }, ' ');\n            model.page.captureSync();\n            vEditor.formatText({\n                index: startIndex,\n                length: annotatedText.length,\n            }, {\n                bold: true,\n                italic: true,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length - 3,\n                length: 3,\n            });\n            vEditor.deleteText({\n                index: startIndex,\n                length: 3,\n            });\n            vEditor.setVRange({\n                index: startIndex + annotatedText.length - 6,\n                length: 0,\n            });\n            return true;\n        },\n    },\n    {\n        name: 'bold',\n        pattern: /(?:\\*){2}(.+?)(?:\\*){2}$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            const match = pattern.exec(text);\n            if (!match) {\n                return false;\n            }\n            const annotatedText = match[0];\n            const startIndex = selection.index - annotatedText.length;\n            if (text.match(/^([* \\n]+)$/g)) {\n                return false;\n            }\n            vEditor.insertText({\n                index: startIndex + annotatedText.length,\n                length: 0,\n            }, ' ');\n            model.page.captureSync();\n            vEditor.formatText({\n                index: startIndex,\n                length: annotatedText.length,\n            }, {\n                bold: true,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length - 2,\n                length: 2,\n            });\n            vEditor.deleteText({\n                index: startIndex,\n                length: 2,\n            });\n            vEditor.setVRange({\n                index: startIndex + annotatedText.length - 4,\n                length: 0,\n            });\n            return true;\n        },\n    },\n    {\n        name: 'italic',\n        pattern: /(?:\\*){1}(.+?)(?:\\*){1}$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            const match = pattern.exec(text);\n            if (!match) {\n                return false;\n            }\n            const annotatedText = match[0];\n            const startIndex = selection.index - annotatedText.length;\n            if (text.match(/^([* \\n]+)$/g)) {\n                return false;\n            }\n            vEditor.insertText({\n                index: startIndex + annotatedText.length,\n                length: 0,\n            }, ' ');\n            model.page.captureSync();\n            vEditor.formatText({\n                index: startIndex,\n                length: annotatedText.length,\n            }, {\n                italic: true,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length - 1,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex,\n                length: 1,\n            });\n            vEditor.setVRange({\n                index: startIndex + annotatedText.length - 2,\n                length: 0,\n            });\n            return true;\n        },\n    },\n    {\n        name: 'strikethrough',\n        pattern: /(?:~~)(.+?)(?:~~)$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            const match = pattern.exec(text);\n            if (!match) {\n                return false;\n            }\n            const annotatedText = match[0];\n            const startIndex = selection.index - annotatedText.length;\n            if (text.match(/^([* \\n]+)$/g)) {\n                return false;\n            }\n            vEditor.insertText({\n                index: startIndex + annotatedText.length,\n                length: 0,\n            }, ' ');\n            model.page.captureSync();\n            vEditor.formatText({\n                index: startIndex,\n                length: annotatedText.length,\n            }, {\n                strike: true,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length - 2,\n                length: 2,\n            });\n            vEditor.deleteText({\n                index: startIndex,\n                length: 2,\n            });\n            vEditor.setVRange({\n                index: startIndex + annotatedText.length - 4,\n                length: 0,\n            });\n            return true;\n        },\n    },\n    {\n        name: 'underthrough',\n        pattern: /(?:~)(.+?)(?:~)$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            const match = pattern.exec(text);\n            if (!match) {\n                return false;\n            }\n            const annotatedText = match[0];\n            const startIndex = selection.index - annotatedText.length;\n            if (text.match(/^([* \\n]+)$/g)) {\n                return false;\n            }\n            vEditor.insertText({\n                index: startIndex + annotatedText.length,\n                length: 0,\n            }, ' ');\n            model.page.captureSync();\n            vEditor.formatText({\n                index: startIndex,\n                length: annotatedText.length,\n            }, {\n                underline: true,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: selection.index - 1,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex,\n                length: 1,\n            });\n            vEditor.setVRange({\n                index: startIndex + annotatedText.length - 2,\n                length: 0,\n            });\n            return true;\n        },\n    },\n    {\n        name: 'code',\n        pattern: /(?:`)(`{2,}?|[^`]+)(?:`)$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            const match = pattern.exec(text);\n            if (!match) {\n                return false;\n            }\n            const annotatedText = match[0];\n            const startIndex = selection.index - annotatedText.length;\n            if (text.match(/^([* \\n]+)$/g)) {\n                return false;\n            }\n            vEditor.insertText({\n                index: startIndex + annotatedText.length,\n                length: 0,\n            }, ' ');\n            model.page.captureSync();\n            vEditor.formatText({\n                index: startIndex,\n                length: annotatedText.length,\n            }, {\n                code: true,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex + annotatedText.length - 1,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: startIndex,\n                length: 1,\n            });\n            vEditor.setVRange({\n                index: startIndex + annotatedText.length - 2,\n                length: 0,\n            });\n            return true;\n        },\n    },\n    {\n        name: 'codeblock',\n        pattern: /^```([a-zA-Z0-9]*)$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            if (model.flavour === 'affine:paragraph' && model.type === 'quote') {\n                return false;\n            }\n            const match = pattern.exec(text);\n            const page = model.page;\n            page.captureSync();\n            const parent = page.getParent(model);\n            assertExists(parent);\n            const index = parent.children.indexOf(model);\n            page.deleteBlock(model);\n            const codeId = page.addBlock('affine:code', {\n                language: getStandardLanguage(match?.[1] || '')?.id ?? FALLBACK_LANG,\n            }, parent, index);\n            const codeBlock = page.getBlockById(codeId);\n            assertExists(codeBlock);\n            asyncSetVRange(codeBlock, { index: 0, length: 0 });\n            return true;\n        },\n    },\n    {\n        name: 'link',\n        pattern: /(?:\\[(.+?)\\])(?:\\((.+?)\\))$/g,\n        action: (model, vEditor, text, selection, pattern) => {\n            const startIndex = text.search(pattern);\n            const matchedText = text.match(pattern)?.[0];\n            const hrefText = text.match(/(?:\\[(.*?)\\])/g)?.[0];\n            const hrefLink = text.match(/(?:\\((.*?)\\))/g)?.[0];\n            if (startIndex === -1 || !matchedText || !hrefText || !hrefLink) {\n                return false;\n            }\n            const start = selection.index - matchedText.length;\n            vEditor.insertText({\n                index: selection.index,\n                length: 0,\n            }, ' ');\n            model.page.captureSync();\n            vEditor.formatText({\n                index: start,\n                length: hrefText.length,\n            }, {\n                link: hrefLink.slice(1, hrefLink.length - 1),\n            });\n            vEditor.deleteText({\n                index: selection.index + matchedText.length,\n                length: 1,\n            });\n            vEditor.deleteText({\n                index: selection.index - hrefLink.length - 1,\n                length: hrefLink.length + 1,\n            });\n            vEditor.deleteText({\n                index: start,\n                length: 1,\n            });\n            vEditor.setVRange({\n                index: start + hrefText.length - 1,\n                length: 0,\n            });\n            return true;\n        },\n    },\n];\n/**\n * Returns true if markdown matches and converts to the appropriate format\n */\nexport function markdownConvert(vEditor, model, prefix) {\n    const vRange = vEditor.getVRange();\n    if (!vRange) {\n        return false;\n    }\n    for (const match of matches) {\n        const matchedText = prefix.match(match.pattern);\n        if (matchedText) {\n            return match.action(model, vEditor, prefix, vRange, match.pattern);\n        }\n    }\n    return false;\n}\nexport function tryMatchSpaceHotkey(page, model, vEditor, prefix, range) {\n    const [, offset] = vEditor.getLine(range.index);\n    if (offset > prefix.length) {\n        return ALLOW_DEFAULT;\n    }\n    const isParagraphQuoteBlock = isEqual(model.type, 'quote');\n    const isCodeBlock = matchFlavours(model, ['affine:code']);\n    if (isParagraphQuoteBlock || isCodeBlock) {\n        return ALLOW_DEFAULT;\n    }\n    let isConverted = false;\n    switch (prefix.trim()) {\n        case '[]':\n        case '[ ]':\n            isConverted = convertToList(page, model, 'todo', prefix, {\n                checked: false,\n            });\n            break;\n        case '[x]':\n            isConverted = convertToList(page, model, 'todo', prefix, {\n                checked: true,\n            });\n            break;\n        case '-':\n        case '*':\n            isConverted = convertToList(page, model, 'bulleted', prefix);\n            break;\n        case '***':\n        case '---':\n            isConverted = convertToDivider(page, model, prefix);\n            break;\n        case '#':\n            isConverted = convertToParagraph(page, model, 'h1', prefix);\n            break;\n        case '##':\n            isConverted = convertToParagraph(page, model, 'h2', prefix);\n            break;\n        case '###':\n            isConverted = convertToParagraph(page, model, 'h3', prefix);\n            break;\n        case '####':\n            isConverted = convertToParagraph(page, model, 'h4', prefix);\n            break;\n        case '#####':\n            isConverted = convertToParagraph(page, model, 'h5', prefix);\n            break;\n        case '######':\n            isConverted = convertToParagraph(page, model, 'h6', prefix);\n            break;\n        case '>':\n            isConverted = convertToParagraph(page, model, 'quote', prefix);\n            break;\n        default:\n            isConverted = convertToList(page, model, 'numbered', prefix);\n    }\n    return isConverted ? PREVENT_DEFAULT : ALLOW_DEFAULT;\n}\n//# sourceMappingURL=markdown-convert.js.map","import { ALLOW_DEFAULT, PREVENT_DEFAULT } from '@blocksuite/global/config';\nimport { assertExists, matchFlavours } from '@blocksuite/global/utils';\nimport { markdownConvert, tryMatchSpaceHotkey, } from '../rich-text/markdown-convert.js';\nimport { handleBlockEndEnter, handleBlockSplit, handleLineStartBackspace, handleSoftEnter, handleUnindent, } from '../rich-text/rich-text-operations.js';\nimport { isCollapsedAtBlockStart } from '../utils/index.js';\nexport function onSoftEnter(model, range, vEditor) {\n    handleSoftEnter(model.page, model, range.index, range.length);\n    vEditor.setVRange({\n        index: range.index + 1,\n        length: 0,\n    });\n    return PREVENT_DEFAULT;\n}\nexport function hardEnter(model, range, \n/**\n * @deprecated\n */\nvEditor, e, shortKey = false) {\n    const page = model.page;\n    e.stopPropagation();\n    const parent = page.getParent(model);\n    const isLastChild = parent?.lastChild() === model;\n    const isEmptyList = matchFlavours(model, ['affine:list']) && model.text.length === 0;\n    assertExists(model.text, 'Failed to hardEnter! model.text not exists!');\n    if (isEmptyList &&\n        parent &&\n        matchFlavours(parent, ['affine:frame', 'affine:database']) &&\n        model.children.length === 0) {\n        // TODO use `handleLineStartBackspace` directly is not concise enough,\n        // we should extract a function to handle this case\n        //\n        // Before\n        // - list\n        // - | <-- press Enter\n        //\n        // After\n        // - list\n        // |   <-- will replace with a new text block\n        handleLineStartBackspace(page, model);\n        return PREVENT_DEFAULT;\n    }\n    if (isEmptyList && isLastChild) {\n        // Before\n        // - line1\n        //   - ↩ <-- press Enter\n        //\n        // After\n        // - line1\n        // - | <-- will unindent the block\n        handleUnindent(page, model, range.index);\n        return PREVENT_DEFAULT;\n    }\n    const isEnd = model.text.length === range.index;\n    if (isEnd || shortKey) {\n        const softEnterable = isSoftEnterable(model);\n        const textStr = model.text.toString();\n        const endWithTwoBlankLines = textStr === '\\n' || textStr.endsWith('\\n');\n        const shouldSoftEnter = softEnterable && !endWithTwoBlankLines;\n        if (shouldSoftEnter) {\n            // TODO handle ctrl+enter in code/quote block or other force soft enter block\n            onSoftEnter(model, range, vEditor);\n            return PREVENT_DEFAULT;\n        }\n        // delete the \\n at the end of block\n        if (softEnterable) {\n            // Before\n            // >\n            // > ↩ <-- press Enter\n            //\n            // After\n            // - line1\n            // - | <-- will unindent the block\n            model.text.delete(range.index - 1, 1);\n        }\n        handleBlockEndEnter(page, model);\n        return PREVENT_DEFAULT;\n    }\n    const isSoftEnterBlock = isSoftEnterable(model);\n    if (isSoftEnterBlock) {\n        onSoftEnter(model, range, vEditor);\n        return PREVENT_DEFAULT;\n    }\n    handleBlockSplit(page, model, range.index, range.length);\n    return PREVENT_DEFAULT;\n}\n// If a block is soft enterable, the rule is:\n// 1. In the end of block, first press Enter will insert a \\n to break the line, second press Enter will insert a new block\n// 2. In the middle and start of block, press Enter will insert a \\n to break the line\n// TODO this should be configurable per-block\nfunction isSoftEnterable(model) {\n    if (matchFlavours(model, ['affine:code']))\n        return true;\n    if (matchFlavours(model, ['affine:paragraph'])) {\n        return model.type === 'quote';\n    }\n    return false;\n}\nexport function enterMarkdownMatch(model, virgo, range, context) {\n    const { prefix } = context;\n    markdownConvert(virgo, model, prefix);\n    return ALLOW_DEFAULT;\n}\nexport function spaceMarkdownMatch(model, virgo, range, context) {\n    const { prefix } = context;\n    return markdownConvert(virgo, model, prefix)\n        ? PREVENT_DEFAULT\n        : ALLOW_DEFAULT;\n}\nexport function onSpace(model, virgo, range, context) {\n    const { prefix } = context;\n    return tryMatchSpaceHotkey(model.page, model, virgo, prefix, range);\n}\nexport function onBackspace(model, e, vEditor) {\n    e.stopPropagation();\n    if (isCollapsedAtBlockStart(vEditor)) {\n        handleLineStartBackspace(model.page, model);\n        return PREVENT_DEFAULT;\n    }\n    return ALLOW_DEFAULT;\n}\nexport function onKeyLeft(e, range) {\n    // range.length === 0 means collapsed selection\n    if (range.length !== 0) {\n        e.stopPropagation();\n        return ALLOW_DEFAULT;\n    }\n    const lineStart = range.index === 0;\n    if (!lineStart) {\n        e.stopPropagation();\n        return ALLOW_DEFAULT;\n    }\n    // Need jump to previous block\n    return PREVENT_DEFAULT;\n}\nexport function onKeyRight(model, e, range) {\n    if (range.length !== 0) {\n        e.stopPropagation();\n        return ALLOW_DEFAULT;\n    }\n    assertExists(model.text, 'Failed to onKeyRight! model.text not exists!');\n    const textLength = model.text.length;\n    const lineEnd = textLength === range.index;\n    if (!lineEnd) {\n        e.stopPropagation();\n        return ALLOW_DEFAULT;\n    }\n    // Need jump to next block\n    return PREVENT_DEFAULT;\n}\n//# sourceMappingURL=keymap.js.map","import { PREVENT_DEFAULT } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { handleIndent, handleKeyDown, handleKeyUp, handleUnindent, } from '../rich-text/rich-text-operations.js';\nimport { getService } from '../service.js';\nimport { supportsChildren } from '../utils/std.js';\nimport { json2block } from './json2block.js';\nimport { enterMarkdownMatch, hardEnter, onBackspace, onKeyLeft, onKeyRight, onSoftEnter, onSpace, spaceMarkdownMatch, } from './keymap.js';\nexport class BaseService {\n    block2html(block, { childText = '', begin, end } = {}) {\n        const delta = block.text?.sliceToDelta(begin || 0, end) || [];\n        const text = delta.reduce((html, item) => {\n            return html + BaseService.deltaLeaf2Html(block, item);\n        }, '');\n        return `${text}${childText}`;\n    }\n    block2Text(block, { childText = '', begin = 0, end } = {}) {\n        const text = (block.text?.toString() || '').slice(begin, end);\n        return `${text}${childText}`;\n    }\n    block2Json(block, begin, end) {\n        const delta = block.text?.sliceToDelta(begin || 0, end) || [];\n        return {\n            flavour: block.flavour,\n            type: block.type,\n            text: delta,\n            children: block.children?.map((child, index) => {\n                if (index === block.children.length - 1) {\n                    // @ts-ignore\n                    return getService(child.flavour).block2Json(child, 0, end);\n                }\n                // @ts-ignore\n                return getService(child.flavour).block2Json(child);\n            }),\n        };\n    }\n    // json2block is triggered when paste behavior occurs(now),\n    // at this time cursor is focus on one block, and is must a caret in this block(since selection has been handled in paste callback)\n    // this is the common handler for most block, but like code block, it should be overridden this\n    async json2Block(focusedBlockModel, pastedBlocks, range) {\n        return json2block(focusedBlockModel, pastedBlocks, { range });\n    }\n    async onBlockPasted(model, clipboardData\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ) { }\n    static deltaLeaf2Html(block, deltaLeaf) {\n        let text = deltaLeaf.insert ?? '';\n        // replace unsafe characters\n        text = text\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#039;');\n        const attributes = deltaLeaf.attributes;\n        if (!attributes) {\n            return text;\n        }\n        if (attributes.code) {\n            text = `<code>${text}</code>`;\n        }\n        if (attributes.bold) {\n            text = `<strong>${text}</strong>`;\n        }\n        if (attributes.italic) {\n            text = `<em>${text}</em>`;\n        }\n        if (attributes.underline) {\n            text = `<u>${text}</u>`;\n        }\n        if (attributes.strikethrough) {\n            text = `<s>${text}</s>`;\n        }\n        if (attributes.link) {\n            text = `<a href=\"${attributes.link}\">${text}</a>`;\n        }\n        if (attributes.reference) {\n            const refPageId = attributes.reference.pageId;\n            const workspace = block.page.workspace;\n            const pageMeta = workspace.meta.pageMetas.find(page => page.id === refPageId);\n            const host = window.location.origin;\n            // maybe should use public link at here?\n            const referenceLink = `${host}/workspace/${workspace.id}/${refPageId}`;\n            const referenceTitle = pageMeta ? pageMeta.title : 'Deleted page';\n            text = `<a href=\"${referenceLink}\">${referenceTitle}</a>`;\n        }\n        return text;\n    }\n    /**\n     * side effect when update block\n     */\n    async updateEffect(block) {\n        const handleUnindent = (await import('../rich-text/rich-text-operations.js')).handleUnindent;\n        // we need to unindent the first child of the block if it not\n        // supports children\n        if (supportsChildren(block)) {\n            return;\n        }\n        if (!block.children.length) {\n            return;\n        }\n        handleUnindent(block.page, block.children[0], 0, false);\n    }\n    defineKeymap(block, virgo) {\n        return {\n            enterMarkdownMatch: {\n                key: 'Enter',\n                handler: (range, context) => {\n                    assertExists(virgo);\n                    return enterMarkdownMatch(block, virgo, range, context);\n                },\n            },\n            spaceMarkdownMatch: {\n                key: ' ',\n                handler(range, context) {\n                    assertExists(virgo);\n                    return spaceMarkdownMatch(block, virgo, range, context);\n                },\n            },\n            hardEnter: {\n                key: 'Enter',\n                handler(range, context) {\n                    assertExists(virgo);\n                    return hardEnter(block, range, virgo, context.event);\n                },\n            },\n            softEnter: {\n                key: 'Enter',\n                shiftKey: true,\n                handler(range, context) {\n                    assertExists(virgo);\n                    return onSoftEnter(block, range, virgo);\n                },\n            },\n            // shortKey+enter\n            insertLineAfter: {\n                key: 'Enter',\n                shortKey: true,\n                handler(range, context) {\n                    assertExists(virgo);\n                    return hardEnter(block, range, virgo, context.event, true);\n                },\n            },\n            tab: {\n                key: 'Tab',\n                handler(range, context) {\n                    const index = range.index;\n                    handleIndent(block.page, block, index);\n                    context.event.stopPropagation();\n                    return PREVENT_DEFAULT;\n                },\n            },\n            shiftTab: {\n                key: 'Tab',\n                shiftKey: true,\n                handler(range, context) {\n                    const index = range.index;\n                    handleUnindent(block.page, block, index);\n                    context.event.stopPropagation();\n                    return PREVENT_DEFAULT;\n                },\n            },\n            backspace: {\n                key: 'Backspace',\n                handler(range, context) {\n                    return onBackspace(block, context.event, this.vEditor);\n                },\n            },\n            up: {\n                key: 'ArrowUp',\n                shiftKey: false,\n                handler(range, context) {\n                    return handleKeyUp(context.event, this.vEditor.rootElement);\n                },\n            },\n            down: {\n                key: 'ArrowDown',\n                shiftKey: false,\n                handler(range, context) {\n                    return handleKeyDown(block, context.event, this.vEditor.rootElement);\n                },\n            },\n            left: {\n                key: 'ArrowLeft',\n                shiftKey: false,\n                handler(range, context) {\n                    return onKeyLeft(context.event, range);\n                },\n            },\n            right: {\n                key: 'ArrowRight',\n                shiftKey: false,\n                handler(range, context) {\n                    return onKeyRight(block, context.event, range);\n                },\n            },\n            inputRule: {\n                key: ' ',\n                shiftKey: null,\n                prefix: /^(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\]|(#){1,6}|(-){3}|(\\*){3}|>)$/,\n                handler(range, context) {\n                    return onSpace(block, virgo, range, context);\n                },\n            },\n        };\n    }\n}\n//# sourceMappingURL=index.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { Text } from '@blocksuite/store';\nimport { handleBlockSplit } from '../rich-text/rich-text-operations.js';\nimport { getServiceOrRegister } from '../service.js';\nimport { asyncGetVirgoByModel, } from '../utils/index.js';\nexport async function json2block(focusedBlockModel, pastedBlocks, options) {\n    const { convertToPastedIfEmpty = false, range } = options ?? {};\n    assertExists(range);\n    const { page } = focusedBlockModel;\n    // After deleteModelsByRange, selected block is must only, and selection is must caret\n    const firstBlock = pastedBlocks[0];\n    const lastBlock = pastedBlocks[pastedBlocks.length - 1];\n    const isFocusedBlockEmpty = !focusedBlockModel.text?.length && !convertToPastedIfEmpty;\n    const shouldMergeFirstBlock = !isFocusedBlockEmpty && firstBlock.text && focusedBlockModel.text;\n    const shouldMergeLastBlock = focusedBlockModel.text && lastBlock.text;\n    const parent = page.getParent(focusedBlockModel);\n    assertExists(parent);\n    if (pastedBlocks.length === 1) {\n        // TODO: optimize textLength\n        const textLength = firstBlock?.text?.reduce((sum, data) => {\n            return sum + (data.insert?.length || 0);\n        }, 0) ?? 0;\n        const shouldSplitBlock = focusedBlockModel.text?.length !== range.endOffset;\n        shouldSplitBlock &&\n            (await handleBlockSplit(page, focusedBlockModel, range.startOffset, 0));\n        if (shouldMergeFirstBlock) {\n            focusedBlockModel.text?.insertList(firstBlock.text || [], range?.startOffset || 0);\n            await addSerializedBlocks(page, firstBlock.children || [], focusedBlockModel, 0);\n            await setRange(focusedBlockModel, {\n                index: (range?.startOffset ?? 0) + textLength,\n                length: 0,\n            });\n        }\n        else {\n            const [id] = await addSerializedBlocks(page, pastedBlocks, parent, parent.children.indexOf(focusedBlockModel) + 1);\n            const model = page.getBlockById(id);\n            assertExists(model);\n            if (model.text) {\n                await setRange(model, {\n                    index: textLength,\n                    length: 0,\n                });\n            }\n            else {\n                // TODO: set embed block selection\n            }\n        }\n        isFocusedBlockEmpty && page.deleteBlock(focusedBlockModel);\n        return;\n    }\n    await handleBlockSplit(page, focusedBlockModel, range.startOffset, 0);\n    if (shouldMergeFirstBlock) {\n        focusedBlockModel.text?.insertList(firstBlock.text || [], range?.startOffset || 0);\n        await addSerializedBlocks(page, firstBlock.children || [], focusedBlockModel, 0);\n    }\n    const insertPosition = parent.children.indexOf(focusedBlockModel) +\n        (shouldMergeFirstBlock ? 1 : 0);\n    const ids = await addSerializedBlocks(page, pastedBlocks.slice(shouldMergeFirstBlock ? 1 : 0), parent, insertPosition);\n    isFocusedBlockEmpty && page.deleteBlock(focusedBlockModel);\n    const lastModel = page.getBlockById(ids[ids.length - 1]);\n    if (shouldMergeLastBlock) {\n        assertExists(lastModel);\n        const rangeOffset = lastModel.text?.length || 0;\n        const nextSiblingModel = page.getNextSibling(lastModel);\n        lastModel.text?.join(nextSiblingModel?.text);\n        assertExists(nextSiblingModel);\n        page.deleteBlock(nextSiblingModel);\n        // Wait for the block's rich text mounted\n        requestAnimationFrame(() => {\n            setRange(lastModel, {\n                index: rangeOffset,\n                length: 0,\n            });\n        });\n    }\n    else {\n        if (lastModel?.text) {\n            setRange(lastModel, {\n                index: lastModel.text.length,\n                length: 0,\n            });\n        }\n        else {\n            // TODO: set embed block selection\n        }\n    }\n}\nasync function setRange(model, vRange) {\n    const vEditor = await asyncGetVirgoByModel(model);\n    assertExists(vEditor);\n    vEditor.setVRange(vRange);\n}\nexport async function addSerializedBlocks(page, serializedBlocks, parent, index) {\n    const addedBlockIds = [];\n    const pendingModels = [];\n    for (let i = 0; i < serializedBlocks.length; i++) {\n        const json = serializedBlocks[i];\n        const flavour = json.flavour;\n        // XXX: block props should not be written here !!!\n        const blockProps = {\n            flavour,\n            type: json.type,\n            checked: json.checked,\n            sourceId: json.sourceId,\n            caption: json.caption,\n            width: json.width,\n            height: json.height,\n            language: json.language,\n            title: json.databaseProps?.title || json.title,\n            titleColumnName: json.databaseProps?.titleColumnName,\n            titleColumnWidth: json.databaseProps?.titleColumnWidth,\n            // bookmark\n            url: json.url,\n            description: json.description,\n            icon: json.icon,\n            image: json.image,\n            crawled: json.crawled,\n        };\n        const id = page.addBlock(flavour, blockProps, parent, index + i);\n        addedBlockIds.push(id);\n        const model = page.getBlockById(id);\n        assertExists(model);\n        const initialProps = model?.flavour && page.getInitialPropsByFlavour(model?.flavour);\n        if (initialProps && initialProps.text instanceof Text) {\n            json.text && model?.text?.applyDelta(json.text);\n        }\n        if (model && json.children.length) {\n            await addSerializedBlocks(page, json.children, model, 0);\n            pendingModels.push({ model, json });\n        }\n    }\n    for (const { model, json } of pendingModels) {\n        const flavour = model.flavour;\n        const service = await getServiceOrRegister(flavour);\n        service.onBlockPasted(model, {\n            rowIds: json.databaseProps?.rowIds,\n            cells: json.databaseProps?.cells,\n            columns: json.databaseProps?.columns,\n        });\n    }\n    return addedBlockIds;\n}\n//# sourceMappingURL=json2block.js.map","/* CSS variables. You need to handle all places where `CSS variables` are marked. */\nexport const COLOR_VARIABLES = [\n    '--affine-brand-color',\n    '--affine-primary-color',\n    '--affine-secondary-color',\n    '--affine-tertiary-color',\n    '--affine-hover-color',\n    '--affine-icon-color',\n    '--affine-icon-secondary',\n    '--affine-border-color',\n    '--affine-divider-color',\n    '--affine-placeholder-color',\n    '--affine-quote-color',\n    '--affine-link-color',\n    '--affine-edgeless-grid-color',\n    '--affine-success-color',\n    '--affine-warning-color',\n    '--affine-error-color',\n    '--affine-processing-color',\n    '--affine-text-emphasis-color',\n    '--affine-text-primary-color',\n    '--affine-text-secondary-color',\n    '--affine-text-disable-color',\n    '--affine-black-10',\n    '--affine-black-30',\n    '--affine-black-50',\n    '--affine-black-60',\n    '--affine-black-80',\n    '--affine-black-90',\n    '--affine-black',\n    '--affine-white-10',\n    '--affine-white-30',\n    '--affine-white-50',\n    '--affine-white-60',\n    '--affine-white-80',\n    '--affine-white-90',\n    '--affine-white',\n    '--affine-background-code-block',\n    '--affine-background-tertiary-color',\n    '--affine-background-processing-color',\n    '--affine-background-error-color',\n    '--affine-background-warning-color',\n    '--affine-background-success-color',\n    '--affine-background-primary-color',\n    '--affine-background-secondary-color',\n    '--affine-background-modal-color',\n    '--affine-background-overlay-panel-color',\n    '--affine-tag-blue',\n    '--affine-tag-green',\n    '--affine-tag-teal',\n    '--affine-tag-white',\n    '--affine-tag-purple',\n    '--affine-tag-red',\n    '--affine-tag-pink',\n    '--affine-tag-yellow',\n    '--affine-tag-orange',\n    '--affine-tag-gray',\n    '--affine-palette-line-yellow',\n    '--affine-palette-line-orange',\n    '--affine-palette-line-tangerine',\n    '--affine-palette-line-red',\n    '--affine-palette-line-magenta',\n    '--affine-palette-line-purple',\n    '--affine-palette-line-navy',\n    '--affine-palette-line-blue',\n    '--affine-palette-line-green',\n    '--affine-palette-line-white',\n    '--affine-palette-line-black',\n    '--affine-palette-line-grey',\n    '--affine-palette-shape-yellow',\n    '--affine-palette-shape-orange',\n    '--affine-palette-shape-tangerine',\n    '--affine-palette-shape-red',\n    '--affine-palette-shape-magenta',\n    '--affine-palette-shape-purple',\n    '--affine-palette-shape-navy',\n    '--affine-palette-shape-blue',\n    '--affine-palette-shape-green',\n    '--affine-palette-shape-white',\n    '--affine-palette-shape-black',\n    '--affine-palette-shape-grey',\n    '--affine-tooltip',\n];\nexport const SIZE_VARIABLES = [\n    '--affine-font-h-1',\n    '--affine-font-h-2',\n    '--affine-font-h-3',\n    '--affine-font-h-4',\n    '--affine-font-h-5',\n    '--affine-font-h-6',\n    '--affine-font-base',\n    '--affine-font-sm',\n    '--affine-font-xs',\n    '--affine-line-height',\n    '--affine-z-index-modal',\n    '--affine-z-index-popover',\n];\nexport const FONT_FAMILY_VARIABLES = [\n    '--affine-font-family',\n    '--affine-font-number-family',\n    '--affine-font-code-family',\n];\nexport const VARIABLES = [\n    '--affine-editor-width',\n    '--affine-theme-mode',\n    '--affine-editor-mode',\n    /* --affine-palette-transparent: special values added for the sake of logical consistency. */\n    '--affine-palette-transparent',\n    '--affine-popover-shadow',\n    '--affine-menu-shadow',\n    '--affine-float-button-shadow',\n    '--affine-shadow-1',\n    '--affine-shadow-2',\n    '--affine-shadow-3',\n    '--affine-paragraph-space',\n    '--affine-popover-radius',\n    '--affine-zoom',\n    '--affine-scale',\n    ...SIZE_VARIABLES,\n    ...COLOR_VARIABLES,\n    ...FONT_FAMILY_VARIABLES,\n];\nexport function isCssVariable(name) {\n    return VARIABLES.includes(name);\n}\n//# sourceMappingURL=css-variables.js.map","import { assertExists } from '@blocksuite/store';\nimport { capitalize, uncapitalize } from '../utils/std.js';\n/**\n * Usage:\n * cssNameToJsName('--affine-theme-mode');  // affineThemeMode\n */\nexport function cssNameToJsName(cssName) {\n    const upper = cssName\n        .split('-')\n        .filter(s => !!s)\n        .map(s => capitalize(s))\n        .join('');\n    return uncapitalize(upper);\n}\nfunction getClosestEditorContainer(element) {\n    const container = element.closest('editor-container');\n    assertExists(container);\n    return container;\n}\nexport function listenToThemeChange(currentELement, callback) {\n    const container = getClosestEditorContainer(currentELement);\n    return container.themeObserver.on(callback);\n}\nexport function getThemePropertyValue(currentELement, name) {\n    const container = getClosestEditorContainer(currentELement);\n    return container.themeObserver.cssVariables?.[name];\n}\n//# sourceMappingURL=utils.js.map","function findTextNode(node) {\n    if (node.nodeType === Node.TEXT_NODE) {\n        return node;\n    }\n    // Try to find the text node in the child nodes\n    for (let i = 0; i < node.childNodes.length; i++) {\n        const textNode = findTextNode(node.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n    return null;\n}\n/**\n * Find the next text node from the given node.\n *\n * Note: this function will skip the given node itself. And the boundary node will be included.\n */\nfunction findNextTextNode(node, checkWalkBoundary = (node) => node === document.body) {\n    while (node.parentNode) {\n        const parentNode = node.parentNode;\n        if (!parentNode) {\n            console.warn('Failed to find text node from node! no parent node', node);\n            return null;\n        }\n        const nodeIdx = Array.from(parentNode.childNodes).indexOf(node);\n        if (nodeIdx === -1) {\n            console.warn('Failed to find text node from node! no node index', node);\n            return null;\n        }\n        for (let i = nodeIdx + 1; i < parentNode.childNodes.length; i++) {\n            const textNode = findTextNode(parentNode.childNodes[i]);\n            if (textNode) {\n                return textNode;\n            }\n        }\n        if (checkWalkBoundary(parentNode)) {\n            return null;\n        }\n        node = parentNode;\n    }\n    return null;\n}\n/**\n * Try to shift the range to the next caret point.\n * If the range is already at the end of the block, return null.\n *\n * NOTE: In extreme situations, this function need to traverse the DOM tree.\n * It may cause performance issues, so use it carefully.\n *\n * You can see the definition of the range in the spec for more details.\n * https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113/ranges.html\n */\nfunction shiftRange(range) {\n    if (!range.collapsed) {\n        throw new Error('Failed to shift range! expected a collapsed range');\n    }\n    const startContainer = range.startContainer;\n    // If the startNode is a Node of type Text, Comment, or CDataSection,\n    // then startOffset is the number of characters from the start of startNode.\n    // For other Node types, startOffset is the number of child nodes between the start of the startNode.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Range/setStart\n    const isTextLikeNode = startContainer.nodeType === Node.TEXT_NODE ||\n        startContainer.nodeType === Node.COMMENT_NODE ||\n        startContainer.nodeType === Node.CDATA_SECTION_NODE;\n    if (!isTextLikeNode) {\n        // Although we can shift the range if the node is a not text node.\n        // But in most normal situations, the node should be a text node.\n        // To simplify the processing, we just skip the case.\n        // If we really need to support this case, we can add it later.\n        //\n        // If in the empty line, the startContainer is a `<p><br></p>` node,\n        // it's expected but hard to distinguish, so we remove the warning temporarily.\n        // console.warn(\n        //   'Failed to shiftRange! Unexpected startContainer nodeType',\n        //   startContainer\n        // );\n        return null;\n    }\n    const textContent = startContainer.textContent;\n    if (typeof textContent !== 'string') {\n        // If the node is a `document` or a `doctype`, textContent returns `null`.\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n        throw new Error('Failed to shift range! unexpected startContainer');\n    }\n    // const maxOffset = isTextLikeNode\n    //   ? textContent.length\n    //   : startContainer.childNodes.length;\n    const maxOffset = textContent.length;\n    if (maxOffset > range.startOffset) {\n        // Just shift to the next character simply\n        const nextRange = range.cloneRange();\n        nextRange.setStart(range.startContainer, range.startOffset + 1);\n        nextRange.setEnd(range.startContainer, range.startOffset + 1);\n        return nextRange;\n    }\n    // If the range is already at the end of the node,\n    // we need traverse the DOM tree to find the next text node.\n    // And this may be inefficient.\n    const nextTextNode = findNextTextNode(startContainer, (node) => \n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/contentEditable\n    node instanceof HTMLElement && node.contentEditable === 'true');\n    if (!nextTextNode) {\n        return null;\n    }\n    const nextRange = range.cloneRange();\n    nextRange.setStart(nextTextNode, 0);\n    nextRange.setEnd(nextTextNode, 0);\n    return nextRange;\n}\n/**\n * It will return the next range if the cursor is at the edge of the block, otherwise return false.\n *\n * We should determine if the cursor is at the edge of the block, since a cursor at edge may have two cursor points\n * but only one bounding rect.\n * If a cursor is at the edge of a block, its previous cursor rect will not equal to the next one.\n *\n * See the following example:\n * ```markdown\n * long text| <- `range.getBoundingClientRect()` will return rect at here\n * |line wrap <- caret at the start of the second line\n * ```\n *\n * See https://stackoverflow.com/questions/59767515/incorrect-positioning-of-getboundingclientrect-after-newline-character\n */\nexport function isAtLineEdge(range) {\n    if (!range.collapsed) {\n        return false;\n    }\n    const nextRange = shiftRange(range);\n    if (!nextRange) {\n        return false;\n    }\n    const nextRangeRect = nextRange.getBoundingClientRect();\n    const noLineEdge = range.getBoundingClientRect().top === nextRangeRect.top;\n    if (noLineEdge) {\n        return false;\n    }\n    return nextRange;\n}\nexport function checkFirstLine(range, container) {\n    if (!range.collapsed) {\n        throw new Error('Failed to determine if the caret is at the first line! expected a collapsed range but got' +\n            range);\n    }\n    if (!container.contains(range.commonAncestorContainer)) {\n        throw new Error('Failed to determine if the caret is at the first line! expected the range to be inside the container but got' +\n            range +\n            ' and ' +\n            container);\n    }\n    const containerRect = container.getBoundingClientRect();\n    const rangeRect = range.getBoundingClientRect();\n    if (rangeRect.left === 0 && rangeRect.top === 0) {\n        // Workaround select to empty line will get empty range\n        // See https://w3c.github.io/csswg-drafts/cssom-view/#dom-range-getboundingclientrect\n        // At empty line, it is the first line and also is the last line\n        return true;\n    }\n    const lineHeight = rangeRect.height;\n    // If the caret at the start of second line, as known as line edge,\n    // the range bounding rect may be incorrect, we need to check the scenario.\n    const isFirstLine = containerRect.top > rangeRect.top - lineHeight / 2 && !isAtLineEdge(range);\n    return isFirstLine;\n}\nexport function checkLastLine(range, container) {\n    if (!range.collapsed) {\n        throw new Error('Failed to determine if the caret is at the last line! expected a collapsed range but got' +\n            range);\n    }\n    if (!container.contains(range.commonAncestorContainer)) {\n        throw new Error('Failed to determine if the caret is at the first line! expected the range to be inside the container but got' +\n            range +\n            ' and ' +\n            container);\n    }\n    const containerRect = container.getBoundingClientRect();\n    const rangeRect = range.getBoundingClientRect();\n    if (rangeRect.left === 0 && rangeRect.bottom === 0) {\n        // Workaround select to empty line will get empty range\n        // See https://w3c.github.io/csswg-drafts/cssom-view/#dom-range-getboundingclientrect\n        // At empty line, it is the first line and also is the last line\n        return true;\n    }\n    const lineHeight = rangeRect.height;\n    const isLastLineWithoutEdge = rangeRect.bottom + lineHeight / 2 > containerRect.bottom;\n    if (isLastLineWithoutEdge) {\n        // If the caret is at the first line of the block,\n        // default behavior will move the caret to the start of the line,\n        // which is not expected. so we need to prevent default behavior.\n        return true;\n    }\n    const atLineEdgeRange = isAtLineEdge(range);\n    if (!atLineEdgeRange) {\n        return false;\n    }\n    // If the caret is at the line edge, the range bounding rect is wrong,\n    // we need to check the next range again.\n    const nextRangeRect = atLineEdgeRange.getBoundingClientRect();\n    const nextLineHeight = nextRangeRect.height;\n    return nextRangeRect.bottom + nextLineHeight / 2 > containerRect.bottom;\n}\n//# sourceMappingURL=check-line.js.map","import { isPageMode } from './query.js';\n// When the user selects a range, check if it matches the previous selection.\n// If it does, apply the marks from the previous selection.\n// If it does not, remove the marks from the previous selection.\nexport function clearMarksOnDiscontinuousInput(vEditor) {\n    let vRange = vEditor.getVRange();\n    const dispose = vEditor.slots.vRangeUpdated.on(([r, t]) => {\n        if (vRange &&\n            r &&\n            ((t === 'native' && r.index === vRange.index) ||\n                (t !== 'native' && r.index === vRange.index + 1))) {\n            vRange = r;\n        }\n        else {\n            vEditor.resetMarks();\n            dispose.dispose();\n        }\n    });\n}\nexport function setupVirgoScroll(page, vEditor) {\n    vEditor.shouldLineScrollIntoView = isPageMode(page);\n}\n//# sourceMappingURL=virgo.js.map","import { html } from 'lit';\nexport const DefaultIcon = html `\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3334_77372)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M2.71294 6.47927C2.9781 6.34125 3.27709 6.21883 3.59925 6.11144C4.18904 5.91485 4.88593 5.759 5.65385 5.65385C5.759 4.88593 5.91485 4.18904 6.11144 3.59925C6.21883 3.27709 6.34125 2.9781 6.47927 2.71294C4.66435 3.23402 3.23402 4.66435 2.71294 6.47927ZM8 1.5C4.41015 1.5 1.5 4.41015 1.5 8C1.5 11.5899 4.41015 14.5 8 14.5C11.5899 14.5 14.5 11.5899 14.5 8C14.5 4.41015 11.5899 1.5 8 1.5ZM8 2.5C7.94272 2.5 7.80858 2.53437 7.61422 2.781C7.42429 3.02199 7.23139 3.4017 7.06013 3.91547C6.90527 4.38004 6.77549 4.9317 6.67997 5.5472C7.10671 5.5162 7.5484 5.5 8 5.5C8.4516 5.5 8.89329 5.5162 9.32003 5.5472C9.22451 4.9317 9.09473 4.38004 8.93987 3.91547C8.76861 3.4017 8.57571 3.02199 8.38579 2.781C8.19142 2.53437 8.05728 2.5 8 2.5ZM10.3461 5.65385C10.241 4.88593 10.0852 4.18904 9.88856 3.59925C9.78117 3.27709 9.65875 2.9781 9.52073 2.71294C11.3357 3.23402 12.766 4.66435 13.2871 6.47927C13.0219 6.34125 12.7229 6.21883 12.4008 6.11144C11.811 5.91485 11.1141 5.759 10.3461 5.65385ZM9.44027 6.55973C8.98158 6.52087 8.49906 6.5 8 6.5C7.50094 6.5 7.01842 6.52087 6.55973 6.55973C6.52087 7.01842 6.5 7.50094 6.5 8C6.5 8.49906 6.52087 8.98158 6.55973 9.44027C7.01842 9.47913 7.50094 9.5 8 9.5C8.49906 9.5 8.98158 9.47913 9.44027 9.44027C9.47913 8.98158 9.5 8.49906 9.5 8C9.5 7.50094 9.47913 7.01842 9.44027 6.55973ZM10.4528 9.32002C10.4838 8.89329 10.5 8.4516 10.5 8C10.5 7.5484 10.4838 7.10671 10.4528 6.67998C11.0683 6.7755 11.62 6.90527 12.0845 7.06013C12.5983 7.23139 12.978 7.42429 13.219 7.61422C13.4656 7.80858 13.5 7.94272 13.5 8C13.5 8.05728 13.4656 8.19142 13.219 8.38579C12.978 8.57571 12.5983 8.76861 12.0845 8.93987C11.62 9.09473 11.0683 9.2245 10.4528 9.32002ZM9.32003 10.4528C8.89329 10.4838 8.4516 10.5 8 10.5C7.5484 10.5 7.10671 10.4838 6.67998 10.4528C6.7755 11.0683 6.90527 11.62 7.06013 12.0845C7.23139 12.5983 7.42429 12.978 7.61422 13.219C7.80858 13.4656 7.94272 13.5 8 13.5C8.05728 13.5 8.19142 13.4656 8.38579 13.219C8.57571 12.978 8.76861 12.5983 8.93987 12.0845C9.09473 11.62 9.22451 11.0683 9.32003 10.4528ZM9.52073 13.2871C9.65875 13.0219 9.78117 12.7229 9.88856 12.4008C10.0852 11.811 10.241 11.1141 10.3461 10.3461C11.1141 10.241 11.811 10.0852 12.4008 9.88856C12.7229 9.78117 13.0219 9.65875 13.2871 9.52073C12.766 11.3357 11.3357 12.766 9.52073 13.2871ZM6.47927 13.2871C4.66435 12.766 3.23402 11.3357 2.71294 9.52073C2.9781 9.65875 3.27709 9.78117 3.59925 9.88856C4.18904 10.0852 4.88593 10.241 5.65385 10.3461C5.759 11.1141 5.91485 11.811 6.11144 12.4008C6.21883 12.7229 6.34125 13.0219 6.47927 13.2871ZM5.5472 9.32003C4.9317 9.22451 4.38004 9.09473 3.91547 8.93987C3.4017 8.76861 3.02199 8.57571 2.781 8.38579C2.53437 8.19142 2.5 8.05728 2.5 8C2.5 7.94272 2.53437 7.80858 2.781 7.61422C3.02199 7.42429 3.4017 7.23139 3.91547 7.06013C4.38004 6.90527 4.9317 6.7755 5.5472 6.67998C5.5162 7.10671 5.5 7.5484 5.5 8C5.5 8.4516 5.5162 8.89329 5.5472 9.32003Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3334_77372\">\n        <rect width=\"16\" height=\"16\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const EdgelessIcon = html `\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3334_76304)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.33341 3.16667C3.68908 3.16667 3.16675 3.68901 3.16675 4.33334C3.16675 4.97767 3.68908 5.5 4.33341 5.5C4.97775 5.5 5.50008 4.97767 5.50008 4.33334C5.50008 3.68901 4.97775 3.16667 4.33341 3.16667ZM2.16675 4.33334C2.16675 3.13672 3.1368 2.16667 4.33341 2.16667C5.53003 2.16667 6.50008 3.13672 6.50008 4.33334C6.50008 5.52995 5.53003 6.5 4.33341 6.5C3.1368 6.5 2.16675 5.52995 2.16675 4.33334Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.33341 10.5C3.68908 10.5 3.16675 11.0223 3.16675 11.6667C3.16675 12.311 3.68908 12.8333 4.33341 12.8333C4.97775 12.8333 5.50008 12.311 5.50008 11.6667C5.50008 11.0223 4.97775 10.5 4.33341 10.5ZM2.16675 11.6667C2.16675 10.4701 3.1368 9.5 4.33341 9.5C5.53003 9.5 6.50008 10.4701 6.50008 11.6667C6.50008 12.8633 5.53003 13.8333 4.33341 13.8333C3.1368 13.8333 2.16675 12.8633 2.16675 11.6667Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M6.83341 4.33334C6.83341 4.0572 7.05727 3.83334 7.33341 3.83334H8.00008C8.54726 3.83334 9.08907 3.94111 9.59459 4.15051C10.1001 4.3599 10.5594 4.66682 10.9464 5.05373C11.3333 5.44064 11.6402 5.89997 11.8496 6.40549C12.059 6.91101 12.1667 7.45283 12.1667 8V8.66667C12.1667 8.94281 11.9429 9.16667 11.6667 9.16667C11.3906 9.16667 11.1667 8.94281 11.1667 8.66667V8C11.1667 7.58415 11.0848 7.17237 10.9257 6.78817C10.7666 6.40398 10.5333 6.05489 10.2393 5.76083C9.9452 5.46678 9.59611 5.23353 9.21191 5.07439C8.82772 4.91525 8.41593 4.83334 8.00008 4.83334H7.33341C7.05727 4.83334 6.83341 4.60948 6.83341 4.33334Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M9.50008 10.6667C9.50008 10.0223 10.0224 9.5 10.6667 9.5H12.6667C13.3111 9.5 13.8334 10.0223 13.8334 10.6667V12.6667C13.8334 13.311 13.3111 13.8333 12.6667 13.8333H10.6667C10.0224 13.8333 9.50008 13.311 9.50008 12.6667V10.6667ZM10.6667 10.5C10.5747 10.5 10.5001 10.5746 10.5001 10.6667V12.6667C10.5001 12.7587 10.5747 12.8333 10.6667 12.8333H12.6667C12.7588 12.8333 12.8334 12.7587 12.8334 12.6667V10.6667C12.8334 10.5746 12.7588 10.5 12.6667 10.5H10.6667Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.33341 6.83334C4.60956 6.83334 4.83341 7.0572 4.83341 7.33334L4.83341 8.66667C4.83341 8.94281 4.60956 9.16667 4.33341 9.16667C4.05727 9.16667 3.83341 8.94281 3.83341 8.66667L3.83341 7.33334C3.83341 7.0572 4.05727 6.83334 4.33341 6.83334Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3334_76304\">\n        <rect width=\"16\" height=\"16\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const PageIcon = html `<svg\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g clip-path=\"url(#clip0_3334_79048)\">\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      fill=\"currentColor\"\n      d=\"M2.16675 3.99999C2.16675 2.98747 2.98756 2.16666 4.00008 2.16666H9.33342C9.60956 2.16666 9.83342 2.39051 9.83342 2.66666C9.83342 2.9428 9.60956 3.16666 9.33342 3.16666H4.00008C3.53984 3.16666 3.16675 3.53975 3.16675 3.99999V13.3333C3.16675 13.6095 2.94289 13.8333 2.66675 13.8333C2.39061 13.8333 2.16675 13.6095 2.16675 13.3333V3.99999Z\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      fill=\"currentColor\"\n      d=\"M13.8334 12C13.8334 13.0125 13.0126 13.8333 12.0001 13.8333H6.66675C6.39061 13.8333 6.16675 13.6095 6.16675 13.3333C6.16675 13.0572 6.39061 12.8333 6.66675 12.8333L12.0001 12.8333C12.4603 12.8333 12.8334 12.4602 12.8334 12L12.8334 2.66666C12.8334 2.39051 13.0573 2.16666 13.3334 2.16666C13.6096 2.16666 13.8334 2.39051 13.8334 2.66666L13.8334 12Z\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      fill=\"currentColor\"\n      d=\"M5.50008 5.99999C5.50008 5.35566 6.02242 4.83332 6.66675 4.83332H9.33342C9.97775 4.83332 10.5001 5.35566 10.5001 5.99999V7.33332C10.5001 7.97765 9.97775 8.49999 9.33342 8.49999H6.66675C6.02242 8.49999 5.50008 7.97765 5.50008 7.33332V5.99999ZM6.66675 5.83332C6.5747 5.83332 6.50008 5.90794 6.50008 5.99999V7.33332C6.50008 7.42537 6.5747 7.49999 6.66675 7.49999H9.33342C9.42546 7.49999 9.50008 7.42537 9.50008 7.33332V5.99999C9.50008 5.90794 9.42546 5.83332 9.33342 5.83332H6.66675Z\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      fill=\"currentColor\"\n      d=\"M5.50008 10.6667C5.50008 10.3905 5.72394 10.1667 6.00008 10.1667H10.0001C10.2762 10.1667 10.5001 10.3905 10.5001 10.6667C10.5001 10.9428 10.2762 11.1667 10.0001 11.1667H6.00008C5.72394 11.1667 5.50008 10.9428 5.50008 10.6667Z\"\n    />\n  </g>\n  <defs>\n    <clipPath id=\"clip0_3334_79048\">\n      <rect width=\"16\" height=\"16\" fill=\"white\" />\n    </clipPath>\n  </defs>\n</svg>`;\nexport const RefreshIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77646)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.70834 12C4.70834 7.97292 7.97293 4.70833 12 4.70833C13.8671 4.70833 15.5717 5.41092 16.8613 6.56516L16.8633 6.56695L18.0417 7.63079V5.33333C18.0417 4.98815 18.3215 4.70833 18.6667 4.70833C19.0119 4.70833 19.2917 4.98815 19.2917 5.33333V9.03704C19.2917 9.38221 19.0119 9.66204 18.6667 9.66204H14.963C14.6178 9.66204 14.338 9.38221 14.338 9.03704C14.338 8.69186 14.6178 8.41204 14.963 8.41204H17.0417L16.0276 7.49658C16.0273 7.49628 16.027 7.49599 16.0266 7.49569C14.9575 6.53917 13.5473 5.95833 12 5.95833C8.66329 5.95833 5.95834 8.66328 5.95834 12C5.95834 15.3367 8.66329 18.0417 12 18.0417C14.8745 18.0417 17.2815 16.0336 17.892 13.3432C17.9684 13.0066 18.3032 12.7956 18.6398 12.872C18.9764 12.9484 19.1874 13.2832 19.111 13.6198C18.3741 16.8671 15.471 19.2917 12 19.2917C7.97293 19.2917 4.70834 16.0271 4.70834 12Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77646\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const DeleteIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77647)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M11.3166 3.87493C11.3513 3.87497 11.3864 3.875 11.422 3.875H12.578C12.6136 3.875 12.6487 3.87497 12.6834 3.87493C13.2704 3.87439 13.7306 3.87396 14.1375 4.03401C14.4945 4.17443 14.8106 4.40223 15.0567 4.69654C15.3372 5.032 15.4824 5.46866 15.6674 6.02568C15.6784 6.05861 15.6895 6.09197 15.7007 6.12575L15.7838 6.375H18.6667C19.0119 6.375 19.2917 6.65482 19.2917 7C19.2917 7.34518 19.0119 7.625 18.6667 7.625H17.625V15.5268C17.625 16.2041 17.625 16.7505 17.5889 17.1929C17.5517 17.6484 17.473 18.0485 17.2844 18.4187C16.9848 19.0067 16.5067 19.4848 15.9187 19.7844C15.5485 19.973 15.1484 20.0516 14.6929 20.0889C14.2505 20.125 13.7041 20.125 13.0268 20.125H10.9732C10.2959 20.125 9.74954 20.125 9.30712 20.0889C8.85159 20.0516 8.45147 19.973 8.08129 19.7844C7.49328 19.4848 7.01522 19.0067 6.71561 18.4187C6.527 18.0485 6.44836 17.6484 6.41115 17.1929C6.375 16.7505 6.375 16.2041 6.37501 15.5268L6.37501 7.625H5.33334C4.98817 7.625 4.70834 7.34518 4.70834 7C4.70834 6.65482 4.98817 6.375 5.33334 6.375H8.2162L8.29929 6.12575C8.31055 6.09197 8.32163 6.05861 8.33257 6.02568C8.51767 5.46866 8.66277 5.032 8.9433 4.69654C9.18942 4.40224 9.50548 4.17443 9.86251 4.03401C10.2695 3.87396 10.7296 3.87439 11.3166 3.87493ZM8.65226 7.625C8.66195 7.62522 8.67162 7.62522 8.68127 7.625H15.3188C15.3284 7.62522 15.3381 7.62522 15.3478 7.625H16.375V15.5C16.375 16.2104 16.3745 16.7056 16.343 17.0911C16.3121 17.4693 16.2545 17.6866 16.1706 17.8512C15.9909 18.204 15.704 18.4909 15.3512 18.6706C15.1866 18.7545 14.9693 18.8121 14.5911 18.843C14.2056 18.8745 13.7104 18.875 13 18.875H11C10.2896 18.875 9.79444 18.8745 9.40891 18.843C9.03068 18.8121 8.81338 18.7545 8.64878 18.6706C8.29597 18.4909 8.00914 18.204 7.82937 17.8512C7.74551 17.6866 7.6879 17.4693 7.657 17.0911C7.6255 16.7056 7.62501 16.2104 7.62501 15.5V7.625H8.65226ZM14.466 6.375H9.53401C9.73142 5.78788 9.8018 5.61848 9.9022 5.49843C10.0141 5.36465 10.1577 5.2611 10.32 5.19728C10.4771 5.1355 10.6776 5.125 11.422 5.125H12.578C13.3225 5.125 13.5229 5.1355 13.68 5.19728C13.8423 5.2611 13.986 5.36465 14.0978 5.49843C14.1982 5.61848 14.2686 5.78788 14.466 6.375ZM10.3333 9.70833C10.6785 9.70833 10.9583 9.98815 10.9583 10.3333V16.1667C10.9583 16.5118 10.6785 16.7917 10.3333 16.7917C9.98817 16.7917 9.70834 16.5118 9.70834 16.1667V10.3333C9.70834 9.98815 9.98817 9.70833 10.3333 9.70833ZM13.6667 9.70833C14.0119 9.70833 14.2917 9.98815 14.2917 10.3333V16.1667C14.2917 16.5118 14.0119 16.7917 13.6667 16.7917C13.3215 16.7917 13.0417 16.5118 13.0417 16.1667V10.3333C13.0417 9.98815 13.3215 9.70833 13.6667 9.70833Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77647\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const EditIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77641)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M15.245 6.43527L14.543 7.16176L16.8382 9.45697L17.5647 8.755C18.2018 8.11415 18.2006 7.07817 17.5612 6.43876C16.9218 5.79935 15.8859 5.79819 15.245 6.43527ZM15.9392 10.3257L13.6743 8.06082L7.13833 14.8251L6.2655 17.7345L9.17493 16.8617L15.9392 10.3257ZM14.3576 5.55488C15.4863 4.42615 17.3164 4.42615 18.4451 5.55488C19.5738 6.68361 19.5738 8.51364 18.4451 9.64238L18.4375 9.64996L9.93429 17.8661C9.86252 17.9355 9.77518 17.9866 9.67959 18.0153L5.51292 19.2653C5.29269 19.3314 5.05397 19.2712 4.89139 19.1086C4.7288 18.946 4.66862 18.7073 4.73469 18.4871L5.98469 14.3204C6.01337 14.2248 6.06452 14.1375 6.13387 14.0657L14.3576 5.55488Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77641\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const LinkIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77679)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M12.7019 5.83896C14.2094 4.33145 16.6535 4.33145 18.161 5.83896C19.6685 7.34646 19.6685 9.79061 18.161 11.2981L16.4453 13.0138C16.2012 13.2579 15.8055 13.2579 15.5614 13.0138C15.3173 12.7698 15.3173 12.374 15.5614 12.13L17.2771 10.4142C18.2965 9.39488 18.2965 7.74219 17.2771 6.72284C16.2578 5.70349 14.6051 5.70349 13.5857 6.72284L11.2981 9.01048C10.2788 10.0298 10.2788 11.6825 11.2981 12.7019C11.4581 12.8619 11.633 12.9963 11.818 13.1055C12.1152 13.281 12.2138 13.6643 12.0383 13.9615C11.8628 14.2587 11.4795 14.3573 11.1823 14.1818C10.9076 14.0196 10.6492 13.8207 10.4142 13.5858C8.90671 12.0782 8.90671 9.6341 10.4142 8.1266L12.7019 5.83896ZM11.9617 10.0385C12.1372 9.74129 12.5204 9.64265 12.8177 9.81819C13.0924 9.98043 13.3508 10.1793 13.5857 10.4142C15.0932 11.9217 15.0932 14.3659 13.5857 15.8734L11.2981 18.161C9.7906 19.6685 7.34645 19.6685 5.83894 18.161C4.33144 16.6535 4.33144 14.2094 5.83894 12.7019L7.55467 10.9861C7.79875 10.7421 8.19448 10.7421 8.43855 10.9861C8.68263 11.2302 8.68263 11.6259 8.43855 11.87L6.72283 13.5858C5.70348 14.6051 5.70348 16.2578 6.72283 17.2771C7.74218 18.2965 9.39487 18.2965 10.4142 17.2771L12.7019 14.9895C13.7212 13.9702 13.7212 12.3175 12.7019 11.2981C12.5418 11.1381 12.367 11.0037 12.182 10.8945C11.8848 10.719 11.7861 10.3357 11.9617 10.0385Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77679\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const CopyIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77644)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M11.308 4.70833H16.0254C16.4705 4.70832 16.842 4.70832 17.1456 4.73312C17.4621 4.75898 17.7594 4.81491 18.0404 4.95811C18.4716 5.17782 18.8222 5.5284 19.0419 5.9596C19.1851 6.24066 19.241 6.53787 19.2669 6.85444C19.2917 7.15797 19.2917 7.5295 19.2917 7.97462V12.692C19.2917 13.1372 19.2917 13.5087 19.2669 13.8122C19.241 14.1288 19.1851 14.426 19.0419 14.7071C18.8222 15.1383 18.4716 15.4888 18.0404 15.7086C17.7594 15.8518 17.4621 15.9077 17.1456 15.9336C16.842 15.9584 16.4705 15.9583 16.0254 15.9583H15.9583V16.0254C15.9584 16.4705 15.9584 16.842 15.9336 17.1456C15.9077 17.4621 15.8518 17.7593 15.7086 18.0404C15.4889 18.4716 15.1383 18.8222 14.7071 19.0419C14.426 19.1851 14.1288 19.241 13.8122 19.2669C13.5087 19.2917 13.1372 19.2917 12.6921 19.2917H7.97463C7.52951 19.2917 7.15798 19.2917 6.85445 19.2669C6.53788 19.241 6.24067 19.1851 5.95962 19.0419C5.52841 18.8222 5.17783 18.4716 4.95812 18.0404C4.81492 17.7593 4.75899 17.4621 4.73313 17.1456C4.70833 16.842 4.70833 16.4705 4.70834 16.0254V11.308C4.70833 10.8628 4.70833 10.4913 4.73313 10.1878C4.75899 9.8712 4.81492 9.57399 4.95812 9.29294C5.17783 8.86173 5.52841 8.51115 5.95962 8.29144C6.24067 8.14824 6.53788 8.09231 6.85445 8.06645C7.15798 8.04165 7.52952 8.04166 7.97465 8.04167L8.04168 8.04167L8.04168 7.97464C8.04167 7.52951 8.04166 7.15797 8.06646 6.85444C8.09233 6.53787 8.14825 6.24066 8.29145 5.9596C8.51116 5.5284 8.86174 5.17782 9.29295 4.95811C9.574 4.81491 9.87122 4.75898 10.1878 4.73312C10.4913 4.70832 10.8629 4.70832 11.308 4.70833ZM8.04168 9.29167H8.00001C7.52299 9.29167 7.20281 9.29215 6.95624 9.3123C6.71697 9.33185 6.60257 9.36675 6.5271 9.4052C6.3311 9.50507 6.17175 9.66442 6.07188 9.86043C6.03343 9.93589 5.99852 10.0503 5.97898 10.2896C5.95883 10.5361 5.95834 10.8563 5.95834 11.3333V16C5.95834 16.477 5.95883 16.7972 5.97898 17.0438C5.99852 17.283 6.03343 17.3974 6.07188 17.4729C6.17175 17.6689 6.3311 17.8283 6.5271 17.9281C6.60257 17.9666 6.71697 18.0015 6.95624 18.021C7.20281 18.0412 7.52299 18.0417 8.00001 18.0417H12.6667C13.1437 18.0417 13.4639 18.0412 13.7104 18.021C13.9497 18.0015 14.0641 17.9666 14.1396 17.9281C14.3356 17.8283 14.4949 17.6689 14.5948 17.4729C14.6333 17.3974 14.6682 17.283 14.6877 17.0438C14.7079 16.7972 14.7083 16.477 14.7083 16V15.9583H11.308C10.8628 15.9583 10.4913 15.9584 10.1878 15.9336C9.87122 15.9077 9.574 15.8518 9.29295 15.7086C8.86174 15.4888 8.51116 15.1383 8.29145 14.7071C8.14825 14.426 8.09233 14.1288 8.06646 13.8122C8.04166 13.5087 8.04167 13.1372 8.04168 12.692L8.04168 9.29167ZM11.3333 14.7083C10.8563 14.7083 10.5361 14.7078 10.2896 14.6877C10.0503 14.6682 9.93591 14.6333 9.86044 14.5948C9.66444 14.4949 9.50508 14.3356 9.40521 14.1396C9.36676 14.0641 9.33186 13.9497 9.31231 13.7104C9.29216 13.4639 9.29168 13.1437 9.29168 12.6667V8C9.29168 7.52298 9.29216 7.2028 9.31231 6.95623C9.33186 6.71696 9.36676 6.60256 9.40521 6.52709C9.50508 6.33109 9.66444 6.17174 9.86044 6.07187C9.93591 6.03342 10.0503 5.99851 10.2896 5.97896C10.5361 5.95882 10.8563 5.95833 11.3333 5.95833H16C16.477 5.95833 16.7972 5.95882 17.0438 5.97896C17.2831 5.99851 17.3975 6.03342 17.4729 6.07187C17.6689 6.17174 17.8283 6.33109 17.9281 6.52709C17.9666 6.60256 18.0015 6.71696 18.021 6.95623C18.0412 7.2028 18.0417 7.52298 18.0417 8V12.6667C18.0417 13.1437 18.0412 13.4639 18.021 13.7104C18.0015 13.9497 17.9666 14.0641 17.9281 14.1396C17.8283 14.3356 17.6689 14.4949 17.4729 14.5948C17.3975 14.6333 17.2831 14.6682 17.0438 14.6877C16.7972 14.7078 16.477 14.7083 16 14.7083H11.3333Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77644\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const CaptionIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77683)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.70831 6.16666C4.70831 5.36125 5.36123 4.70833 6.16665 4.70833H9.49998C10.3054 4.70833 10.9583 5.36125 10.9583 6.16666V9.49999C10.9583 10.3054 10.3054 10.9583 9.49998 10.9583H6.16665C5.36123 10.9583 4.70831 10.3054 4.70831 9.49999V6.16666ZM6.16665 5.95833C6.05159 5.95833 5.95831 6.0516 5.95831 6.16666V9.49999C5.95831 9.61505 6.05159 9.70833 6.16665 9.70833H9.49998C9.61504 9.70833 9.70831 9.61505 9.70831 9.49999V6.16666C9.70831 6.0516 9.61504 5.95833 9.49998 5.95833H6.16665Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.70831 18.6667C4.70831 18.3215 4.98814 18.0417 5.33331 18.0417L15.3333 18.0417C15.6785 18.0417 15.9583 18.3215 15.9583 18.6667C15.9583 19.0118 15.6785 19.2917 15.3333 19.2917L5.33331 19.2917C4.98813 19.2917 4.70831 19.0118 4.70831 18.6667Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.70831 14.5C4.70831 14.1548 4.98814 13.875 5.33331 13.875L18.6666 13.875C19.0118 13.875 19.2916 14.1548 19.2916 14.5C19.2916 14.8452 19.0118 15.125 18.6666 15.125L5.33331 15.125C4.98813 15.125 4.70831 14.8452 4.70831 14.5Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77683\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const DuplicateIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77645)\">\n      <path\n        d=\"M11.375 9.5C11.375 9.84518 11.6548 10.125 12 10.125H12.9911L8.22474 14.8914C7.98066 15.1355 7.98066 15.5312 8.22474 15.7753C8.46881 16.0194 8.86454 16.0194 9.10862 15.7753L13.875 11.0089V12C13.875 12.3452 14.1548 12.625 14.5 12.625C14.8452 12.625 15.125 12.3452 15.125 12V9.58333C15.125 9.56886 15.1246 9.5545 15.1237 9.54024C15.1348 9.36716 15.0742 9.19034 14.942 9.05806C14.8097 8.92578 14.6328 8.86519 14.4598 8.87629C14.4455 8.87543 14.4311 8.875 14.4167 8.875H12C11.6548 8.875 11.375 9.15482 11.375 9.5Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M16.0254 4.70833H11.308C10.8629 4.70832 10.4913 4.70832 10.1878 4.73312C9.87122 4.75898 9.574 4.81491 9.29295 4.95811C8.86174 5.17782 8.51116 5.5284 8.29145 5.9596C8.14825 6.24066 8.09233 6.53787 8.06646 6.85444C8.04166 7.15797 8.04167 7.5295 8.04168 7.97463L8.04168 8.04167L7.97465 8.04167C7.52953 8.04166 7.15798 8.04165 6.85445 8.06645C6.53788 8.09231 6.24067 8.14824 5.95962 8.29144C5.52841 8.51115 5.17783 8.86173 4.95812 9.29294C4.81492 9.57399 4.75899 9.8712 4.73313 10.1878C4.70833 10.4913 4.70834 10.8628 4.70834 11.308V16.0254C4.70834 16.4705 4.70833 16.842 4.73313 17.1456C4.75899 17.4621 4.81492 17.7593 4.95812 18.0404C5.17783 18.4716 5.52841 18.8222 5.95962 19.0419C6.24067 19.1851 6.53788 19.241 6.85445 19.2669C7.15798 19.2917 7.52951 19.2917 7.97463 19.2917H12.6921C13.1372 19.2917 13.5087 19.2917 13.8122 19.2669C14.1288 19.241 14.426 19.1851 14.7071 19.0419C15.1383 18.8222 15.4889 18.4716 15.7086 18.0404C15.8518 17.7593 15.9077 17.4621 15.9336 17.1456C15.9584 16.842 15.9584 16.4705 15.9583 16.0254V15.9583H16.0254C16.4705 15.9583 16.8421 15.9583 17.1456 15.9335C17.4621 15.9077 17.7594 15.8518 18.0404 15.7086C18.4716 15.4888 18.8222 15.1383 19.0419 14.7071C19.1851 14.426 19.241 14.1288 19.2669 13.8122C19.2917 13.5087 19.2917 13.1372 19.2917 12.692V7.97462C19.2917 7.5295 19.2917 7.15797 19.2669 6.85444C19.241 6.53787 19.1851 6.24066 19.0419 5.9596C18.8222 5.5284 18.4716 5.17782 18.0404 4.95811C17.7594 4.81491 17.4621 4.75898 17.1456 4.73312C16.842 4.70832 16.4705 4.70832 16.0254 4.70833ZM8.04168 11.1667V9.29167H8.00001C7.52299 9.29167 7.20281 9.29215 6.95624 9.3123C6.71697 9.33185 6.60257 9.36675 6.5271 9.4052C6.3311 9.50507 6.17175 9.66442 6.07188 9.86043C6.03343 9.93589 5.99852 10.0503 5.97898 10.2896C5.95883 10.5361 5.95834 10.8563 5.95834 11.3333V16C5.95834 16.477 5.95883 16.7972 5.97898 17.0438C5.99852 17.283 6.03343 17.3974 6.07188 17.4729C6.17175 17.6689 6.3311 17.8283 6.5271 17.9281C6.60257 17.9666 6.71697 18.0015 6.95624 18.021C7.20281 18.0412 7.52299 18.0417 8.00001 18.0417H12.6667C13.1437 18.0417 13.4639 18.0412 13.7104 18.021C13.9497 18.0015 14.0641 17.9666 14.1396 17.9281C14.3356 17.8283 14.4949 17.6689 14.5948 17.4729C14.6333 17.3974 14.6682 17.283 14.6877 17.0438C14.7079 16.7972 14.7083 16.477 14.7083 16V15.9583H12.8333C12.4882 15.9583 12.2083 15.6785 12.2083 15.3333C12.2083 14.9882 12.4882 14.7083 12.8333 14.7083H16C16.477 14.7083 16.7972 14.7078 17.0438 14.6877C17.283 14.6682 17.3974 14.6333 17.4729 14.5948C17.6689 14.4949 17.8283 14.3356 17.9281 14.1396C17.9666 14.0641 18.0015 13.9497 18.021 13.7104C18.0412 13.4639 18.0417 13.1437 18.0417 12.6667V8C18.0417 7.52298 18.0412 7.2028 18.021 6.95623C18.0015 6.71696 17.9666 6.60256 17.9281 6.52709C17.8283 6.33109 17.6689 6.17174 17.4729 6.07187C17.3974 6.03342 17.283 5.99851 17.0438 5.97896C16.7972 5.95882 16.477 5.95833 16 5.95833H11.3333C10.8563 5.95833 10.5361 5.95882 10.2896 5.97896C10.0503 5.99851 9.9359 6.03342 9.86044 6.07187C9.66444 6.17174 9.50508 6.33109 9.40521 6.52709C9.36676 6.60256 9.33186 6.71696 9.31231 6.95623C9.29216 7.2028 9.29168 7.52298 9.29168 8V11.1667C9.29168 11.5118 9.01186 11.7917 8.66668 11.7917C8.3215 11.7917 8.04168 11.5118 8.04168 11.1667Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77645\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const CloseIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_76820)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M6.34314 6.34314C6.63604 6.05025 7.11091 6.05025 7.4038 6.34314L12 10.9393L16.5962 6.34314C16.8891 6.05025 17.364 6.05025 17.6569 6.34314C17.9497 6.63604 17.9497 7.11091 17.6569 7.4038L13.0607 12L17.6569 16.5962C17.9497 16.8891 17.9497 17.364 17.6569 17.6569C17.364 17.9497 16.8891 17.9497 16.5962 17.6569L12 13.0607L7.4038 17.6569C7.11091 17.9497 6.63604 17.9497 6.34314 17.6569C6.05025 17.364 6.05025 16.8891 6.34314 16.5962L10.9393 12L6.34314 7.4038C6.05025 7.11091 6.05025 6.63604 6.34314 6.34314Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_76820\">\n        <rect width=\"24\" height=\"24\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const MoreIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3407_76065)\">\n      <path\n        d=\"M12 6.99999C11.5398 6.99999 11.1667 6.6269 11.1667 6.16666C11.1667 5.70642 11.5398 5.33333 12 5.33333C12.4602 5.33333 12.8333 5.70642 12.8333 6.16666C12.8333 6.6269 12.4602 6.99999 12 6.99999Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M12 12.8333C11.5398 12.8333 11.1667 12.4602 11.1667 12C11.1667 11.5398 11.5398 11.1667 12 11.1667C12.4602 11.1667 12.8333 11.5398 12.8333 12C12.8333 12.4602 12.4602 12.8333 12 12.8333Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M12 18.6667C11.5398 18.6667 11.1667 18.2936 11.1667 17.8333C11.1667 17.3731 11.5398 17 12 17C12.4602 17 12.8333 17.3731 12.8333 17.8333C12.8333 18.2936 12.4602 18.6667 12 18.6667Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M12 5.75001C11.7699 5.75001 11.5833 5.93655 11.5833 6.16667C11.5833 6.39679 11.7699 6.58334 12 6.58334C12.2301 6.58334 12.4167 6.39679 12.4167 6.16667C12.4167 5.93655 12.2301 5.75001 12 5.75001ZM10.75 6.16667C10.75 5.47632 11.3096 4.91667 12 4.91667C12.6904 4.91667 13.25 5.47632 13.25 6.16667C13.25 6.85703 12.6904 7.41667 12 7.41667C11.3096 7.41667 10.75 6.85703 10.75 6.16667ZM12 11.5833C11.7699 11.5833 11.5833 11.7699 11.5833 12C11.5833 12.2301 11.7699 12.4167 12 12.4167C12.2301 12.4167 12.4167 12.2301 12.4167 12C12.4167 11.7699 12.2301 11.5833 12 11.5833ZM10.75 12C10.75 11.3096 11.3096 10.75 12 10.75C12.6904 10.75 13.25 11.3096 13.25 12C13.25 12.6904 12.6904 13.25 12 13.25C11.3096 13.25 10.75 12.6904 10.75 12ZM12 17.4167C11.7699 17.4167 11.5833 17.6032 11.5833 17.8333C11.5833 18.0635 11.7699 18.25 12 18.25C12.2301 18.25 12.4167 18.0635 12.4167 17.8333C12.4167 17.6032 12.2301 17.4167 12 17.4167ZM10.75 17.8333C10.75 17.143 11.3096 16.5833 12 16.5833C12.6904 16.5833 13.25 17.143 13.25 17.8333C13.25 18.5237 12.6904 19.0833 12 19.0833C11.3096 19.0833 10.75 18.5237 10.75 17.8333Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3407_76065\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const LoadingBanner = html `\n  <svg\n    width=\"140\"\n    height=\"96\"\n    viewBox=\"0 0 140 96\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_4257_88403)\">\n      <g opacity=\"0.4\">\n        <g clip-path=\"url(#clip1_4257_88403)\">\n          <g clip-path=\"url(#clip2_4257_88403)\">\n            <g opacity=\"0.8\" filter=\"url(#filter0_f_4257_88403)\">\n              <ellipse\n                cx=\"45.5713\"\n                cy=\"61.2938\"\n                rx=\"45.5713\"\n                ry=\"61.2938\"\n                transform=\"matrix(-0.275152 -0.961401 0.994111 -0.108365 23.6692 80.3025)\"\n                fill=\"#C0BFC1\"\n              />\n            </g>\n            <g opacity=\"0.8\" filter=\"url(#filter1_f_4257_88403)\">\n              <ellipse\n                cx=\"49.6555\"\n                cy=\"50.1114\"\n                rx=\"49.6555\"\n                ry=\"50.1114\"\n                transform=\"matrix(-0.517539 -0.855659 0.945307 -0.326182 10.3975 87.9766)\"\n                fill=\"#C0BFC1\"\n              />\n            </g>\n            <g opacity=\"0.8\" filter=\"url(#filter2_f_4257_88403)\">\n              <path\n                d=\"M141.154 3.03247C167.539 22.8936 134.54 99.5878 124.212 92.7915C117.912 88.6456 113.733 60.4772 94.173 45.9086C81.6691 36.5955 56.6586 38.5939 41.1056 37.1878C1.22291 33.5821 114.548 -16.9943 141.154 3.03247Z\"\n                fill=\"#C0BFC1\"\n              />\n            </g>\n            <path\n              d=\"M78.5971 45.1263C77.9794 49.5216 81.121 53.5957 85.6131 54.2271C90.1053 54.8584 94.2481 51.808 94.8658 47.4128C95.4835 43.0175 92.342 38.9434 87.8498 38.312C83.3577 37.6807 79.2149 40.7311 78.5971 45.1263Z\"\n              fill=\"url(#paint0_linear_4257_88403)\"\n            />\n            <path\n              d=\"M120.378 78.3637L119.989 81.1303C119.731 82.9654 119.562 84.15 119.36 85.0413C119.166 85.8959 118.999 86.1992 118.895 86.3451C118.499 86.9002 117.932 87.3171 117.277 87.5363C117.105 87.5938 116.76 87.6677 115.867 87.6141C114.934 87.5582 113.723 87.3905 111.847 87.1268L80.6109 82.7369C78.735 82.4733 77.524 82.3006 76.6125 82.0973C75.7385 81.9024 75.4276 81.7365 75.278 81.6337C74.7087 81.2424 74.2794 80.6856 74.0516 80.0428C73.9917 79.8739 73.9142 79.5361 73.9635 78.6612C74.0149 77.7488 74.1789 76.5635 74.4369 74.7283L75.6584 66.0369C75.8058 65.9369 75.9505 65.8411 76.0924 65.7498C77.1899 65.0437 78.3629 64.4423 79.7464 64.1873C81.8083 63.8072 83.9443 64.0829 85.8427 64.9742C87.1166 65.5723 88.0991 66.452 88.9822 67.4137C89.5619 68.0451 90.1807 68.8058 90.8604 69.6691L94.5285 66.9912C95.9295 65.9684 97.1371 65.0867 98.1922 64.4415C99.3051 63.761 100.491 63.1868 101.879 62.9626C103.947 62.6286 106.075 62.9506 107.951 63.8817C109.21 64.5065 110.172 65.4058 111.033 66.385C111.033 66.385 117.277 74.3919 120.378 78.3637Z\"\n              fill=\"url(#paint1_linear_4257_88403)\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M18.0193 52.2289C18.1346 51.4086 18.8931 50.837 19.7134 50.9523L67.2463 57.6326C68.0667 57.7479 68.6382 58.5064 68.5229 59.3268C68.4076 60.1471 67.6491 60.7187 66.8288 60.6034L19.2959 53.9231C18.4755 53.8078 17.904 53.0493 18.0193 52.2289Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M21.5681 26.9771C21.7218 25.8833 22.7332 25.1212 23.827 25.2749L47.5934 28.6151C48.6872 28.7688 49.4493 29.7801 49.2956 30.874C49.1419 31.9678 48.1305 32.7299 47.0367 32.5762L23.2703 29.236C22.1765 29.0823 21.4144 28.0709 21.5681 26.9771Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M19.55 41.336C19.6653 40.5156 20.4238 39.9441 21.2442 40.0593L68.7771 46.7397C69.5974 46.8549 70.169 47.6135 70.0537 48.4338C69.9384 49.2542 69.1799 49.8258 68.3595 49.7105L20.8267 43.0301C20.0063 42.9149 19.4347 42.1564 19.55 41.336Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M16.4883 63.1219C16.6036 62.3015 17.3621 61.7299 18.1824 61.8452L65.7153 68.5255C66.5357 68.6408 67.1072 69.3993 66.9919 70.2197C66.8766 71.0401 66.1181 71.6116 65.2978 71.4963L17.7649 64.816C16.9445 64.7007 16.373 63.9422 16.4883 63.1219Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M15.2358 72.0343C15.3511 71.2139 16.1096 70.6424 16.93 70.7576L64.4628 77.438C65.2832 77.5533 65.8548 78.3118 65.7395 79.1321C65.6242 79.9525 64.8657 80.5241 64.0453 80.4088L16.5125 73.7285C15.6921 73.6132 15.1205 72.8547 15.2358 72.0343Z\"\n              fill=\"white\"\n              fill-opacity=\"0.4\"\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_f_4257_88403\"\n        x=\"-14.1589\"\n        y=\"-38.4709\"\n        width=\"172.444\"\n        height=\"136.638\"\n        filterUnits=\"userSpaceOnUse\"\n        color-interpolation-filters=\"sRGB\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"BackgroundImageFix\"\n          result=\"shape\"\n        />\n        <feGaussianBlur\n          stdDeviation=\"12\"\n          result=\"effect1_foregroundBlur_4257_88403\"\n        />\n      </filter>\n      <filter\n        id=\"filter1_f_4257_88403\"\n        x=\"-45.8333\"\n        y=\"-40.3932\"\n        width=\"155.805\"\n        height=\"139.072\"\n        filterUnits=\"userSpaceOnUse\"\n        color-interpolation-filters=\"sRGB\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"BackgroundImageFix\"\n          result=\"shape\"\n        />\n        <feGaussianBlur\n          stdDeviation=\"12\"\n          result=\"effect1_foregroundBlur_4257_88403\"\n        />\n      </filter>\n      <filter\n        id=\"filter2_f_4257_88403\"\n        x=\"8.68726\"\n        y=\"-25.6425\"\n        width=\"166.468\"\n        height=\"142.859\"\n        filterUnits=\"userSpaceOnUse\"\n        color-interpolation-filters=\"sRGB\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"BackgroundImageFix\"\n          result=\"shape\"\n        />\n        <feGaussianBlur\n          stdDeviation=\"12\"\n          result=\"effect1_foregroundBlur_4257_88403\"\n        />\n      </filter>\n      <linearGradient\n        id=\"paint0_linear_4257_88403\"\n        x1=\"102.492\"\n        y1=\"40.3698\"\n        x2=\"96.2289\"\n        y2=\"84.9319\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop offset=\"0.578125\" stop-color=\"white\" />\n        <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\" />\n      </linearGradient>\n      <linearGradient\n        id=\"paint1_linear_4257_88403\"\n        x1=\"102.492\"\n        y1=\"40.3698\"\n        x2=\"96.2289\"\n        y2=\"84.9319\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop offset=\"0.578125\" stop-color=\"white\" />\n        <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\" />\n      </linearGradient>\n      <clipPath id=\"clip0_4257_88403\">\n        <rect width=\"140\" height=\"96\" fill=\"white\" />\n      </clipPath>\n      <clipPath id=\"clip1_4257_88403\">\n        <rect\n          x=\"11.7563\"\n          y=\"3.38196\"\n          width=\"130\"\n          height=\"88\"\n          rx=\"4\"\n          transform=\"rotate(8 11.7563 3.38196)\"\n          fill=\"white\"\n        />\n      </clipPath>\n      <clipPath id=\"clip2_4257_88403\">\n        <rect\n          width=\"130\"\n          height=\"88\"\n          fill=\"white\"\n          transform=\"translate(11.7563 3.38196) rotate(8)\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const DarkLoadingBanner = html `\n  <svg\n    width=\"140\"\n    height=\"96\"\n    viewBox=\"0 0 140 96\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_4391_90250)\">\n      <g opacity=\"0.4\">\n        <g clip-path=\"url(#clip1_4391_90250)\">\n          <g clip-path=\"url(#clip2_4391_90250)\">\n            <g opacity=\"0.8\" filter=\"url(#filter0_f_4391_90250)\">\n              <ellipse\n                cx=\"45.5713\"\n                cy=\"61.2938\"\n                rx=\"45.5713\"\n                ry=\"61.2938\"\n                transform=\"matrix(-0.275152 -0.961401 0.994111 -0.108365 23.6692 80.3025)\"\n                fill=\"#3E3E3F\"\n              />\n            </g>\n            <g opacity=\"0.8\" filter=\"url(#filter1_f_4391_90250)\">\n              <ellipse\n                cx=\"49.6555\"\n                cy=\"50.1114\"\n                rx=\"49.6555\"\n                ry=\"50.1114\"\n                transform=\"matrix(-0.517539 -0.855659 0.945307 -0.326182 10.3975 87.9766)\"\n                fill=\"#3E3E3F\"\n              />\n            </g>\n            <g opacity=\"0.8\" filter=\"url(#filter2_f_4391_90250)\">\n              <path\n                d=\"M141.154 3.03247C167.539 22.8936 134.54 99.5878 124.212 92.7915C117.912 88.6456 113.733 60.4772 94.173 45.9086C81.6691 36.5955 56.6586 38.5939 41.1056 37.1878C1.22291 33.5821 114.548 -16.9943 141.154 3.03247Z\"\n                fill=\"#3E3E3F\"\n              />\n            </g>\n            <path\n              d=\"M78.5971 45.1263C77.9794 49.5216 81.121 53.5957 85.6131 54.2271C90.1053 54.8584 94.2481 51.808 94.8658 47.4128C95.4835 43.0175 92.342 38.9434 87.8498 38.312C83.3577 37.6807 79.2149 40.7311 78.5971 45.1263Z\"\n              fill=\"url(#paint0_linear_4391_90250)\"\n            />\n            <path\n              d=\"M120.378 78.3637L119.989 81.1303C119.731 82.9654 119.562 84.15 119.36 85.0413C119.166 85.8959 118.999 86.1992 118.895 86.3451C118.499 86.9002 117.932 87.3171 117.277 87.5363C117.105 87.5938 116.76 87.6677 115.867 87.6141C114.934 87.5582 113.723 87.3905 111.847 87.1268L80.6109 82.7369C78.735 82.4733 77.524 82.3006 76.6125 82.0973C75.7385 81.9024 75.4276 81.7365 75.278 81.6337C74.7087 81.2424 74.2794 80.6856 74.0516 80.0428C73.9917 79.8739 73.9142 79.5361 73.9635 78.6612C74.0149 77.7488 74.1789 76.5635 74.4369 74.7283L75.6584 66.0369C75.8058 65.9369 75.9505 65.8411 76.0924 65.7498C77.1899 65.0437 78.3629 64.4423 79.7464 64.1873C81.8083 63.8072 83.9443 64.0829 85.8427 64.9742C87.1166 65.5723 88.0991 66.452 88.9822 67.4137C89.5619 68.0451 90.1807 68.8058 90.8604 69.6691L94.5285 66.9912C95.9295 65.9684 97.1371 65.0867 98.1922 64.4415C99.3051 63.761 100.491 63.1868 101.879 62.9626C103.947 62.6286 106.075 62.9506 107.951 63.8817C109.21 64.5065 110.172 65.4058 111.033 66.385C111.033 66.385 117.277 74.3919 120.378 78.3637Z\"\n              fill=\"url(#paint1_linear_4391_90250)\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M18.0193 52.2289C18.1346 51.4086 18.8931 50.837 19.7134 50.9523L67.2463 57.6326C68.0667 57.7479 68.6382 58.5064 68.5229 59.3268C68.4076 60.1471 67.6491 60.7187 66.8288 60.6034L19.2959 53.9231C18.4755 53.8078 17.904 53.0493 18.0193 52.2289Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M21.5681 26.9771C21.7218 25.8833 22.7332 25.1212 23.827 25.2749L47.5934 28.6151C48.6872 28.7688 49.4493 29.7801 49.2956 30.874C49.1419 31.9678 48.1305 32.7299 47.0367 32.5762L23.2703 29.236C22.1765 29.0823 21.4144 28.0709 21.5681 26.9771Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M19.55 41.336C19.6653 40.5156 20.4238 39.9441 21.2442 40.0593L68.7771 46.7397C69.5974 46.8549 70.169 47.6135 70.0537 48.4338C69.9384 49.2542 69.1799 49.8258 68.3595 49.7105L20.8267 43.0301C20.0063 42.9149 19.4347 42.1564 19.55 41.336Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M16.4883 63.1219C16.6036 62.3015 17.3621 61.7299 18.1824 61.8452L65.7153 68.5255C66.5357 68.6408 67.1072 69.3993 66.9919 70.2197C66.8766 71.0401 66.1181 71.6116 65.2978 71.4963L17.7649 64.816C16.9445 64.7007 16.373 63.9422 16.4883 63.1219Z\"\n              fill=\"white\"\n              fill-opacity=\"0.8\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M15.2358 72.0344C15.3511 71.214 16.1096 70.6424 16.93 70.7577L64.4628 77.438C65.2832 77.5533 65.8548 78.3118 65.7395 79.1322C65.6242 79.9525 64.8657 80.5241 64.0453 80.4088L16.5125 73.7285C15.6921 73.6132 15.1205 72.8547 15.2358 72.0344Z\"\n              fill=\"white\"\n              fill-opacity=\"0.4\"\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_f_4391_90250\"\n        x=\"-14.1589\"\n        y=\"-38.4709\"\n        width=\"172.444\"\n        height=\"136.638\"\n        filterUnits=\"userSpaceOnUse\"\n        color-interpolation-filters=\"sRGB\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"BackgroundImageFix\"\n          result=\"shape\"\n        />\n        <feGaussianBlur\n          stdDeviation=\"12\"\n          result=\"effect1_foregroundBlur_4391_90250\"\n        />\n      </filter>\n      <filter\n        id=\"filter1_f_4391_90250\"\n        x=\"-45.8333\"\n        y=\"-40.3932\"\n        width=\"155.805\"\n        height=\"139.072\"\n        filterUnits=\"userSpaceOnUse\"\n        color-interpolation-filters=\"sRGB\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"BackgroundImageFix\"\n          result=\"shape\"\n        />\n        <feGaussianBlur\n          stdDeviation=\"12\"\n          result=\"effect1_foregroundBlur_4391_90250\"\n        />\n      </filter>\n      <filter\n        id=\"filter2_f_4391_90250\"\n        x=\"8.68726\"\n        y=\"-25.6425\"\n        width=\"166.468\"\n        height=\"142.859\"\n        filterUnits=\"userSpaceOnUse\"\n        color-interpolation-filters=\"sRGB\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"BackgroundImageFix\"\n          result=\"shape\"\n        />\n        <feGaussianBlur\n          stdDeviation=\"12\"\n          result=\"effect1_foregroundBlur_4391_90250\"\n        />\n      </filter>\n      <linearGradient\n        id=\"paint0_linear_4391_90250\"\n        x1=\"102.492\"\n        y1=\"40.3698\"\n        x2=\"96.2289\"\n        y2=\"84.9319\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop offset=\"0.578125\" stop-color=\"white\" />\n        <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\" />\n      </linearGradient>\n      <linearGradient\n        id=\"paint1_linear_4391_90250\"\n        x1=\"102.492\"\n        y1=\"40.3698\"\n        x2=\"96.2289\"\n        y2=\"84.9319\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop offset=\"0.578125\" stop-color=\"white\" />\n        <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\" />\n      </linearGradient>\n      <clipPath id=\"clip0_4391_90250\">\n        <rect width=\"140\" height=\"96\" fill=\"white\" />\n      </clipPath>\n      <clipPath id=\"clip1_4391_90250\">\n        <rect\n          x=\"11.7563\"\n          y=\"3.38196\"\n          width=\"130\"\n          height=\"88\"\n          rx=\"4\"\n          transform=\"rotate(8 11.7563 3.38196)\"\n          fill=\"white\"\n        />\n      </clipPath>\n      <clipPath id=\"clip2_4391_90250\">\n        <rect\n          width=\"130\"\n          height=\"88\"\n          fill=\"white\"\n          transform=\"translate(11.7563 3.38196) rotate(8)\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n`;\n//# sourceMappingURL=icons.js.map","import { defaultBookmarkProps } from './bookmark-model.js';\n// Result is boolean used to record whether the meta data is crawled\nexport async function reloadBookmarkBlock(model, bookmarkElement, force = false) {\n    // @ts-ignore\n    if (window?.apis?.ui?.getBookmarkDataByLink) {\n        if ((model.crawled || !model.url) && !force) {\n            return;\n        }\n        bookmarkElement.loading = true;\n        // This method is get website's metaData by link\n        // And only exists in the AFFiNE client\n        // @ts-ignore\n        const metaData = (await window.apis.ui.getBookmarkDataByLink(model.url));\n        // check is block exist\n        if (!model.page.getBlockById(model.id)) {\n            return;\n        }\n        model.page.withoutTransact(() => {\n            model.page.updateBlock(model, {\n                ...metaData,\n                url: model.url,\n                crawled: true,\n            });\n        });\n        bookmarkElement.loading = false;\n    }\n}\nexport function cloneBookmarkProperties(model) {\n    return Object.keys(defaultBookmarkProps).reduce((props, key) => {\n        props[key] = model[key];\n        return props;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { WithDisposable } from '@blocksuite/lit';\nimport { createPopper } from '@popperjs/core';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { toast } from '../..//components/toast.js';\nimport { copyBlocks } from '../../__internal__/clipboard/index.js';\nimport { getBlockElementByModel } from '../../__internal__/index.js';\nimport { CopyIcon, DeleteIcon, DuplicateIcon, RefreshIcon, } from '../images/icons.js';\nimport { cloneBookmarkProperties, reloadBookmarkBlock } from '../utils.js';\nexport function createBookmarkOperationMenu(reference, props) {\n    const menu = document.createElement('bookmark-operation-menu');\n    menu.model = props.model;\n    menu.onSelected = props.onSelected;\n    reference.appendChild(menu);\n    const popper = createPopper(reference, menu, {\n        placement: 'top-start',\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset: [0, 6],\n                },\n            },\n        ],\n    });\n    return {\n        element: menu,\n        dispose: () => {\n            menu.remove();\n            popper.destroy();\n        },\n    };\n}\nconst operations = [\n    {\n        type: 'copy',\n        icon: CopyIcon,\n        label: 'Copy original link',\n        action: (model, callback) => {\n            copyBlocks({\n                type: 'Block',\n                models: [model],\n                startOffset: 0,\n                endOffset: 0,\n            });\n            toast('Copied link to clipboard');\n            callback?.('copy');\n        },\n    },\n    {\n        type: 'duplicate',\n        icon: DuplicateIcon,\n        label: 'Duplicate',\n        action: (model, callback) => {\n            const { page } = model;\n            const parent = page.getParent(model);\n            const index = parent?.children.indexOf(model);\n            const clonedProps = cloneBookmarkProperties(model);\n            page.addBlock('affine:bookmark', clonedProps, parent, index);\n            callback?.('duplicate');\n        },\n    },\n    {\n        type: 'reload',\n        icon: RefreshIcon,\n        label: 'Reload',\n        action: (model, callback) => {\n            reloadBookmarkBlock(model, getBlockElementByModel(model), true);\n            callback?.('reload');\n        },\n    },\n    {\n        type: 'delete',\n        icon: DeleteIcon,\n        label: 'Delete',\n        action: (model, callback) => {\n            model.page.deleteBlock(model);\n            callback?.('delete');\n        },\n    },\n];\nlet BookmarkOperationMenu = class BookmarkOperationMenu extends WithDisposable(LitElement) {\n    connectedCallback() {\n        super.connectedCallback();\n    }\n    render() {\n        const menuItems = repeat(operations, ({ type }) => type, ({ type, icon, label, action, divider }) => {\n            return html `<icon-button\n            width=\"130px\"\n            height=\"32px\"\n            class=\"menu-item ${type}\"\n            @click=${() => {\n                action(this.model, this.onSelected, this);\n            }}\n          >\n            ${icon} ${label}\n          </icon-button>\n          ${divider ? html `<div class=\"divider\"></div>` : nothing} `;\n        });\n        return html ` <div class=\"bookmark-operation-menu\">${menuItems}</div> `;\n    }\n};\nBookmarkOperationMenu.styles = css `\n    .bookmark-operation-menu {\n      border-radius: 8px 8px 8px 0;\n      padding: 8px;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n    }\n    .menu-item {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      fill: var(--affine-icon-color);\n      color: var(--affine-text-primary-color);\n    }\n    .menu-item:hover {\n      background: var(--affine-hover-color);\n      fill: var(--affine-primary-color);\n      color: var(--affine-primary-color);\n    }\n    .menu-item svg {\n      margin: 0 8px;\n    }\n  `;\n__decorate([\n    property()\n], BookmarkOperationMenu.prototype, \"model\", void 0);\n__decorate([\n    property()\n], BookmarkOperationMenu.prototype, \"root\", void 0);\n__decorate([\n    property()\n], BookmarkOperationMenu.prototype, \"onSelected\", void 0);\n__decorate([\n    query('.bookmark-bar')\n], BookmarkOperationMenu.prototype, \"formatQuickBarElement\", void 0);\nBookmarkOperationMenu = __decorate([\n    customElement('bookmark-operation-menu')\n], BookmarkOperationMenu);\nexport { BookmarkOperationMenu };\n//# sourceMappingURL=bookmark-operation-popper.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/button.js';\nimport { WithDisposable } from '@blocksuite/lit';\nimport {} from '@blocksuite/store';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport * as Y from 'yjs';\nimport { tooltipStyle } from '../../components/tooltip/tooltip.js';\nimport { CaptionIcon, EditIcon, LinkIcon, MoreIcon } from '../images/icons.js';\nimport { createBookmarkOperationMenu } from './bookmark-operation-popper.js';\nconst config = [\n    {\n        type: 'link',\n        icon: LinkIcon,\n        tooltip: 'Turn into Link view',\n        action: (model, callback) => {\n            const { page } = model;\n            const parent = page.getParent(model);\n            const index = parent?.children.indexOf(model);\n            const yText = new Y.Text();\n            const insert = model.title || model.caption || model.url;\n            yText.insert(0, insert);\n            yText.format(0, insert.length, { link: model.url });\n            const text = new page.Text(yText);\n            page.addBlock('affine:paragraph', {\n                text,\n            }, parent, index);\n            model.page.deleteBlock(model);\n            callback?.('link');\n        },\n        divider: true,\n    },\n    {\n        type: 'caption',\n        icon: CaptionIcon,\n        tooltip: 'Add Caption',\n        action: (model, callback) => {\n            callback?.('caption');\n        },\n    },\n    {\n        type: 'edit',\n        icon: EditIcon,\n        tooltip: 'Edit',\n        action: (model, callback) => {\n            callback?.('edit');\n        },\n        divider: true,\n    },\n];\nlet BookmarkToolbar = class BookmarkToolbar extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this._menu = null;\n    }\n    _toggleMenu() {\n        if (this._menu) {\n            this._menu.dispose();\n            this._menu = null;\n        }\n        else {\n            this._menu = createBookmarkOperationMenu(this.moreButton, {\n                model: this.model,\n                onSelected: type => {\n                    this._toggleMenu();\n                    this.onSelected?.(type);\n                },\n            });\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n    }\n    render() {\n        const buttons = repeat(config, ({ type }) => type, ({ type, icon, tooltip, action, divider }) => {\n            return html `<icon-button\n            width=\"32px\"\n            height=\"32px\"\n            class=\"bookmark-toolbar-button has-tool-tip ${type}\"\n            @click=${() => {\n                action(this.model, this.onSelected, this);\n            }}\n          >\n            ${icon}\n            <tool-tip inert role=\"tooltip\">${tooltip}</tool-tip>\n          </icon-button>\n          ${divider ? html `<div class=\"divider\"></div>` : nothing} `;\n        });\n        return html `\n      <div class=\"bookmark-bar\">\n        ${buttons}\n\n        <div class=\"more-button-wrapper\">\n          <icon-button\n            width=\"32px\"\n            height=\"32px\"\n            class=\"has-tool-tip more-button\"\n            @click=${() => {\n            this._toggleMenu();\n        }}\n          >\n            ${MoreIcon}\n            <tool-tip inert role=\"tooltip\">More</tool-tip>\n          </icon-button>\n        </div>\n      </div>\n    `;\n    }\n};\nBookmarkToolbar.styles = css `\n    ${tooltipStyle}\n    .bookmark-bar {\n      box-sizing: border-box;\n      position: absolute;\n      right: 0;\n      top: -40px;\n      display: flex;\n      align-items: center;\n      padding: 4px 8px;\n      gap: 4px;\n      height: 40px;\n\n      border-radius: 8px;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      z-index: var(--affine-z-index-popover);\n      user-select: none;\n    }\n    .divider {\n      width: 1px;\n      height: 24px;\n      background-color: var(--affine-border-color);\n    }\n  `;\n__decorate([\n    property()\n], BookmarkToolbar.prototype, \"model\", void 0);\n__decorate([\n    property()\n], BookmarkToolbar.prototype, \"onSelected\", void 0);\n__decorate([\n    query('.bookmark-bar')\n], BookmarkToolbar.prototype, \"formatQuickBarElement\", void 0);\n__decorate([\n    query('.more-button-wrapper')\n], BookmarkToolbar.prototype, \"moreButton\", void 0);\nBookmarkToolbar = __decorate([\n    customElement('bookmark-toolbar')\n], BookmarkToolbar);\nexport { BookmarkToolbar };\n//# sourceMappingURL=bookmark-toolbar.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/button.js';\nimport '../../components/portal.js';\nimport '../../components/button.js';\nimport { WithDisposable } from '@blocksuite/lit';\nimport {} from '@blocksuite/store';\nimport { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { CloseIcon } from '../images/icons.js';\nexport const bookmarkModalStyles = html `\n  <style>\n    .bookmark-modal-container {\n      position: fixed;\n      width: 100vw;\n      height: 100vh;\n      display: flex;\n    }\n    .bookmark-modal-mask {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n    }\n    .bookmark-modal-wrapper {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n\n      width: 360px;\n      height: 260px;\n      background: var(--affine-background-primary-color);\n      box-shadow: var(--affine-menu-shadow);\n      border-radius: var(--affine-popover-radius);\n      padding: 36px 40px 24px;\n    }\n    .bookmark-modal-close-button {\n      position: absolute;\n      right: 20px;\n      top: 12px;\n    }\n    .bookmark-modal-title {\n      font-size: var(--affine-font-h-6);\n      font-weight: 600;\n    }\n    .bookmark-modal-desc {\n      font-size: var(--affine-font-base);\n      margin-top: 20px;\n      caret-color: var(--affine-primary-color);\n    }\n    .bookmark-input {\n      width: 100%;\n      height: 32px;\n      font-size: var(--affine-font-base);\n      margin-top: 20px;\n      caret-color: var(--affine-primary-color);\n      transition: border-color 0.15s;\n\n      line-height: 22px;\n      padding: 8px 12px;\n      color: var(--affine-text-primary-color);\n      border: 1px solid;\n      border-color: var(--affine-border-color);\n      background-color: var(--affine-white);\n      border-radius: 10px;\n      outline: medium;\n    }\n    .bookmark-input:focus {\n      border-color: var(--affine-primary-color);\n    }\n\n    .bookmark-input::placeholder {\n      color: var(--affine-placeholder-color);\n      font-size: var(--affine-font-base);\n    }\n\n    .bookmark-modal-footer {\n      display: flex;\n      justify-content: flex-end;\n      margin-top: 40px;\n    }\n    .bookmark-confirm-button {\n      padding: 4px 20px;\n      height: 32px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-size: var(--affine-font-base);\n      background: var(--affine-primary-color);\n      color: var(--affine-white);\n      border-color: var(--affine-primary-color);\n      border-radius: 8px;\n      cursor: pointer;\n    }\n  </style>\n`;\nlet BookmarkEditModal = class BookmarkEditModal extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this._modalKeyboardListener = (e) => {\n            if (e.key === 'Enter') {\n                this._onConfirm();\n            }\n            if (e.key === 'Escape') {\n                this.onCancel?.();\n            }\n        };\n    }\n    get id() {\n        return `bookmark-modal-${this.model.id.split(':')[0]}`;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        document.addEventListener('keydown', this._modalKeyboardListener);\n        requestAnimationFrame(() => {\n            const titleInput = document.querySelector(`#${this.id} input.title`);\n            titleInput.focus();\n            titleInput.setSelectionRange(0, titleInput.value.length);\n        });\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        document.removeEventListener('keydown', this._modalKeyboardListener);\n    }\n    _onConfirm() {\n        const titleInput = document.querySelector(`#${this.id} input.title`);\n        const descInput = document.querySelector(`#${this.id} input.description`);\n        this.model.page.updateBlock(this.model, {\n            title: titleInput.value,\n            description: descInput.value,\n        });\n        this.onConfirm?.();\n    }\n    render() {\n        const modal = html `${bookmarkModalStyles}\n      <div class=\"bookmark-modal\" id=\"${this.id}\">\n        <div\n          class=\"bookmark-modal-mask\"\n          @click=${() => {\n            this.onCancel?.();\n        }}\n        ></div>\n        <div class=\"bookmark-modal-wrapper\">\n          <icon-button\n            width=\"32px\"\n            height=\"32px\"\n            class=\"bookmark-modal-close-button\"\n            @click=${() => {\n            this.onCancel?.();\n        }}\n            >${CloseIcon}</icon-button\n          >\n\n          <div class=\"bookmark-modal-title\">Edit</div>\n          <input\n            type=\"text\"\n            class=\"bookmark-input title\"\n            placeholder=\"Title\"\n            value=${this.model.title || 'Bookmark'}\n            tabindex=\"1\"\n          />\n          <input\n            type=\"text\"\n            class=\"bookmark-input description\"\n            placeholder=\"Description\"\n            value=${this.model.description || this.model.url}\n            tabindex=\"2\"\n          />\n          <div class=\"bookmark-modal-footer\">\n            <div\n              class=\"bookmark-confirm-button\"\n              tabindex=\"3\"\n              @click=${() => {\n            this._onConfirm();\n        }}\n            >\n              Save\n            </div>\n          </div>\n        </div>\n      </div>`;\n        return html `<affine-portal .template=${modal}></affine-portal>`;\n    }\n};\n__decorate([\n    property()\n], BookmarkEditModal.prototype, \"model\", void 0);\n__decorate([\n    property()\n], BookmarkEditModal.prototype, \"onCancel\", void 0);\n__decorate([\n    property()\n], BookmarkEditModal.prototype, \"onConfirm\", void 0);\nBookmarkEditModal = __decorate([\n    customElement('bookmark-edit-modal')\n], BookmarkEditModal);\nexport { BookmarkEditModal };\n//# sourceMappingURL=bookmark-edit-modal.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/button.js';\nimport '../../components/portal.js';\nimport '../../components/button.js';\nimport { WithDisposable } from '@blocksuite/lit';\nimport {} from '@blocksuite/store';\nimport { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { toast } from '../..//components/toast.js';\nimport { CloseIcon } from '../images/icons.js';\nimport { bookmarkModalStyles } from './bookmark-edit-modal.js';\nlet BookmarkCreateModal = class BookmarkCreateModal extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this._modalKeyboardListener = (e) => {\n            if (e.key === 'Enter') {\n                this._onConfirm();\n            }\n            if (e.key === 'Escape') {\n                this.onCancel?.();\n            }\n        };\n    }\n    get id() {\n        return `bookmark-create-modal-${this.model.id.split(':')[0]}`;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        requestAnimationFrame(() => {\n            const linkInput = document.querySelector(`#${this.id} input.link`);\n            linkInput.focus();\n        });\n        document.addEventListener('keydown', this._modalKeyboardListener);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        document.removeEventListener('keydown', this._modalKeyboardListener);\n    }\n    _onConfirm() {\n        const linkInput = document.querySelector(`#${this.id} input.link`);\n        if (!linkInput.value) {\n            toast('Bookmark url can not be empty');\n            return;\n        }\n        this.model.page.updateBlock(this.model, {\n            url: linkInput.value,\n        });\n        this.onConfirm?.();\n    }\n    render() {\n        const modal = html `${bookmarkModalStyles}\n      <div class=\"bookmark-modal\" id=\"${this.id}\">\n        <div\n          class=\"bookmark-modal-mask\"\n          @click=${() => {\n            this.onCancel?.();\n            this.model.page.deleteBlock(this.model);\n        }}\n        ></div>\n        <div class=\"bookmark-modal-wrapper\" style=\"width:480px\">\n          <icon-button\n            width=\"32px\"\n            height=\"32px\"\n            class=\"bookmark-modal-close-button\"\n            @click=${() => {\n            this.onCancel?.();\n            this.model.page.deleteBlock(this.model);\n        }}\n            >${CloseIcon}</icon-button\n          >\n\n          <div class=\"bookmark-modal-title\">Bookmark</div>\n          <div class=\"bookmark-modal-desc\">\n            Create a Bookmark that previews a link in card view.\n          </div>\n          <input\n            tabindex=\"1\"\n            type=\"text\"\n            class=\"bookmark-input link\"\n            placeholder=\"Input in https://...\"\n          />\n\n          <div class=\"bookmark-modal-footer\">\n            <div\n              tabindex=\"2\"\n              class=\"bookmark-confirm-button\"\n              @click=${() => this._onConfirm()}\n            >\n              Confirm\n            </div>\n          </div>\n        </div>\n      </div>`;\n        return html `<affine-portal .template=${modal}></affine-portal>`;\n    }\n};\n__decorate([\n    property()\n], BookmarkCreateModal.prototype, \"model\", void 0);\n__decorate([\n    property()\n], BookmarkCreateModal.prototype, \"onCancel\", void 0);\n__decorate([\n    property()\n], BookmarkCreateModal.prototype, \"onConfirm\", void 0);\nBookmarkCreateModal = __decorate([\n    customElement('bookmark-create-modal')\n], BookmarkCreateModal);\nexport { BookmarkCreateModal };\n//# sourceMappingURL=bookmark-create-modal.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nlet Loader = class Loader extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.size = '50px';\n        this.color = 'blue';\n    }\n    firstUpdated() {\n        this.updateComplete.then(() => {\n            const { size, color } = this;\n            this.style.setProperty('--loader-size', typeof size === 'string' ? size : `${size}px`);\n            this.style.setProperty('--loader-color', color);\n        });\n    }\n    render() {\n        return html `<div class=\"bookmark-loader-wrapper\">\n      <svg class=\"bookmark-loader\" x=\"0px\" y=\"0px\" viewBox=\"0 0 150 150\">\n        <circle class=\"bookmark-loader-block\" cx=\"75\" cy=\"75\" r=\"60\" />\n      </svg>\n    </div>`;\n    }\n};\nLoader.styles = css `\n    .bookmark-loader-wrapper {\n      display: flex;\n      width: var(--loader-size);\n      height: var(--loader-size);\n    }\n    .bookmark-loader {\n      width: var(--loader-size);\n      animation: loading 3s linear infinite;\n    }\n    .bookmark-loader-block {\n      animation: loading-circle 2s linear infinite;\n      stroke-dashoffset: 0;\n      stroke-dasharray: 300;\n      stroke-width: 15;\n      stroke-miterlimit: 10;\n      stroke-linecap: round;\n      stroke: var(--loader-color);\n      fill: transparent;\n    }\n\n    @keyframes loading {\n      0% {\n        transform: rotate(0);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n    @keyframes loading-circle {\n      0% {\n        stroke-dashoffset: 0;\n      }\n      100% {\n        stroke-dashoffset: -600;\n      }\n    }\n  `;\n__decorate([\n    property()\n], Loader.prototype, \"size\", void 0);\n__decorate([\n    property()\n], Loader.prototype, \"color\", void 0);\nLoader = __decorate([\n    customElement('bookmark-loader')\n], Loader);\nexport { Loader };\n//# sourceMappingURL=loader.js.map","import { BaseService } from '../__internal__/service/index.js';\nimport { cloneBookmarkProperties } from './utils.js';\nexport class BookmarkBlockService extends BaseService {\n    block2html(block, { childText = '', begin, end } = {}) {\n        return block.url;\n    }\n    block2Text(block, { childText = '', begin = 0, end } = {}) {\n        return block.url;\n    }\n    block2Json(block, begin, end) {\n        const clonedProps = cloneBookmarkProperties(block);\n        return {\n            flavour: block.flavour,\n            children: [],\n            ...clonedProps,\n        };\n    }\n}\n//# sourceMappingURL=bookmark-service.js.map","import { html } from 'lit';\nexport const DefaultBanner = html `<svg\n  width=\"140\"\n  height=\"96\"\n  viewBox=\"0 0 140 96\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g clip-path=\"url(#clip0_3433_80247)\">\n    <g opacity=\"0.4\">\n      <g clip-path=\"url(#clip1_3433_80247)\">\n        <g clip-path=\"url(#clip2_3433_80247)\">\n          <g opacity=\"0.8\" filter=\"url(#filter0_f_3433_80247)\">\n            <ellipse\n              cx=\"45.5713\"\n              cy=\"61.2938\"\n              rx=\"45.5713\"\n              ry=\"61.2938\"\n              transform=\"matrix(-0.275152 -0.961401 0.994111 -0.108365 23.6692 80.3025)\"\n              fill=\"#5076FF\"\n            />\n          </g>\n          <g opacity=\"0.8\" filter=\"url(#filter1_f_3433_80247)\">\n            <ellipse\n              cx=\"49.6555\"\n              cy=\"50.1114\"\n              rx=\"49.6555\"\n              ry=\"50.1114\"\n              transform=\"matrix(-0.517539 -0.855659 0.945307 -0.326182 10.3975 87.9766)\"\n              fill=\"#77FFCE\"\n            />\n          </g>\n          <g opacity=\"0.8\" filter=\"url(#filter2_f_3433_80247)\">\n            <path\n              d=\"M141.154 3.03247C167.539 22.8936 134.54 99.5878 124.212 92.7915C117.912 88.6456 113.733 60.4772 94.173 45.9086C81.6691 36.5955 56.6586 38.5939 41.1056 37.1878C1.22291 33.5821 114.548 -16.9943 141.154 3.03247Z\"\n              fill=\"#35B7E0\"\n            />\n          </g>\n          <path\n            d=\"M78.5971 45.1263C77.9794 49.5216 81.121 53.5957 85.6131 54.2271C90.1053 54.8584 94.2481 51.808 94.8658 47.4128C95.4835 43.0175 92.342 38.9434 87.8498 38.312C83.3577 37.6807 79.2149 40.7311 78.5971 45.1263Z\"\n            fill=\"url(#paint0_linear_3433_80247)\"\n          />\n          <path\n            d=\"M120.378 78.3637L119.989 81.1303C119.731 82.9654 119.562 84.15 119.36 85.0413C119.166 85.8959 118.999 86.1992 118.895 86.3451C118.499 86.9002 117.932 87.3171 117.277 87.5363C117.105 87.5938 116.76 87.6677 115.867 87.6141C114.934 87.5582 113.723 87.3905 111.847 87.1268L80.6109 82.7369C78.735 82.4733 77.524 82.3006 76.6125 82.0973C75.7385 81.9024 75.4276 81.7365 75.278 81.6337C74.7087 81.2424 74.2794 80.6856 74.0516 80.0428C73.9917 79.8739 73.9142 79.5361 73.9635 78.6612C74.0149 77.7488 74.1789 76.5635 74.4369 74.7283L75.6584 66.0369C75.8058 65.9369 75.9505 65.8411 76.0924 65.7498C77.1899 65.0437 78.3629 64.4423 79.7464 64.1873C81.8083 63.8072 83.9443 64.0829 85.8427 64.9742C87.1166 65.5723 88.0991 66.452 88.9822 67.4137C89.5619 68.0451 90.1807 68.8058 90.8604 69.6691L94.5285 66.9912C95.9295 65.9684 97.1371 65.0867 98.1922 64.4415C99.3051 63.761 100.491 63.1868 101.879 62.9626C103.947 62.6286 106.075 62.9506 107.951 63.8817C109.21 64.5065 110.172 65.4058 111.033 66.385C111.033 66.385 117.277 74.3919 120.378 78.3637Z\"\n            fill=\"url(#paint1_linear_3433_80247)\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M18.0193 52.2289C18.1346 51.4086 18.8931 50.837 19.7134 50.9523L67.2463 57.6326C68.0667 57.7479 68.6382 58.5064 68.5229 59.3268C68.4076 60.1471 67.6491 60.7187 66.8288 60.6034L19.2959 53.9231C18.4755 53.8078 17.904 53.0493 18.0193 52.2289Z\"\n            fill=\"white\"\n            fill-opacity=\"0.8\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M21.5681 26.9771C21.7218 25.8833 22.7332 25.1212 23.827 25.2749L47.5934 28.6151C48.6872 28.7688 49.4493 29.7801 49.2956 30.874C49.1419 31.9678 48.1305 32.7299 47.0367 32.5762L23.2703 29.236C22.1765 29.0823 21.4144 28.0709 21.5681 26.9771Z\"\n            fill=\"white\"\n            fill-opacity=\"0.8\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M19.55 41.336C19.6653 40.5156 20.4238 39.9441 21.2442 40.0593L68.7771 46.7397C69.5974 46.8549 70.169 47.6135 70.0537 48.4338C69.9384 49.2542 69.1799 49.8258 68.3595 49.7105L20.8267 43.0301C20.0063 42.9149 19.4347 42.1564 19.55 41.336Z\"\n            fill=\"white\"\n            fill-opacity=\"0.8\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M16.4883 63.1219C16.6036 62.3015 17.3621 61.7299 18.1824 61.8452L65.7153 68.5255C66.5357 68.6408 67.1072 69.3993 66.9919 70.2197C66.8766 71.0401 66.1181 71.6116 65.2978 71.4963L17.7649 64.816C16.9445 64.7007 16.373 63.9422 16.4883 63.1219Z\"\n            fill=\"white\"\n            fill-opacity=\"0.8\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M15.2358 72.0344C15.3511 71.214 16.1096 70.6424 16.93 70.7577L64.4628 77.438C65.2832 77.5533 65.8548 78.3118 65.7395 79.1322C65.6242 79.9525 64.8657 80.5241 64.0453 80.4088L16.5125 73.7285C15.6921 73.6132 15.1205 72.8547 15.2358 72.0344Z\"\n            fill=\"white\"\n            fill-opacity=\"0.4\"\n          />\n        </g>\n      </g>\n    </g>\n  </g>\n  <defs>\n    <filter\n      id=\"filter0_f_3433_80247\"\n      x=\"-14.1589\"\n      y=\"-38.4709\"\n      width=\"172.444\"\n      height=\"136.638\"\n      filterUnits=\"userSpaceOnUse\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n      <feBlend\n        mode=\"normal\"\n        in=\"SourceGraphic\"\n        in2=\"BackgroundImageFix\"\n        result=\"shape\"\n      />\n      <feGaussianBlur\n        stdDeviation=\"12\"\n        result=\"effect1_foregroundBlur_3433_80247\"\n      />\n    </filter>\n    <filter\n      id=\"filter1_f_3433_80247\"\n      x=\"-45.8333\"\n      y=\"-40.3932\"\n      width=\"155.805\"\n      height=\"139.072\"\n      filterUnits=\"userSpaceOnUse\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n      <feBlend\n        mode=\"normal\"\n        in=\"SourceGraphic\"\n        in2=\"BackgroundImageFix\"\n        result=\"shape\"\n      />\n      <feGaussianBlur\n        stdDeviation=\"12\"\n        result=\"effect1_foregroundBlur_3433_80247\"\n      />\n    </filter>\n    <filter\n      id=\"filter2_f_3433_80247\"\n      x=\"8.68726\"\n      y=\"-25.6425\"\n      width=\"166.468\"\n      height=\"142.859\"\n      filterUnits=\"userSpaceOnUse\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n      <feBlend\n        mode=\"normal\"\n        in=\"SourceGraphic\"\n        in2=\"BackgroundImageFix\"\n        result=\"shape\"\n      />\n      <feGaussianBlur\n        stdDeviation=\"12\"\n        result=\"effect1_foregroundBlur_3433_80247\"\n      />\n    </filter>\n    <linearGradient\n      id=\"paint0_linear_3433_80247\"\n      x1=\"102.492\"\n      y1=\"40.3698\"\n      x2=\"96.2289\"\n      y2=\"84.9319\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop offset=\"0.578125\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint1_linear_3433_80247\"\n      x1=\"102.492\"\n      y1=\"40.3698\"\n      x2=\"96.2289\"\n      y2=\"84.9319\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop offset=\"0.578125\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\" />\n    </linearGradient>\n    <clipPath id=\"clip0_3433_80247\">\n      <rect width=\"140\" height=\"96\" fill=\"white\" />\n    </clipPath>\n    <clipPath id=\"clip1_3433_80247\">\n      <rect\n        x=\"11.7563\"\n        y=\"3.38196\"\n        width=\"130\"\n        height=\"88\"\n        rx=\"4\"\n        transform=\"rotate(8 11.7563 3.38196)\"\n        fill=\"white\"\n      />\n    </clipPath>\n    <clipPath id=\"clip2_3433_80247\">\n      <rect\n        width=\"130\"\n        height=\"88\"\n        fill=\"white\"\n        transform=\"translate(11.7563 3.38196) rotate(8)\"\n      />\n    </clipPath>\n  </defs>\n</svg>`;\n//# sourceMappingURL=banners.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport './components/bookmark-toolbar.js';\nimport './components/bookmark-edit-modal.js';\nimport './components/bookmark-create-modal.js';\nimport './components/loader.js';\nimport { BlockElement } from '@blocksuite/lit';\nimport { Slot } from '@blocksuite/store';\nimport { css, html, nothing } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { queryCurrentMode } from '../__internal__/index.js';\nimport { registerService } from '../__internal__/service.js';\nimport { BookmarkBlockService } from './bookmark-service.js';\nimport { DefaultBanner } from './images/banners.js';\nimport { DarkLoadingBanner, DefaultIcon, LoadingBanner, } from './images/icons.js';\nimport { reloadBookmarkBlock } from './utils.js';\nlet BookmarkBlockComponent = class BookmarkBlockComponent extends BlockElement {\n    constructor() {\n        super(...arguments);\n        this.slots = {\n            openInitialModal: new Slot(),\n        };\n        this._showCreateModal = false;\n        this._showToolbar = false;\n        this._showEditModal = false;\n        this._isLoading = false;\n        this._timer = null;\n        this._onToolbarSelected = type => {\n            if (type === 'caption') {\n                this._input.classList.add('caption-show');\n                requestAnimationFrame(() => {\n                    this._input.focus();\n                });\n            }\n            if (type === 'edit') {\n                this._showEditModal = true;\n            }\n            this._showToolbar = false;\n        };\n    }\n    set loading(value) {\n        this._isLoading = value;\n    }\n    get loading() {\n        return this._isLoading;\n    }\n    firstUpdated() {\n        this.model.propsUpdated.on(() => this.requestUpdate());\n        this.updateComplete.then(() => {\n            this._caption = this.model?.caption ?? '';\n            if (this._caption) {\n                // Caption input should be toggled manually.\n                // However, it will be lost if the caption is deleted into empty state.\n                this._input.classList.add('caption-show');\n            }\n        });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:bookmark', BookmarkBlockService);\n        reloadBookmarkBlock(this.model, this);\n        this.slots.openInitialModal.on(() => {\n            this._showCreateModal = true;\n        });\n    }\n    _onInputChange() {\n        this._caption = this._input.value;\n        this.model.page.updateBlock(this.model, { caption: this._caption });\n    }\n    _onInputBlur() {\n        if (!this._caption) {\n            this._input.classList.remove('caption-show');\n        }\n    }\n    _onHover() {\n        if (this._isLoading)\n            return;\n        this._showToolbar = true;\n        this._timer && clearTimeout(this._timer);\n    }\n    _onHoverOut() {\n        this._timer = setTimeout(() => {\n            this._showToolbar = false;\n        }, 100);\n    }\n    render() {\n        const { url, title, description, icon, image } = this.model;\n        const mode = queryCurrentMode();\n        const createModal = this._showCreateModal\n            ? html `<bookmark-create-modal\n          .model=${this.model}\n          .onCancel=${() => {\n                this._showCreateModal = false;\n            }}\n          .onConfirm=${() => {\n                reloadBookmarkBlock(this.model, this, true);\n                this._showCreateModal = false;\n            }}\n        ></bookmark-create-modal>`\n            : nothing;\n        const editModal = this._showEditModal\n            ? html `<bookmark-edit-modal\n          .model=${this.model}\n          .onCancel=${() => {\n                this._showEditModal = false;\n            }}\n          .onConfirm=${() => {\n                this._showEditModal = false;\n            }}\n        ></bookmark-edit-modal>`\n            : nothing;\n        const toolbar = this._showToolbar\n            ? html `<bookmark-toolbar\n          .model=${this.model}\n          .onSelected=${this._onToolbarSelected}\n        ></bookmark-toolbar>`\n            : nothing;\n        const loading = this._isLoading\n            ? html `<div\n          class=\"affine-bookmark-loading ${mode === 'light' ? '' : 'dark'}\"\n        >\n          <div class=\"affine-bookmark-title\">\n            <bookmark-loader\n              size=\"15px\"\n              color=\"var(--affine-primary-color)\"\n            ></bookmark-loader>\n            <div class=\"affine-bookmark-title-content\">Loading...</div>\n          </div>\n          <div class=\"affine-bookmark-banner\">\n            ${mode === 'light' ? LoadingBanner : DarkLoadingBanner}\n          </div>\n        </div>`\n            : nothing;\n        const linkCard = html `<a\n      href=\"${url}\"\n      target=\"_blank\"\n      class=\"affine-bookmark-link\"\n    >\n      <div class=\"affine-bookmark-content-wrapper\">\n        <div class=\"affine-bookmark-title\">\n          <div class=\"affine-bookmark-icon\">\n            ${icon ? html `<img src=\"${icon}\" alt=\"icon\" />` : DefaultIcon}\n          </div>\n          <div class=\"affine-bookmark-title-content\">\n            ${title || 'Bookmark'}\n          </div>\n        </div>\n\n        <div class=\"affine-bookmark-description\">${description || url}</div>\n        <div class=\"affine-bookmark-url\">${url}</div>\n      </div>\n      <div class=\"affine-bookmark-banner ${image ? 'shadow' : ''}\">\n        ${image ? html `<img src=\"${image}\" alt=\"image\" />` : DefaultBanner}\n      </div>\n    </a>`;\n        if (!url) {\n            return createModal;\n        }\n        return html `\n      ${editModal}\n      <div\n        class=\"affine-bookmark-block-container\"\n        @mouseover=\"${this._onHover}\"\n        @mouseout=\"${this._onHoverOut}\"\n      >\n        ${toolbar} ${this._isLoading ? loading : linkCard}\n        <input\n          .disabled=${this.model.page.readonly}\n          placeholder=\"Write a caption\"\n          class=\"affine-bookmark-caption\"\n          value=${this._caption}\n          @input=${this._onInputChange}\n          @blur=${this._onInputBlur}\n          @click=${(e) => {\n            e.stopPropagation();\n        }}\n        />\n      </div>\n    `;\n    }\n};\nBookmarkBlockComponent.styles = css `\n    .affine-bookmark-block-container {\n      width: 100%;\n      margin-top: calc(var(--affine-paragraph-space) + 8px);\n      position: relative;\n    }\n    .affine-bookmark-link {\n      height: 112px;\n      box-shadow: var(--affine-shadow-1);\n      background: var(--affine-card-background-blue);\n      border: 3px solid var(--affine-background-secondary-color);\n      border-radius: 12px;\n      padding: 16px 24px;\n      display: flex;\n      cursor: pointer;\n      text-decoration: none;\n      color: var(--affine-text-primary-color);\n      overflow: hidden;\n      line-height: calc(1em + 4px);\n      position: relative;\n    }\n    .affine-bookmark-banner {\n      width: 140px;\n      height: 93px;\n      margin-left: 20px;\n      border-radius: 8px 8px 0 0;\n      overflow: hidden;\n      flex-shrink: 0;\n    }\n    .affine-bookmark-banner.shadow {\n      box-shadow: var(--affine-shadow-1);\n    }\n\n    .affine-bookmark-banner img,\n    .affine-bookmark-banner svg {\n      width: 140px;\n      height: 93px;\n      object-fit: cover;\n    }\n    .affine-bookmark-content-wrapper {\n      flex-grow: 1;\n      overflow: hidden;\n    }\n    .affine-bookmark-title {\n      height: 18px;\n      display: flex;\n      align-items: center;\n      font-size: var(--affine-font-sm);\n      font-weight: 600;\n    }\n    .affine-bookmark-title-content {\n      flex-grow: 1;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      margin-left: 8px;\n    }\n    .affine-bookmark-icon {\n      width: 18px;\n      height: 18px;\n      color: var(--affine-text-secondary-color);\n      flex-shrink: 0;\n    }\n    .affine-bookmark-icon img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n    .affine-bookmark-description {\n      height: 32px;\n      line-height: 16px;\n      margin-top: 4px;\n      font-size: var(--affine-font-xs);\n\n      display: -webkit-box;\n      word-break: break-all;\n      -webkit-box-orient: vertical;\n      -webkit-line-clamp: 2;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n    .affine-bookmark-url {\n      font-size: var(--affine-font-xs);\n      color: var(--affine-text-secondary-color);\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      margin-top: 2px;\n    }\n    .affine-bookmark-caption {\n      width: 100%;\n      font-size: var(--affine-font-sm);\n      outline: none;\n      border: 0;\n      font-family: inherit;\n      text-align: center;\n      color: var(--affine-icon-color);\n      display: none;\n      background: var(--affine-background-primary-color);\n    }\n    .affine-bookmark-caption::placeholder {\n      color: var(--affine-placeholder-color);\n    }\n    .affine-bookmark-caption.caption-show {\n      display: inline-block;\n    }\n    .affine-bookmark-loading {\n      width: 100%;\n      height: 112px;\n      padding: 16px 24px;\n      display: flex;\n      justify-content: space-between;\n      box-shadow: var(--affine-shadow-1);\n      background: var(--affine-hover-color);\n      border: 3px solid var(--affine-background-secondary-color);\n      color: var(--affine-placeholder-color);\n      border-radius: 12px;\n    }\n  `;\n__decorate([\n    query('input.affine-bookmark-caption')\n], BookmarkBlockComponent.prototype, \"_input\", void 0);\n__decorate([\n    state()\n], BookmarkBlockComponent.prototype, \"_showCreateModal\", void 0);\n__decorate([\n    state()\n], BookmarkBlockComponent.prototype, \"_showToolbar\", void 0);\n__decorate([\n    state()\n], BookmarkBlockComponent.prototype, \"_showEditModal\", void 0);\n__decorate([\n    state()\n], BookmarkBlockComponent.prototype, \"_caption\", void 0);\n__decorate([\n    state()\n], BookmarkBlockComponent.prototype, \"_isLoading\", void 0);\nBookmarkBlockComponent = __decorate([\n    customElement('affine-bookmark')\n], BookmarkBlockComponent);\nexport { BookmarkBlockComponent };\n//# sourceMappingURL=bookmark-block.js.map","export * from './bookmark-block.js';\nexport * from './bookmark-model.js';\nexport * from './bookmark-service.js';\n//# sourceMappingURL=index.js.map","import { CancelWrapIcon, CopyIcon, DeleteIcon, WrapIcon, } from '@blocksuite/global/config';\nimport { html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { tooltipStyle } from '../../components/tooltip/tooltip.js';\nimport { copyCode } from '../../page-block/default/utils.js';\nexport function CodeOptionTemplate({ model, position, hoverState, wrap, onClickWrap, }) {\n    const page = model.page;\n    const readonly = page.readonly;\n    const style = {\n        position: 'fixed',\n        left: position.x + 'px',\n        top: position.y + 'px',\n    };\n    return html `\n    <style>\n      .affine-codeblock-option-container > div {\n          position: fixed;\n          z-index: 1;\n          box-shadow:var(--affine-shadow-2)\n      }\n      .affine-codeblock-option {\n        box-shadow:var(--affine-shadow-2);\n        padding:4px;\n        border-radius:8px;\n        background:var(--affine-background-overlay-panel-color)\n      }\n\n      ${tooltipStyle}\n    </style>\n\n    <div\n      class=\"affine-codeblock-option\"\n      style=${styleMap(style)}\n      @mouseover=${() => hoverState.emit(true)}\n      @mouseout=${() => hoverState.emit(false)}\n    >\n      <format-bar-button\n        class=\"has-tool-tip\"\n        data-testid=\"copy-button\"\n        @click=${() => copyCode(model)}\n      >\n        ${CopyIcon}\n        <tool-tip inert tip-position=\"right\" role=\"tooltip\"\n          >Copy to Clipboard</tool-tip\n        >\n      </format-bar-button>\n      <format-bar-button\n        class=\"has-tool-tip\"\n        data-testid=\"wrap-button\"\n        ?active=${wrap}\n        @click=${onClickWrap}\n      >\n        ${wrap ? CancelWrapIcon : WrapIcon}\n        <tool-tip inert tip-position=\"right\" role=\"tooltip\">Wrap code</tool-tip>\n      </format-bar-button>\n      ${readonly\n        ? ''\n        : html `<format-bar-button\n            data-testid=\"delete-button\"\n            class=\"has-tool-tip\"\n            @click=${() => {\n            if (readonly)\n                return;\n            model.page.deleteBlock(model);\n        }}\n          >\n            ${DeleteIcon}\n            <tool-tip inert tip-position=\"right\" role=\"tooltip\"\n              >Delete</tool-tip\n            >\n          </format-bar-button>`}\n    </div>\n  `;\n}\n//# sourceMappingURL=code-option.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SearchIcon } from '@blocksuite/global/config';\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { BUNDLED_LANGUAGES, } from 'shiki';\nimport { createEvent } from '../../__internal__/index.js';\nimport { POPULAR_LANGUAGES_MAP } from '../utils/code-languages.js';\nimport { PLAIN_TEXT_REGISTRATION } from '../utils/consts.js';\n// TODO extract to a common list component\nlet LangList = class LangList extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this._filterText = '';\n        this._currentSelectedIndex = 0;\n        this.delay = 150;\n        this._clickAwayListener = (e) => {\n            if (this.renderRoot.parentElement?.contains(e.target)) {\n                return;\n            }\n            this.dispatchEvent(createEvent('dispose', null));\n        };\n    }\n    static get styles() {\n        return css `\n      lang-list {\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        background: var(--affine-background-overlay-panel-color);\n        border-radius: 12px;\n        top: 24px;\n        z-index: 1;\n      }\n\n      .lang-list-container {\n        box-shadow: var(--affine-menu-shadow);\n        border-radius: 8px;\n        padding: 12px 8px;\n      }\n\n      .lang-list-button-container {\n        position: relative;\n        overflow: scroll;\n        height: 424px;\n        width: 200px;\n        padding-top: 5px;\n        padding-left: 4px;\n        padding-right: 4px;\n        /*scrollbar-color: #fff0 #fff0;*/\n      }\n\n      /*\n      .lang-list-button-container::-webkit-scrollbar {\n        background: none;\n      }\n      */\n\n      .lang-item {\n        display: flex;\n        justify-content: flex-start;\n        padding-left: 12px;\n        margin-bottom: 5px;\n      }\n\n      .input-wrapper {\n        position: relative;\n        display: flex;\n        margin-top: 8px;\n        margin-left: 4px;\n      }\n\n      #filter-input {\n        display: flex;\n        align-items: center;\n        height: 32px;\n        width: 192px;\n        border: 1px solid var(--affine-border-color);\n        border-radius: 8px;\n        padding-left: 44px;\n        padding-top: 4px;\n\n        font-family: var(--affine-font-family);\n        font-size: var(--affine-font-sm);\n        box-sizing: border-box;\n        color: inherit;\n        background: var(--affine-background-overlay-panel-color);\n      }\n\n      #filter-input:focus {\n        outline: none;\n      }\n\n      #filter-input::placeholder {\n        color: var(--affine-placeholder-color);\n        font-size: var(--affine-font-sm);\n      }\n\n      .search-icon {\n        position: absolute;\n        left: 8px;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        fill: var(--affine-icon-color);\n      }\n    `;\n    }\n    async connectedCallback() {\n        super.connectedCallback();\n        // Avoid triggering click away listener on initial render\n        document.addEventListener('click', this._clickAwayListener);\n        setTimeout(() => {\n            this.filterInput?.focus();\n        }, 0);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        document.removeEventListener('click', this._clickAwayListener);\n    }\n    _onLanguageClicked(language) {\n        // TODO use slot instead\n        this.dispatchEvent(createEvent('selected-language-changed', {\n            language: language?.id ?? null,\n        }));\n    }\n    render() {\n        const filteredLanguages = [PLAIN_TEXT_REGISTRATION, ...BUNDLED_LANGUAGES]\n            .filter(language => {\n            if (!this._filterText) {\n                return true;\n            }\n            return (language.id.startsWith(this._filterText.toLowerCase()) ||\n                language.aliases?.some(alias => alias.startsWith(this._filterText.toLowerCase())));\n        })\n            .sort((a, b) => (POPULAR_LANGUAGES_MAP[a.id] ?? Infinity) -\n            (POPULAR_LANGUAGES_MAP[b.id] ?? Infinity));\n        const onLanguageSelect = (e) => {\n            if (e.key === 'ArrowDown') {\n                e.preventDefault();\n                this._currentSelectedIndex =\n                    (this._currentSelectedIndex + 1) % filteredLanguages.length;\n                // TODO scroll to item\n            }\n            else if (e.key === 'ArrowUp') {\n                e.preventDefault();\n                this._currentSelectedIndex =\n                    (this._currentSelectedIndex + filteredLanguages.length - 1) %\n                        filteredLanguages.length;\n                // TODO scroll to item\n            }\n            else if (e.key === 'Enter') {\n                e.preventDefault();\n                if (this._currentSelectedIndex === -1 ||\n                    this._currentSelectedIndex >= filteredLanguages.length)\n                    return;\n                this._onLanguageClicked(filteredLanguages[this._currentSelectedIndex]);\n            }\n        };\n        return html `\n      <div class=\"lang-list-container\">\n        <div class=\"input-wrapper\">\n          <div class=\"search-icon\">${SearchIcon}</div>\n          <input\n            id=\"filter-input\"\n            type=\"text\"\n            placeholder=\"Search\"\n            @input=\"${() => {\n            this._filterText = this.filterInput?.value;\n            this._currentSelectedIndex = 0;\n        }}\"\n            @keydown=\"${onLanguageSelect}\"\n          />\n        </div>\n        <div class=\"lang-list-button-container\">\n          ${filteredLanguages.map((language, index) => html `\n              <icon-button\n                width=\"100%\"\n                height=\"32px\"\n                @click=\"${() => this._onLanguageClicked(language)}\"\n                class=\"lang-item\"\n                ?hover=${index === this._currentSelectedIndex}\n              >\n                ${language.id[0].toUpperCase() + language.id.slice(1)}\n              </icon-button>\n            `)}\n        </div>\n      </div>\n    `;\n    }\n};\n__decorate([\n    state()\n], LangList.prototype, \"_filterText\", void 0);\n__decorate([\n    state()\n], LangList.prototype, \"_currentSelectedIndex\", void 0);\n__decorate([\n    query('#filter-input')\n], LangList.prototype, \"filterInput\", void 0);\n__decorate([\n    property()\n], LangList.prototype, \"delay\", void 0);\nLangList = __decorate([\n    customElement('lang-list')\n], LangList);\nexport { LangList };\n//# sourceMappingURL=lang-list.js.map","import { BLOCK_ID_ATTR, PREVENT_DEFAULT } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/store';\nimport { BaseService } from '../__internal__/service/index.js';\nimport { getVirgoByModel } from '../__internal__/utils/index.js';\nimport { getStandardLanguage } from './utils/code-languages.js';\nimport { FALLBACK_LANG } from './utils/consts.js';\nconst INDENT_SYMBOL = '  ';\nconst LINE_BREAK_SYMBOL = '\\n';\nconst allIndexOf = (text, symbol, start = 0, end = text.length) => {\n    const indexArr = [];\n    let i = start;\n    while (i < end) {\n        const index = text.indexOf(symbol, i);\n        if (index === -1 || index > end) {\n            break;\n        }\n        indexArr.push(index);\n        i = index + 1;\n    }\n    return indexArr;\n};\nexport class CodeBlockService extends BaseService {\n    setLang(model, lang) {\n        const standardLang = getStandardLanguage(lang);\n        const langName = standardLang?.id ?? FALLBACK_LANG;\n        model.page.updateBlock(model, {\n            language: langName,\n        });\n    }\n    block2html(block, { childText = '', begin, end } = {}) {\n        const richTextElement = document.querySelector(`[${BLOCK_ID_ATTR}=\"${block.id}\"] rich-text`);\n        if (!richTextElement) {\n            return super.block2html(block, {\n                childText,\n                begin,\n                end,\n            });\n        }\n        const preElement = document.createElement('pre');\n        const codeElement = document.createElement('code');\n        preElement.setAttribute('code-lang', block.language);\n        codeElement.innerHTML = Array.from(richTextElement.querySelectorAll('v-line'))\n            .map(line => line.textContent + '\\n')\n            .join('');\n        preElement.append(codeElement);\n        return preElement.outerHTML;\n    }\n    async json2Block(focusedBlockModel, pastedBlocks, range) {\n        assertExists(range);\n        const texts = pastedBlocks.map(block => block.text);\n        const lines = texts.map(line => line?.map(op => op.insert).join(''));\n        const text = lines.join('\\n');\n        focusedBlockModel.text?.insert(text, range.startOffset);\n        const vEditor = getVirgoByModel(focusedBlockModel);\n        assertExists(vEditor);\n        vEditor.setVRange({\n            index: range.startOffset + text.length,\n            length: 0,\n        });\n    }\n    defineKeymap(block, virgo) {\n        const keymap = super.defineKeymap(block, virgo);\n        return {\n            ...keymap,\n            tab: {\n                key: 'Tab',\n                handler(range, context) {\n                    context.event.stopPropagation();\n                    const text = this.vEditor.yText.toString();\n                    const index = text.lastIndexOf(LINE_BREAK_SYMBOL, range.index - 1);\n                    const indexArr = allIndexOf(text, LINE_BREAK_SYMBOL, range.index, range.index + range.length)\n                        .map(i => i + 1)\n                        .reverse();\n                    if (index !== -1) {\n                        indexArr.push(index + 1);\n                    }\n                    else {\n                        indexArr.push(0);\n                    }\n                    indexArr.forEach(i => {\n                        this.vEditor.insertText({\n                            index: i,\n                            length: 0,\n                        }, INDENT_SYMBOL);\n                    });\n                    this.vEditor.setVRange({\n                        index: range.index + 2,\n                        length: range.length + (indexArr.length - 1) * INDENT_SYMBOL.length,\n                    });\n                    return PREVENT_DEFAULT;\n                },\n            },\n            shiftTab: {\n                key: 'Tab',\n                shiftKey: true,\n                handler: function (range, context) {\n                    context.event.stopPropagation();\n                    const text = this.vEditor.yText.toString();\n                    const index = text.lastIndexOf(LINE_BREAK_SYMBOL, range.index - 1);\n                    let indexArr = allIndexOf(text, LINE_BREAK_SYMBOL, range.index, range.index + range.length)\n                        .map(i => i + 1)\n                        .reverse();\n                    if (index !== -1) {\n                        indexArr.push(index + 1);\n                    }\n                    else {\n                        indexArr.push(0);\n                    }\n                    indexArr = indexArr.filter(i => text.slice(i, i + 2) === INDENT_SYMBOL);\n                    indexArr.forEach(i => {\n                        this.vEditor.deleteText({\n                            index: i,\n                            length: 2,\n                        });\n                    });\n                    if (indexArr.length > 0) {\n                        this.vEditor.setVRange({\n                            index: range.index -\n                                (indexArr[indexArr.length - 1] < range.index ? 2 : 0),\n                            length: range.length - (indexArr.length - 1) * INDENT_SYMBOL.length,\n                        });\n                    }\n                    return PREVENT_DEFAULT;\n                },\n            },\n        };\n    }\n}\n//# sourceMappingURL=code-service.js.map","import { html } from 'lit';\nexport const getCodeLineRenderer = highlightOptionsGetter => delta => {\n    return html `<affine-code-line\n    .delta=${delta}\n    .highlightOptionsGetter=${highlightOptionsGetter}\n  ></affine-code-line>`;\n};\n//# sourceMappingURL=code-line-renderer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../__internal__/rich-text/rich-text.js';\nimport '../components/portal.js';\nimport './components/code-option.js';\nimport './components/lang-list.js';\nimport { ArrowDownIcon } from '@blocksuite/global/config';\nimport { BlockElement } from '@blocksuite/lit';\nimport { assertExists, Slot } from '@blocksuite/store';\nimport { css, html, render } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { BUNDLED_LANGUAGES, getHighlighter, } from 'shiki';\nimport { z } from 'zod';\nimport { getViewportElement, queryCurrentMode } from '../__internal__/index.js';\nimport { getService, registerService } from '../__internal__/service.js';\nimport { listenToThemeChange } from '../__internal__/theme/utils.js';\nimport { tooltipStyle } from '../components/tooltip/tooltip.js';\nimport { CodeBlockService } from './code-service.js';\nimport { CodeOptionTemplate } from './components/code-option.js';\nimport { getCodeLineRenderer } from './utils/code-line-renderer.js';\nimport { DARK_THEME, FALLBACK_LANG, LIGHT_THEME } from './utils/consts.js';\nlet CodeBlockComponent = class CodeBlockComponent extends BlockElement {\n    constructor() {\n        super(...arguments);\n        this._showLangList = false;\n        this._optionPosition = null;\n        this._wrap = false;\n        this.textSchema = {\n            attributesSchema: z.object({}),\n            textRenderer: () => getCodeLineRenderer(() => ({\n                lang: this.model.language.toLowerCase(),\n                highlighter: this._highlighter,\n            })),\n        };\n        this._richTextResizeObserver = new ResizeObserver(() => {\n            this._updateLineNumbers();\n        });\n        this._themeChangeObserver = null;\n        this._preLang = null;\n        this._highlighter = null;\n        this.hoverState = new Slot();\n    }\n    async _startHighlight(lang) {\n        const mode = queryCurrentMode();\n        this._highlighter = await getHighlighter({\n            theme: mode === 'dark' ? DARK_THEME : LIGHT_THEME,\n            themes: [LIGHT_THEME, DARK_THEME],\n            langs: [lang],\n            paths: {\n                // TODO: use local path\n                wasm: 'https://cdn.jsdelivr.net/npm/shiki/dist',\n                themes: 'https://cdn.jsdelivr.net/',\n                languages: 'https://cdn.jsdelivr.net/npm/shiki/languages',\n            },\n        });\n        const richText = this.querySelector('rich-text');\n        assertExists(richText);\n        const vEditor = richText.vEditor;\n        assertExists(vEditor);\n        const range = vEditor.getVRange();\n        vEditor.requestUpdate();\n        if (range) {\n            vEditor.setVRange(range);\n        }\n    }\n    get readonly() {\n        return this.model.page.readonly;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:code', CodeBlockService);\n        this._disposables.add(this.model.propsUpdated.on(() => this.requestUpdate()));\n        this._disposables.add(this.model.childrenUpdated.on(() => this.requestUpdate()));\n        // At AFFiNE, avoid the option element to be covered by the header\n        // we need to reserve the space for the header\n        const HEADER_HEIGHT = 64;\n        // The height of the option element\n        // You need to change this value manually if you change the style of the option element\n        const OPTION_ELEMENT_HEIGHT = 96;\n        let timer;\n        const updatePosition = () => {\n            // Update option position when scrolling\n            const rect = this.getBoundingClientRect();\n            this._optionPosition = {\n                x: rect.right + 12,\n                y: Math.min(Math.max(rect.top, HEADER_HEIGHT + 12), rect.bottom - OPTION_ELEMENT_HEIGHT),\n            };\n        };\n        this.hoverState.on(hover => {\n            clearTimeout(timer);\n            if (hover) {\n                updatePosition();\n                return;\n            }\n            timer = window.setTimeout(() => {\n                this._optionPosition = null;\n            }, HOVER_DELAY);\n        });\n        this._disposables.addFromEvent(this, 'mouseover', e => {\n            this.hoverState.emit(true);\n        });\n        const HOVER_DELAY = 300;\n        this._disposables.addFromEvent(this, 'mouseleave', e => {\n            this.hoverState.emit(false);\n        });\n        const viewportElement = getViewportElement(this.model.page);\n        if (viewportElement) {\n            this._disposables.addFromEvent(viewportElement, 'scroll', e => {\n                if (!this._optionPosition)\n                    return;\n                updatePosition();\n            });\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.hoverState.dispose();\n        this._richTextResizeObserver.disconnect();\n        this._themeChangeObserver?.dispose();\n    }\n    _onClickWrapBtn() {\n        const container = this.querySelector('.affine-code-block-container');\n        assertExists(container);\n        this._wrap = container.classList.toggle('wrap');\n    }\n    firstUpdated() {\n        this._themeChangeObserver = listenToThemeChange(this, async (a) => {\n            if (!this._highlighter)\n                return;\n            const richText = this.querySelector('rich-text');\n            const vEditor = richText?.vEditor;\n            if (!vEditor)\n                return;\n            // update code-line theme\n            setTimeout(() => {\n                vEditor.requestUpdate();\n            });\n        });\n        if (!this.model.language || this.model.language === FALLBACK_LANG) {\n            this._highlighter = null;\n            return;\n        }\n        const lang = BUNDLED_LANGUAGES.find(lang => lang.id === this.model.language.toLowerCase());\n        if (!lang) {\n            console.warn('Unexpected language: ', this.model.language);\n            return;\n        }\n        this._startHighlight(lang);\n    }\n    updated() {\n        if (this.model.language !== this._preLang) {\n            this._preLang = this.model.language;\n            const lang = BUNDLED_LANGUAGES.find(lang => lang.id === this.model.language.toLowerCase());\n            if (lang) {\n                if (this._highlighter) {\n                    const currentLangs = this._highlighter.getLoadedLanguages();\n                    if (!currentLangs.includes(lang.id)) {\n                        this._highlighter.loadLanguage(lang).then(() => {\n                            const richText = this.querySelector('rich-text');\n                            const vEditor = richText?.vEditor;\n                            if (vEditor) {\n                                vEditor.requestUpdate();\n                            }\n                        });\n                    }\n                }\n                else {\n                    this._startHighlight(lang);\n                }\n            }\n            else {\n                this._highlighter = null;\n            }\n            const richText = this.querySelector('rich-text');\n            const vEditor = richText?.vEditor;\n            if (vEditor) {\n                vEditor.requestUpdate();\n            }\n        }\n        const richText = this.querySelector('rich-text');\n        assertExists(richText);\n        this._richTextResizeObserver.disconnect();\n        this._richTextResizeObserver.observe(richText);\n    }\n    _onClickLangBtn() {\n        if (this.readonly)\n            return;\n        this._showLangList = !this._showLangList;\n    }\n    _langListTemplate() {\n        // TODO this is a workaround\n        const normalizedLang = this.model.language[0].toUpperCase() + this.model.language.slice(1);\n        return html `<div\n      class=\"lang-list-wrapper\"\n      style=\"${this._showLangList ? 'visibility: visible;' : ''}\"\n    >\n      <icon-button\n        class=\"lang-button\"\n        data-testid=\"lang-button\"\n        width=\"auto\"\n        height=\"24px\"\n        ?hover=${this._showLangList}\n        ?disabled=${this.readonly}\n        @click=${this._onClickLangBtn}\n      >\n        ${normalizedLang} ${!this.readonly ? ArrowDownIcon : html ``}\n      </icon-button>\n      ${this._showLangList\n            ? html `<lang-list\n            @selected-language-changed=${(e) => {\n                getService('affine:code').setLang(this.model, e.detail.language);\n                this._showLangList = false;\n            }}\n            @dispose=${() => {\n                this._showLangList = false;\n            }}\n          ></lang-list>`\n            : ''}\n    </div>`;\n    }\n    _codeOptionTemplate() {\n        if (!this._optionPosition)\n            return '';\n        return html `<affine-portal\n      .template=${CodeOptionTemplate({\n            model: this.model,\n            position: this._optionPosition,\n            hoverState: this.hoverState,\n            wrap: this._wrap,\n            onClickWrap: () => this._onClickWrapBtn(),\n        })}\n    ></affine-portal>`;\n    }\n    _updateLineNumbers() {\n        const lineNumbersContainer = this.querySelector('#line-numbers');\n        assertExists(lineNumbersContainer);\n        const next = this._wrap ? generateLineNumberRender() : lineNumberRender;\n        render(repeat(Array.from(this.querySelectorAll('v-line')), next), lineNumbersContainer);\n    }\n    render() {\n        return html `<div class=\"affine-code-block-container\">\n        ${this._langListTemplate()}\n        <div class=\"rich-text-container\">\n          <div id=\"line-numbers\"></div>\n          <rich-text .model=${this.model} .textSchema=${this.textSchema}>\n          </rich-text>\n        </div>\n        ${this.content}\n      </div>\n      ${this._codeOptionTemplate()}`;\n    }\n};\nCodeBlockComponent.styles = css `\n    code-block {\n      position: relative;\n      z-index: 1;\n    }\n\n    .affine-code-block-container {\n      font-size: var(--affine-font-sm);\n      line-height: var(--affine-line-height);\n      position: relative;\n      padding: 32px 0px 12px 0px;\n      background: var(--affine-background-code-block);\n      border-radius: 10px;\n      margin-top: calc(var(--affine-paragraph-space) + 8px);\n      margin-bottom: calc(var(--affine-paragraph-space) + 8px);\n    }\n\n    /* hover area */\n    .affine-code-block-container::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 50px;\n      height: 100%;\n      transform: translateX(100%);\n    }\n\n    /* hover area */\n    .affine-code-block-container::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 50px;\n      height: 100%;\n      transform: translateX(100%);\n    }\n\n    .affine-code-block-container .virgo-editor {\n      font-family: var(--affine-font-code-family);\n      font-variant-ligatures: none;\n    }\n\n    .affine-code-block-container .lang-list-wrapper {\n      position: absolute;\n      font-size: var(--affine-font-sm);\n      line-height: var(--affine-line-height);\n      top: 12px;\n      left: 12px;\n    }\n\n    .affine-code-block-container > .lang-list-wrapper {\n      visibility: hidden;\n    }\n    .affine-code-block-container:hover > .lang-list-wrapper {\n      visibility: visible;\n    }\n\n    .affine-code-block-container > .lang-list-wrapper > .lang-button {\n      display: flex;\n      justify-content: flex-start;\n      padding: 0 8px;\n    }\n\n    .affine-code-block-container rich-text {\n      /* to make sure the resize observer can be triggered as expected */\n      display: block;\n      position: relative;\n      width: 90%;\n      overflow-x: auto;\n      overflow-y: hidden;\n      padding-bottom: 20px;\n    }\n\n    .affine-code-block-container .rich-text-container {\n      position: relative;\n      border-radius: 5px;\n      padding: 4px 12px 4px 60px;\n    }\n\n    #line-numbers {\n      position: absolute;\n      text-align: right;\n      left: 20px;\n      line-height: var(--affine-line-height);\n      color: var(--affine-text-secondary-color);\n    }\n\n    .affine-code-block-container .virgo-editor {\n      width: 90%;\n      margin: 0;\n    }\n\n    .affine-code-block-container affine-code-line span v-text {\n      display: inline;\n    }\n\n    .affine-code-block-container affine-code-line span {\n      white-space: pre;\n    }\n\n    .affine-code-block-container.wrap #line-numbers {\n      top: calc(var(--affine-line-height) + 4px);\n    }\n\n    .affine-code-block-container.wrap #line-numbers > div {\n      margin-top: calc(\n        var(--top, 0) / var(--affine-zoom, 1) - var(--affine-line-height)\n      );\n    }\n\n    .affine-code-block-container.wrap v-line > div {\n      display: block;\n    }\n\n    .affine-code-block-container.wrap affine-code-line span {\n      white-space: break-spaces;\n    }\n\n    .affine-code-block-container .virgo-editor::-webkit-scrollbar {\n      display: none;\n    }\n\n    .code-block-option {\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n      list-style: none;\n      padding: 4px;\n      width: 40px;\n      background-color: var(--affine-background-overlay-panel-color);\n      margin: 0;\n    }\n\n    ${tooltipStyle}\n  `;\n__decorate([\n    state()\n], CodeBlockComponent.prototype, \"_showLangList\", void 0);\n__decorate([\n    state()\n], CodeBlockComponent.prototype, \"_optionPosition\", void 0);\n__decorate([\n    state()\n], CodeBlockComponent.prototype, \"_wrap\", void 0);\nCodeBlockComponent = __decorate([\n    customElement('affine-code')\n], CodeBlockComponent);\nexport { CodeBlockComponent };\nfunction generateLineNumberRender(top = 0) {\n    return function lineNumberRender(e, index) {\n        const style = {\n            '--top': `${top}px`,\n        };\n        top = e.getBoundingClientRect().height;\n        return html `<div style=${styleMap(style)}>${index + 1}</div>`;\n    };\n}\nfunction lineNumberRender(_, index) {\n    return html `<div>${index + 1}</div>`;\n}\n//# sourceMappingURL=code-block.js.map","export * from './lang-list.js';\n//# sourceMappingURL=index.js.map","export * from './code-block.js';\nexport * from './code-model.js';\nexport * from './code-service.js';\nexport * from './components/index.js';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n/**\n * @example\n * ```ts\n * html`<icon-button class=\"has-tool-tip\" @click=${this.onUnlink}>\n *   ${UnlinkIcon}\n * </icon-button>`\n * ```\n */\nlet IconButton = class IconButton extends LitElement {\n    constructor() {\n        super();\n        this.size = null;\n        this.width = '28px';\n        this.height = '28px';\n        this.text = null;\n        this.disabled = false;\n        this.addEventListener('keypress', event => {\n            if (this.disabled) {\n                return;\n            }\n            if (event.key === 'Enter') {\n                this.click();\n            }\n        });\n        // Prevent click event when disabled\n        this.addEventListener('click', event => {\n            if (this.disabled === '') {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }, { capture: true });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.tabIndex = 0;\n        if (this.size && (this.width || this.height)) {\n            throw new Error('Cannot set both size and width/height on an icon-button');\n        }\n        let width = this.width;\n        let height = this.height;\n        if (this.size) {\n            width = this.size;\n            height = this.size;\n        }\n        this.style.setProperty('--button-width', typeof width === 'string' ? width : `${width}px`);\n        this.style.setProperty('--button-height', typeof height === 'string' ? height : `${height}px`);\n    }\n    render() {\n        return html `<slot></slot>${this.text\n            ? html `<span>${this.text}</span>`\n            : ''}<slot name=\"optional\"></slot> `;\n    }\n};\nIconButton.styles = css `\n    :host {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border: none;\n      width: var(--button-width);\n      height: var(--button-height);\n      border-radius: 5px;\n      background: transparent;\n      cursor: pointer;\n      user-select: none;\n      font-family: var(--affine-font-family);\n      fill: var(--affine-icon-color);\n      color: var(--affine-popover-color);\n      pointer-events: auto;\n    }\n\n    :host > span {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    :host(:hover) {\n      background: var(--affine-hover-color);\n      fill: var(--affine-primary-color);\n      color: var(--affine-primary-color);\n    }\n\n    :host(:active) {\n      background: transparent;\n      fill: var(--affine-primary-color);\n      color: var(--affine-primary-color);\n    }\n\n    :host([disabled]),\n    :host(:disabled) {\n      background: transparent;\n      color: var(--affine-text-disable-color);\n      fill: var(--affine-text-disable-color);\n      cursor: not-allowed;\n    }\n\n    /* You can add a 'hover' attribute to the button to show the hover style */\n    :host([hover]) {\n      background: var(--affine-hover-color);\n      fill: var(--affine-primary-color);\n      color: var(--affine-primary-color);\n    }\n\n    /* You can add a 'active' attribute to the button to revert the active style */\n    :host([active]) {\n      fill: var(--affine-primary-color);\n      color: var(--affine-primary-color);\n    }\n\n    :host(:active[active]) {\n      background: transparent;\n      fill: var(--affine-icon-color);\n    }\n  `;\n__decorate([\n    property()\n], IconButton.prototype, \"size\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"width\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"height\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"text\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"disabled\", void 0);\nIconButton = __decorate([\n    customElement('icon-button')\n], IconButton);\nexport { IconButton };\n//# sourceMappingURL=button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DRAG_HANDLE_OFFSET_LEFT } from '@blocksuite/global/config';\nimport { assertExists, isFirefox, } from '@blocksuite/global/utils';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement, render } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { calcDropTarget, getBlockElementsExcludeSubtrees, getModelByBlockElement, getRectByBlockElement, isContainedIn, Point, } from '../__internal__/index.js';\nconst handlePreventDocumentDragOverDelay = (event) => {\n    // Refs: https://stackoverflow.com/a/65910078\n    event.preventDefault();\n};\nlet DragIndicator = class DragIndicator extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.rect = null;\n    }\n    render() {\n        if (!this.rect) {\n            return null;\n        }\n        const { left, top, width, height } = this.rect;\n        const style = styleMap({\n            width: `${width}px`,\n            height: `${height}px`,\n            transform: `translate(${left}px, ${top}px)`,\n        });\n        return html `<div class=\"affine-drag-indicator\" style=${style}></div>`;\n    }\n};\nDragIndicator.styles = css `\n    .affine-drag-indicator {\n      position: absolute;\n      top: 0;\n      left: 0;\n      background: var(--affine-primary-color);\n      transition-property: width, height, transform;\n      transition-duration: 100ms;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-delay: 0s;\n      transform-origin: 0 0;\n      pointer-events: none;\n      z-index: 1;\n    }\n  `;\n__decorate([\n    property()\n], DragIndicator.prototype, \"rect\", void 0);\nDragIndicator = __decorate([\n    customElement('affine-drag-indicator')\n], DragIndicator);\nexport { DragIndicator };\nlet DragPreview = class DragPreview extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this.offset = { x: 0, y: 0 };\n    }\n    render() {\n        return html `<style>\n      affine-drag-preview {\n        --x: 0px;\n        --y: 0px;\n        height: auto;\n        display: block;\n        position: absolute;\n        box-sizing: border-box;\n        font-family: var(--affine-font-family);\n        font-size: var(--affine-font-base);\n        line-height: var(--affine-line-height);\n        color: var(--affine-text-primary-color);\n        font-weight: 400;\n        top: 0;\n        left: 0;\n        opacity: 0.843;\n        cursor: none;\n        user-select: none;\n        pointer-events: none;\n        caret-color: transparent;\n        transform-origin: 0 0;\n        z-index: 2;\n      }\n\n      affine-drag-preview > .affine-block-element {\n        pointer-events: none;\n      }\n\n      affine-drag-preview > .affine-block-element:first-child > *:first-child {\n        margin-top: 0;\n      }\n\n      affine-drag-preview .affine-rich-text {\n        user-modify: read-only;\n        -webkit-user-modify: read-only;\n      }\n\n      affine-drag-preview.grabbing {\n        cursor: grabbing;\n        pointer-events: auto;\n      }\n\n      affine-drag-preview.grabbing:after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 24px;\n        height: 24px;\n        transform: translate(var(--x), var(--y));\n      }\n    </style>`;\n    }\n};\n__decorate([\n    property()\n], DragPreview.prototype, \"offset\", void 0);\nDragPreview = __decorate([\n    customElement('affine-drag-preview')\n], DragPreview);\nexport { DragPreview };\nconst DRAG_HANDLE_HEIGHT = 16; // px FIXME\nconst DRAG_HANDLE_WIDTH = 24; // px\nlet DragHandle = class DragHandle extends WithDisposable(LitElement) {\n    constructor(options) {\n        super();\n        this._draggingElements = [];\n        this._scale = 1;\n        this._currentClientX = 0;\n        this._currentClientY = 0;\n        this._stopPropagation = false;\n        /**\n         * Current drag handle model state\n         */\n        this._handleAnchorState = null;\n        this._handleAnchorDisposable = null;\n        /**\n         * Last drag handle dropping target state\n         */\n        this._lastDroppingTarget = null;\n        this._lastDroppingType = 'none';\n        this._indicator = null;\n        this._dragPreview = null;\n        // - select current block\n        // - trigger slash menu\n        this._onClick = (e) => {\n            const { selectedBlocks } = this;\n            let { _handleAnchorState: modelState } = this;\n            const element = modelState?.element;\n            if (modelState && selectedBlocks.length && element === selectedBlocks[0]) {\n                modelState = null;\n            }\n            this.setSelectedBlock(modelState, element);\n            this.toggleAttribute('data-selected', Boolean(modelState));\n            e.stopPropagation();\n        };\n        this._onDragOverDocument = (e) => {\n            if (!isFirefox) {\n                throw new Error('FireFox only');\n            }\n            this._currentClientX = e.clientX;\n            this._currentClientY = e.clientY;\n        };\n        this.onDragStart = (e, draggable = false) => {\n            if (this._dragPreview || !e.dataTransfer)\n                return;\n            e.dataTransfer.effectAllowed = 'move';\n            const modelState = this._handleAnchorState;\n            let draggingBlockElements = this.selectedBlocks;\n            if (modelState && !draggingBlockElements.includes(modelState.element)) {\n                draggingBlockElements = [modelState.element];\n                // select current block\n                this.setSelectedBlock(modelState);\n            }\n            this._draggingElements = draggingBlockElements;\n            this._createDragPreview(e, getBlockElementsExcludeSubtrees(draggingBlockElements), draggable);\n            this.setDragType(true);\n        };\n        this.onDrag = (e, passed, isScrolling) => {\n            this._dragHandle.style.cursor = 'grabbing';\n            let x = e.clientX;\n            let y = e.clientY;\n            if (!passed && isFirefox) {\n                // In Firefox, `pageX` and `pageY` are always set to 0.\n                // Refs: https://stackoverflow.com/questions/13110349/pagex-and-pagey-are-always-set-to-0-in-firefox-during-the-ondrag-event.\n                x = this._currentClientX;\n                y = this._currentClientY;\n            }\n            if (!this._indicator ||\n                (!passed &&\n                    this._indicator.rect &&\n                    this._indicator.rect.left === x &&\n                    this._indicator.rect.top === y)) {\n                return;\n            }\n            if (this._dragPreview && e.screenY) {\n                const { x: offsetX, y: offsetY } = this._dragPreview.offset;\n                const l = x + offsetX;\n                const t = y + offsetY;\n                const s = this._scale;\n                this._dragPreview.style.transform = `translate(${l}px, ${t}px) scale(${s})`;\n            }\n            if (isScrolling)\n                return;\n            const point = new Point(x, y);\n            const element = this._getClosestBlockElement(point.clone());\n            let type = 'none';\n            let rect = null;\n            let lastModelState = null;\n            if (element) {\n                // Array: array does not contains the target\n                // DOM: elements does not contains the target\n                if (!this._draggingElements.includes(element) &&\n                    !isContainedIn(this._draggingElements, element)) {\n                    const model = getModelByBlockElement(element);\n                    const result = calcDropTarget(point, model, element, this._draggingElements, this._scale);\n                    if (result) {\n                        type = result.type;\n                        rect = result.rect;\n                        lastModelState = result.modelState;\n                    }\n                }\n            }\n            this._indicator.rect = rect;\n            this._lastDroppingType = type;\n            this._lastDroppingTarget = lastModelState;\n        };\n        this.onDragEnd = (e, passed) => {\n            this._stopPropagation = false;\n            const dropEffect = e.dataTransfer?.dropEffect ?? 'none';\n            this._removeDragPreview();\n            this.setDragType(false);\n            // `Esc`\n            if (!passed && dropEffect === 'none') {\n                this.hide(true);\n                return;\n            }\n            assertExists(this._draggingElements);\n            // `drag.clientY` !== `dragend.clientY` in chrome.\n            this.onDropCallback?.(this._indicator?.rect?.min ?? new Point(e.clientX, e.clientY), \n            // blockElements include subtrees\n            this._draggingElements, this._lastDroppingTarget, this._lastDroppingType);\n            this.hide(true);\n        };\n        this.getDropAllowedBlocks = () => {\n            console.warn('you may forget to set `getAllowedBlocks`');\n            return [];\n        };\n        this.addEventListener('beforeprint', () => this.hide(true));\n        this.onDropCallback = options?.onDropCallback;\n        this.setDragType = options?.setDragType;\n        this.setSelectedBlock = options?.setSelectedBlock;\n        this._getSelectedBlocks = options?.getSelectedBlocks;\n        this._getClosestBlockElement = options?.getClosestBlockElement;\n        options?.container.appendChild(this);\n        this._container = options?.container;\n    }\n    get selectedBlocks() {\n        return this._getSelectedBlocks() ?? [];\n    }\n    onContainerMouseMove(event, modelState) {\n        const frameBlock = this._container.querySelector('.affine-frame-block-container');\n        assertExists(frameBlock);\n        const frameBlockRect = frameBlock.getBoundingClientRect();\n        // See https://github.com/toeverything/blocksuite/issues/1611\n        if (event.raw.clientY < frameBlockRect.y) {\n            this.hide();\n        }\n        if (modelState) {\n            const { rect, element } = modelState;\n            let startX = rect.left;\n            let startY = rect.top;\n            let height = rect.height;\n            let selected = false;\n            const selectedBlocks = this.selectedBlocks;\n            if (selectedBlocks.includes(element)) {\n                selected = true;\n                if (selectedBlocks.length > 1) {\n                    const tempSelectedBlocks = getBlockElementsExcludeSubtrees(selectedBlocks);\n                    const first = getRectByBlockElement(tempSelectedBlocks[0]);\n                    const last = getRectByBlockElement(tempSelectedBlocks[tempSelectedBlocks.length - 1]);\n                    startX = first.left;\n                    startY = first.top;\n                    height = last.bottom - first.top;\n                }\n            }\n            this.toggleAttribute('data-selected', selected);\n            this._handleAnchorState = modelState;\n            this.style.display = 'block';\n            this.style.height = `${height / this._scale}px`;\n            this.style.width = `${DRAG_HANDLE_WIDTH}px`;\n            const containerRect = this._container.getBoundingClientRect();\n            const posX = startX -\n                containerRect.left -\n                (DRAG_HANDLE_WIDTH + DRAG_HANDLE_OFFSET_LEFT) * this._scale;\n            const posY = startY - containerRect.top;\n            this.style.transform = `translate(${posX}px, ${posY}px) scale(${this._scale})`;\n            this.style.opacity = `${(1 -\n                (event.raw.clientX - startX) / rect.width).toFixed(2)}`;\n            const top = this._calcDragHandleY(event.raw.clientY, startY, height, this._scale);\n            this._dragHandle.style.transform = `translateY(${top}px)`;\n            if (this._handleAnchorDisposable) {\n                this._handleAnchorDisposable.dispose();\n            }\n            this._handleAnchorDisposable = modelState.model.propsUpdated.on(() => {\n                this.hide();\n            });\n            return;\n        }\n        this.hide();\n    }\n    hide(force = false) {\n        this.style.display = 'none';\n        if (force)\n            this.reset();\n    }\n    reset() {\n        this._handleAnchorState = null;\n        this._lastDroppingType = 'none';\n        this._lastDroppingTarget = null;\n        if (this._indicator) {\n            this._indicator.rect = null;\n        }\n        this._draggingElements.forEach(e => {\n            e.style.opacity = '1';\n        });\n        this._draggingElements = [];\n    }\n    setPointerEvents(value) {\n        this.style.pointerEvents = value;\n    }\n    setScale(value = 1) {\n        this._scale = value;\n    }\n    firstUpdated() {\n        this.style.display = 'none';\n        this.style.position = 'absolute';\n        this._indicator = (document.querySelector('affine-drag-indicator'));\n        if (!this._indicator) {\n            this._indicator = (document.createElement('affine-drag-indicator'));\n            document.body.appendChild(this._indicator);\n        }\n        const disposables = this._disposables;\n        // event bindings\n        // document\n        if (isFirefox) {\n            disposables.addFromEvent(this._container, 'dragover', this._onDragOverDocument);\n        }\n        // document.body\n        disposables.addFromEvent(document.body, 'dragover', handlePreventDocumentDragOverDelay, false);\n        // host\n        disposables.addFromEvent(this, 'mousemove', this._onMouseMoveOnHost);\n        // drag handle\n        disposables.addFromEvent(this._dragHandle, 'click', this._onClick);\n        // 1. In edgeless, native DnD will work fine.\n        // 2. In page, hosted with editor-container mouse events and scroll wheel support.\n        disposables.addFromEvent(this._dragHandle, 'dragstart', this.onDragStart);\n        disposables.addFromEvent(this._dragHandle, 'drag', this.onDrag);\n        disposables.addFromEvent(this._dragHandle, 'dragend', this.onDragEnd);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        // cleanup\n        this.hide(true);\n        this._handleAnchorDisposable?.dispose();\n    }\n    _onMouseMoveOnHost(e) {\n        if (isFirefox) {\n            this._currentClientX = e.clientX;\n            this._currentClientY = e.clientY;\n        }\n        if (this._stopPropagation) {\n            e.stopPropagation();\n        }\n        if (!this._handleAnchorState) {\n            return;\n        }\n        const { rect, element } = this._handleAnchorState;\n        const selectedBlocks = this.selectedBlocks;\n        let startY = rect.top;\n        let height = rect.height;\n        if (selectedBlocks.includes(element) && selectedBlocks.length > 1) {\n            const tempSelectedBlocks = getBlockElementsExcludeSubtrees(selectedBlocks);\n            const first = getRectByBlockElement(tempSelectedBlocks[0]);\n            const last = getRectByBlockElement(tempSelectedBlocks[tempSelectedBlocks.length - 1]);\n            startY = first.top;\n            height = last.bottom - first.top;\n        }\n        const top = this._calcDragHandleY(e.clientY, startY, height, this._scale);\n        this._dragHandle.style.cursor = 'grab';\n        this._dragHandle.style.transform = `translateY(${top}px)`;\n    }\n    _calcDragHandleY(clientY, startY, height, scale) {\n        return (Math.max(0, Math.min(clientY - startY - (DRAG_HANDLE_HEIGHT * scale) / 2, height - DRAG_HANDLE_HEIGHT * scale)) / scale);\n    }\n    _createDragPreview(e, blockElements, grabbing = false) {\n        const dragPreview = (this._dragPreview = new DragPreview());\n        const containerRect = this._container.getBoundingClientRect();\n        const rect = blockElements[0].getBoundingClientRect();\n        const { clientX, clientY } = e;\n        const s = this._scale;\n        const l = rect.left - containerRect.left;\n        const t = rect.top - containerRect.top;\n        dragPreview.offset.x = l - clientX;\n        dragPreview.offset.y = t - clientY;\n        dragPreview.style.width = `${rect.width / s}px`;\n        dragPreview.style.transform = `translate(${l}px, ${t}px) scale(${s})`;\n        const x = -dragPreview.offset.x - containerRect.left - 24 / 2;\n        const y = -dragPreview.offset.y - containerRect.top - 24 / 2;\n        dragPreview.style.setProperty('--x', `${x}px`);\n        dragPreview.style.setProperty('--y', `${y}px`);\n        const fragment = document.createDocumentFragment();\n        blockElements.forEach(e => {\n            const c = document.createElement('div');\n            c.classList.add('affine-block-element');\n            render(e.render(), c);\n            fragment.appendChild(c);\n        });\n        dragPreview.appendChild(fragment);\n        this._container.appendChild(dragPreview);\n        if (grabbing) {\n            dragPreview.classList.add('grabbing');\n        }\n        requestAnimationFrame(() => {\n            dragPreview.querySelector('rich-text')?.vEditor?.rootElement.blur();\n        });\n    }\n    _removeDragPreview() {\n        if (this._dragPreview) {\n            this._dragPreview.remove();\n            this._dragPreview = null;\n        }\n    }\n    render() {\n        return html `\n      <div class=\"affine-drag-handle-line\"></div>\n      <div class=\"affine-drag-handle\" draggable=\"true\">\n        <svg\n          class=\"affine-drag-handle-normal\"\n          width=\"16\"\n          height=\"18\"\n          viewBox=\"0 0 16 12\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <rect\n            x=\"7.7782\"\n            y=\"0.707107\"\n            width=\"10\"\n            height=\"10\"\n            rx=\"2.5\"\n            transform=\"rotate(45 7.7782 0.707107)\"\n          />\n        </svg>\n\n        <svg\n          class=\"affine-drag-handle-hover\"\n          width=\"16\"\n          height=\"18\"\n          viewBox=\"0 0 16 12\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M2.41421 6.58579L6.58579 2.41421C7.36684 1.63317 8.63316 1.63316 9.41421 2.41421L13.5858 6.58579C14.3668 7.36684 14.3668 8.63316 13.5858 9.41421L9.41421 13.5858C8.63316 14.3668 7.36684 14.3668 6.58579 13.5858L2.41421 9.41421C1.63317 8.63316 1.63316 7.36684 2.41421 6.58579Z\"\n            stroke-width=\"1.5\"\n          />\n          <path\n            class=\"ok\"\n            d=\"M5 8.5L7.5 10.5L10.5 7\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n        </svg>\n      </div>\n    `;\n    }\n};\nDragHandle.styles = css `\n    :host {\n      top: 0;\n      left: 0;\n      overflow: hidden;\n      width: ${DRAG_HANDLE_WIDTH + 8}px;\n      transform-origin: 0 0;\n      pointer-events: none;\n      user-select: none;\n    }\n\n    :host(:hover) > .affine-drag-handle-line {\n      opacity: 1;\n    }\n\n    .affine-drag-handle-line {\n      opacity: 0;\n      width: 1px;\n      height: 100%;\n      position: absolute;\n      left: ${(DRAG_HANDLE_WIDTH - 1) / 2}px;\n      background-color: var(--affine-icon-color);\n      transition: opacity ease-in-out 300ms;\n      pointer-events: none;\n    }\n\n    .affine-drag-handle {\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: ${DRAG_HANDLE_WIDTH}px;\n      height: ${DRAG_HANDLE_HEIGHT}px;\n      /* background-color: var(--affine-white-90); */\n      pointer-events: auto;\n      color: var(--affine-icon-color);\n    }\n\n    @media print {\n      .affine-drag-handle-line {\n        display: none;\n      }\n\n      .affine-drag-handle {\n        display: none;\n      }\n    }\n\n    .affine-drag-handle-normal {\n      display: flex;\n      stroke: currentcolor;\n    }\n\n    .affine-drag-handle-hover {\n      fill: currentcolor;\n      transition: opacity ease-in-out 300ms;\n    }\n\n    .affine-drag-handle-hover path.ok {\n      stroke: var(--affine-white-90);\n    }\n\n    .affine-drag-handle-hover {\n      display: none;\n    }\n\n    :host(:hover) .affine-drag-handle-normal,\n    :host([data-selected]) .affine-drag-handle-normal {\n      display: none !important;\n    }\n\n    :host(:hover) .affine-drag-handle-hover,\n    :host([data-selected]) .affine-drag-handle-hover {\n      display: flex !important;\n      /* padding-top: 5px !important; FIXME */\n    }\n  `;\n__decorate([\n    query('.affine-drag-handle')\n], DragHandle.prototype, \"_dragHandle\", void 0);\nDragHandle = __decorate([\n    customElement('affine-drag-handle')\n], DragHandle);\nexport { DragHandle };\n//# sourceMappingURL=drag-handle.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { IconButton } from '../button.js';\n/**\n * @deprecated Use {@link IconButton} instead.\n */\nlet FormatBarButton = class FormatBarButton extends IconButton {\n    constructor() {\n        super(...arguments);\n        this.width = '32px';\n        this.height = '32px';\n        // TODO update color when active\n        this.active = false;\n        this._mousedown = (e) => {\n            // prevents catching or bubbling in editor-container\n            e.stopPropagation();\n            // disable default behavior (e.g., change selection focus)\n            e.preventDefault();\n        };\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.addEventListener('mousedown', this._mousedown);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener('mousedown', this._mousedown);\n    }\n};\nFormatBarButton.styles = css `\n    ${IconButton.styles}\n\n    :host {\n      width: var(--button-width);\n      height: var(--button-height);\n      fill: var(--affine-icon-color);\n      white-space: nowrap;\n      user-select: none;\n      gap: 8px;\n    }\n  `;\n__decorate([\n    property()\n], FormatBarButton.prototype, \"width\", void 0);\n__decorate([\n    property()\n], FormatBarButton.prototype, \"height\", void 0);\n__decorate([\n    property()\n], FormatBarButton.prototype, \"active\", void 0);\nFormatBarButton = __decorate([\n    customElement('format-bar-button')\n], FormatBarButton);\nexport { FormatBarButton };\n//# sourceMappingURL=button.js.map","import { css } from 'lit';\nimport { tooltipStyle } from '../tooltip/tooltip.js';\nconst paragraphPanelStyle = css `\n  .paragraph-button > svg:nth-child(2) {\n    transition-duration: 0.3s;\n  }\n  .paragraph-button:is(:hover, :focus-visible, :active) > svg:nth-child(2) {\n    transform: rotate(180deg);\n  }\n\n  .paragraph-panel {\n    font-size: var(--affine-font-sm);\n    box-sizing: border-box;\n    position: absolute;\n    min-width: 173px;\n    padding: 8px 4px;\n    overflow-y: auto;\n\n    background: var(--affine-background-overlay-panel-color);\n    box-shadow: var(--affine-shadow-2);\n    border-radius: 8px;\n    z-index: var(--affine-z-index-popover);\n  }\n`;\nexport const formatQuickBarStyle = css `\n  .format-quick-bar {\n    box-sizing: border-box;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    padding: 4px 8px;\n    gap: 4px;\n    height: 40px;\n\n    border-radius: 8px;\n    background: var(--affine-background-overlay-panel-color);\n    box-shadow: var(--affine-shadow-2);\n    z-index: var(--affine-z-index-popover);\n    user-select: none;\n  }\n\n  .divider {\n    width: 1px;\n    height: 24px;\n    background-color: var(--affine-border-color);\n  }\n\n  format-bar-button svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  ${paragraphPanelStyle}\n  ${tooltipStyle}\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar FormatQuickBar_1;\nimport './button.js';\nimport { ArrowDownIcon, paragraphConfig, } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { assertExists, matchFlavours, } from '@blocksuite/store';\nimport { Slot } from '@blocksuite/store';\nimport { html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { getCurrentBlockRange, restoreSelection, } from '../../__internal__/utils/block-range.js';\nimport { getRichTextByModel } from '../../__internal__/utils/index.js';\nimport { stopPropagation } from '../../page-block/edgeless/utils.js';\nimport { actionConfig } from '../../page-block/utils/const.js';\nimport { formatConfig } from '../../page-block/utils/format-config.js';\nimport { getCurrentCombinedFormat, onModelElementUpdated, updateBlockType, } from '../../page-block/utils/index.js';\nimport { compareTopAndBottomSpace } from '../../page-block/utils/position.js';\nimport { formatQuickBarStyle } from './styles.js';\nfunction ParagraphPanel(showParagraphPanel, paragraphPanelMaxHeight, paragraphType, models, positionUpdated, onHover, onHoverEnd, onUpdateModels, onParagraphTypeChange) {\n    if (showParagraphPanel === 'hidden') {\n        return html ``;\n    }\n    const page = models[0].page;\n    assertExists(page);\n    const styles = styleMap({\n        left: '0',\n        top: showParagraphPanel === 'bottom' ? 'calc(100% + 4px)' : null,\n        bottom: showParagraphPanel === 'top' ? 'calc(100% + 4px)' : null,\n        maxHeight: paragraphPanelMaxHeight,\n    });\n    const updateParagraphType = (flavour, type) => {\n        // Already in the target format, should convert back to text\n        const alreadyTargetType = paragraphType === `${flavour}/${type}`;\n        const { flavour: defaultFlavour, type: defaultType } = paragraphConfig[0];\n        const targetFlavour = alreadyTargetType ? defaultFlavour : flavour;\n        const targetType = alreadyTargetType ? defaultType : type;\n        const newModels = updateBlockType(models, targetFlavour, targetType);\n        // Reset selection if the target is code block\n        if (targetFlavour === 'affine:code') {\n            if (newModels.length !== 1) {\n                throw new Error(\"Failed to reset selection! New model length isn't 1\");\n            }\n            const codeModel = newModels[0];\n            onModelElementUpdated(codeModel, () => {\n                restoreSelection({\n                    type: 'Block',\n                    startOffset: 0,\n                    endOffset: codeModel.text?.length ?? 0,\n                    models: [codeModel],\n                });\n            });\n        }\n        onUpdateModels(newModels);\n        onParagraphTypeChange(`${targetFlavour}/${targetType}`);\n        positionUpdated.emit();\n    };\n    return html ` <div\n    class=\"paragraph-panel\"\n    style=\"${styles}\"\n    @mouseover=\"${onHover}\"\n    @mouseout=\"${onHoverEnd}\"\n  >\n    ${paragraphConfig\n        .filter(({ flavour }) => flavour !== 'affine:divider')\n        .filter(({ flavour }) => page.schema.flavourSchemaMap.has(flavour))\n        .map(({ flavour, type, name, icon }) => html `<format-bar-button\n          width=\"100%\"\n          style=\"padding-left: 12px; justify-content: flex-start;\"\n          text=\"${name}\"\n          data-testid=\"${flavour}/${type}\"\n          @click=\"${() => updateParagraphType(flavour, type)}\"\n        >\n          ${icon}\n        </format-bar-button>`)}\n  </div>`;\n}\nlet FormatQuickBar = FormatQuickBar_1 = class FormatQuickBar extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.left = null;\n        this.top = null;\n        this.abortController = new AbortController();\n        // Sometimes the quick bar need to update position\n        this.positionUpdated = new Slot();\n        this.models = [];\n        this._paragraphType = `${paragraphConfig[0].flavour}/${paragraphConfig[0].type}`;\n        this._paragraphPanelHoverDelay = 150;\n        this._paragraphPanelTimer = 0;\n        this._showParagraphPanel = 'hidden';\n        this.paragraphPanelMaxHeight = null;\n        this._format = {};\n        this._customElements = [];\n        this._selectionChangeHandler = () => {\n            const blockRange = getCurrentBlockRange(this.page);\n            if (!blockRange) {\n                this.abortController.abort();\n                return;\n            }\n            // If the selection is collapsed, abort the format quick bar\n            if (blockRange.type === 'Native' &&\n                blockRange.models.length === 1 &&\n                blockRange.startOffset === blockRange.endOffset) {\n                this.abortController.abort();\n                return;\n            }\n            this._format = getCurrentCombinedFormat(this.page);\n            this.positionUpdated.emit();\n        };\n    }\n    update(changedProperties) {\n        super.update(changedProperties);\n        if (this._customElements.length === 0 &&\n            FormatQuickBar_1.customElements.length !== 0) {\n            this._customElements = FormatQuickBar_1.customElements.map(element => element(this.page, () => getCurrentBlockRange(this.page)));\n            this.customItemsElement.append(...this._customElements);\n            this._disposables.add(() => {\n                this._customElements.forEach(element => {\n                    element.remove();\n                });\n                this._customElements = [];\n                this.customItemsElement.innerHTML = '';\n            });\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const startModel = this.models[0];\n        this._paragraphType = `${startModel.flavour}/${startModel.type}`;\n        this._format = getCurrentCombinedFormat(this.page);\n        this.addEventListener('pointerdown', (e) => {\n            // Prevent click event from making selection lost\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        this.abortController.signal.addEventListener('abort', () => {\n            this.remove();\n        });\n        document.addEventListener('selectionchange', this._selectionChangeHandler);\n        const mutationObserver = new MutationObserver(() => {\n            if (!this.page) {\n                return;\n            }\n            this._format = getCurrentCombinedFormat(this.page);\n        });\n        this.models.forEach(model => {\n            const richText = getRichTextByModel(model);\n            if (!richText) {\n                console.warn('Format quick bar may not work properly! Cannot find rich text node by model. model:', model);\n                return;\n            }\n            mutationObserver.observe(richText, {\n                // One or more children have been added to and/or removed\n                // from the tree.\n                childList: true,\n                // Omit (or set to false) to observe only changes to the parent node\n                subtree: true,\n            });\n        });\n        this._disposables.add(() => mutationObserver.disconnect());\n        this._disposables.add(() => document.removeEventListener('selectionchange', this._selectionChangeHandler));\n    }\n    _onHover() {\n        if (this._showParagraphPanel !== 'hidden') {\n            clearTimeout(this._paragraphPanelTimer);\n            return;\n        }\n        this._paragraphPanelTimer = window.setTimeout(async () => {\n            const { placement, height } = compareTopAndBottomSpace(this.formatQuickBarElement, document.body, 10);\n            this._showParagraphPanel = placement;\n            this.paragraphPanelMaxHeight = height + 'px';\n        }, this._paragraphPanelHoverDelay);\n    }\n    _onHoverEnd() {\n        if (this._showParagraphPanel !== 'hidden') {\n            // Prepare to disappear\n            this._paragraphPanelTimer = window.setTimeout(async () => {\n                this._showParagraphPanel = 'hidden';\n            }, this._paragraphPanelHoverDelay * 2);\n            return;\n        }\n        clearTimeout(this._paragraphPanelTimer);\n    }\n    render() {\n        const page = this.page;\n        if (!this.models.length || !page) {\n            console.error('Failed to render format-quick-bar! no model or page not found!', this.models, page);\n            return html ``;\n        }\n        const styles = styleMap({\n            left: this.left,\n            top: this.top,\n        });\n        const actionItems = actionConfig\n            .filter(({ showWhen = () => true }) => showWhen(page, this.models))\n            .map(({ id, name, icon, action, enabledWhen, disabledToolTip }) => {\n            const enabled = enabledWhen(page);\n            const toolTip = enabled\n                ? html `<tool-tip inert role=\"tooltip\">${name}</tool-tip>`\n                : html `<tool-tip tip-position=\"top\" inert role=\"tooltip\"\n              >${disabledToolTip}</tool-tip\n            >`;\n            return html `<format-bar-button\n          class=\"has-tool-tip\"\n          data-testid=${id}\n          ?disabled=${!enabled}\n          @click=${() => enabled && action({ page })}\n        >\n          ${icon}${toolTip}\n        </format-bar-button>`;\n        });\n        if (this.models.length === 1 &&\n            matchFlavours(this.models[0], ['affine:database'])) {\n            return html `<div\n        class=\"format-quick-bar\"\n        style=\"${styles}\"\n        @pointerdown=${stopPropagation}\n      >\n        ${actionItems}\n      </div>`;\n        }\n        const paragraphIcon = paragraphConfig.find(({ flavour, type }) => `${flavour}/${type}` === this._paragraphType)?.icon ?? paragraphConfig[0].icon;\n        const paragraphItems = html ` <format-bar-button\n      class=\"paragraph-button\"\n      width=\"52px\"\n      @mouseover=\"${this._onHover}\"\n      @mouseout=\"${this._onHoverEnd}\"\n    >\n      ${paragraphIcon} ${ArrowDownIcon}\n    </format-bar-button>`;\n        const paragraphPanel = ParagraphPanel(this._showParagraphPanel, this.paragraphPanelMaxHeight, this._paragraphType, this.models, this.positionUpdated, this._onHover, this._onHoverEnd, newModels => (this.models = newModels), paragraphType => (this._paragraphType = paragraphType));\n        const formatItems = formatConfig\n            .filter(({ showWhen = () => true }) => showWhen(this.models))\n            .map(({ id, name, icon, action, activeWhen }) => html ` <format-bar-button\n          class=\"has-tool-tip\"\n          data-testid=${id}\n          ?active=${activeWhen(this._format)}\n          @click=${() => {\n            action({\n                page,\n                abortController: this.abortController,\n                format: this._format,\n            });\n            // format state need to update after format\n            this._format = getCurrentCombinedFormat(page);\n            this.positionUpdated.emit();\n        }}\n        >\n          ${icon}\n          <tool-tip inert role=\"tooltip\">${name}</tool-tip>\n        </format-bar-button>`);\n        return html ` <div\n      class=\"format-quick-bar\"\n      style=\"${styles}\"\n      @pointerdown=${stopPropagation}\n    >\n      <div class=\"custom-items\"></div>\n      ${this._customElements.length > 0\n            ? html `<div class=\"divider\"></div>`\n            : null}\n      ${paragraphItems}\n      <div class=\"divider\"></div>\n      ${formatItems}\n      ${formatItems.length ? html ` <div class=\"divider\"></div>` : ''}\n      ${actionItems} ${paragraphPanel}\n    </div>`;\n    }\n};\nFormatQuickBar.styles = formatQuickBarStyle;\nFormatQuickBar.customElements = [];\n__decorate([\n    property()\n], FormatQuickBar.prototype, \"page\", void 0);\n__decorate([\n    property()\n], FormatQuickBar.prototype, \"left\", void 0);\n__decorate([\n    property()\n], FormatQuickBar.prototype, \"top\", void 0);\n__decorate([\n    property()\n], FormatQuickBar.prototype, \"abortController\", void 0);\n__decorate([\n    property()\n], FormatQuickBar.prototype, \"positionUpdated\", void 0);\n__decorate([\n    property()\n], FormatQuickBar.prototype, \"models\", void 0);\n__decorate([\n    state()\n], FormatQuickBar.prototype, \"_paragraphType\", void 0);\n__decorate([\n    state()\n], FormatQuickBar.prototype, \"_paragraphPanelHoverDelay\", void 0);\n__decorate([\n    state()\n], FormatQuickBar.prototype, \"_paragraphPanelTimer\", void 0);\n__decorate([\n    state()\n], FormatQuickBar.prototype, \"_showParagraphPanel\", void 0);\n__decorate([\n    state()\n], FormatQuickBar.prototype, \"_format\", void 0);\n__decorate([\n    query('.format-quick-bar')\n], FormatQuickBar.prototype, \"formatQuickBarElement\", void 0);\n__decorate([\n    query('.custom-items')\n], FormatQuickBar.prototype, \"customItemsElement\", void 0);\nFormatQuickBar = FormatQuickBar_1 = __decorate([\n    customElement('format-quick-bar')\n], FormatQuickBar);\nexport { FormatQuickBar };\n//# sourceMappingURL=format-bar-node.js.map","import './button.js';\nimport { matchFlavours, Slot } from '@blocksuite/store';\nimport { getCurrentBlockRange } from '../../__internal__/utils/block-range.js';\nimport { getViewportElement } from '../../__internal__/utils/query.js';\nimport { throttle } from '../../__internal__/utils/std.js';\nimport { onModelElementUpdated } from '../../page-block/index.js';\nimport { calcPositionPointByRange, calcSafeCoordinate, } from '../../page-block/utils/position.js';\nimport { FormatQuickBar } from './format-bar-node.js';\nlet formatQuickBarInstance = null;\nexport const showFormatQuickBar = async ({ page, anchorEl, direction = 'right-bottom', container = document.body, abortController = new AbortController(), }) => {\n    // Reuse previous format quick bar\n    if (formatQuickBarInstance) {\n        return;\n    }\n    // Init format quick bar\n    const blockRange = getCurrentBlockRange(page);\n    if (!blockRange) {\n        return;\n    }\n    blockRange.models = blockRange.models.filter(model => matchFlavours(model, [\n        'affine:paragraph',\n        'affine:list',\n        'affine:code',\n        'affine:database',\n    ]));\n    const models = blockRange.models;\n    if (models.length === 0) {\n        return;\n    }\n    if (matchFlavours(models[0], ['affine:database']) &&\n        blockRange.type === 'Native') {\n        return;\n    }\n    const formatQuickBar = new FormatQuickBar();\n    formatQuickBar.page = page;\n    formatQuickBar.models = models;\n    formatQuickBar.abortController = abortController;\n    const positionUpdatedSlot = new Slot();\n    formatQuickBar.positionUpdated = positionUpdatedSlot;\n    formatQuickBarInstance = formatQuickBar;\n    abortController.signal.addEventListener('abort', () => {\n        formatQuickBarInstance = null;\n    });\n    // Handle Scroll\n    // Once performance problems occur, it can be mitigated increasing throttle limit\n    const updatePos = throttle(() => {\n        if (abortController.signal.aborted) {\n            return;\n        }\n        const positioningPoint = anchorEl instanceof Range\n            ? calcPositionPointByRange(anchorEl, direction)\n            : anchorEl.getBoundingClientRect();\n        // TODO maybe use the editor container as the boundary rect to avoid the format bar being covered by other elements\n        const boundaryRect = document.body.getBoundingClientRect();\n        const formatBarRect = formatQuickBar.formatQuickBarElement.getBoundingClientRect();\n        // Add offset to avoid the quick bar being covered by the window border\n        const gapY = 5;\n        const isBottom = direction.includes('bottom');\n        const safeCoordinate = calcSafeCoordinate({\n            positioningPoint,\n            objRect: formatBarRect,\n            boundaryRect,\n            // place the format bar in the center of the position point\n            offsetX: -formatBarRect.width / 2,\n            offsetY: isBottom ? gapY : -formatBarRect.height - gapY,\n        });\n        formatQuickBar.left = `${safeCoordinate.x}px`;\n        formatQuickBar.top = `${safeCoordinate.y}px`;\n    }, 10);\n    if (!page.root) {\n        throw new Error(\"Failed to get page's root element\");\n    }\n    const scrollContainer = getViewportElement(page);\n    if (scrollContainer) {\n        // Note: in edgeless mode, the scroll container is not exist!\n        scrollContainer.addEventListener('scroll', updatePos, { passive: true });\n    }\n    positionUpdatedSlot.on(updatePos);\n    window.addEventListener('resize', updatePos, { passive: true });\n    // Mount\n    container.appendChild(formatQuickBar);\n    // Handle selection change\n    const pointerDownHandler = (e) => {\n        if (e.target === formatQuickBar) {\n            return;\n        }\n        abortController.abort();\n    };\n    const popstateHandler = () => {\n        abortController.abort();\n    };\n    document.addEventListener('pointerdown', pointerDownHandler);\n    // Fix https://github.com/toeverything/AFFiNE/issues/855\n    window.addEventListener('popstate', popstateHandler);\n    onModelElementUpdated(blockRange.models[0], updatePos);\n    abortController.signal.addEventListener('abort', () => {\n        scrollContainer?.removeEventListener('scroll', updatePos);\n        window.removeEventListener('resize', updatePos);\n        document.removeEventListener('pointerdown', pointerDownHandler);\n        window.removeEventListener('popstate', popstateHandler);\n        positionUpdatedSlot.dispose();\n    });\n    return formatQuickBar;\n};\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BLOCK_ID_ATTR, BLOCK_SERVICE_LOADING_ATTR, } from '@blocksuite/global/config';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nlet Loader = class Loader extends LitElement {\n    constructor() {\n        super();\n        this.hostModel = null;\n        this.radius = '8px';\n        this.width = '150px';\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.hostModel) {\n            this.setAttribute(BLOCK_ID_ATTR, this.hostModel.id);\n            this.setAttribute(BLOCK_SERVICE_LOADING_ATTR, 'true');\n        }\n        const width = this.width;\n        this.style.setProperty('--loader-width', typeof width === 'string' ? width : `${width}px`);\n    }\n    render() {\n        return html `\n      <div class=\"load-container\">\n        <div class=\"load load1\"></div>\n        <div class=\"load load2\"></div>\n        <div class=\"load\"></div>\n      </div>\n    `;\n    }\n};\nLoader.styles = css `\n    .load-container {\n      margin: 10px auto;\n      width: var(--loader-width);\n      text-align: center;\n    }\n\n    .load-container .load {\n      width: 8px;\n      height: 8px;\n      background-color: var(--affine-text-primary-color);\n\n      border-radius: 100%;\n      display: inline-block;\n      -webkit-animation: bouncedelay 1.4s infinite ease-in-out;\n      animation: bouncedelay 1.4s infinite ease-in-out;\n      /* Prevent first frame from flickering when animation starts */\n      -webkit-animation-fill-mode: both;\n      animation-fill-mode: both;\n    }\n    .load-container .load1 {\n      -webkit-animation-delay: -0.32s;\n      animation-delay: -0.32s;\n    }\n    .load-container .load2 {\n      -webkit-animation-delay: -0.16s;\n      animation-delay: -0.16s;\n    }\n\n    @-webkit-keyframes bouncedelay {\n      0%,\n      80%,\n      100% {\n        -webkit-transform: scale(0.625);\n      }\n      40% {\n        -webkit-transform: scale(1);\n      }\n    }\n\n    @keyframes bouncedelay {\n      0%,\n      80%,\n      100% {\n        transform: scale(0);\n        -webkit-transform: scale(0.625);\n      }\n      40% {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n      }\n    }\n  `;\n__decorate([\n    property()\n], Loader.prototype, \"hostModel\", void 0);\n__decorate([\n    property()\n], Loader.prototype, \"radius\", void 0);\n__decorate([\n    property()\n], Loader.prototype, \"width\", void 0);\nLoader = __decorate([\n    customElement('loader-element')\n], Loader);\nexport { Loader };\n//# sourceMappingURL=loader.js.map","import { html } from 'lit';\nexport const CloseIcon = html `<svg\n  width=\"12\"\n  height=\"12\"\n  viewBox=\"0 0 12 12\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M0.343205 0.343144C0.636098 0.0502508 1.11097 0.0502508 1.40387 0.343144L6.00006 4.93934L10.5963 0.343144C10.8891 0.0502508 11.364 0.0502508 11.6569 0.343144C11.9498 0.636037 11.9498 1.11091 11.6569 1.4038L7.06072 6L11.6569 10.5962C11.9498 10.8891 11.9498 11.364 11.6569 11.6569C11.364 11.9497 10.8891 11.9497 10.5963 11.6569L6.00006 7.06066L1.40387 11.6569C1.11097 11.9497 0.636098 11.9497 0.343205 11.6569C0.0503118 11.364 0.0503118 10.8891 0.343205 10.5962L4.9394 6L0.343205 1.4038C0.0503118 1.11091 0.0503118 0.636037 0.343205 0.343144Z\"\n    fill=\"#77757D\"\n  />\n</svg>`;\nexport const ExportToMarkdownIcon = html `<svg\n  width=\"14\"\n  height=\"18\"\n  viewBox=\"0 0 14 18\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.80805 0.875L7.83342 0.875001C7.99918 0.875001 8.15815 0.940849 8.27536 1.05806L13.2754 6.05806C13.3926 6.17527 13.4584 6.33424 13.4584 6.5V13.8587C13.4584 14.3038 13.4584 14.6754 13.4336 14.9789C13.4078 15.2955 13.3518 15.5927 13.2086 15.8737C12.9889 16.3049 12.6383 16.6555 12.2071 16.8752C11.9261 17.0184 11.6289 17.0744 11.3123 17.1002C11.0088 17.125 10.6372 17.125 10.1921 17.125H3.80804C3.36292 17.125 2.99138 17.125 2.68786 17.1002C2.37129 17.0744 2.07407 17.0184 1.79302 16.8752C1.36182 16.6555 1.01124 16.3049 0.791525 15.8737C0.648322 15.5927 0.592396 15.2955 0.566531 14.9789C0.541732 14.6754 0.541739 14.3038 0.541748 13.8587V4.1413C0.541739 3.69618 0.541732 3.32464 0.566531 3.02111C0.592396 2.70454 0.648322 2.40732 0.791525 2.12627C1.01124 1.69507 1.36182 1.34449 1.79302 1.12478C2.07407 0.981574 2.37129 0.925648 2.68786 0.899783C2.99138 0.874984 3.36292 0.874991 3.80805 0.875ZM2.78965 2.14563C2.55038 2.16518 2.43598 2.20008 2.36051 2.23854C2.16451 2.3384 2.00515 2.49776 1.90528 2.69376C1.86683 2.76923 1.83193 2.88363 1.81238 3.1229C1.79223 3.36946 1.79175 3.68964 1.79175 4.16667V13.8333C1.79175 14.3104 1.79223 14.6305 1.81238 14.8771C1.83193 15.1164 1.86683 15.2308 1.90528 15.3062C2.00515 15.5022 2.16451 15.6616 2.36051 15.7615C2.43598 15.7999 2.55038 15.8348 2.78965 15.8544C3.03621 15.8745 3.35639 15.875 3.83342 15.875H10.1667C10.6438 15.875 10.964 15.8745 11.2105 15.8544C11.4498 15.8348 11.5642 15.7999 11.6397 15.7615C11.8357 15.6616 11.995 15.5022 12.0949 15.3062C12.1333 15.2308 12.1682 15.1164 12.1878 14.8771C12.2079 14.6305 12.2084 14.3104 12.2084 13.8333V7.125H8.66675C7.86133 7.125 7.20842 6.47208 7.20842 5.66667V2.125H3.83342C3.35639 2.125 3.03621 2.12549 2.78965 2.14563ZM8.45842 3.00888L11.3245 5.875H8.66675C8.55169 5.875 8.45842 5.78173 8.45842 5.66667V3.00888Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    d=\"M8.37009 13.1207L8.39316 10.2307H8.37585L7.31446 13.1207H6.62225L5.5897 10.2307H5.57239L5.59547 13.1207H4.66675V9.03662H6.06848L6.9972 11.6555H7.02027L7.90861 9.03662H9.33342V13.1207H8.37009Z\"\n    fill=\"#77757D\"\n  />\n</svg>`;\nexport const ExportToHTMLIcon = html `<svg\n  width=\"16\"\n  height=\"18\"\n  viewBox=\"0 0 16 18\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M4.80797 0.875L8.83333 0.875001C8.99909 0.875001 9.15806 0.940849 9.27527 1.05806L14.2753 6.05806C14.3925 6.17527 14.4583 6.33424 14.4583 6.5V11.5C14.4583 11.8452 14.1785 12.125 13.8333 12.125C13.4882 12.125 13.2083 11.8452 13.2083 11.5V7.125H9.66667C8.86125 7.125 8.20833 6.47208 8.20833 5.66667V2.125H4.83333C4.35631 2.125 4.03613 2.12549 3.78956 2.14563C3.5503 2.16518 3.43589 2.20008 3.36043 2.23854C3.16442 2.3384 3.00507 2.49776 2.9052 2.69376C2.86675 2.76923 2.83185 2.88363 2.8123 3.1229C2.79215 3.36946 2.79167 3.68964 2.79167 4.16667V11.5C2.79167 11.8452 2.51184 12.125 2.16667 12.125C1.82149 12.125 1.54167 11.8452 1.54167 11.5L1.54167 4.1413C1.54166 3.69618 1.54165 3.32464 1.56645 3.02111C1.59231 2.70454 1.64824 2.40732 1.79144 2.12627C2.01115 1.69507 2.36173 1.34449 2.79294 1.12478C3.07399 0.981574 3.3712 0.925648 3.68777 0.899783C3.9913 0.874984 4.36284 0.874991 4.80797 0.875ZM9.45833 3.00888L12.3244 5.875H9.66667C9.55161 5.875 9.45833 5.78173 9.45833 5.66667V3.00888Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    d=\"M3.2085 17.0607V15.4327H1.6905V17.0607H0.75V13.1667H1.6905V14.6407H3.2085V13.1667H4.149V17.0607H3.2085Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    d=\"M6.6167 13.9697V17.0607H5.6762V13.9697H4.5762V13.1667H7.7167V13.9697H6.6167Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    d=\"M11.677 17.0607L11.699 14.3052H11.6825L10.6705 17.0607H10.0105L9.026 14.3052H9.0095L9.0315 17.0607H8.146V13.1667H9.4825L10.368 15.6637H10.39L11.237 13.1667H12.5955V17.0607H11.677Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    d=\"M13.3989 17.0607V13.1667H14.3449V16.2412H15.8519V17.0607H13.3989Z\"\n    fill=\"#77757D\"\n  />\n</svg>`;\nexport const NotionIcon = html `<svg\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M3.22321 3.16561C3.69638 3.54965 3.87301 3.52049 4.76102 3.46134L13.1323 2.959C13.3106 2.959 13.1623 2.78075 13.1032 2.75158L11.7128 1.74689C11.4462 1.54028 11.0914 1.30289 10.4116 1.36203L2.30522 1.9535C2.01029 1.98267 1.95114 2.13094 2.06863 2.24924L3.22321 3.16561ZM3.72555 5.11664V13.9238C3.72555 14.3978 3.96214 14.5745 4.49527 14.5453L13.6946 14.013C14.2269 13.9838 14.2861 13.6581 14.2861 13.274V4.52517C14.2861 4.14112 14.1386 3.9337 13.8129 3.96368L4.19872 4.52517C3.84384 4.55434 3.72555 4.73178 3.72555 5.11664ZM12.8082 5.589C12.8666 5.85476 12.8082 6.12133 12.5409 6.1513L12.0977 6.23962V12.7417C11.7128 12.9491 11.3579 13.0674 11.0622 13.0674C10.589 13.0674 10.4707 12.9192 10.1158 12.476L7.21602 7.92409V12.3285L8.13401 12.5351C8.13401 12.5351 8.13401 13.0674 7.39346 13.0674L5.35249 13.1857C5.29334 13.0674 5.35249 12.7725 5.55991 12.7125L6.09223 12.5651V6.74196L5.35249 6.68282C5.29334 6.41625 5.44162 6.0322 5.85564 6.00222L8.04489 5.85557L11.0622 10.4658V6.38789L10.2925 6.29958C10.2341 5.97386 10.4707 5.73809 10.7664 5.70811L12.8082 5.58981V5.589ZM1.62462 1.15542L10.0559 0.534789C11.0905 0.445664 11.3571 0.505621 12.0085 0.977985L14.6993 2.86987C15.1433 3.19477 15.2916 3.28309 15.2916 3.63797V14.013C15.2916 14.6636 15.055 15.0476 14.2269 15.1068L4.43531 15.6982C3.81386 15.7274 3.51813 15.6391 3.19242 15.2251L1.21059 12.6534C0.855714 12.1802 0.708252 11.8262 0.708252 11.4113V2.19009C0.708252 1.65777 0.944029 1.21457 1.62462 1.15542Z\"\n    fill=\"black\"\n  />\n</svg>`;\nexport const NewIcon = html `<svg\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M13.1851 0.708313C13.5303 0.708313 13.8101 0.988135 13.8101 1.33331V2.18979H14.6666C15.0118 2.18979 15.2916 2.46962 15.2916 2.81479C15.2916 3.15997 15.0118 3.43979 14.6666 3.43979H13.8101V4.29628C13.8101 4.64145 13.5303 4.92128 13.1851 4.92128C12.8399 4.92128 12.5601 4.64145 12.5601 4.29628V3.43979H11.7036C11.3584 3.43979 11.0786 3.15997 11.0786 2.81479C11.0786 2.46962 11.3584 2.18979 11.7036 2.18979H12.5601V1.33331C12.5601 0.988135 12.8399 0.708313 13.1851 0.708313ZM6.51844 2.18979C6.77511 2.18979 7.00568 2.34672 7.09985 2.58549L8.18874 5.34639C8.3394 5.7284 8.37968 5.81859 8.43081 5.88998C8.48542 5.96623 8.55218 6.033 8.62844 6.08761C8.69983 6.13874 8.79002 6.17902 9.17203 6.32968L11.9329 7.41856C12.1717 7.51273 12.3286 7.74331 12.3286 7.99998C12.3286 8.25665 12.1717 8.48723 11.9329 8.58139L9.17203 9.67028C8.79002 9.82094 8.69983 9.86122 8.62844 9.91235C8.55218 9.96696 8.48542 10.0337 8.43081 10.11C8.37968 10.1814 8.3394 10.2716 8.18874 10.6536L7.09985 13.4145C7.00568 13.6532 6.77511 13.8102 6.51844 13.8102C6.26177 13.8102 6.03119 13.6532 5.93702 13.4145L4.84814 10.6536C4.69748 10.2716 4.6572 10.1814 4.60607 10.11C4.55146 10.0337 4.48469 9.96696 4.40844 9.91235C4.33705 9.86122 4.24685 9.82094 3.86484 9.67028L1.10395 8.58139C0.865175 8.48723 0.708252 8.25665 0.708252 7.99998C0.708252 7.74331 0.865175 7.51273 1.10395 7.41856L3.86484 6.32968C4.24685 6.17902 4.33705 6.13874 4.40844 6.08761C4.48469 6.033 4.55146 5.96623 4.60607 5.88998C4.6572 5.81859 4.69748 5.7284 4.84814 5.34639L5.93702 2.58549C6.03119 2.34672 6.26177 2.18979 6.51844 2.18979ZM6.51844 4.5183L6.01097 5.805C6.00357 5.82375 5.99627 5.8423 5.98905 5.86065C5.87158 6.15916 5.77495 6.40469 5.62232 6.61781C5.48801 6.80535 5.3238 6.96955 5.13626 7.10386C4.92315 7.25649 4.67762 7.35312 4.3791 7.4706C4.36076 7.47782 4.34221 7.48512 4.32346 7.49251L3.03676 7.99998L4.32346 8.50745C4.34221 8.51484 4.36075 8.52214 4.3791 8.52936C4.67762 8.64684 4.92315 8.74347 5.13626 8.8961C5.3238 9.03041 5.48801 9.19461 5.62232 9.38215C5.77495 9.59527 5.87157 9.84079 5.98905 10.1393C5.99627 10.1577 6.00357 10.1762 6.01097 10.195L6.51844 11.4817L7.0259 10.195C7.0333 10.1762 7.0406 10.1577 7.04782 10.1393C7.1653 9.8408 7.26193 9.59527 7.41455 9.38215C7.54887 9.19461 7.71307 9.03041 7.90061 8.8961C8.11373 8.74347 8.35926 8.64684 8.65777 8.52936C8.67612 8.52214 8.69467 8.51484 8.71342 8.50745L10.0001 7.99998L8.71342 7.49251C8.69467 7.48512 8.67612 7.47782 8.65777 7.4706C8.35926 7.35312 8.11373 7.25649 7.90061 7.10386C7.71307 6.96955 7.54887 6.80535 7.41455 6.61781C7.26193 6.40469 7.1653 6.15916 7.04782 5.86065C7.0406 5.8423 7.0333 5.82375 7.0259 5.805L6.51844 4.5183ZM13.1851 11.0787C13.5303 11.0787 13.8101 11.3585 13.8101 11.7037V12.5602H14.6666C15.0118 12.5602 15.2916 12.84 15.2916 13.1852C15.2916 13.5303 15.0118 13.8102 14.6666 13.8102H13.8101V14.6666C13.8101 15.0118 13.5303 15.2916 13.1851 15.2916C12.8399 15.2916 12.5601 15.0118 12.5601 14.6666V13.8102H11.7036C11.3584 13.8102 11.0786 13.5303 11.0786 13.1852C11.0786 12.84 11.3584 12.5602 11.7036 12.5602H12.5601V11.7037C12.5601 11.3585 12.8399 11.0787 13.1851 11.0787Z\"\n    fill=\"#A9A9AD\"\n  />\n</svg>`;\nexport const OpenInNewIcon = html `<svg\n  width=\"12\"\n  height=\"12\"\n  viewBox=\"0 0 12 12\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M7.83342 0.666687C7.83342 0.390545 8.05727 0.166687 8.33342 0.166687H11.3334C11.6096 0.166687 11.8334 0.390545 11.8334 0.666687V3.66669C11.8334 3.94283 11.6096 4.16669 11.3334 4.16669C11.0573 4.16669 10.8334 3.94283 10.8334 3.66669V1.87379L6.35364 6.35357C6.15837 6.54884 5.84179 6.54884 5.64653 6.35357C5.45127 6.15831 5.45127 5.84173 5.64653 5.64647L10.1263 1.16669H8.33342C8.05727 1.16669 7.83342 0.942829 7.83342 0.666687ZM2.77979 0.833353L5.66675 0.833354C5.94289 0.833354 6.16675 1.05721 6.16675 1.33335C6.16675 1.6095 5.94289 1.83335 5.66675 1.83335H2.80008C2.41846 1.83335 2.16232 1.83374 1.96507 1.84986C1.77365 1.8655 1.68213 1.89342 1.62176 1.92418C1.46495 2.00408 1.33747 2.13156 1.25758 2.28836C1.22681 2.34874 1.19889 2.44026 1.18325 2.63167C1.16714 2.82892 1.16675 3.08507 1.16675 3.46669V9.20002C1.16675 9.58164 1.16714 9.83778 1.18325 10.035C1.19889 10.2264 1.22681 10.318 1.25758 10.3783C1.33747 10.5351 1.46496 10.6626 1.62176 10.7425C1.68213 10.7733 1.77365 10.8012 1.96507 10.8168C2.16232 10.833 2.41846 10.8334 2.80008 10.8334H8.53342C8.91503 10.8334 9.17118 10.833 9.36843 10.8168C9.55985 10.8012 9.65137 10.7733 9.71174 10.7425C9.86854 10.6626 9.99603 10.5351 10.0759 10.3783C10.1067 10.318 10.1346 10.2264 10.1502 10.035C10.1664 9.83778 10.1667 9.58164 10.1667 9.20002V6.33335C10.1667 6.05721 10.3906 5.83335 10.6667 5.83335C10.9429 5.83335 11.1667 6.05721 11.1667 6.33335V9.22032C11.1668 9.57642 11.1668 9.87365 11.1469 10.1165C11.1262 10.3697 11.0815 10.6075 10.9669 10.8323C10.7912 11.1773 10.5107 11.4578 10.1657 11.6335C9.94089 11.7481 9.70312 11.7928 9.44986 11.8135C9.20704 11.8334 8.90981 11.8334 8.55372 11.8334H2.77978C2.42368 11.8334 2.12645 11.8334 1.88364 11.8135C1.63038 11.7928 1.39261 11.7481 1.16777 11.6335C0.822802 11.4578 0.542338 11.1773 0.36657 10.8323C0.252007 10.6075 0.207267 10.3697 0.186575 10.1165C0.166735 9.87364 0.166741 9.57641 0.166748 9.22031V3.4464C0.166741 3.0903 0.166735 2.79306 0.186575 2.55024C0.207267 2.29698 0.252007 2.05921 0.36657 1.83437C0.542338 1.48941 0.822802 1.20894 1.16777 1.03317C1.39261 0.918612 1.63038 0.873872 1.88364 0.85318C2.12646 0.83334 2.42369 0.833346 2.77979 0.833353Z\"\n    fill=\"#5872FB\"\n  />\n</svg>`;\nexport const HelpIcon = html `<svg\n  width=\"18\"\n  height=\"18\"\n  viewBox=\"0 0 18 18\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M9 2.125C5.20304 2.125 2.125 5.20304 2.125 9C2.125 12.797 5.20304 15.875 9 15.875C12.797 15.875 15.875 12.797 15.875 9C15.875 5.20304 12.797 2.125 9 2.125ZM0.875 9C0.875 4.51269 4.51269 0.875 9 0.875C13.4873 0.875 17.125 4.51269 17.125 9C17.125 13.4873 13.4873 17.125 9 17.125C4.51269 17.125 0.875 13.4873 0.875 9ZM8.97249 6.5C8.48797 6.5 8.07928 6.83137 7.96361 7.28079C7.87757 7.61507 7.53683 7.81631 7.20255 7.73027C6.86826 7.64423 6.66702 7.3035 6.75306 6.96921C7.00742 5.98094 7.90381 5.25 8.97249 5.25C10.2381 5.25 11.2642 6.27601 11.2642 7.54167C11.2642 8.23885 10.928 8.70316 10.5524 9.06572C10.3978 9.21488 10.2216 9.36095 10.0565 9.49784C10.0321 9.51805 10.008 9.53806 9.98417 9.55785C9.79133 9.71827 9.60144 9.87995 9.41445 10.0669C9.17037 10.311 8.77464 10.311 8.53057 10.0669C8.28649 9.82286 8.28649 9.42714 8.53057 9.18306C8.76025 8.95338 8.98703 8.76138 9.1848 8.59686C9.21087 8.57517 9.23619 8.55416 9.26081 8.53373C9.43034 8.39303 9.5663 8.28019 9.6843 8.1663C9.93364 7.92565 10.0142 7.76496 10.0142 7.54167C10.0142 6.96637 9.54779 6.5 8.97249 6.5ZM8.98084 12.75H8.97251C8.62733 12.75 8.34751 12.4702 8.34751 12.125C8.34751 11.7798 8.62733 11.5 8.97251 11.5H8.98084C9.32602 11.5 9.60584 11.7798 9.60584 12.125C9.60584 12.4702 9.32602 12.75 8.98084 12.75Z\"\n    fill=\"#77757D\"\n  />\n</svg>`;\n//# sourceMappingURL=import-export.js.map","import { css } from 'lit';\nimport { tooltipStyle } from '../tooltip/tooltip.js';\nexport const styles = css `\n  :host {\n    position: absolute;\n    width: 480px;\n    left: calc(50% - 480px / 2);\n    top: calc(50% - 270px / 2);\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-base);\n    line-height: var(--affine-line-height);\n    padding: 20px 40px 24px 40px;\n    gap: 19px;\n    display: flex;\n    flex-direction: column;\n    background: var(--affine-background-primary-color);\n    box-shadow: var(--affine-shadow-2);\n    border-radius: 16px;\n    z-index: var(--affine-z-index-popover);\n  }\n\n  :host([hidden]) {\n    display: none;\n  }\n\n  header {\n    cursor: move;\n    user-select: none;\n    font-size: var(--affine-font-h-6);\n    font-weight: 600;\n  }\n\n  a {\n    white-space: nowrap;\n    word-break: break-word;\n    color: var(--affine-link-color);\n    fill: var(--affine-link-color);\n    text-decoration: none;\n    cursor: pointer;\n  }\n\n  header icon-button {\n    margin-left: auto;\n  }\n\n  .button-container {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .button-container icon-button {\n    padding: 8px;\n    justify-content: flex-start;\n    gap: 8px;\n    width: 190px;\n    height: 40px;\n    box-shadow: var(--affine-shadow-1);\n  }\n\n  .footer {\n    display: flex;\n    align-items: center;\n    color: var(--affine-text-secondary-color);\n  }\n\n  .loading-header {\n    display: flex;\n    align-items: center;\n  }\n\n  .has-tool-tip {\n    display: flex;\n    margin-left: auto;\n  }\n\n  ${tooltipStyle}\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../loader.js';\nimport { CloseIcon, ExportToHTMLIcon, ExportToMarkdownIcon, HelpIcon, NewIcon, NotionIcon, } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport JSZip from 'jszip';\nimport { html, LitElement } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { ContentParser } from '../../__internal__/content-parser/index.js';\nimport { toast } from '../toast.js';\nimport { styles } from './styles.js';\nconst SHOW_LOADING_SIZE = 1024 * 200;\nlet ImportPage = class ImportPage extends WithDisposable(LitElement) {\n    constructor(workspace, multiple, onSuccess, abortController = new AbortController()) {\n        super();\n        this.workspace = workspace;\n        this.multiple = multiple;\n        this.onSuccess = onSuccess;\n        this.abortController = abortController;\n        this._loading = false;\n        this.x = 0;\n        this.y = 0;\n        this._startX = 0;\n        this._startY = 0;\n        this._loading = false;\n        this.x = 0;\n        this.y = 0;\n        this._startX = 0;\n        this._startY = 0;\n        this._onMouseMove = this._onMouseMove.bind(this);\n    }\n    loading() {\n        return this._loading;\n    }\n    updated(changedProps) {\n        if (changedProps.has('x') || changedProps.has('y')) {\n            this.style.transform = `translate(${this.x}px, ${this.y}px)`;\n        }\n    }\n    _onMouseDown(event) {\n        this._startX = event.clientX - this.x;\n        this._startY = event.clientY - this.y;\n        window.addEventListener('mousemove', this._onMouseMove);\n    }\n    _onMouseUp() {\n        window.removeEventListener('mousemove', this._onMouseMove);\n    }\n    _onMouseMove(event) {\n        this.x = event.clientX - this._startX;\n        this.y = event.clientY - this._startY;\n    }\n    _onCloseClick(event) {\n        event.stopPropagation();\n        this.abortController.abort();\n    }\n    async _selectFile(accept) {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = accept;\n        input.multiple = this.multiple;\n        input.click();\n        return new Promise((resolve, reject) => {\n            input.onchange = () => {\n                const files = input.files;\n                if (!files) {\n                    reject();\n                    return;\n                }\n                resolve(Array.from(files));\n            };\n            input.onerror = () => {\n                reject();\n            };\n        });\n    }\n    _onImportSuccess(pageIds) {\n        toast(`Successfully imported ${pageIds.length} Page${pageIds.length > 1 ? 's' : ''}.`);\n        this.onSuccess?.(pageIds);\n    }\n    async _importFile(fileExtension, needLoadingHandler, parseContentHandler) {\n        this.hidden = true;\n        const files = await this._selectFile(fileExtension);\n        const needLoading = await needLoadingHandler(files);\n        if (needLoading) {\n            this.hidden = false;\n            this._loading = true;\n        }\n        else {\n            this.abortController.abort();\n        }\n        const pageIds = [];\n        for (const file of files) {\n            const importPageIds = await parseContentHandler(file);\n            pageIds.push(...importPageIds);\n        }\n        this._onImportSuccess(pageIds);\n        needLoading && this.abortController.abort();\n    }\n    async _importMarkDown() {\n        await this._importFile('.md', async (files) => {\n            let totalSize = 0;\n            for (const file of files) {\n                totalSize += file.size;\n                if (totalSize > SHOW_LOADING_SIZE)\n                    return true;\n            }\n            return false;\n        }, async (file) => {\n            const text = await file.text();\n            const page = this.workspace.createPage({\n                init: {\n                    title: '',\n                },\n            });\n            const rootId = page.root?.id;\n            const contentParser = new ContentParser(page);\n            if (rootId) {\n                await contentParser.importMarkdown(text, rootId);\n                return [page.id];\n            }\n            return [];\n        });\n    }\n    async _importHtml() {\n        await this._importFile('.html', async (files) => {\n            let totalSize = 0;\n            for (const file of files) {\n                totalSize += file.size;\n                if (totalSize > SHOW_LOADING_SIZE)\n                    return true;\n            }\n            return false;\n        }, async (file) => {\n            const text = await file.text();\n            const page = this.workspace.createPage({\n                init: {\n                    title: '',\n                },\n            });\n            const rootId = page.root?.id;\n            const contentParser = new ContentParser(page);\n            if (rootId) {\n                await contentParser.importHtml(text, rootId);\n                return [page.id];\n            }\n            return [];\n        });\n    }\n    async _importNotion() {\n        await this._importFile('.zip', async (files) => {\n            let totalSize = 0;\n            for (const file of files) {\n                const zip = new JSZip();\n                const zipFile = await zip.loadAsync(file);\n                const fileArray = Object.values(zipFile.files);\n                for (const file of fileArray) {\n                    if (file.dir)\n                        continue;\n                    const fileContent = await file.async('uint8array');\n                    totalSize += fileContent.length;\n                    if (totalSize > SHOW_LOADING_SIZE)\n                        return true;\n                }\n            }\n            return false;\n        }, async (file) => {\n            const pageIds = [];\n            const allPageMap = [];\n            // const dataBaseSubPages = new Set<string>();\n            const parseZipFile = async (file) => {\n                const zip = new JSZip();\n                const zipFile = await zip.loadAsync(file);\n                const pageMap = new Map();\n                allPageMap.push(pageMap);\n                const files = Object.keys(zipFile.files);\n                const promises = [];\n                const csvFiles = files\n                    .filter(file => file.endsWith('.csv'))\n                    .map(file => file.substring(0, file.length - 4));\n                for (let i = 0; i < files.length; i++) {\n                    const file = files[i];\n                    if (file.startsWith('__MACOSX/'))\n                        continue;\n                    const lastSplitIndex = file.lastIndexOf('/');\n                    if (csvFiles.includes(file.substring(0, lastSplitIndex)))\n                        continue;\n                    const fileName = file.substring(lastSplitIndex + 1);\n                    if (fileName.endsWith('.html') || fileName.endsWith('.md')) {\n                        const page = this.workspace.createPage({\n                            init: {\n                                title: '',\n                            },\n                        });\n                        pageMap.set(file, page);\n                    }\n                    if (fileName.endsWith('.zip')) {\n                        const innerZipFile = await zipFile.file(fileName)?.async('blob');\n                        if (innerZipFile) {\n                            promises.push(...(await parseZipFile(innerZipFile)));\n                        }\n                    }\n                }\n                const pagePromises = Array.from(pageMap.keys()).map(async (file) => {\n                    const page = pageMap.get(file);\n                    if (!page)\n                        return;\n                    const lastSplitIndex = file.lastIndexOf('/');\n                    const folder = file.substring(0, lastSplitIndex) || '';\n                    const fileName = file.substring(lastSplitIndex + 1);\n                    if (fileName.endsWith('.html') || fileName.endsWith('.md')) {\n                        const isHtml = fileName.endsWith('.html');\n                        const rootId = page.root?.id;\n                        const fetchFileHandler = async (url) => {\n                            const fileName = this.joinWebPaths(folder, decodeURI(url));\n                            return ((await zipFile.file(fileName)?.async('blob')) || new Blob());\n                        };\n                        const textStyleHandler = (element, textStyle) => {\n                            if (textStyle['link']) {\n                                const link = textStyle['link'];\n                                const subPageLink = this.joinWebPaths(folder, decodeURI(link));\n                                const linkPage = pageMap.get(subPageLink);\n                                if (linkPage) {\n                                    textStyle['reference'] = {\n                                        pageId: linkPage.id,\n                                        type: 'LinkedPage',\n                                    };\n                                    delete textStyle['link'];\n                                }\n                            }\n                        };\n                        const tableParserHandler = async (element) => {\n                            // if (element.tagName === 'TABLE') {\n                            //   const parentElement = element.parentElement;\n                            //   if (\n                            //     parentElement?.tagName === 'DIV' &&\n                            //     parentElement.hasAttribute('id')\n                            //   ) {\n                            //     parentElement.id && dataBaseSubPages.add(parentElement.id);\n                            //   }\n                            //   const tbodyElement = element.querySelector('tbody');\n                            //   tbodyElement?.querySelectorAll('tr').forEach(ele => {\n                            //     ele.id && dataBaseSubPages.add(ele.id);\n                            //   });\n                            // }\n                            if (element.tagName === 'A' &&\n                                element.getAttribute('href')?.endsWith('.csv')) {\n                                const href = element.getAttribute('href') || '';\n                                const fileName = this.joinWebPaths(folder, decodeURI(href));\n                                const tableString = await zipFile\n                                    .file(fileName)\n                                    ?.async('string');\n                                let result = [];\n                                let id = 1;\n                                const titles = [];\n                                const rows = [];\n                                tableString?.split('\\n').forEach((row, index) => {\n                                    if (index === 0) {\n                                        titles.push(...row.split(','));\n                                    }\n                                    else {\n                                        const rowArray = row.split(',');\n                                        rows.push(rowArray);\n                                    }\n                                });\n                                const columns = titles\n                                    .slice(1)\n                                    .map((value, index) => {\n                                    return {\n                                        name: value,\n                                        type: 'rich-text',\n                                        width: 200,\n                                        hide: false,\n                                        id: '' + id++,\n                                    };\n                                });\n                                if (rows.length > 0) {\n                                    let maxLen = rows[0].length;\n                                    for (let i = 1; i < rows.length; i++) {\n                                        maxLen = Math.max(maxLen, rows[i].length);\n                                    }\n                                    const addNum = maxLen - columns.length;\n                                    for (let i = 0; i < addNum; i++) {\n                                        columns.push({\n                                            name: '',\n                                            type: 'rich-text',\n                                            width: 200,\n                                            hide: false,\n                                            id: '' + id++,\n                                        });\n                                    }\n                                }\n                                const databasePropsId = id++;\n                                const cells = {};\n                                const children = [];\n                                rows.forEach(row => {\n                                    children.push({\n                                        flavour: 'affine:paragraph',\n                                        type: 'text',\n                                        text: [{ insert: row[0] }],\n                                        children: [],\n                                    });\n                                    const rowId = '' + id++;\n                                    cells[rowId] = {};\n                                    row.slice(1).forEach((value, index) => {\n                                        cells[rowId][columns[index].id] = {\n                                            columnId: columns[index].id,\n                                            value,\n                                        };\n                                    });\n                                });\n                                result = [\n                                    {\n                                        flavour: 'affine:database',\n                                        databaseProps: {\n                                            id: '' + databasePropsId,\n                                            title: element.textContent || 'Database',\n                                            titleColumnName: titles[0],\n                                            titleColumnWidth: 432,\n                                            rowIds: Object.keys(cells),\n                                            cells: cells,\n                                            columns: columns,\n                                        },\n                                        children: children,\n                                    },\n                                ];\n                                return result;\n                            }\n                            return null;\n                        };\n                        const contentParser = new ContentParser(page, fetchFileHandler, textStyleHandler, tableParserHandler);\n                        const text = (await zipFile.file(file)?.async('string')) || '';\n                        if (rootId) {\n                            pageIds.push(page.id);\n                            if (isHtml) {\n                                await contentParser.importHtml(text, rootId);\n                            }\n                            else {\n                                await contentParser.importMarkdown(text, rootId);\n                            }\n                        }\n                    }\n                });\n                promises.push(...pagePromises);\n                return promises;\n            };\n            const allPromises = await parseZipFile(file);\n            await Promise.all(allPromises.flat());\n            // dataBaseSubPages.forEach(notionId => {\n            //   const dbSubPageId = notionId.replace(/-/g, '');\n            //   allPageMap.forEach(pageMap => {\n            //     for (const [key, value] of pageMap) {\n            //       if (\n            //         key.endsWith(` ${dbSubPageId}.html`) ||\n            //         key.endsWith(` ${dbSubPageId}.md`)\n            //       ) {\n            //         pageIds = pageIds.filter(id => id !== value.id);\n            //         this.workspace.removePage(value.id);\n            //         break;\n            //       }\n            //     }\n            //   });\n            // });\n            return pageIds;\n        });\n    }\n    joinWebPaths(...paths) {\n        const fullPath = paths.join('/').replace(/\\/+/g, '/');\n        const parts = fullPath.split('/').filter(Boolean);\n        const resolvedParts = [];\n        parts.forEach(part => {\n            if (part === '.') {\n                return;\n            }\n            if (part === '..') {\n                resolvedParts.pop();\n            }\n            else {\n                resolvedParts.push(part);\n            }\n        });\n        return resolvedParts.join('/');\n    }\n    _openLearnImportLink(event) {\n        event.stopPropagation();\n        window.open('https://affine.pro/blog/import-your-data-from-notion-into-affine', '_blank');\n    }\n    render() {\n        if (this._loading) {\n            return html `\n        <header\n          class=\"loading-header\"\n          @mousedown=${this._onMouseDown}\n          @mouseup=${this._onMouseUp}\n        >\n          <div>Import</div>\n          <loader-element width=\"50px\"></loader-element>\n        </header>\n        <div>\n          Importing the file may take some time. It depends on document size and\n          complexity.\n        </div>\n      `;\n        }\n        return html `\n      <header @mousedown=${this._onMouseDown} @mouseup=${this._onMouseUp}>\n        <icon-button height=\"16px\" @click=${this._onCloseClick}>\n          ${CloseIcon}\n        </icon-button>\n        <div>Import</div>\n      </header>\n      <div>\n        AFFiNE will gradually support more and more file types for import.\n        <a\n          href=\"https://community.affine.pro/c/feature-requests/import-export\"\n          target=\"_blank\"\n          >Provide feedback.</a\n        >\n      </div>\n      <div class=\"button-container\">\n        <icon-button\n          class=\"button-item\"\n          text=\"Markdown\"\n          @click=${this._importMarkDown}\n        >\n          ${ExportToMarkdownIcon}\n        </icon-button>\n        <icon-button class=\"button-item\" text=\"HTML\" @click=${this._importHtml}>\n          ${ExportToHTMLIcon}\n        </icon-button>\n      </div>\n      <div class=\"button-container\">\n        <icon-button\n          class=\"button-item\"\n          text=\"Notion\"\n          @click=${this._importNotion}\n        >\n          ${NotionIcon}\n          <div\n            slot=\"optional\"\n            class=\"has-tool-tip\"\n            @click=${this._openLearnImportLink}\n          >\n            ${HelpIcon}\n            <tool-tip inert arrow tip-position=\"top\" role=\"tooltip\">\n              Learn how to Import your Notion pages into AFFiNE.\n            </tool-tip>\n          </div>\n        </icon-button>\n        <icon-button class=\"button-item\" text=\"Coming soon...\" disabled=\"true\">\n          ${NewIcon}\n        </icon-button>\n      </div>\n      <!-- <div class=\"footer\">\n        <div>Migrate from other versions of AFFiNE?</div>\n      </div> -->\n    `;\n    }\n};\nImportPage.styles = styles;\n__decorate([\n    state()\n], ImportPage.prototype, \"_loading\", void 0);\n__decorate([\n    state()\n], ImportPage.prototype, \"x\", void 0);\n__decorate([\n    state()\n], ImportPage.prototype, \"y\", void 0);\n__decorate([\n    state()\n], ImportPage.prototype, \"_startX\", void 0);\n__decorate([\n    state()\n], ImportPage.prototype, \"_startY\", void 0);\nImportPage = __decorate([\n    customElement('import-page')\n], ImportPage);\nexport { ImportPage };\n//# sourceMappingURL=import-page.js.map","import { DisposableGroup } from '@blocksuite/store';\nimport { ImportPage } from './import-page.js';\nexport function showImportModal({ workspace, onSuccess, multiple = true, container = document.body, abortController = new AbortController(), }) {\n    const importPage = new ImportPage(workspace, multiple, onSuccess, abortController);\n    container.appendChild(importPage);\n    const disposables = new DisposableGroup();\n    abortController.signal.addEventListener('abort', () => disposables.dispose());\n    disposables.add(() => importPage.remove());\n    disposables.addFromEvent(window, 'mousedown', (e) => {\n        if (e.target === importPage || importPage.loading())\n            return;\n        abortController.abort();\n    });\n    return importPage;\n}\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BLOCKHUB_FILE_ITEMS, BLOCKHUB_LIST_ITEMS, BLOCKHUB_TEXT_ITEMS, BlockHubIcon, BlockHubRoundedRectangleIcon, CrossIcon, DatabaseTableViewIcon, EmbedIcon, NumberedListIconLarge, TextIconLarge, } from '@blocksuite/global/config';\nimport { assertExists, isFirefox } from '@blocksuite/global/utils';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement, property, query, queryAll, state, } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { calcDropTarget, getClosestBlockElementByPoint, getModelByBlockElement, Point, } from '../__internal__/index.js';\nimport {} from './drag-handle.js';\nimport { tooltipStyle } from './tooltip/tooltip.js';\nconst styles = css `\n  affine-block-hub {\n    position: absolute;\n    z-index: 1;\n    user-select: none;\n  }\n\n  @media print {\n    affine-block-hub {\n      display: none;\n    }\n  }\n\n  .affine-block-hub-container {\n    width: 274px;\n    position: absolute;\n    right: calc(100% + 8px);\n    overflow-y: unset;\n    display: none;\n    justify-content: center;\n    fill: var(--affine-icon-color);\n    color: var(--affine-icon-color);\n    font-size: var(--affine-font-sm);\n    background: var(--affine-background-overlay-panel-color);\n    box-shadow: var(--affine-menu-shadow);\n    border-radius: 8px;\n  }\n\n  .affine-block-hub-container[type='text'] {\n    top: unset;\n    bottom: 0;\n    transform: unset;\n    right: calc(100% + 4px);\n  }\n\n  .visible {\n    display: block;\n  }\n\n  .invisible {\n    display: none;\n  }\n\n  .card-container-wrapper {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    position: relative;\n  }\n\n  .card-container {\n    display: flex;\n    position: relative;\n    align-items: center;\n    width: 250px;\n    height: 54px;\n    background: var(--affine-white-80);\n    box-shadow: var(--affine-shadow-1);\n    border-radius: 8px;\n    margin-bottom: 12px;\n    cursor: grab;\n    top: 0;\n    left: 0;\n    transition: all 0.1s ease-in-out;\n  }\n\n  .card-icon-container {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    right: 12px;\n  }\n\n  .card-icon-container > svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  .card-container-inner:hover .card-container {\n    background: var(--affine-hover-color);\n    top: -2px;\n    left: -2px;\n  }\n\n  .card-container-inner:hover .card-container.grabbing {\n    top: unset;\n    left: unset;\n    box-shadow: var(--affine-shadow-2);\n  }\n\n  .card-description-container {\n    display: block;\n    width: 190px;\n    color: var(--affine-text-primary-color);\n    font-size: var(--affine-font-base);\n    line-height: var(--affine-line-height);\n    margin: 8px 0 8px 12px;\n    text-align: justify;\n  }\n\n  .affine-block-hub-container .description {\n    font-size: var(--affine-font-sm);\n    line-height: var(--affine-line-height);\n    color: var(--affine-text-secondary-color);\n    white-space: pre;\n  }\n\n  .grabbing {\n    cursor: grabbing;\n  }\n\n  .grab {\n    cursor: grab;\n  }\n\n  .affine-block-hub-title-container {\n    margin: 16px 0 20px 12px;\n    color: var(--affine-text-secondary-color);\n    font-size: var(--affine-font-base);\n    user-select: none;\n  }\n\n  .prominent {\n    z-index: 1;\n  }\n\n  .block-hub-menu-container {\n    display: flex;\n    font-family: var(--affine-font-family);\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    width: 44px;\n    background: var(--affine-background-primary-color);\n    border-radius: 8px;\n  }\n\n  .block-hub-menu-container[expanded] {\n    box-shadow: var(--affine-menu-shadow);\n    background: var(--affine-background-overlay-panel-color);\n  }\n\n  .block-hub-icon-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 8px;\n    position: relative;\n    border-radius: 4px;\n    fill: var(--affine-icon-color);\n    color: var(--affine-icon-color);\n    height: 36px;\n  }\n  .block-hub-icon-container svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  .block-hub-icon-container[selected='true'] {\n    background: var(--affine-hover-color);\n  }\n\n  .block-hub-icon-container:hover {\n    background: var(--affine-hover-color);\n    border-radius: 4px;\n  }\n\n  .new-icon {\n    width: 44px;\n    height: 44px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: 8px;\n    fill: var(--affine-icon-color);\n  }\n\n  .new-icon-in-edgeless {\n    box-shadow: var(--affine-menu-shadow);\n  }\n  .block-hub-menu-container[expanded] .new-icon {\n    border-radius: 4px;\n    box-shadow: unset;\n  }\n\n  .new-icon:hover {\n    box-shadow: var(--affine-menu-shadow);\n    background: var(--affine-white);\n  }\n\n  .icon-expanded {\n    width: 36px;\n    height: 36px;\n  }\n\n  .icon-expanded:hover {\n    background: var(--affine-hover-color);\n  }\n\n  .divider {\n    height: 1px;\n    width: 36px;\n    background: var(--affine-border-color);\n    margin: 4px 0;\n  }\n\n  [role='menuitem'] tool-tip {\n    font-size: var(--affine-font-sm);\n  }\n\n  .block-hub-icons-container {\n    overflow: hidden;\n    transition: all 0.2s cubic-bezier(0, 0, 0.55, 1.6);\n  }\n\n  ${tooltipStyle}\n`;\nconst TRANSITION_DELAY = 200;\nconst BOTTOM_OFFSET = 70;\nconst RIGHT_OFFSET = 24;\nconst TOP_DISTANCE = 24;\nfunction shouldDisplayCard(type, expanded, isCardListVisible, visibleCardType) {\n    return expanded && isCardListVisible && visibleCardType === type;\n}\nfunction BlockHubCards(blockHubItems, type, title, maxHeight, shouldDisplayCard, isGrabbing, showTooltip) {\n    const shouldScroll = maxHeight < 800;\n    const styles = styleMap({\n        maxHeight: `${maxHeight}px`,\n        overflowY: shouldScroll ? 'scroll' : 'unset',\n    });\n    return html `\n    <div\n      class=\"affine-block-hub-container ${shouldDisplayCard ? 'visible' : ''}\"\n      style=\"${styles}\"\n      type=${type}\n    >\n      <div class=\"affine-block-hub-title-container\">${title}</div>\n      ${blockHubItems.map(({ flavour, type, name, description, icon, tooltip }, index) => {\n        return html `\n            <div class=\"card-container-wrapper\">\n              <div class=\"card-container-inner\">\n                <div\n                  class=\"card-container has-tool-tip ${isGrabbing\n            ? 'grabbing'\n            : ''}\"\n                  draggable=\"true\"\n                  affine-flavour=${flavour}\n                  affine-type=${type ?? ''}\n                >\n                  <div class=\"card-description-container\">\n                    <div>${name}</div>\n                    <div class=\"description\">${description}</div>\n                  </div>\n                  <div class=\"card-icon-container\">${icon}</div>\n                  <tool-tip\n                    tip-position=${shouldScroll &&\n            index === blockHubItems.length - 1\n            ? 'top'\n            : 'bottom'}\n                    style=\"${showTooltip\n            ? ''\n            : 'display: none'}; z-index: ${blockHubItems.length -\n            index}\"\n                    >${tooltip}</tool-tip\n                  >\n                </div>\n              </div>\n            </div>\n          `;\n    })}\n    </div>\n  `;\n}\nfunction BlockHubMenu(enableDatabase, expanded, isGrabbing, visibleCardType, isCardListVisible, showTooltip, maxHeight, page) {\n    const menuNum = enableDatabase ? 5 : 4;\n    const height = menuNum * 44 + 10;\n    const blockHubListCards = BlockHubCards(BLOCKHUB_LIST_ITEMS, 'list', 'List', maxHeight, shouldDisplayCard('list', expanded, isCardListVisible, visibleCardType), isGrabbing, showTooltip);\n    const blockHubFileCards = BlockHubCards(BLOCKHUB_FILE_ITEMS.filter(({ flavour }) => {\n        if (flavour === 'affine:bookmark') {\n            return page.awarenessStore.getFlag('enable_bookmark_operation');\n        }\n        return true;\n    }), 'file', 'Content & Media', maxHeight, shouldDisplayCard('file', expanded, isCardListVisible, visibleCardType), isGrabbing, showTooltip);\n    return html `\n    <div\n      class=\"block-hub-icons-container\"\n      ?transition=${expanded}\n      style=\"height: ${expanded ? `${height}px` : '0'};\"\n    >\n      <div\n        class=\"block-hub-icon-container has-tool-tip ${isGrabbing\n        ? 'grabbing'\n        : 'grab'}\"\n        selected=${visibleCardType === 'blank' ? 'true' : 'false'}\n        type=\"blank\"\n        draggable=\"true\"\n        affine-flavour=\"affine:paragraph\"\n        affine-type=\"text\"\n      >\n        ${BlockHubRoundedRectangleIcon}\n        <tool-tip\n          inert\n          role=\"tooltip\"\n          tip-position=\"left\"\n          ?hidden=${!showTooltip}\n          >Drag to insert blank line\n        </tool-tip>\n      </div>\n      <div\n        class=\"block-hub-icon-container\"\n        type=\"text\"\n        selected=${visibleCardType === 'text' ? 'true' : 'false'}\n      >\n        ${TextIconLarge}\n      </div>\n      <div\n        class=\"block-hub-icon-container\"\n        type=\"list\"\n        selected=${visibleCardType === 'list' ? 'true' : 'false'}\n      >\n        ${blockHubListCards} ${NumberedListIconLarge}\n      </div>\n      <div\n        class=\"block-hub-icon-container\"\n        type=\"file\"\n        selected=${visibleCardType === 'file' ? 'true' : 'false'}\n      >\n        ${blockHubFileCards} ${EmbedIcon}\n      </div>\n      ${enableDatabase\n        ? html `\n            <div\n              class=\"block-hub-icon-container has-tool-tip\"\n              type=\"database\"\n              draggable=\"true\"\n              affine-flavour=\"affine:database\"\n              selected=${visibleCardType === 'database' ? 'true' : 'false'}\n            >\n              ${DatabaseTableViewIcon}\n              <tool-tip\n                inert\n                role=\"tooltip\"\n                tip-position=\"left\"\n                ?hidden=${!showTooltip}\n              >\n                Drag to create a database\n              </tool-tip>\n            </div>\n          `\n        : null}\n      <div class=\"divider\"></div>\n    </div>\n  `;\n}\nlet BlockHub = class BlockHub extends WithDisposable(ShadowlessElement) {\n    constructor(options) {\n        super();\n        this._expanded = false;\n        this._isGrabbing = false;\n        this._visibleCardType = null;\n        this._showTooltip = true;\n        this._inEdgelessMode = false;\n        this._maxHeight = 2000;\n        this._currentClientX = 0;\n        this._currentClientY = 0;\n        this._isCardListVisible = false;\n        this._lastDroppingTarget = null;\n        this._lastDroppingType = 'none';\n        this._lastDraggingFlavour = null;\n        this._timer = null;\n        /**\n         * This is currently a workaround, as the height of the _blockHubIconsContainer is determined by the height of its\n         * content, and if its child's opacity is set to 0 during a transition, its height won't change, causing the background\n         * to exceeds its actual visual height. So currently we manually set the height of those whose opacity is 0 to 0px.\n         */\n        this._onTransitionStart = (_) => {\n            if (this._timer) {\n                clearTimeout(this._timer);\n            }\n            if (!this._expanded) {\n                // when the _blockHubMenuContainer is unexpanded, should cancel the vertical padding making it a square\n                this._blockHubMenuContainer.style.padding = '0 4px';\n                this._timer = window.setTimeout(() => {\n                    this._blockHubIconsContainer.style.overflow = 'hidden';\n                }, TRANSITION_DELAY);\n            }\n            else {\n                this._blockHubMenuContainer.style.padding = '4px';\n                this._timer = window.setTimeout(() => {\n                    this._blockHubIconsContainer.style.overflow = 'unset';\n                }, TRANSITION_DELAY);\n            }\n        };\n        this._onClickOutside = (e) => {\n            const target = e.target;\n            if (target instanceof HTMLElement && !target.closest('affine-block-hub')) {\n                this._hideCardList();\n            }\n        };\n        this._onClickCard = (e, blockHubElement) => {\n            const affineType = blockHubElement.getAttribute('affine-type');\n            assertExists(affineType);\n            const data = {\n                flavour: blockHubElement.getAttribute('affine-flavour') ?? '',\n            };\n            if (affineType) {\n                data.type = affineType;\n            }\n            this._onClickCardCallback(data);\n        };\n        this._onBlockHubButtonClick = (_) => {\n            this._expanded = !this._expanded;\n            if (!this._expanded) {\n                this._hideCardList();\n            }\n        };\n        this._onDragStart = (event) => {\n            this._showTooltip = false;\n            // DragEvent that doesn't dispatch manually, is expected to have dataTransfer property\n            assertExists(event.dataTransfer);\n            event.dataTransfer.effectAllowed = 'move';\n            const blockHubElement = event.target;\n            const affineType = blockHubElement.getAttribute('affine-type');\n            const data = {\n                flavour: blockHubElement.getAttribute('affine-flavour'),\n            };\n            if (affineType) {\n                data.type = affineType;\n            }\n            event.dataTransfer.setData('affine/block-hub', JSON.stringify(data));\n            this._lastDraggingFlavour = data.flavour;\n            this._onDragStartCallback();\n        };\n        this._onMouseDown = (e) => {\n            if (isFirefox) {\n                this._currentClientX = e.clientX;\n                this._currentClientY = e.clientY;\n            }\n        };\n        this._onDrag = (e) => {\n            this._hideCardList();\n            let x = e.clientX;\n            let y = e.clientY;\n            if (isFirefox) {\n                // In Firefox, `pageX` and `pageY` are always set to 0.\n                // Refs: https://stackoverflow.com/questions/13110349/pagex-and-pagey-are-always-set-to-0-in-firefox-during-the-ondrag-event.\n                x = this._currentClientX;\n                y = this._currentClientY;\n            }\n            if (!this._indicator ||\n                (this._indicator.rect &&\n                    this._indicator.rect.left === x &&\n                    this._indicator.rect.top === y)) {\n                return;\n            }\n            const point = new Point(x, y);\n            const { container, rect: frameRect, scale, } = this.getHoveringFrameState(point.clone());\n            if (!frameRect) {\n                this._resetDropState();\n                return;\n            }\n            const element = getClosestBlockElementByPoint(point, { container, rect: frameRect, snapToEdge: { x: false, y: true } }, scale);\n            if (!element) {\n                // if (this._mouseRoot.mode === 'page') {\n                //   return;\n                // }\n                this._resetDropState();\n                return;\n            }\n            let type = 'none';\n            let rect = null;\n            let lastModelState = null;\n            const model = getModelByBlockElement(element);\n            const result = calcDropTarget(point, model, element, [], scale, this._lastDraggingFlavour);\n            if (result) {\n                type = result.type;\n                rect = result.rect;\n                lastModelState = result.modelState;\n            }\n            this._lastDroppingType = type;\n            this._indicator.rect = rect;\n            this._lastDroppingTarget = lastModelState;\n        };\n        this._onDragOver = (e) => {\n            e.preventDefault();\n        };\n        this._onDragOverDocument = (e) => {\n            if (!isFirefox) {\n                throw new Error('FireFox only');\n            }\n            this._currentClientX = e.clientX;\n            this._currentClientY = e.clientY;\n        };\n        this._onDragEnd = (_) => {\n            this._showTooltip = true;\n            this._isGrabbing = false;\n            this._lastDraggingFlavour = null;\n            this._resetDropState();\n        };\n        this._resetDropState = () => {\n            this._lastDroppingType = 'none';\n            this._indicator.rect = null;\n            this._lastDroppingTarget = null;\n        };\n        this._onDrop = (e) => {\n            assertExists(e.dataTransfer);\n            if (!e.dataTransfer.getData('affine/block-hub'))\n                return;\n            this._onDropCallback(e, \n            // `drag.clientY` !== `dragend.clientY` in chrome.\n            this._indicator?.rect?.min ?? new Point(e.clientX, e.clientY), this._lastDroppingTarget, this._lastDroppingType);\n        };\n        this._onCardMouseDown = (_) => {\n            this._isGrabbing = true;\n        };\n        this._onCardMouseUp = (_) => {\n            this._isGrabbing = false;\n        };\n        this._onBlankMenuMouseDown = () => {\n            this._isGrabbing = true;\n        };\n        this._onBlankMenuMouseUp = () => {\n            this._isGrabbing = false;\n        };\n        this._onBlockHubMenuMouseOver = (e) => {\n            const menu = e.currentTarget;\n            const cardType = menu.getAttribute('type');\n            assertExists(cardType);\n            this._isCardListVisible = true;\n            this._visibleCardType = cardType;\n        };\n        this._onBlockHubEntryMouseOver = () => {\n            this._isCardListVisible = false;\n        };\n        this._onResize = () => {\n            const boundingClientRect = document.body.getBoundingClientRect();\n            this._maxHeight = boundingClientRect.height - TOP_DISTANCE - BOTTOM_OFFSET;\n        };\n        this._page = options.page;\n        this._mouseRoot = options.mouseRoot;\n        this._enableDatabase = options.enableDatabase;\n        this.getAllowedBlocks = options.getAllowedBlocks;\n        this.getHoveringFrameState = options.getHoveringFrameState;\n        this._onDragStartCallback = options.onDragStart;\n        this._onDropCallback = options.onDrop;\n        this._onClickCardCallback = options.onClickCard;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const disposables = this._disposables;\n        disposables.addFromEvent(this, 'dragstart', this._onDragStart);\n        disposables.addFromEvent(this, 'drag', this._onDrag);\n        disposables.addFromEvent(this, 'dragend', this._onDragEnd);\n        disposables.addFromEvent(this._mouseRoot, 'dragover', this._onDragOver);\n        disposables.addFromEvent(this._mouseRoot, 'drop', this._onDrop);\n        disposables.addFromEvent(this, 'mousedown', this._onMouseDown);\n        disposables.add(this._mouseRoot.slots.pageModeSwitched.on(mode => {\n            this._inEdgelessMode = mode === 'edgeless';\n        }));\n        if (isFirefox) {\n            disposables.addFromEvent(this._mouseRoot, 'dragover', this._onDragOverDocument);\n        }\n        this._onResize();\n    }\n    firstUpdated() {\n        const disposables = this._disposables;\n        this._blockHubCards.forEach(card => {\n            disposables.addFromEvent(card, 'mousedown', this._onCardMouseDown);\n            disposables.addFromEvent(card, 'mouseup', this._onCardMouseUp);\n            disposables.addFromEvent(card, 'click', e => this._onClickCard(e, card));\n        });\n        for (const blockHubMenu of this._blockHubMenus) {\n            disposables.addFromEvent(blockHubMenu, 'mouseover', this._onBlockHubMenuMouseOver);\n            if (blockHubMenu.getAttribute('type') === 'blank') {\n                disposables.addFromEvent(blockHubMenu, 'mousedown', this._onBlankMenuMouseDown);\n                disposables.addFromEvent(blockHubMenu, 'mouseup', this._onBlankMenuMouseUp);\n            }\n        }\n        disposables.addFromEvent(this._blockHubMenuEntry, 'mouseover', this._onBlockHubEntryMouseOver);\n        disposables.addFromEvent(document, 'click', this._onClickOutside);\n        disposables.addFromEvent(this._blockHubButton, 'click', this._onBlockHubButtonClick);\n        disposables.addFromEvent(this._blockHubButton, 'mousedown', e => {\n            // Prevent input from losing focus\n            e.preventDefault();\n        });\n        disposables.addFromEvent(this._blockHubIconsContainer, 'transitionstart', this._onTransitionStart);\n        disposables.addFromEvent(window, 'resize', this._onResize);\n        this._indicator = (document.createElement('affine-drag-indicator'));\n        document.body.appendChild(this._indicator);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this._disposables.dispose();\n    }\n    toggleMenu() {\n        this._expanded = !this._expanded;\n        if (!this._expanded)\n            this._hideCardList();\n    }\n    _hideCardList() {\n        if (this._visibleCardType) {\n            this._visibleCardType = null;\n            this._isCardListVisible = false;\n        }\n    }\n    render() {\n        const blockHubMenu = BlockHubMenu(this._enableDatabase, this._expanded, this._isGrabbing, this._visibleCardType, this._isCardListVisible, this._showTooltip, this._maxHeight, this._page);\n        const blockHubCards = BlockHubCards(BLOCKHUB_TEXT_ITEMS, 'text', 'Text block', this._maxHeight, shouldDisplayCard('text', this._expanded, this._isCardListVisible, this._visibleCardType), this._isGrabbing, this._showTooltip);\n        const classes = classMap({\n            'icon-expanded': this._expanded,\n            'new-icon-in-edgeless': this._inEdgelessMode && !this._expanded,\n            'has-tool-tip': true,\n            'new-icon': true,\n        });\n        return html `\n      <div\n        class=\"block-hub-menu-container\"\n        ?expanded=${this._expanded}\n        style=\"bottom: ${BOTTOM_OFFSET}px; right: ${RIGHT_OFFSET}px;\"\n      >\n        ${blockHubMenu}\n        <div class=${classes} role=\"menuitem\" style=\"cursor:pointer;\">\n          ${this._expanded ? CrossIcon : BlockHubIcon}\n          <tool-tip\n            class=${this._expanded ? 'invisible' : ''}\n            inert\n            tip-position=\"left\"\n            role=\"tooltip\"\n            >Insert blocks\n          </tool-tip>\n        </div>\n        ${blockHubCards}\n      </div>\n    `;\n    }\n};\nBlockHub.styles = styles;\n__decorate([\n    property()\n], BlockHub.prototype, \"getAllowedBlocks\", void 0);\n__decorate([\n    property()\n], BlockHub.prototype, \"getHoveringFrameState\", void 0);\n__decorate([\n    state()\n], BlockHub.prototype, \"_expanded\", void 0);\n__decorate([\n    state()\n], BlockHub.prototype, \"_isGrabbing\", void 0);\n__decorate([\n    state()\n], BlockHub.prototype, \"_visibleCardType\", void 0);\n__decorate([\n    state()\n], BlockHub.prototype, \"_showTooltip\", void 0);\n__decorate([\n    state()\n], BlockHub.prototype, \"_inEdgelessMode\", void 0);\n__decorate([\n    state()\n], BlockHub.prototype, \"_maxHeight\", void 0);\n__decorate([\n    queryAll('.card-container')\n], BlockHub.prototype, \"_blockHubCards\", void 0);\n__decorate([\n    queryAll('.block-hub-icon-container[type]')\n], BlockHub.prototype, \"_blockHubMenus\", void 0);\n__decorate([\n    query('.new-icon')\n], BlockHub.prototype, \"_blockHubButton\", void 0);\n__decorate([\n    query('.block-hub-icons-container')\n], BlockHub.prototype, \"_blockHubIconsContainer\", void 0);\n__decorate([\n    query('.block-hub-menu-container')\n], BlockHub.prototype, \"_blockHubMenuContainer\", void 0);\n__decorate([\n    query('[role=\"menuitem\"]')\n], BlockHub.prototype, \"_blockHubMenuEntry\", void 0);\nBlockHub = __decorate([\n    customElement('affine-block-hub')\n], BlockHub);\nexport { BlockHub };\n//# sourceMappingURL=block-hub.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n// FIXME: horizontal\nlet MenuDivider = class MenuDivider extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.vertical = false;\n    }\n    render() {\n        return html `<div\n      class=\"divider ${this.vertical ? 'vertical' : 'horizontal'}\"\n    ></div>`;\n    }\n};\nMenuDivider.styles = css `\n    :host {\n      display: inline-block;\n    }\n\n    .divider {\n      background-color: var(--affine-border-color);\n    }\n\n    .divider.vertical {\n      width: 1px;\n      height: 100%;\n      margin: 0 7px;\n    }\n\n    .divider.horizontal {\n      width: 100%;\n      height: 1px;\n      margin: 7px 0;\n    }\n  `;\n__decorate([\n    property()\n], MenuDivider.prototype, \"vertical\", void 0);\nMenuDivider = __decorate([\n    customElement('menu-divider')\n], MenuDivider);\nexport { MenuDivider };\n//# sourceMappingURL=menu-divider.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { assertExists, } from '@blocksuite/store';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { blockRangeToNativeRange, restoreSelection, } from '../../__internal__/utils/block-range.js';\nimport { getEditorContainer } from '../../__internal__/utils/query.js';\nfunction addAlpha(hexColor, opacity) {\n    const normalized = Math.round(Math.min(Math.max(opacity, 0), 1) * 255);\n    return hexColor + normalized.toString(16).toUpperCase();\n}\nfunction randomColor() {\n    const hex = Math.floor(Math.random() * 16777215).toString(16);\n    return `#${hex}`;\n}\nfunction selectionStyle(rect, color) {\n    return styleMap({\n        position: 'absolute',\n        width: `${rect.width}px`,\n        height: `${rect.height}px`,\n        top: `${rect.top}px`,\n        left: `${rect.left}px`,\n        backgroundColor: color,\n    });\n}\nfunction cursorStyle(rect, color) {\n    return styleMap({\n        position: 'absolute',\n        width: `${rect.width}px`,\n        height: `${rect.height}px`,\n        top: `${rect.top}px`,\n        left: `${rect.left}px`,\n        backgroundColor: color,\n    });\n}\nlet RemoteSelection = class RemoteSelection extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.page = null;\n        this._ranges = [];\n        this._colorMap = new Map();\n        this._resizeObserver = new ResizeObserver(() => {\n            this.requestUpdate();\n        });\n        this._abortController = new AbortController();\n    }\n    firstUpdated() {\n        assertExists(this.page);\n        this.page.awarenessStore.slots.update.subscribe(msg => msg, msg => {\n            if (!msg || !msg.state?.rangeMap) {\n                return;\n            }\n            if (msg.id === this.page?.awarenessStore.awareness.clientID) {\n                return;\n            }\n            assertExists(this.page);\n            const page = this.page;\n            const { user, rangeMap } = msg.state;\n            if (msg.type === 'update') {\n                const index = this._ranges.findIndex(range => range.id === msg.id);\n                if (index === -1) {\n                    this._ranges.push({\n                        id: msg.id,\n                        userRange: rangeMap[page.prefixedId],\n                        user,\n                    });\n                }\n                else {\n                    this._ranges[index] = {\n                        id: msg.id,\n                        userRange: rangeMap[page.prefixedId],\n                        user,\n                    };\n                }\n            }\n            else if (msg.type === 'add') {\n                this._ranges.push({\n                    id: msg.id,\n                    userRange: rangeMap[page.prefixedId],\n                    user,\n                });\n            }\n            else if (msg.type === 'remove') {\n                const index = this._ranges.findIndex(range => range.id === msg.id);\n                this._ranges.splice(index, 1);\n            }\n            this.requestUpdate();\n        });\n        this.page.history.on('stack-item-popped', (event) => {\n            const userRange = event.stackItem.meta.get('cursor-location');\n            if (!userRange) {\n                return;\n            }\n            assertExists(this.page);\n            const models = userRange.blockIds\n                .map(id => {\n                assertExists(this.page);\n                return this.page.getBlockById(id);\n            })\n                .filter(Boolean);\n            if (!models.length) {\n                return;\n            }\n            requestAnimationFrame(() => {\n                assertExists(this.page);\n                // special case for title\n                if (models.length === 1 && models[0] === this.page.root) {\n                    restoreSelection({\n                        type: 'Title',\n                        startOffset: userRange.startOffset,\n                        endOffset: userRange.endOffset,\n                        models: [this.page.root],\n                    });\n                    return;\n                }\n                restoreSelection({\n                    type: 'Native',\n                    startOffset: userRange.startOffset,\n                    endOffset: userRange.endOffset,\n                    models,\n                });\n            });\n        });\n        this._resizeObserver.observe(document.body);\n        const viewportElement = document.querySelector('.affine-default-viewport');\n        viewportElement?.addEventListener('scroll', () => this.requestUpdate(), {\n            signal: this._abortController.signal,\n        });\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this._resizeObserver.disconnect();\n        this._abortController.abort();\n    }\n    _getSelectionRect(userRange) {\n        assertExists(this.page);\n        const models = userRange.blockIds\n            .map(id => {\n            assertExists(this.page);\n            return this.page.getBlockById(id);\n        })\n            .filter(Boolean);\n        let nativeRange = null;\n        // special case for title\n        if (models.length === 1 && models[0] === this.page.root) {\n            nativeRange = blockRangeToNativeRange({\n                type: 'Title',\n                startOffset: userRange.startOffset,\n                endOffset: userRange.endOffset,\n                models: [this.page.root],\n            });\n        }\n        else {\n            nativeRange = blockRangeToNativeRange({\n                type: 'Native',\n                startOffset: userRange.startOffset,\n                endOffset: userRange.endOffset,\n                models,\n            });\n        }\n        if (!nativeRange) {\n            return [];\n        }\n        const container = getEditorContainer(this.page);\n        assertExists(container);\n        const containerRect = container.getBoundingClientRect();\n        const nativeRects = Array.from(nativeRange.getClientRects());\n        return nativeRects\n            .map(rect => ({\n            width: rect.width,\n            height: rect.height,\n            top: rect.top - containerRect.top,\n            left: rect.left - containerRect.left,\n        }))\n            .filter(rect => (rect.width > 1 && rect.height > 0) || userRange.blockIds.length === 1);\n    }\n    _getCursorRect(userRange) {\n        assertExists(this.page);\n        const endBlockId = userRange.blockIds[userRange.blockIds.length - 1];\n        const endOffset = userRange.endOffset;\n        const endModel = this.page.getBlockById(endBlockId);\n        if (!endModel || !endModel.text) {\n            return null;\n        }\n        const nativeRange = blockRangeToNativeRange({\n            type: 'Native',\n            startOffset: endOffset,\n            endOffset: endOffset,\n            models: [endModel],\n        });\n        if (!nativeRange) {\n            return null;\n        }\n        const container = getEditorContainer(this.page);\n        assertExists(container);\n        const containerRect = container.getBoundingClientRect();\n        const nativeRects = Array.from(nativeRange.getClientRects());\n        if (nativeRects.length === 1) {\n            const rect = nativeRects[0];\n            return {\n                width: 2,\n                height: rect.height + 4,\n                top: rect.top - 2 - containerRect.top,\n                left: rect.left - containerRect.left,\n            };\n        }\n        return null;\n    }\n    render() {\n        if (!this.page || this._ranges.length === 0) {\n            this._colorMap.clear();\n            return html ``;\n        }\n        const selections = this._ranges\n            .filter(range => range.userRange)\n            .map(range => ({\n            id: range.id,\n            userRange: range.userRange,\n            rects: this._getSelectionRect(range.userRange),\n            user: range.user,\n        }));\n        return html `<div>\n      ${selections.flatMap(selection => {\n            if (selection.user) {\n                this._colorMap.set(selection.id, selection.user.color);\n            }\n            if (!this._colorMap.has(selection.id)) {\n                this._colorMap.set(selection.id, randomColor());\n            }\n            const color = this._colorMap.get(selection.id);\n            const cursorRect = this._getCursorRect(selection.userRange);\n            return selection.rects\n                .map(r => html `\n              <div style=\"${selectionStyle(r, addAlpha(color, 0.5))}\"></div>\n            `)\n                .concat([\n                html `\n              <div\n                style=\"${cursorRect\n                    ? cursorStyle(cursorRect, color)\n                    : styleMap({\n                        display: 'none',\n                    })}\"\n              >\n                <div\n                  style=\"${styleMap({\n                    position: 'relative',\n                    height: '100%',\n                })}\"\n                >\n                  <div\n                    style=\"${styleMap({\n                    position: 'absolute',\n                    bottom: `${cursorRect?.height}px`,\n                    padding: '2px',\n                    'background-color': color,\n                    color: 'white',\n                })}\"\n                  >\n                    ${selection.user?.name}\n                  </div>\n                </div>\n              </div>\n            `,\n            ]);\n        })}\n    </div>`;\n    }\n};\nRemoteSelection.styles = css `\n    :host {\n      position: absolute;\n      pointer-events: none;\n      left: 0;\n      top: 0;\n    }\n  `;\n__decorate([\n    property()\n], RemoteSelection.prototype, \"page\", void 0);\nRemoteSelection = __decorate([\n    customElement('remote-selection')\n], RemoteSelection);\nexport { RemoteSelection };\n//# sourceMappingURL=remote-selection.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport {} from '../__internal__/index.js';\nlet AffineSelectedBlocks = class AffineSelectedBlocks extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.offset = { x: 0, y: 0 };\n        this.state = { rects: [], grab: false };\n    }\n    _onPointerUp({ clientX, clientY, shiftKey }) {\n        this.removeAttribute('data-grab');\n        document.dispatchEvent(new PointerEvent('pointerup', {\n            bubbles: true,\n            clientX,\n            clientY,\n            shiftKey,\n        }));\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // trigger click event on editor container\n        this._disposables.addFromEvent(this, 'pointerup', this._onPointerUp);\n    }\n    willUpdate() {\n        const { rects: [firstRect], grab, } = this.state;\n        if (firstRect) {\n            const { x, y } = this.offset;\n            this.style.top = `${firstRect.top + y}px`;\n            this.style.left = `${firstRect.left + x}px`;\n        }\n        this.toggleAttribute('data-grab', Boolean(firstRect && grab));\n    }\n    render() {\n        const { rects } = this.state;\n        const firstRect = rects[0];\n        return firstRect\n            ? repeat(rects, rect => html `<div\n            style=${styleMap({\n                width: `${rect.width}px`,\n                height: `${rect.height}px`,\n                top: `${rect.top - firstRect.top}px`,\n                left: `${rect.left - firstRect.left}px`,\n            })}\n          ></div>`)\n            : nothing;\n    }\n};\nAffineSelectedBlocks.styles = css `\n    :host {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 1;\n      pointer-events: none;\n    }\n\n    :host([data-grab]) {\n      pointer-events: auto;\n    }\n\n    :host([data-grab]:hover) {\n      cursor: grab;\n    }\n\n    :host > div {\n      position: absolute;\n      border-radius: 5px;\n      background: var(--affine-hover-color);\n    }\n  `;\n__decorate([\n    property()\n], AffineSelectedBlocks.prototype, \"mouseRoot\", void 0);\n__decorate([\n    property()\n], AffineSelectedBlocks.prototype, \"offset\", void 0);\n__decorate([\n    property()\n], AffineSelectedBlocks.prototype, \"state\", void 0);\nAffineSelectedBlocks = __decorate([\n    customElement('affine-selected-blocks')\n], AffineSelectedBlocks);\nexport { AffineSelectedBlocks };\n//# sourceMappingURL=selected-blocks.js.map","export * from './tooltip.js';\n//# sourceMappingURL=index.js.map","export * from './block-hub.js';\nexport * from './drag-handle.js';\nexport * from './import-page/index.js';\nexport * from './menu-divider.js';\nexport * from './remote-selection/remote-selection.js';\nexport * from './selected-blocks.js';\nexport * from './tooltip/index.js';\n//# sourceMappingURL=index.js.map","import { css } from 'lit';\nimport { tooltipStyle } from '../tooltip/tooltip.js';\nexport const editLinkStyle = css `\n  .affine-link-edit-popover {\n    box-sizing: border-box;\n    width: 404px;\n    height: 112px;\n    padding: 12px;\n    box-shadow: var(--affine-shadow-2);\n    background: var(--affine-background-overlay-panel-color);\n    border-radius: 8px;\n    display: grid;\n    grid-template-columns: auto auto auto;\n    grid-template-rows: repeat(2, 1fr);\n    gap: 12px;\n    grid-template-areas:\n      'text-area .'\n      'link-area btn';\n    justify-items: center;\n    align-items: center;\n    /* breaks 'basic link' test in chromium */\n    /* user-select: none; */\n  }\n\n  .affine-edit-text-area {\n    grid-area: text-area;\n    width: 338px;\n    display: grid;\n    gap: 6px;\n    grid-template-columns: auto auto auto;\n    grid-template-rows: repeat(1, 1fr);\n    grid-template-areas: 'text span text-input';\n    justify-items: center;\n    align-items: center;\n    user-select: none;\n  }\n\n  .affine-edit-link-area {\n    grid-area: link-area;\n    width: 338px;\n    display: grid;\n    gap: 6px;\n    grid-template-columns: auto auto auto;\n    grid-template-rows: repeat(1, 1fr);\n    grid-template-areas: 'link span link-input';\n    justify-items: center;\n    align-items: center;\n  }\n\n  .affine-link-popover-dividing-line {\n    grid-area: span;\n  }\n  .affine-edit-text-text {\n    grid-area: text;\n  }\n\n  .affine-edit-text-input {\n    grid-area: text-input;\n  }\n\n  .affine-edit-link-text {\n    grid-area: link;\n  }\n\n  .affine-edit-link-input {\n    grid-area: link-input;\n  }\n\n  .affine-confirm-button {\n    grid-area: btn;\n    user-select: none;\n    fill: var(--affine-icon-color);\n  }\n  .affine-confirm-button[disabled],\n  .affine-confirm-button:disabled {\n    fill: var(--affine-icon-color);\n  }\n`;\nexport const linkPopoverStyle = css `\n  .popover-container {\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-base);\n    font-style: normal;\n    line-height: 24px;\n    color: var(--affine-popover-color);\n    z-index: var(--affine-z-index-popover);\n    animation: affine-popover-fade-in 0.2s ease;\n  }\n\n  @keyframes affine-popover-fade-in {\n    from {\n      opacity: 0;\n      transform: translateY(-3px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  .overlay-mask {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: var(--affine-z-index-popover);\n  }\n  .affine-edit-text-area {\n    border: 1px solid var(--affine-border-color);\n    outline: none;\n    border-radius: 10px;\n    background: transparent;\n  }\n  .affine-edit-text-area:focus-within {\n    border: 1px solid var(--affine-primary-color);\n  }\n  .affine-edit-link-area {\n    border: 1px solid var(--affine-border-color);\n    outline: none;\n    border-radius: 10px;\n    background: transparent;\n  }\n  .affine-edit-link-area:focus-within {\n    border: 1px solid var(--affine-primary-color);\n  }\n\n  label {\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-sm);\n    box-sizing: border-box;\n    padding: 6px 0 6px 12px;\n    color: var(--affine-icon-color);\n  }\n\n  input {\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-base);\n    box-sizing: border-box;\n    padding: 6px 12px 6px 0;\n    width: 260px;\n    height: 34px;\n    color: inherit;\n    border: none;\n    background: transparent;\n  }\n  input::placeholder {\n    color: var(--affine-placeholder-color);\n  }\n  input:focus {\n    outline: none;\n  }\n  input:focus ~ label,\n  input:active ~ label {\n    color: var(--affine-primary-color);\n  }\n\n  .affine-link-popover {\n    display: flex;\n    align-items: center;\n    height: 40px;\n    padding: 0 12px;\n\n    background: var(--affine-background-overlay-panel-color);\n    box-shadow: var(--affine-shadow-2);\n    border-radius: 8px;\n  }\n\n  .affine-link-popover-input {\n    border: none;\n  }\n  .affine-link-popover-input::placeholder {\n    color: var(--affine-placeholder-color);\n  }\n  .affine-link-popover-input:focus {\n    border: none;\n  }\n\n  .affine-link-preview {\n    width: 260px;\n    height: 28px;\n    display: flex;\n    align-items: center;\n    user-select: none;\n    cursor: pointer;\n    white-space: nowrap;\n  }\n\n  .affine-link-popover-dividing-line {\n    margin: 0 6px;\n    width: 1px;\n    height: 20px;\n    background-color: var(--affine-border-color);\n  }\n\n  ${editLinkStyle}\n  ${tooltipStyle}\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ConfirmIcon, EditIcon, LinkToCardIcon, UnlinkIcon, } from '@blocksuite/global/config';\nimport { html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { createEvent } from '../../__internal__/utils/index.js';\nimport { toast } from '../toast.js';\nimport { linkPopoverStyle } from './styles.js';\nexport const ALLOWED_SCHEMES = [\n    'http',\n    'https',\n    'ftp',\n    'sftp',\n    'mailto',\n    'tel',\n    // may need support other schemes\n];\n// I guess you don't want to use the regex base the RFC 5322 Official Standard\n// For more detail see https://stackoverflow.com/questions/201323/how-can-i-validate-an-email-address-using-a-regular-expression/1917982#1917982\nconst MAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n// For more detail see https://stackoverflow.com/questions/8667070/javascript-regular-expression-to-validate-url\nconst URL_REGEX = new RegExp('^' +\n    // protocol identifier (optional)\n    // short syntax // still required\n    '(?:(?:(?:https?|ftp):)?\\\\/\\\\/)' +\n    // user:pass BasicAuth (optional)\n    '(?:\\\\S+(?::\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broadcast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host & domain names, may end with dot\n    // can be replaced by a shortest alternative\n    // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n    '(?:' +\n    '(?:' +\n    '[a-z0-9\\\\u00a1-\\\\uffff]' +\n    '[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}' +\n    ')?' +\n    '[a-z0-9\\\\u00a1-\\\\uffff]\\\\.' +\n    ')+' +\n    // TLD identifier name, may end with dot\n    '(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)' +\n    ')' +\n    // port number (optional)\n    '(?::\\\\d{2,5})?' +\n    // resource path (optional)\n    '(?:[/?#]\\\\S*)?' +\n    '$', 'i');\nfunction normalizeUrl(url) {\n    const hasScheme = ALLOWED_SCHEMES.some(scheme => url.startsWith(scheme + ':'));\n    if (hasScheme) {\n        return url;\n    }\n    const isEmail = MAIL_REGEX.test(url);\n    if (isEmail) {\n        return 'mailto:' + url;\n    }\n    return 'http://' + url;\n}\n/**\n * For more detail see https://www.ietf.org/rfc/rfc1738.txt\n */\nconst isValidLink = (str) => {\n    if (!str) {\n        return false;\n    }\n    const url = normalizeUrl(str);\n    if (url === str) {\n        // Skip check if user input scheme manually\n        return true;\n    }\n    return URL_REGEX.test(url);\n};\nlet LinkPopover = class LinkPopover extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.left = '0';\n        this.top = '0';\n        this.type = 'create';\n        this.showMask = true;\n        this.text = '';\n        this.previewLink = '';\n        this.showBookmarkOperation = false;\n        this._bodyOverflowStyle = '';\n        this._disableConfirm = true;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.showMask) {\n            // Disable body scroll\n            this._bodyOverflowStyle = document.body.style.overflow;\n            document.body.style.overflow = 'hidden';\n        }\n    }\n    firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n        if (this.linkInput) {\n            this.linkInput.focus();\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.showMask) {\n            // Restore body scroll style\n            document.body.style.overflow = this._bodyOverflowStyle;\n        }\n    }\n    _hide() {\n        this.dispatchEvent(new CustomEvent('updateLink', {\n            detail: { type: 'cancel' },\n        }));\n    }\n    _onConfirm() {\n        if (this._disableConfirm) {\n            return;\n        }\n        if (!this.linkInput) {\n            throw new Error('Failed to update link! Link input not found!');\n        }\n        const link = normalizeUrl(this.linkInput.value);\n        const text = this.textInput?.value ?? undefined;\n        if (!link) {\n            return;\n        }\n        this.dispatchEvent(createEvent('updateLink', {\n            type: 'confirm',\n            link,\n            text,\n        }));\n        return;\n    }\n    _onCopy(e) {\n        navigator.clipboard.writeText(this.previewLink);\n        toast('Copied link to clipboard');\n    }\n    _onUnlink(e) {\n        this.dispatchEvent(createEvent('updateLink', { type: 'remove' }));\n    }\n    _onLinkToCard(e) {\n        this.dispatchEvent(new CustomEvent('updateLink', {\n            detail: { type: 'toBookmark' },\n        }));\n    }\n    _onEdit(e) {\n        this.dispatchEvent(createEvent('editLink', null));\n        this._disableConfirm = false;\n    }\n    _onInput(e) {\n        if (!this.linkInput) {\n            throw new Error('Failed to update link! Link input not found!');\n        }\n        const isValid = isValidLink(this.linkInput.value);\n        this._disableConfirm = isValid ? false : true;\n    }\n    _onKeydown(e) {\n        if (e.key === 'Enter' && !e.isComposing) {\n            e.preventDefault();\n            this._onConfirm();\n        }\n        return;\n    }\n    confirmBtnTemplate() {\n        return html `<icon-button\n      class=\"affine-confirm-button\"\n      ?disabled=${this._disableConfirm}\n      @click=${this._onConfirm}\n      >${ConfirmIcon}</icon-button\n    >`;\n    }\n    createLinkTemplate() {\n        return html `<div class=\"affine-link-popover\">\n      <input\n        id=\"link-input\"\n        class=\"affine-link-popover-input\"\n        type=\"text\"\n        spellcheck=\"false\"\n        placeholder=\"Paste or type a link\"\n        value=${this.previewLink}\n        @keydown=${this._onKeydown}\n        @input=${this._onInput}\n      />\n      <span class=\"affine-link-popover-dividing-line\"></span>\n      ${this.confirmBtnTemplate()}\n    </div>`;\n    }\n    previewTemplate() {\n        return html `<div class=\"affine-link-popover\">\n      <div class=\"affine-link-preview has-tool-tip\" @click=${this._onCopy}>\n        <tool-tip inert role=\"tooltip\">Click to copy link</tool-tip>\n        <span style=\"overflow: hidden;\">${this.previewLink}</span>\n      </div>\n      <span class=\"affine-link-popover-dividing-line\"></span>\n      ${this.showBookmarkOperation\n            ? html `<icon-button\n              class=\"has-tool-tip\"\n              data-testid=\"unlink\"\n              @click=${this._onLinkToCard}\n            >\n              ${LinkToCardIcon}\n              <tool-tip inert role=\"tooltip\">Turn into Card view</tool-tip>\n            </icon-button>\n            <span class=\"affine-link-popover-dividing-line\"></span>`\n            : ''}\n      <icon-button\n        class=\"has-tool-tip\"\n        data-testid=\"unlink\"\n        @click=${this._onUnlink}\n      >\n        ${UnlinkIcon}\n        <tool-tip inert role=\"tooltip\">Remove</tool-tip>\n      </icon-button>\n\n      <icon-button\n        class=\"has-tool-tip\"\n        data-testid=\"edit\"\n        @click=${this._onEdit}\n      >\n        ${EditIcon}\n        <tool-tip inert role=\"tooltip\">Edit</tool-tip>\n      </icon-button>\n    </div>`;\n    }\n    simpleTemplate() {\n        const isCreateLink = !this.previewLink;\n        return isCreateLink ? this.createLinkTemplate() : this.previewTemplate();\n    }\n    /**\n     * ```\n     * ┌─────────────────┐\n     * │ ┌──────────┐    │\n     * │ │Text      │    │\n     * │ └──────────┘    │\n     * │ ┌──────────┐    │\n     * │ │Link      │ X  │\n     * │ └──────────┘    │\n     * └─────────────────┘\n     * ```\n     */\n    editTemplate() {\n        return html `<div class=\"affine-link-edit-popover\">\n      <div class=\"affine-edit-text-area\">\n        <input\n          class=\"affine-edit-text-input\"\n          id=\"text-input\"\n          type=\"text\"\n          placeholder=\"Enter text\"\n          value=${this.text}\n          @keydown=${this._onKeydown}\n        />\n        <span class=\"affine-link-popover-dividing-line\"></span>\n        <label class=\"affine-edit-text-text\" for=\"text-input\">Text</label>\n      </div>\n      <div class=\"affine-edit-link-area\">\n        <input\n          id=\"link-input\"\n          class=\"affine-edit-link-input\"\n          type=\"text\"\n          spellcheck=\"false\"\n          placeholder=\"Paste or type a link\"\n          value=${this.previewLink}\n          @keydown=${this._onKeydown}\n        />\n        <span class=\"affine-link-popover-dividing-line\"></span>\n        <label class=\"affine-edit-link-text\" for=\"link-input\">Link</label>\n      </div>\n      ${this.confirmBtnTemplate()}\n    </div>`;\n    }\n    render() {\n        const mask = this.showMask\n            ? html `<div class=\"overlay-mask\" @click=\"${this._hide}\"></div>`\n            : html ``;\n        const popover = this.type === 'create' ? this.simpleTemplate() : this.editTemplate();\n        return html `\n      <div class=\"overlay-root\">\n        ${mask}\n        <div\n          class=\"popover-container\"\n          style=\"position: absolute; left: ${this.left}; top: ${this.top};${this\n            .style.cssText}\"\n        >\n          ${popover}\n        </div>\n      </div>\n    `;\n    }\n};\nLinkPopover.styles = linkPopoverStyle;\n__decorate([\n    property()\n], LinkPopover.prototype, \"left\", void 0);\n__decorate([\n    property()\n], LinkPopover.prototype, \"top\", void 0);\n__decorate([\n    property()\n], LinkPopover.prototype, \"type\", void 0);\n__decorate([\n    property()\n], LinkPopover.prototype, \"showMask\", void 0);\n__decorate([\n    property()\n], LinkPopover.prototype, \"text\", void 0);\n__decorate([\n    property()\n], LinkPopover.prototype, \"previewLink\", void 0);\n__decorate([\n    property()\n], LinkPopover.prototype, \"showBookmarkOperation\", void 0);\n__decorate([\n    state()\n], LinkPopover.prototype, \"_bodyOverflowStyle\", void 0);\n__decorate([\n    state()\n], LinkPopover.prototype, \"_disableConfirm\", void 0);\n__decorate([\n    query('#text-input')\n], LinkPopover.prototype, \"textInput\", void 0);\n__decorate([\n    query('#link-input')\n], LinkPopover.prototype, \"linkInput\", void 0);\n__decorate([\n    query('.popover-container')\n], LinkPopover.prototype, \"popoverContainer\", void 0);\nLinkPopover = __decorate([\n    customElement('edit-link-panel')\n], LinkPopover);\nexport { LinkPopover };\n//# sourceMappingURL=link-popover.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { getDefaultPage, getModelByElement, noop, } from '../../__internal__/utils/index.js';\nimport { calcSafeCoordinate } from '../../page-block/utils/position.js';\nfunction updatePosition(element, anchorEl) {\n    const rect = anchorEl.getBoundingClientRect();\n    const offsetY = 5;\n    const safeCoordinate = calcSafeCoordinate({\n        positioningPoint: { x: rect.x, y: rect.top + rect.height + offsetY },\n        objRect: element.popoverContainer?.getBoundingClientRect(),\n        offsetY,\n    });\n    element.left = `${safeCoordinate.x}px`;\n    element.top = `${safeCoordinate.y}px`;\n}\nfunction createEditLinkElement(anchorEl, container, { showMask, previewLink, page, }) {\n    const linkPanel = document.createElement('edit-link-panel');\n    linkPanel.showMask = showMask;\n    linkPanel.previewLink = previewLink;\n    linkPanel.showBookmarkOperation = !!page.awarenessStore.getFlag('enable_bookmark_operation');\n    container.appendChild(linkPanel);\n    requestAnimationFrame(() => {\n        updatePosition(linkPanel, anchorEl);\n    });\n    return linkPanel;\n}\nfunction bindHoverState(target, popover, controller) {\n    // TODO export as options\n    const hoverCloseDelay = 300;\n    let timer;\n    const handleMouseEnter = (e) => {\n        clearTimeout(timer);\n    };\n    const handleMouseLeave = (e) => {\n        // we want to leave the popover open\n        // if the mouse entered the popover immediately\n        // after leaving the target (or vice versa).\n        timer = window.setTimeout(() => {\n            controller.abort();\n        }, hoverCloseDelay);\n    };\n    const abortHandler = () => {\n        controller.abort();\n    };\n    target.addEventListener('mouseover', handleMouseEnter);\n    target.addEventListener('mouseout', handleMouseLeave);\n    popover.addEventListener('mouseover', handleMouseEnter);\n    popover.addEventListener('mouseout', handleMouseLeave);\n    const model = getModelByElement(target);\n    const pageBlock = getDefaultPage(model.page);\n    const viewport = pageBlock?.viewportElement;\n    viewport?.addEventListener('scroll', abortHandler);\n    return () => {\n        target.removeEventListener('mouseover', handleMouseEnter);\n        target.removeEventListener('mouseout', handleMouseLeave);\n        popover.removeEventListener('mouseover', handleMouseEnter);\n        popover.removeEventListener('mouseout', handleMouseLeave);\n        viewport?.removeEventListener('scroll', abortHandler);\n    };\n}\nexport async function showLinkPopover({ anchorEl, page, container = document.body, text = '', link = '', showMask = true, interactionKind = 'always', abortController = new AbortController(), }) {\n    assertExists(anchorEl, \"Can't show tooltip without anchor element!\");\n    if (abortController.signal.aborted) {\n        return Promise.resolve({ type: 'cancel' });\n    }\n    const editLinkEle = createEditLinkElement(anchorEl, container, {\n        showMask,\n        previewLink: link,\n        page,\n    });\n    const unsubscribeHoverAbort = interactionKind === 'hover'\n        ? bindHoverState(anchorEl, editLinkEle, abortController)\n        : noop;\n    return new Promise(res => {\n        abortController.signal.addEventListener('abort', () => {\n            editLinkEle.remove();\n            res({ type: 'cancel' });\n        });\n        editLinkEle.addEventListener('editLink', e => {\n            if (abortController.signal.aborted) {\n                return;\n            }\n            editLinkEle.type = 'edit';\n            editLinkEle.showMask = true;\n            editLinkEle.text = text;\n            unsubscribeHoverAbort();\n            requestAnimationFrame(() => {\n                updatePosition(editLinkEle, anchorEl);\n            });\n        });\n        editLinkEle.addEventListener('updateLink', e => {\n            if (abortController.signal.aborted) {\n                return;\n            }\n            editLinkEle.remove();\n            res(e.detail);\n        });\n    });\n}\n//# sourceMappingURL=create-link-popover.js.map","import '../button.js';\nimport './link-popover.js';\nexport { showLinkPopover } from './create-link-popover.js';\nexport { ALLOWED_SCHEMES } from './link-popover.js';\n//# sourceMappingURL=index.js.map","import { css } from 'lit';\nexport const styles = css `\n  :host {\n    position: absolute;\n  }\n\n  .linked-page-popover {\n    position: fixed;\n    left: 0;\n    top: 0;\n    box-sizing: border-box;\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-base);\n    padding: 12px 8px;\n    display: flex;\n    flex-direction: column;\n\n    background: var(--affine-background-overlay-panel-color);\n    box-shadow: var(--affine-shadow-2);\n    border-radius: 12px;\n    z-index: var(--affine-z-index-popover);\n  }\n\n  .linked-page-popover icon-button {\n    padding: 8px;\n    justify-content: flex-start;\n    gap: 8px;\n  }\n\n  .linked-page-popover .group-title {\n    color: var(--affine-text-secondary-color);\n    margin: 8px 12px;\n  }\n\n  .linked-page-popover .divider {\n    margin: 6px 12px;\n    height: 1px;\n    background: var(--affine-border-color);\n  }\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 4px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: #b1b1b1;\n  }\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DualLinkIcon, ImportIcon, PageIcon } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { assertExists, } from '@blocksuite/store';\nimport { html, LitElement } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { REFERENCE_NODE } from '../../__internal__/rich-text/reference-node.js';\nimport { getRichTextByModel, getVirgoByModel, } from '../../__internal__/utils/query.js';\nimport { isFuzzyMatch } from '../../__internal__/utils/std.js';\nimport { showImportModal } from '../import-page/index.js';\nimport { createKeydownObserver } from '../utils.js';\nimport { styles } from './styles.js';\n/**\n * Remove specified text from the current range.\n */\nfunction cleanSpecifiedTail(vEditor, str) {\n    const vRange = vEditor.getVRange();\n    assertExists(vRange);\n    const idx = vRange.index - str.length;\n    const textStr = vEditor.yText.toString().slice(idx, idx + str.length);\n    if (textStr !== str) {\n        console.warn(`Failed to clean text! Text mismatch expected: ${str} but actual: ${textStr}`);\n        return;\n    }\n    vEditor.deleteText({ index: idx, length: str.length });\n    vEditor.setVRange({\n        index: idx,\n        length: 0,\n    });\n}\nconst DEFAULT_PAGE_NAME = 'Untitled';\nlet LinkedPagePopover = class LinkedPagePopover extends WithDisposable(LitElement) {\n    get _actionList() {\n        const DISPLAY_LENGTH = 8;\n        const pageName = this._query || DEFAULT_PAGE_NAME;\n        const displayPageName = pageName.slice(0, DISPLAY_LENGTH) +\n            (pageName.length > DISPLAY_LENGTH ? '..' : '');\n        const filteredPageList = this._pageList.filter(({ title }) => isFuzzyMatch(title, this._query));\n        return [\n            ...filteredPageList.map((page, idx) => ({\n                key: page.id,\n                name: page.title || DEFAULT_PAGE_NAME,\n                active: idx === this._activatedItemIndex,\n                icon: PageIcon,\n                action: () => this._insertLinkedNode('LinkedPage', page.id),\n            })),\n            // The active condition is a bit tricky here\n            {\n                key: 'create-linked-page',\n                name: `Create \"${displayPageName}\" page`,\n                active: filteredPageList.length === this._activatedItemIndex,\n                icon: DualLinkIcon,\n                action: () => this._createPage(),\n            },\n            // {\n            //   key: 'create-subpage',\n            //   name: `Create \"${displayPageName}\" subpage`,\n            //   active: filteredPageList.length + 1 === this._activatedItemIndex,\n            //   icon: NewPageIcon,\n            //   action: () => this._createSubpage(),\n            // },\n            {\n                key: 'import-linked-page',\n                name: `Import`,\n                active: filteredPageList.length === this._activatedItemIndex,\n                icon: ImportIcon,\n                action: () => this._importPage(),\n            },\n        ];\n    }\n    get _page() {\n        return this.model.page;\n    }\n    constructor(model, abortController = new AbortController()) {\n        super();\n        this.model = model;\n        this.abortController = abortController;\n        this._position = null;\n        this._query = '';\n        this._pageList = [];\n        this._activatedItemIndex = 0;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const richText = getRichTextByModel(this.model);\n        assertExists(richText, 'RichText not found');\n        createKeydownObserver({\n            target: richText,\n            onUpdateQuery: str => {\n                this._query = str;\n                this._activatedItemIndex = 0;\n            },\n            abortController: this.abortController,\n            onMove: step => {\n                this._activatedItemIndex =\n                    (this._actionList.length + this._activatedItemIndex + step) %\n                        this._actionList.length;\n                // Scroll to the active item\n                const item = this._actionList[this._activatedItemIndex];\n                if (item.key === 'create-linked-page' ||\n                    item.key === 'import-linked-page') {\n                    return;\n                }\n                const shadowRoot = this.shadowRoot;\n                if (!shadowRoot) {\n                    console.warn('Failed to find the shadow root!', this);\n                    return;\n                }\n                const ele = shadowRoot.querySelector(`icon-button[data-id=\"${item.key}\"]`);\n                if (!ele) {\n                    console.warn('Failed to find the active item!', item);\n                    return;\n                }\n                ele.scrollIntoView({\n                    block: 'nearest',\n                });\n            },\n            onConfirm: () => {\n                this._actionList[this._activatedItemIndex].action();\n            },\n            onEsc: () => {\n                this.abortController.abort();\n            },\n        });\n        this._disposables.addFromEvent(this, 'mousedown', e => {\n            // Prevent input from losing focus\n            e.preventDefault();\n        });\n        this._pageList = this._page.workspace.meta.pageMetas;\n        this._disposables.add(this.model.page.workspace.slots.pagesUpdated.on(() => {\n            this._pageList = this._page.workspace.meta.pageMetas;\n        }));\n    }\n    updatePosition(position) {\n        this._position = position;\n    }\n    _insertLinkedNode(type, pageId) {\n        this.abortController.abort();\n        const vEditor = getVirgoByModel(this.model);\n        assertExists(vEditor, 'Editor not found');\n        cleanSpecifiedTail(vEditor, '@' + this._query);\n        const vRange = vEditor.getVRange();\n        assertExists(vRange);\n        vEditor.insertText(vRange, REFERENCE_NODE, { reference: { type, pageId } });\n        vEditor.setVRange({\n            index: vRange.index + 1,\n            length: 0,\n        });\n    }\n    _createPage() {\n        const pageName = this._query;\n        const page = this._page.workspace.createPage({\n            init: {\n                title: pageName,\n            },\n        });\n        this._insertLinkedNode('LinkedPage', page.id);\n    }\n    _importPage() {\n        this.abortController.abort();\n        const onSuccess = (pageIds) => {\n            if (pageIds.length === 0) {\n                return;\n            }\n            const pageId = pageIds[0];\n            this._insertLinkedNode('LinkedPage', pageId);\n        };\n        showImportModal({\n            workspace: this._page.workspace,\n            multiple: false,\n            onSuccess,\n        });\n    }\n    // private _createSubpage() {\n    //   const pageName = this._query;\n    //   const page = this._page.workspace.createPage({\n    //     init: {\n    //       title: pageName,\n    //     },\n    //   });\n    //   this._insertLinkedNode('Subpage', page.id);\n    // }\n    render() {\n        const MAX_HEIGHT = 396;\n        const style = this._position\n            ? styleMap({\n                transform: `translate(${this._position.x}, ${this._position.y})`,\n                maxHeight: `${Math.min(this._position.height, MAX_HEIGHT)}px`,\n            })\n            : styleMap({\n                visibility: 'hidden',\n            });\n        const pageList = this._actionList.slice(0, -2).map(({ key, name, action, active, icon }, index) => html `<icon-button\n        width=\"280px\"\n        height=\"32px\"\n        data-id=${key}\n        text=${name}\n        ?hover=${active}\n        @click=${action}\n        @mousemove=${() => {\n            // Use `mousemove` instead of `mouseover` to avoid navigate conflict with keyboard\n            this._activatedItemIndex = index;\n        }}\n        >${icon}</icon-button\n      >`);\n        const createList = this._actionList.slice(-2).map(({ key, name, action, active, icon }, index) => html `<icon-button\n        width=\"280px\"\n        height=\"32px\"\n        data-id=${key}\n        text=${name}\n        ?hover=${active}\n        @click=${action}\n        @mousemove=${() => {\n            // Use `mousemove` instead of `mouseover` to avoid navigate conflict with keyboard\n            this._activatedItemIndex = this._actionList.length - 1 + index;\n        }}\n        >${icon}</icon-button\n      >`);\n        return html `<div class=\"linked-page-popover\" style=\"${style}\">\n      ${pageList.length\n            ? html `<div class=\"group-title\">Link to page</div>\n            <div class=\"group\" style=\"overflow-y: scroll; max-height: 224px;\">\n              ${pageList}\n            </div>\n            <div class=\"divider\"></div>`\n            : null}\n\n      <div class=\"group-title\">New page</div>\n      ${createList}\n    </div>`;\n    }\n};\nLinkedPagePopover.styles = styles;\n__decorate([\n    state()\n], LinkedPagePopover.prototype, \"_position\", void 0);\n__decorate([\n    state()\n], LinkedPagePopover.prototype, \"_query\", void 0);\n__decorate([\n    state()\n], LinkedPagePopover.prototype, \"_pageList\", void 0);\n__decorate([\n    state()\n], LinkedPagePopover.prototype, \"_activatedItemIndex\", void 0);\n__decorate([\n    query('.linked-page-popover')\n], LinkedPagePopover.prototype, \"linkedPageElement\", void 0);\nLinkedPagePopover = __decorate([\n    customElement('affine-linked-page-popover')\n], LinkedPagePopover);\nexport { LinkedPagePopover };\n//# sourceMappingURL=linked-page-popover.js.map","import { assertExists, DisposableGroup, } from '@blocksuite/store';\nimport { getViewportElement } from '../../__internal__/utils/query.js';\nimport { throttle } from '../../__internal__/utils/std.js';\nimport { getPopperPosition } from '../../page-block/utils/position.js';\nimport { LinkedPagePopover } from './linked-page-popover.js';\nexport function showLinkedPagePopover({ model, range, container = document.body, abortController = new AbortController(), }) {\n    const disposables = new DisposableGroup();\n    abortController.signal.addEventListener('abort', () => disposables.dispose());\n    const linkedPage = new LinkedPagePopover(model, abortController);\n    // Mount\n    container.appendChild(linkedPage);\n    disposables.add(() => linkedPage.remove());\n    // Handle position\n    const updatePosition = throttle(() => {\n        const linkedPageElement = linkedPage.linkedPageElement;\n        assertExists(linkedPageElement, 'You should render the linked page node even if no position');\n        const position = getPopperPosition(linkedPageElement, range);\n        linkedPage.updatePosition(position);\n    }, 10);\n    disposables.addFromEvent(window, 'resize', updatePosition);\n    const scrollContainer = getViewportElement(model.page);\n    if (scrollContainer) {\n        // Note: in edgeless mode, the scroll container is not exist!\n        disposables.addFromEvent(scrollContainer, 'scroll', updatePosition, {\n            passive: true,\n        });\n    }\n    // Wait for node to be mounted\n    setTimeout(updatePosition);\n    disposables.addFromEvent(window, 'mousedown', (e) => {\n        if (e.target === linkedPage)\n            return;\n        abortController.abort();\n    });\n    return linkedPage;\n}\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n/**\n * Renders a template into a portal. Defaults to `document.body`.\n *\n * @example\n * ```ts\n * render() {\n *   return html`${showPortal\n *     ? html`<affine-portal .template=${portalTemplate}></affine-portal>`\n *     : null}`;\n * };\n * ```\n */\nlet Portal = class Portal extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.container = document.body;\n        this.template = html ``;\n        this._portalRoot = null;\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this._portalRoot?.remove();\n    }\n    createRenderRoot() {\n        const portalRoot = document.createElement('div');\n        portalRoot.classList.add('affine-portal');\n        this.container.append(portalRoot);\n        this._portalRoot = portalRoot;\n        return portalRoot;\n    }\n    render() {\n        return this.template;\n    }\n};\n__decorate([\n    property()\n], Portal.prototype, \"container\", void 0);\n__decorate([\n    property()\n], Portal.prototype, \"template\", void 0);\nPortal = __decorate([\n    customElement('affine-portal')\n], Portal);\nexport { Portal };\n//# sourceMappingURL=portal.js.map","import { BookmarkIcon, CopyIcon, DatabaseKanbanViewIcon, DatabaseTableViewIcon, DeleteIcon, DualLinkIcon, DuplicateIcon, ImageIcon20, NewPageIcon, NowIcon, paragraphConfig, \n// PasteIcon,\nTodayIcon, TomorrowIcon, YesterdayIcon, } from '@blocksuite/global/config';\nimport { assertExists, Text, Utils, } from '@blocksuite/store';\nimport { normalizeDelta } from '../../__internal__/clipboard/utils/commons.js';\nimport { REFERENCE_NODE } from '../../__internal__/rich-text/reference-node.js';\nimport { getServiceOrRegister } from '../../__internal__/service.js';\nimport { restoreSelection } from '../../__internal__/utils/block-range.js';\nimport { createBookmarkBlock, getCurrentNativeRange, getVirgoByModel, resetNativeSelection, uploadImageFromLocal, } from '../../__internal__/utils/index.js';\nimport { clearMarksOnDiscontinuousInput } from '../../__internal__/utils/virgo.js';\nimport { copyBlock } from '../../page-block/default/utils.js';\nimport { formatConfig } from '../../page-block/utils/format-config.js';\nimport { onModelTextUpdated, updateBlockType, } from '../../page-block/utils/index.js';\nimport { showLinkedPagePopover } from '../linked-page/index.js';\nimport { toast } from '../toast.js';\nfunction insertContent(model, text, attributes) {\n    if (!model.text) {\n        throw new Error(\"Can't insert text! Text not found\");\n    }\n    const vEditor = getVirgoByModel(model);\n    if (!vEditor) {\n        throw new Error(\"Can't insert text! vEditor not found\");\n    }\n    const vRange = vEditor.getVRange();\n    const index = vRange ? vRange.index : model.text.length;\n    model.text.insert(text, index, attributes);\n    // Update the caret to the end of the inserted text\n    vEditor.setVRange({\n        index: index + text.length,\n        length: 0,\n    });\n}\nfunction formatDate(date) {\n    // yyyy-mm-dd\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const strTime = `${year}-${month}-${day}`;\n    return strTime;\n}\nfunction insideDatabase(model) {\n    return Utils.isInsideBlockByFlavour(model.page, model, 'affine:database');\n}\nexport const menuGroups = ([\n    {\n        name: 'Text',\n        items: [\n            ...paragraphConfig\n                .filter(i => i.flavour !== 'affine:list')\n                .map(({ name, icon, flavour, type }) => ({\n                name,\n                icon,\n                showWhen: model => {\n                    if (!model.page.schema.flavourSchemaMap.has(flavour)) {\n                        return false;\n                    }\n                    if (['Quote', 'Code Block', 'Divider'].includes(name)) {\n                        return !insideDatabase(model);\n                    }\n                    return true;\n                },\n                action: ({ model }) => {\n                    const newModels = updateBlockType([model], flavour, type);\n                    // Reset selection if the target is code block\n                    if (flavour === 'affine:code') {\n                        if (newModels.length !== 1) {\n                            throw new Error(\"Failed to reset selection! New model length isn't 1\");\n                        }\n                        const codeModel = newModels[0];\n                        onModelTextUpdated(codeModel, () => {\n                            restoreSelection({\n                                type: 'Native',\n                                startOffset: 0,\n                                endOffset: 0,\n                                models: [codeModel],\n                            });\n                        });\n                    }\n                },\n            })),\n        ],\n    },\n    {\n        name: 'Style',\n        items: formatConfig\n            .filter(i => !['Link', 'Code'].includes(i.name))\n            .map(({ name, icon, id }) => ({\n            name,\n            icon,\n            action: ({ model }) => {\n                if (!model.text) {\n                    return;\n                }\n                const len = model.text.length;\n                if (!len) {\n                    const vEditor = getVirgoByModel(model);\n                    assertExists(vEditor, \"Can't set style mark! vEditor not found\");\n                    vEditor.setMarks({\n                        [id]: true,\n                    });\n                    clearMarksOnDiscontinuousInput(vEditor);\n                    return;\n                }\n                model.text.format(0, len, {\n                    [id]: true,\n                });\n            },\n        })),\n    },\n    {\n        name: 'List',\n        items: paragraphConfig\n            .filter(i => i.flavour === 'affine:list')\n            .map(({ name, icon, flavour, type }) => ({\n            name,\n            icon,\n            showWhen: model => {\n                if (!model.page.schema.flavourSchemaMap.has(flavour)) {\n                    return false;\n                }\n                return true;\n            },\n            action: ({ model }) => updateBlockType([model], flavour, type),\n        })),\n    },\n    {\n        name: 'Pages',\n        items: [\n            {\n                name: 'New Page',\n                icon: NewPageIcon,\n                showWhen: model => !!model.page.awarenessStore.getFlag('enable_linked_page'),\n                action: ({ page, model }) => {\n                    const newPage = page.workspace.createPage({\n                        init: true,\n                    });\n                    insertContent(model, REFERENCE_NODE, {\n                        reference: { type: 'LinkedPage', pageId: newPage.id },\n                    });\n                },\n            },\n            {\n                name: 'Link Page',\n                alias: ['dual link'],\n                icon: DualLinkIcon,\n                showWhen: model => !!model.page.awarenessStore.getFlag('enable_linked_page'),\n                action: ({ model }) => {\n                    insertContent(model, '@');\n                    showLinkedPagePopover({ model, range: getCurrentNativeRange() });\n                },\n            },\n        ],\n    },\n    {\n        name: 'Content & Media',\n        items: [\n            {\n                name: 'Image',\n                icon: ImageIcon20,\n                showWhen: model => {\n                    if (!model.page.schema.flavourSchemaMap.has('affine:embed')) {\n                        return false;\n                    }\n                    if (insideDatabase(model)) {\n                        return false;\n                    }\n                    return true;\n                },\n                async action({ page, model }) {\n                    const parent = page.getParent(model);\n                    if (!parent) {\n                        return;\n                    }\n                    parent.children.indexOf(model);\n                    const props = await uploadImageFromLocal(page);\n                    page.addSiblingBlocks(model, props);\n                },\n            },\n            {\n                name: 'Bookmark',\n                icon: BookmarkIcon,\n                showWhen: model => {\n                    if (!model.page.awarenessStore.getFlag('enable_bookmark_operation')) {\n                        return false;\n                    }\n                    if (!model.page.schema.flavourSchemaMap.has('affine:embed')) {\n                        return false;\n                    }\n                    return !insideDatabase(model);\n                },\n                async action({ page, model }) {\n                    const parent = page.getParent(model);\n                    if (!parent) {\n                        return;\n                    }\n                    const index = parent.children.indexOf(model);\n                    createBookmarkBlock(parent, index + 1);\n                },\n            },\n        ],\n    },\n    {\n        name: 'Date & Time',\n        items: [\n            {\n                name: 'Today',\n                icon: TodayIcon,\n                action: ({ model }) => {\n                    const date = new Date();\n                    insertContent(model, formatDate(date));\n                },\n            },\n            {\n                name: 'Tomorrow',\n                icon: TomorrowIcon,\n                action: ({ model }) => {\n                    // yyyy-mm-dd\n                    const date = new Date();\n                    date.setDate(date.getDate() + 1);\n                    insertContent(model, formatDate(date));\n                },\n            },\n            {\n                name: 'Yesterday',\n                icon: YesterdayIcon,\n                action: ({ model }) => {\n                    const date = new Date();\n                    date.setDate(date.getDate() - 1);\n                    insertContent(model, formatDate(date));\n                },\n            },\n            {\n                name: 'Now',\n                icon: NowIcon,\n                action: ({ model }) => {\n                    // For example 7:13 pm\n                    // https://stackoverflow.com/questions/8888491/how-do-you-display-javascript-datetime-in-12-hour-am-pm-format\n                    const date = new Date();\n                    let hours = date.getHours();\n                    const minutes = date.getMinutes().toString().padStart(2, '0');\n                    const amOrPm = hours >= 12 ? 'pm' : 'am';\n                    hours = hours % 12;\n                    hours = hours ? hours : 12; // the hour '0' should be '12'\n                    const strTime = hours + ':' + minutes + ' ' + amOrPm;\n                    insertContent(model, strTime);\n                },\n            },\n        ],\n    },\n    {\n        name: 'Database',\n        items: [\n            {\n                name: 'Table View',\n                alias: ['database'],\n                icon: DatabaseTableViewIcon,\n                showWhen: model => {\n                    if (!model.page.awarenessStore.getFlag('enable_database')) {\n                        return false;\n                    }\n                    if (!model.page.schema.flavourSchemaMap.has('affine:database')) {\n                        return false;\n                    }\n                    if (insideDatabase(model)) {\n                        // You can't add a database block inside another database block\n                        return false;\n                    }\n                    return true;\n                },\n                action: async ({ page, model }) => {\n                    const parent = page.getParent(model);\n                    assertExists(parent);\n                    const index = parent.children.indexOf(model);\n                    const id = page.addBlock('affine:database', {}, page.getParent(model), index);\n                    const service = await getServiceOrRegister('affine:database');\n                    service.initDatabaseBlock(page, model, id, false);\n                },\n            },\n            {\n                name: 'Kanban View',\n                alias: ['database'],\n                disabled: true,\n                icon: DatabaseKanbanViewIcon,\n                showWhen: model => {\n                    if (!model.page.awarenessStore.getFlag('enable_database')) {\n                        return false;\n                    }\n                    if (!model.page.schema.flavourSchemaMap.has('affine:database')) {\n                        return false;\n                    }\n                    if (insideDatabase(model)) {\n                        // You can't add a database block inside another database block\n                        return false;\n                    }\n                    return true;\n                },\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                action: ({ model }) => { },\n            },\n        ],\n    },\n    {\n        name: 'Actions',\n        items: [\n            {\n                name: 'Copy',\n                icon: CopyIcon,\n                action: async ({ model }) => {\n                    const curRange = getCurrentNativeRange();\n                    await copyBlock(model);\n                    resetNativeSelection(curRange);\n                    toast('Copied to clipboard');\n                },\n            },\n            // {\n            //   name: 'Paste',\n            //   icon: PasteIcon,\n            //   action: async ({ model }) => {\n            //     const copiedText = await navigator.clipboard.readText();\n            //     console.log('copiedText', copiedText);\n            //     insertContent(model, copiedText);\n            //   },\n            // },\n            {\n                name: 'Duplicate',\n                icon: DuplicateIcon,\n                action: ({ page, model }) => {\n                    if (!model.text || !(model.text instanceof Text)) {\n                        throw new Error(\"Can't duplicate a block without text\");\n                    }\n                    const parent = page.getParent(model);\n                    if (!parent) {\n                        throw new Error('Failed to duplicate block! Parent not found');\n                    }\n                    const index = parent.children.indexOf(model);\n                    // TODO add clone model util\n                    page.addBlock(model.flavour, {\n                        type: model.type,\n                        text: page.Text.fromDelta(normalizeDelta(page, model.text.toDelta())),\n                        // @ts-expect-error\n                        checked: model.checked,\n                    }, page.getParent(model), index);\n                },\n            },\n            {\n                name: 'Delete',\n                icon: DeleteIcon,\n                action: ({ page, model }) => {\n                    page.deleteBlock(model);\n                },\n            },\n        ],\n    },\n]).map(group => ({\n    name: group.name,\n    items: group.items.map(item => ({ ...item, groupName: group.name })),\n}));\n//# sourceMappingURL=config.js.map","import { css } from 'lit';\nexport const styles = css `\n  .overlay-mask {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: var(--affine-z-index-popover);\n  }\n\n  .slash-menu-container {\n    z-index: var(--affine-z-index-popover);\n    user-select: none;\n  }\n\n  .slash-menu {\n    position: fixed;\n    left: 0;\n    top: 0;\n    box-sizing: border-box;\n    font-size: var(--affine-font-base);\n    padding: 12px 0;\n    display: flex;\n\n    background: var(--affine-background-overlay-panel-color);\n    box-shadow: var(--affine-shadow-2);\n    border-radius: 12px;\n    z-index: var(--affine-z-index-popover);\n    /* transition: max-height 0.2s ease-in-out; */\n  }\n\n  .slash-category {\n    position: relative;\n    overflow: hidden;\n    box-sizing: border-box;\n    width: 150px;\n    max-width: 150px;\n    display: flex;\n    flex-direction: column;\n    color: var(--affine-text-secondary-color);\n    gap: 5px;\n    margin-bottom: 20px;\n    /* transition: max-width 0.2s ease-in-out; */\n  }\n  .slash-category::before {\n    content: '';\n    position: absolute;\n    top: 10px;\n    right: 0;\n    height: 100%;\n    width: 1px;\n    background-color: var(--affine-border-color);\n  }\n\n  .slash-category-hide {\n    max-width: 0;\n    padding: 0;\n    margin: 0;\n    height: 0;\n  }\n\n  .slash-category-name {\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-sm);\n    white-space: nowrap;\n    cursor: pointer;\n    padding: 4px 20px;\n  }\n\n  .slash-active-category {\n    position: relative;\n    box-sizing: border-box;\n    color: var(--affine-primary-color);\n  }\n\n  .slash-active-category::after {\n    content: '';\n    position: absolute;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 1px;\n    height: 12px;\n    background: linear-gradient(\n      180deg,\n      var(--affine-text-emphasis-color) 0%,\n      var(--affine-palette-purple) 100%\n    );\n    border-radius: 1px;\n  }\n\n  .slash-item-container {\n    box-sizing: border-box;\n    overflow-y: auto;\n    padding: 0 8px;\n    width: 200px;\n  }\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 4px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: #b1b1b1;\n  }\n\n  .slash-item-divider {\n    border-top: 1px dashed var(--affine-border-color);\n    margin: 8px 0;\n  }\n\n  format-bar-button svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { WithDisposable } from '@blocksuite/lit';\nimport {} from '@blocksuite/store';\nimport { html, LitElement, nothing } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { getRichTextByModel, isControlledKeyboardEvent, isFuzzyMatch, } from '../../__internal__/utils/index.js';\nimport { createKeydownObserver } from '../utils.js';\nimport { menuGroups } from './config.js';\nimport { styles } from './styles.js';\nfunction collectGroupNames(menuItem) {\n    return menuItem.reduce((acc, item) => {\n        if (!acc.length || acc[acc.length - 1] !== item.groupName) {\n            acc.push(item.groupName);\n        }\n        return acc;\n    }, []);\n}\nlet SlashMenu = class SlashMenu extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this._leftPanelActivated = false;\n        this._activatedItemIndex = 0;\n        this._filterItems = [];\n        this._hide = false;\n        this._position = null;\n        this.abortController = new AbortController();\n        /**\n         * Does not include the slash character\n         */\n        this._searchString = '';\n        // Handle click outside\n        this._onClickAway = (e) => {\n            // if (e.target === this) return;\n            if (!this._hide)\n                return;\n            // If the slash menu is hidden, click anywhere will close the slash menu\n            this.abortController.abort();\n        };\n    }\n    get menuGroups() {\n        return menuGroups;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this._disposables.addFromEvent(window, 'mousedown', this._onClickAway);\n        this._disposables.addFromEvent(this, 'mousedown', e => {\n            // Prevent input from losing focus\n            e.preventDefault();\n        });\n        this._filterItems = this._updateItem('');\n        const richText = getRichTextByModel(this.model);\n        if (!richText) {\n            console.warn('Slash Menu may not work properly! No rich text found for model', this.model);\n            return;\n        }\n        /**\n         * Handle arrow key\n         *\n         * The slash menu will be closed in the following keyboard cases:\n         * - Press the space key\n         * - Press the backspace key and the search string is empty\n         * - Press the escape key\n         * - When the search item is empty, the slash menu will be hidden temporarily,\n         *   and if the following key is not the backspace key, the slash menu will be closed\n         */\n        createKeydownObserver({\n            target: richText,\n            abortController: this.abortController,\n            interceptor: (e, next) => {\n                if (e.key === '/') {\n                    // Can not stopPropagation here,\n                    // otherwise the rich text will not be able to trigger a new the slash menu\n                    return;\n                }\n                if (this._hide && e.key !== 'Backspace') {\n                    // if the following key is not the backspace key,\n                    // the slash menu will be closed\n                    this.abortController.abort();\n                    return;\n                }\n                if (e.key === ' ') {\n                    this._hide = true;\n                    next();\n                    return;\n                }\n                if (this._hide) {\n                    this._hide = false;\n                }\n                const isControlled = isControlledKeyboardEvent(e);\n                const isShift = e.shiftKey;\n                if (e.key === 'ArrowLeft' && !isControlled && !isShift) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    // If the left panel is hidden, should not activate it\n                    if (this._searchString.length)\n                        return;\n                    this._leftPanelActivated = true;\n                    return;\n                }\n                if (e.key === 'ArrowRight' && !isControlled && !isShift) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    this._leftPanelActivated = false;\n                    return;\n                }\n                next();\n            },\n            onUpdateQuery: val => {\n                const newFilteredItems = this._updateItem(val);\n                this._filterItems = newFilteredItems;\n                if (!newFilteredItems.length) {\n                    this._hide = true;\n                }\n            },\n            onMove: step => {\n                const configLen = this._filterItems.length;\n                if (this._leftPanelActivated) {\n                    const groupNames = collectGroupNames(this._filterItems);\n                    const nowGroupIdx = groupNames.findIndex(groupName => groupName ===\n                        this._filterItems[this._activatedItemIndex].groupName);\n                    const targetGroup = groupNames[(nowGroupIdx + step + groupNames.length) % groupNames.length];\n                    this._handleClickCategory(targetGroup);\n                    return;\n                }\n                let ejectedCnt = configLen;\n                do {\n                    this._activatedItemIndex =\n                        (this._activatedItemIndex + step + configLen) % configLen;\n                    // Skip disabled items\n                } while (this._filterItems[this._activatedItemIndex].disabled &&\n                    // If all items are disabled, the loop will never end\n                    ejectedCnt--);\n                this._scrollToItem(this._filterItems[this._activatedItemIndex], false);\n            },\n            onConfirm: () => {\n                this._handleClickItem(this._activatedItemIndex);\n            },\n            onEsc: () => {\n                this.abortController.abort();\n            },\n        });\n    }\n    updatePosition(position) {\n        this._position = position;\n    }\n    _updateItem(query) {\n        this._searchString = query;\n        this._activatedItemIndex = 0;\n        // Activate the right panel when search string is not empty\n        if (this._leftPanelActivated) {\n            this._leftPanelActivated = false;\n        }\n        const searchStr = this._searchString.toLowerCase();\n        let allMenus = this.menuGroups.flatMap(group => group.items);\n        allMenus = allMenus.filter(({ showWhen = () => true }) => showWhen(this.model));\n        if (!searchStr) {\n            return allMenus;\n        }\n        return allMenus.filter(({ name, alias = [] }) => [name, ...alias].some(str => isFuzzyMatch(str, searchStr)));\n    }\n    _scrollToItem(item, force = true) {\n        const shadowRoot = this.shadowRoot;\n        if (!shadowRoot) {\n            return;\n        }\n        const ele = shadowRoot.querySelector(`format-bar-button[text=\"${item.name}\"]`);\n        if (!ele) {\n            return;\n        }\n        if (force) {\n            // set parameter to `true` to align to top\n            ele.scrollIntoView(true);\n            return;\n        }\n        ele.scrollIntoView({\n            block: 'nearest',\n        });\n    }\n    _handleClickItem(index) {\n        if (this._leftPanelActivated ||\n            index < 0 ||\n            index >= this._filterItems.length) {\n            return;\n        }\n        // Need to remove the search string\n        // We must to do clean the slash string before we do the action\n        // Otherwise, the action may change the model and cause the slash string to be changed\n        this.abortController.abort(this._searchString);\n        const { action } = this._filterItems[index];\n        action({ page: this.model.page, model: this.model });\n    }\n    _handleClickCategory(groupName) {\n        const item = this._filterItems.find(item => item.groupName === groupName);\n        if (!item)\n            return;\n        this._scrollToItem(item);\n        this._activatedItemIndex = this._filterItems.findIndex(i => i.name === item.name);\n    }\n    _categoryTemplate() {\n        const showCategory = !this._searchString.length;\n        const activatedGroupName = this._filterItems[this._activatedItemIndex]?.groupName;\n        const groups = collectGroupNames(this._filterItems);\n        return html `<div\n      class=\"slash-category ${!showCategory ? 'slash-category-hide' : ''}\"\n    >\n      ${groups.map(groupName => html `<div\n            class=\"slash-category-name ${activatedGroupName === groupName\n            ? 'slash-active-category'\n            : ''}\"\n            @click=${() => this._handleClickCategory(groupName)}\n          >\n            ${groupName}\n          </div>`)}\n    </div>`;\n    }\n    render() {\n        if (this._hide) {\n            return nothing;\n        }\n        const MAX_HEIGHT_WITH_CATEGORY = 408;\n        const MAX_HEIGHT = 344;\n        const showCategory = !this._searchString.length;\n        const slashMenuStyles = this._position\n            ? styleMap({\n                transform: `translate(${this._position.x}, ${this._position.y})`,\n                maxHeight: `${Math.min(this._position.height, showCategory ? MAX_HEIGHT_WITH_CATEGORY : MAX_HEIGHT)}px`,\n            })\n            : styleMap({\n                visibility: 'hidden',\n            });\n        const btnItems = this._filterItems.map(({ name, icon, disabled = false, groupName }, index) => {\n            const showDivider = index !== 0 && this._filterItems[index - 1].groupName !== groupName;\n            return html `<div\n            class=\"slash-item-divider\"\n            ?hidden=${!showDivider || !!this._searchString.length}\n          ></div>\n          <format-bar-button\n            ?disabled=${disabled}\n            width=\"100%\"\n            style=\"padding-left: 12px; justify-content: flex-start;\"\n            ?hover=${!disabled &&\n                !this._leftPanelActivated &&\n                this._activatedItemIndex === index}\n            text=\"${name}\"\n            data-testid=\"${name}\"\n            @mousemove=${() => {\n                // Use `mousemove` instead of `mouseover` to avoid navigate conflict in left panel\n                this._leftPanelActivated = false;\n                this._activatedItemIndex = index;\n            }}\n            @click=${() => {\n                this._handleClickItem(index);\n            }}\n          >\n            ${icon}\n          </format-bar-button>`;\n        });\n        return html `<div class=\"slash-menu-container\">\n      <div\n        class=\"overlay-mask\"\n        @click=\"${() => this.abortController.abort()}\"\n      ></div>\n      <div class=\"slash-menu\" style=\"${slashMenuStyles}\">\n        ${this._categoryTemplate()}\n        <div class=\"slash-item-container\">${btnItems}</div>\n      </div>\n    </div>`;\n    }\n};\nSlashMenu.styles = styles;\n__decorate([\n    property()\n], SlashMenu.prototype, \"model\", void 0);\n__decorate([\n    query('.slash-menu')\n], SlashMenu.prototype, \"slashMenuElement\", void 0);\n__decorate([\n    state()\n], SlashMenu.prototype, \"_leftPanelActivated\", void 0);\n__decorate([\n    state()\n], SlashMenu.prototype, \"_activatedItemIndex\", void 0);\n__decorate([\n    state()\n], SlashMenu.prototype, \"_filterItems\", void 0);\n__decorate([\n    state()\n], SlashMenu.prototype, \"_hide\", void 0);\n__decorate([\n    state()\n], SlashMenu.prototype, \"_position\", void 0);\nSlashMenu = __decorate([\n    customElement('slash-menu')\n], SlashMenu);\nexport { SlashMenu };\n//# sourceMappingURL=slash-menu-popover.js.map","import { assertExists } from '@blocksuite/store';\nimport { getVirgoByModel, throttle } from '../../__internal__/utils/index.js';\nimport { getPopperPosition } from '../../page-block/utils/position.js';\nimport { SlashMenu } from './slash-menu-popover.js';\nlet globalAbortController = new AbortController();\nfunction onAbort(e, slashMenu, positionCallback, model) {\n    slashMenu.remove();\n    window.removeEventListener('resize', positionCallback);\n    // Clean slash text\n    if (!e.target || !(e.target instanceof AbortSignal)) {\n        throw new Error('Failed to clean slash search text! Unknown abort event');\n    }\n    // If not explicitly set in those methods, it defaults to \"AbortError\" DOMException.\n    if (e.target.reason instanceof DOMException) {\n        // Should not clean slash text when click away or abort\n        return;\n    }\n    if (typeof e.target.reason !== 'string') {\n        throw new Error('Failed to clean slash search text! Unknown abort reason');\n    }\n    const searchStr = '/' + e.target.reason;\n    const text = model.text;\n    if (!text) {\n        console.warn('Failed to clean slash search text! No text found for model', model);\n        return;\n    }\n    const vEditor = getVirgoByModel(model);\n    if (!vEditor) {\n        console.warn('Failed to clean slash search text! No vEditor found for model, model:', model);\n        return;\n    }\n    const vRange = vEditor.getVRange();\n    assertExists(vRange);\n    const idx = vRange.index - searchStr.length;\n    const textStr = text.toString().slice(idx, idx + searchStr.length);\n    if (textStr !== searchStr) {\n        console.warn(`Failed to clean slash search text! Text mismatch expected: ${searchStr} but actual: ${textStr}`);\n        return;\n    }\n    text.delete(idx, searchStr.length);\n    vEditor.setVRange({\n        index: idx,\n        length: 0,\n    });\n}\nexport function showSlashMenu({ model, range, container = document.body, abortController = new AbortController(), }) {\n    // Abort previous format quick bar\n    globalAbortController.abort();\n    globalAbortController = abortController;\n    const slashMenu = new SlashMenu();\n    slashMenu.model = model;\n    slashMenu.abortController = abortController;\n    // Handle position\n    const updatePosition = throttle(() => {\n        const slashMenuElement = slashMenu.slashMenuElement;\n        assertExists(slashMenuElement, 'You should render the slash menu node even if no position');\n        const position = getPopperPosition(slashMenuElement, range);\n        slashMenu.updatePosition(position);\n    }, 10);\n    window.addEventListener('resize', updatePosition);\n    // Mount\n    container.appendChild(slashMenu);\n    // Wait for the Node to be mounted\n    setTimeout(updatePosition);\n    // Handle dispose\n    abortController.signal.addEventListener('abort', e => {\n        onAbort(e, slashMenu, updatePosition, model);\n    });\n    return slashMenu;\n}\n//# sourceMappingURL=index.js.map","import { css, html } from 'lit';\nlet ToastContainer = null;\n/**\n * DO NOT USE FOR USER INPUT\n * See https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n */\nconst htmlToElement = (html) => {\n    const template = document.createElement('template');\n    if (typeof html === 'string') {\n        html = html.trim(); // Never return a text node of whitespace as the result\n        template.innerHTML = html;\n    }\n    else {\n        const { strings, values } = html;\n        const v = [...values, '']; // + last empty part\n        const htmlString = strings.reduce((acc, cur, i) => acc + cur + v[i], '');\n        template.innerHTML = htmlString;\n    }\n    return template.content.firstChild;\n};\nconst createToastContainer = () => {\n    const styles = css `\n    position: fixed;\n    z-index: 9999;\n    top: 16px;\n    left: 16px;\n    right: 16px;\n    bottom: 78px;\n    pointer-events: none;\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: center;\n  `;\n    const template = html `<div style=\"${styles}\"></div>`;\n    const element = htmlToElement(template);\n    document.body.appendChild(element);\n    return element;\n};\n/**\n * @example\n * ```ts\n * toast('Hello World');\n * ```\n */\nexport const toast = (message, duration = 2500) => {\n    if (!ToastContainer) {\n        ToastContainer = createToastContainer();\n    }\n    const styles = css `\n    max-width: 480px;\n    text-align: center;\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-sm);\n    padding: 6px 12px;\n    margin: 10px 0 0 0;\n    color: var(--affine-white);\n    background: var(--affine-tooltip);\n    box-shadow: var(--affine-float-button-shadow);\n    border-radius: 10px;\n    transition: all 230ms cubic-bezier(0.21, 1.02, 0.73, 1);\n    opacity: 0;\n  `;\n    const template = html `<div style=\"${styles}\"></div>`;\n    const element = htmlToElement(template);\n    // message is not trusted\n    element.textContent = message;\n    ToastContainer.appendChild(element);\n    const fadeIn = [\n        {\n            opacity: 0,\n        },\n        { opacity: 1 },\n    ];\n    const options = {\n        duration: 230,\n        easing: 'cubic-bezier(0.21, 1.02, 0.73, 1)',\n        fill: 'forwards',\n    }; // satisfies KeyframeAnimationOptions;\n    element.animate(fadeIn, options);\n    setTimeout(async () => {\n        const fadeOut = fadeIn.reverse();\n        const animation = element.animate(fadeOut, options);\n        await animation.finished;\n        element.style.maxHeight = '0';\n        element.style.margin = '0';\n        element.style.padding = '0';\n        element.addEventListener('transitionend', () => {\n            element.remove();\n        }, {\n            once: true,\n        });\n    }, duration);\n    return element;\n};\n//# sourceMappingURL=toast.js.map","import { css } from 'lit';\n/**\n * @example\n * ```html\n * <icon-button class=\"has-tool-tip\" style=\"${tooltipStyle}\">\n *    Button\n *    <tool-tip inert role=\"tooltip\">Tooltip</tool-tip>\n * </icon-button>\n * ```\n * Reference to https://web.dev/building-a-tooltip-component/\n */\nexport const tooltipStyle = css `\n  tool-tip {\n    font-family: var(--affine-font-family);\n    position: absolute;\n\n    inline-size: max-content;\n    text-align: center;\n    font-size: var(--affine-font-sm);\n    padding: 4px 12px;\n    color: var(--affine-white);\n    background: var(--affine-tooltip);\n    opacity: 0;\n    transition: opacity 0.2s ease, transform 0.2s ease;\n    pointer-events: none;\n    user-select: none;\n\n    /* Default is top-start */\n    left: 0;\n    top: 0;\n    border-radius: 10px 10px 10px 0;\n    transform: translate(0, calc(-100% - 8px));\n  }\n\n  tool-tip:is([tip-position='top']) {\n    left: 50%;\n    border-radius: 10px;\n    transform: translate(-50%, calc(-100% - 8px));\n  }\n  tool-tip:is([tip-position='right']) {\n    left: unset;\n    right: 0;\n    transform: translateX(calc(100% + 8px));\n    border-radius: 0 10px 10px 10px;\n  }\n  tool-tip:is([tip-position='left']) {\n    left: 0;\n    top: 50%;\n    transform: translate(calc(-100% - 8px), -50%);\n    border-radius: 10px 10px 0 10px;\n  }\n  tool-tip:is([tip-position='bottom']) {\n    top: unset;\n    left: 50%;\n    bottom: 0;\n    transform: translate(-50%, calc(100% + 8px));\n    border-radius: 10px;\n  }\n\n  /* work for tip-position='top' */\n  tool-tip:is([arrow]):is([tip-position='top']) {\n    transform: translate(-50%, calc(-100% - 16px));\n  }\n  tool-tip:is([arrow]):is([tip-position='top'])::before {\n    position: absolute;\n    content: '';\n    left: 50%;\n    bottom: 0;\n    transform: translate(-50%, 100%);\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-top: 6px solid var(--affine-tooltip);\n  }\n\n  /* work for tip-position='right' */\n  tool-tip:is([arrow]):is([tip-position='right']) {\n    transform: translateX(calc(100% + 16px));\n  }\n  tool-tip:is([arrow]):is([tip-position='right'])::before {\n    position: absolute;\n    content: '';\n    left: 0;\n    bottom: 50%;\n    transform: translate(-100%, 50%);\n    width: 0;\n    height: 0;\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n    border-right: 6px solid var(--affine-tooltip);\n  }\n\n  /* work for tip-position='left' */\n  tool-tip:is([arrow]):is([tip-position='left']) {\n    transform: translate(calc(-100% - 16px), -50%);\n  }\n  tool-tip:is([arrow]):is([tip-position='left'])::before {\n    position: absolute;\n    content: '';\n    right: 0;\n    bottom: 50%;\n    transform: translate(100%, 50%);\n    width: 0;\n    height: 0;\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n    border-left: 6px solid var(--affine-tooltip);\n  }\n\n  /* work for tip-position='bottom' */\n  tool-tip:is([arrow]):is([tip-position='bottom']) {\n    transform: translate(-50%, calc(100% + 16px));\n  }\n  tool-tip:is([arrow]):is([tip-position='bottom'])::before {\n    position: absolute;\n    content: '';\n    left: 50%;\n    top: 0;\n    transform: translate(-50%, -100%);\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-bottom: 6px solid var(--affine-tooltip);\n  }\n\n  .has-tool-tip {\n    position: relative;\n  }\n  .has-tool-tip:is(:hover, :focus-visible, :active) > tool-tip {\n    opacity: 1;\n    transition-delay: 200ms;\n  }\n`;\n//# sourceMappingURL=tooltip.js.map","import { assertExists, sleep } from '@blocksuite/global/utils';\nimport { isControlledKeyboardEvent } from '../__internal__/utils/std.js';\nimport { getCurrentNativeRange } from '../std.js';\nexport const createKeydownObserver = ({ target, onUpdateQuery, onMove, onConfirm, onEsc, interceptor = (e, next) => next(), abortController, }) => {\n    let query = '';\n    const vEditor = target.vEditor;\n    assertExists(vEditor, 'Failed to observer keyboard! virgo editor is not exist.');\n    const startIndex = vEditor?.getVRange()?.index ?? 0;\n    const updateQuery = async () => {\n        // Wait for text update\n        await sleep(0);\n        const range = getCurrentNativeRange();\n        if (range.startContainer !== range.endContainer) {\n            console.warn('Failed to parse query! Current range is not collapsed.', range);\n            abortController.abort();\n            return;\n        }\n        const textNode = range.startContainer;\n        if (textNode.nodeType !== Node.TEXT_NODE) {\n            console.warn('Failed to parse query! Current range is not a text node.', range);\n            abortController.abort();\n            return;\n        }\n        const curIndex = vEditor.getVRange()?.index ?? 0;\n        const text = vEditor.yText.toString();\n        const previousQuery = query;\n        query = text.slice(startIndex, curIndex);\n        if (query !== previousQuery) {\n            onUpdateQuery(query);\n        }\n    };\n    const keyDownListener = (e) => {\n        e.stopPropagation();\n        if (e.defaultPrevented)\n            return;\n        if (isControlledKeyboardEvent(e)) {\n            const isOnlyCmd = (e.ctrlKey || e.metaKey) && !e.altKey && !e.shiftKey;\n            // Ctrl/Cmd + alphabet key\n            if (isOnlyCmd && e.key.length === 1) {\n                switch (e.key) {\n                    // Previous command\n                    case 'P':\n                    case 'p': {\n                        onMove(-1);\n                        e.preventDefault();\n                        return;\n                    }\n                    // Next command\n                    case 'N':\n                    case 'n': {\n                        onMove(1);\n                        e.preventDefault();\n                        return;\n                    }\n                }\n            }\n            // Pressing **only** modifier key is allowed and will be ignored\n            // Because we don't know the user's intention\n            // Aborting here will cause the above hotkeys to not work\n            if (e.key === 'Control' || e.key === 'Meta' || e.key === 'Alt') {\n                return;\n            }\n            // Abort when press modifier key + any other key to avoid weird behavior\n            // e.g. press ctrl + a to select all or press ctrl + v to paste\n            abortController.abort();\n            return;\n        }\n        if (isControlledKeyboardEvent(e) || e.key.length !== 1) {\n            switch (e.key) {\n                case 'Escape': {\n                    abortController.abort();\n                    return;\n                }\n                case 'Backspace': {\n                    if (!query.length) {\n                        abortController.abort();\n                    }\n                    updateQuery();\n                    return;\n                }\n                case 'Enter': {\n                    if (e.isComposing) {\n                        return;\n                    }\n                    if (e.shiftKey) {\n                        abortController.abort();\n                        return;\n                    }\n                    onConfirm();\n                    e.preventDefault();\n                    return;\n                }\n                case 'Tab': {\n                    if (e.shiftKey) {\n                        onMove(-1);\n                    }\n                    else {\n                        onMove(1);\n                    }\n                    e.preventDefault();\n                    return;\n                }\n                case 'ArrowUp': {\n                    if (e.shiftKey) {\n                        abortController.abort();\n                        return;\n                    }\n                    onMove(-1);\n                    e.preventDefault();\n                    return;\n                }\n                case 'ArrowDown': {\n                    if (e.shiftKey) {\n                        abortController.abort();\n                        return;\n                    }\n                    onMove(1);\n                    e.preventDefault();\n                    return;\n                }\n                case 'ArrowLeft':\n                case 'ArrowRight': {\n                    abortController.abort();\n                    return;\n                }\n                default:\n                    // Other control keys\n                    return;\n            }\n        }\n        updateQuery();\n    };\n    target.addEventListener('keydown', (e) => interceptor(e, () => keyDownListener(e)), {\n        // Workaround: Use capture to prevent the event from triggering the keyboard bindings action\n        capture: true,\n        signal: abortController.signal,\n    });\n    // Fix composition input\n    target.addEventListener('input', updateQuery, {\n        signal: abortController.signal,\n    });\n    if (onEsc) {\n        const escListener = (e) => {\n            if (e.key === 'Escape') {\n                onEsc();\n            }\n        };\n        window.addEventListener('keydown', escListener, {\n            signal: abortController.signal,\n        });\n    }\n};\n//# sourceMappingURL=utils.js.map","import { assertExists, Slot, } from '@blocksuite/store';\nimport { getService } from '../__internal__/service.js';\nimport { BaseService } from '../__internal__/service/index.js';\nimport { asyncFocusRichText } from '../std.js';\nimport { clearAllDatabaseCellSelection, clearAllDatabaseRowsSelection, setDatabaseCellEditing, setDatabaseCellSelection, setDatabaseRowsSelection, } from './table/components/selection/utils.js';\nimport { getClosestDatabaseId, getClosestRowId, } from './table/selection-manager/utils.js';\nexport class DatabaseBlockService extends BaseService {\n    constructor() {\n        super();\n        this._lastRowSelection = null;\n        this._lastCellSelection = null;\n        this.slots = {\n            tableViewRowSelectionUpdated: new Slot(),\n            tableViewCellSelectionUpdated: new Slot(),\n        };\n        this.slots.tableViewRowSelectionUpdated.on(state => {\n            const { type } = state;\n            if (type === 'select' || type === 'click') {\n                const { rowIds, databaseId } = state;\n                this._lastRowSelection = {\n                    databaseId,\n                    rowIds,\n                };\n                setDatabaseRowsSelection(databaseId, rowIds);\n            }\n            else if (type === 'clear') {\n                this.clearLastRowSelection();\n                clearAllDatabaseRowsSelection();\n            }\n        });\n        this.slots.tableViewCellSelectionUpdated.on(state => {\n            const { type } = state;\n            if (type === 'select') {\n                const { databaseId, coords } = state;\n                //  select\n                this._lastCellSelection = {\n                    databaseId,\n                    coords,\n                };\n                setDatabaseCellSelection(databaseId, coords);\n            }\n            else if (type === 'edit') {\n                this._lastCellSelection = null;\n                const { databaseId, coords } = state;\n                setDatabaseCellEditing(databaseId, coords[0]);\n            }\n            else if (type === 'clear') {\n                // clear\n                this._lastCellSelection = null;\n                clearAllDatabaseCellSelection();\n            }\n        });\n    }\n    initDatabaseBlock(page, model, databaseId, isAppendNewRow = true) {\n        // By default, database has 3 empty rows\n        for (let i = 0; i < 3; i++) {\n            const id = page.addBlock('affine:paragraph', {\n                text: new page.Text(''),\n            }, databaseId);\n            if (i === 0)\n                asyncFocusRichText(page, id);\n        }\n        if (isAppendNewRow) {\n            // Add a paragraph after database\n            const parent = page.getParent(model);\n            assertExists(parent);\n            page.addBlock('affine:paragraph', {}, parent.id);\n        }\n        const blockModel = page.getBlockById(databaseId);\n        assertExists(blockModel);\n        // default column\n        blockModel.updateColumn({\n            name: 'Tag',\n            type: 'multi-select',\n            width: 200,\n            hide: false,\n            selection: [],\n        });\n        blockModel.applyColumnUpdate();\n    }\n    block2Json(block, begin, end) {\n        const columns = [...block.columns];\n        const rowIds = block.children.map(child => child.id);\n        return {\n            flavour: block.flavour,\n            databaseProps: {\n                id: block.id,\n                title: block.title.toString(),\n                titleColumnName: block.titleColumnName,\n                titleColumnWidth: block.titleColumnWidth,\n                rowIds,\n                cells: block.cells,\n                columns,\n            },\n            children: block.children?.map((child, index) => {\n                if (index === block.children.length - 1) {\n                    return getService(child.flavour).block2Json(child, 0, end);\n                }\n                return getService(child.flavour).block2Json(child);\n            }),\n        };\n    }\n    async onBlockPasted(model, props) {\n        const { rowIds, columns, cells } = props;\n        const columnIds = columns.map(column => column.id);\n        const newColumnIds = columns.map(schema => {\n            const { id, ...nonIdProps } = schema;\n            return model.updateColumn(nonIdProps);\n        });\n        model.applyColumnUpdate();\n        const newRowIds = model.children.map(child => child.id);\n        rowIds.forEach((rowId, rowIndex) => {\n            const newRowId = newRowIds[rowIndex];\n            columnIds.forEach((columnId, columnIndex) => {\n                const cellData = cells[rowId]?.[columnId];\n                const value = cellData?.value;\n                if (!value)\n                    return;\n                model.updateCell(newRowId, {\n                    columnId: newColumnIds[columnIndex],\n                    value,\n                });\n            });\n        });\n    }\n    clearSelection() {\n        this.clearRowSelection();\n        this.clearCellLevelSelection();\n    }\n    // row level selection\n    clearRowSelection() {\n        this.slots.tableViewRowSelectionUpdated.emit({\n            type: 'clear',\n        });\n    }\n    setRowSelection(state) {\n        if (state.type === 'click' &&\n            this._lastRowSelection &&\n            state.rowIds?.[0] === this._lastRowSelection.rowIds?.[0]) {\n            this.clearRowSelection();\n            return;\n        }\n        this.slots.tableViewRowSelectionUpdated.emit(state);\n    }\n    setRowSelectionByElement(element) {\n        const rowId = getClosestRowId(element);\n        if (rowId !== '') {\n            const databaseId = getClosestDatabaseId(element);\n            this.setRowSelection({\n                type: 'select',\n                databaseId,\n                rowIds: [rowId],\n            });\n        }\n    }\n    clearLastRowSelection() {\n        this._lastRowSelection = null;\n    }\n    refreshRowSelection() {\n        if (!this._lastRowSelection)\n            return;\n        const { databaseId, rowIds } = this._lastRowSelection;\n        this.setRowSelection({\n            type: 'select',\n            databaseId,\n            rowIds,\n        });\n    }\n    toggleRowSelection(element) {\n        const rowId = getClosestRowId(element);\n        // click on database's drag handle\n        if (rowId === '')\n            return false;\n        const rowIds = this._lastRowSelection?.rowIds ?? [];\n        if (rowIds.indexOf(rowId) > -1) {\n            this.clearRowSelection();\n        }\n        else {\n            this.setRowSelection({\n                type: 'click',\n                databaseId: getClosestDatabaseId(element),\n                rowIds: [rowId],\n            });\n        }\n        return true;\n    }\n    getLastRowSelection() {\n        return this._lastRowSelection;\n    }\n    // cell level selection\n    clearCellLevelSelection() {\n        this.slots.tableViewCellSelectionUpdated.emit({\n            type: 'clear',\n        });\n    }\n    setCellSelection(cellSelectionState) {\n        this.slots.tableViewCellSelectionUpdated.emit(cellSelectionState);\n    }\n    getLastCellSelection() {\n        return this._lastCellSelection;\n    }\n}\n//# sourceMappingURL=database-service.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { getCellSelectionRectByCoords, getRowsContainer } from './utils.js';\nlet CellLevelSelection = class CellLevelSelection extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.state = null;\n        this.setSelection = (state) => {\n            this.state = state;\n        };\n        this.clearSelection = () => {\n            this.state = null;\n        };\n        this._getStyles = () => {\n            if (this.state === null) {\n                // Hide selection.\n                return styleMap({\n                    left: 0,\n                    top: 0,\n                    height: 0,\n                    width: 0,\n                    display: 'none',\n                });\n            }\n            const { databaseId, coords } = this.state;\n            const { left, top, width, height } = getCellSelectionRectByCoords(coords, databaseId);\n            const rowsContainer = getRowsContainer(databaseId);\n            const containerRect = rowsContainer.getBoundingClientRect();\n            const scale = 1 / this._zoom;\n            const scaledLeft = (left - containerRect.left) * scale;\n            const scaledTop = (top - containerRect.top) * scale;\n            const scaledWidth = width * scale;\n            const scaledHeight = height * scale;\n            return styleMap({\n                left: `${scaledLeft}px`,\n                top: `${scaledTop}px`,\n                height: `${scaledHeight}px`,\n                width: `${scaledWidth}px`,\n                display: 'block',\n            });\n        };\n    }\n    get _zoom() {\n        const edgelessPageBlock = document.querySelector('affine-edgeless-page');\n        if (!edgelessPageBlock)\n            return 1;\n        return edgelessPageBlock.surface.viewport.zoom;\n    }\n    render() {\n        const styles = this._getStyles();\n        return html `<div\n      class=\"database-cell-level-selection\"\n      style=${styles}\n    ></div>`;\n    }\n};\nCellLevelSelection.styles = css `\n    .database-cell-level-selection {\n      position: absolute;\n      width: 100%;\n      z-index: 1;\n      box-sizing: border-box;\n      border: 2px solid var(--affine-primary-color);\n      border-radius: 2px;\n      background: var(--affine-primary-color-04);\n    }\n  `;\n__decorate([\n    property()\n], CellLevelSelection.prototype, \"cell\", void 0);\n__decorate([\n    state()\n], CellLevelSelection.prototype, \"state\", void 0);\nCellLevelSelection = __decorate([\n    customElement('database-cell-level-selection')\n], CellLevelSelection);\nexport { CellLevelSelection };\n//# sourceMappingURL=cell-selection.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nlet RowLevelSelection = class RowLevelSelection extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.state = null;\n        this.setSelection = ({ databaseId, rowIds }) => {\n            this.state = {\n                databaseId,\n                rowIds,\n            };\n        };\n        this.clearSelection = () => {\n            this.state = null;\n        };\n        this._getStyles = () => {\n            const hideStyles = styleMap({\n                left: 0,\n                top: 0,\n                height: 0,\n                display: 'none',\n            });\n            if (!this.state)\n                return hideStyles;\n            const { rowIds } = this.state;\n            const { startRow, endRow } = getRowsByIds(this.container, {\n                startRowId: rowIds[0],\n                endRowId: rowIds[rowIds.length - 1],\n            });\n            if (!startRow || !endRow)\n                return hideStyles;\n            const containerPos = this.container.getBoundingClientRect();\n            const { left, top } = startRow.getBoundingClientRect();\n            const scale = 1 / this._zoom;\n            const scaledHeight = calcSelectionHeight(this.container, rowIds) * scale;\n            const scaledLeft = (left - containerPos.left) * scale;\n            const scaledTop = (top - containerPos.top) * scale;\n            const styles = styleMap({\n                left: `${scaledLeft}px`,\n                top: `${scaledTop}px`,\n                height: `${scaledHeight}px`,\n            });\n            return styles;\n        };\n    }\n    get _zoom() {\n        const edgelessPageBlock = document.querySelector('affine-edgeless-page');\n        if (!edgelessPageBlock)\n            return 1;\n        return edgelessPageBlock.surface.viewport.zoom;\n    }\n    render() {\n        const styles = this._getStyles();\n        return html `<div\n      class=\"database-row-level-selection\"\n      style=${styles}\n    ></div>`;\n    }\n};\nRowLevelSelection.styles = css `\n    .database-row-level-selection {\n      position: absolute;\n      z-index: 1;\n      box-sizing: border-box;\n      width: 100%;\n      border: 2px solid var(--affine-primary-color);\n      border-radius: 2px;\n      background: var(--affine-primary-color-04);\n    }\n  `;\n__decorate([\n    property()\n], RowLevelSelection.prototype, \"container\", void 0);\n__decorate([\n    state()\n], RowLevelSelection.prototype, \"state\", void 0);\nRowLevelSelection = __decorate([\n    customElement('database-row-level-selection')\n], RowLevelSelection);\nexport { RowLevelSelection };\nfunction getRowsByIds(container, { startRowId, endRowId }) {\n    const startRow = container.querySelector(`.database-row[data-row-id=\"${startRowId}\"]`);\n    const endRow = container.querySelector(`.database-row[data-row-id=\"${endRowId}\"]`);\n    return {\n        startRow,\n        endRow,\n    };\n}\nfunction calcSelectionHeight(container, rowIds) {\n    return rowIds.reduce((acc, rowId) => {\n        const row = container.querySelector(`.database-row[data-row-id=\"${rowId}\"]`);\n        if (!row) {\n            return acc;\n        }\n        const { height } = row.getBoundingClientRect();\n        return acc + height;\n    }, 0);\n}\n//# sourceMappingURL=row-selection.js.map","import { assertExists } from '@blocksuite/store';\nimport { CellLevelSelection } from './cell-selection.js';\nimport { RowLevelSelection } from './row-selection.js';\nexport function clearAllDatabaseRowsSelection() {\n    const databases = document.querySelectorAll('affine-database');\n    databases.forEach(database => {\n        const rowLevelSelection = database.querySelector('database-row-level-selection');\n        rowLevelSelection?.clearSelection();\n    });\n}\nexport function setDatabaseRowsSelection(databaseId, rowIds) {\n    const container = getRowsContainer(databaseId);\n    let rowLevelSelection = container.querySelector('database-row-level-selection');\n    if (!rowLevelSelection) {\n        rowLevelSelection = new RowLevelSelection();\n        container.appendChild(rowLevelSelection);\n    }\n    rowLevelSelection.container = container;\n    rowLevelSelection.setSelection({\n        databaseId,\n        rowIds,\n    });\n}\nexport function setDatabaseCellSelection(databaseId, coords) {\n    const container = getRowsContainer(databaseId);\n    const cellLevelSelection = getCellLevelSelection(container);\n    cellLevelSelection.setSelection({\n        databaseId,\n        coords,\n    });\n    const currentCell = getCellElementByCoord(coords[0], databaseId);\n    currentCell.scrollIntoView({ block: 'nearest' });\n}\nexport function clearAllDatabaseCellSelection() {\n    const databases = document.querySelectorAll('affine-database');\n    databases.forEach(database => {\n        const cellLevelSelection = database.querySelector('database-cell-level-selection');\n        cellLevelSelection?.clearSelection();\n    });\n}\nexport function setDatabaseCellEditing(databaseId, coord) {\n    const currentCell = getCellElementByCoord(coord, databaseId);\n    const cell = currentCell.firstElementChild\n        ?.firstElementChild;\n    assertExists(cell);\n    let shouldClearCellSelection = true;\n    const richText = cell?.querySelector('rich-text');\n    if (richText) {\n        // title column\n        richText.vEditor?.focusEnd();\n    }\n    else if (cell.cellType === 'number') {\n        const richTextCell = cell;\n        richTextCell.vEditor?.focusEnd();\n    }\n    else if (cell.cellType === 'rich-text') {\n        const richTextCell = cell;\n        richTextCell.vEditor?.focusEnd();\n    }\n    else {\n        // checkbox column\n        if (cell.cellType === 'checkbox') {\n            shouldClearCellSelection = false;\n        }\n        cell.click();\n    }\n    if (shouldClearCellSelection) {\n        clearDatabaseCellSelectionByDatabaseId(databaseId);\n    }\n}\nexport function getCellCoord(target, databaseId, key) {\n    const rowsContainer = getRowsContainer(databaseId);\n    const cellRects = getAllCellsRect(rowsContainer);\n    const rowsCount = cellRects.length;\n    const cellsCount = cellRects[0].length;\n    let cellCoord = null;\n    if (target instanceof Element) {\n        cellCoord = getCellCoordByElement(target, databaseId);\n        assertExists(cellCoord);\n    }\n    else {\n        cellCoord = target;\n    }\n    const nextCellCoord = getNextCellCoord(key, cellCoord, rowsCount, cellsCount);\n    return nextCellCoord;\n}\nexport function getCellSelectionRectByCoords(coords, databaseId) {\n    const rowsContainer = getRowsContainer(databaseId);\n    const cellRects = getAllCellsRect(rowsContainer);\n    // Currently only supports single cell selection.\n    const [start] = coords;\n    const cell = cellRects[start.rowIndex][start.cellIndex];\n    return {\n        left: cell.left,\n        top: cell.top,\n        width: cell.width,\n        height: cell.height,\n    };\n}\nexport function getRowsContainer(databaseId) {\n    const database = getDatabaseById(databaseId);\n    const container = database.querySelector('.affine-database-table-container');\n    assertExists(container);\n    return container;\n}\nexport function getDatabaseById(id) {\n    const database = document.querySelector(`affine-database[data-block-id=\"${id}\"]`);\n    assertExists(database);\n    return database;\n}\nfunction getCellCoordByElement(cell, databaseId) {\n    const rowsContainer = getRowsContainer(databaseId);\n    const cellRects = getAllCellsRect(rowsContainer);\n    for (let i = 0; i < cellRects.length; i++) {\n        const row = cellRects[i];\n        for (let j = 0; j < row.length; j++) {\n            if (row[j].cell === cell) {\n                return {\n                    rowIndex: i,\n                    cellIndex: j,\n                };\n            }\n        }\n    }\n    return null;\n}\nfunction getCellElementByCoord(coord, databaseId) {\n    const rowsContainer = getRowsContainer(databaseId);\n    const cellRects = getAllCellsRect(rowsContainer);\n    const { rowIndex, cellIndex } = coord;\n    const cell = cellRects[rowIndex][cellIndex].cell;\n    return cell;\n}\nfunction getAllCellsRect(rowsContainer) {\n    // [ [{ left, top, height, cell }] ]\n    const cellRects = [];\n    const allRows = rowsContainer.querySelectorAll('.affine-database-block-row');\n    allRows.forEach((row, rowIndex) => {\n        const allCells = row.querySelectorAll('.database-cell');\n        allCells.forEach((cell, cellIndex) => {\n            // skip the last cell which is \"+\"\n            if (cell.classList.contains('add-column-button'))\n                return;\n            const { left, top, height, width } = cell.getBoundingClientRect();\n            cellRects[rowIndex] = cellRects[rowIndex] ?? [];\n            cellRects[rowIndex][cellIndex] = { left, top, height, width, cell };\n        });\n    });\n    return cellRects;\n}\nfunction getNextCellCoord(key, currentCellCoord, rowsCount, cellsCount) {\n    switch (key) {\n        case 'Escape':\n            return getNextCellCoordByEscape(currentCellCoord);\n        case 'Tab':\n        case 'ArrowRight':\n            return getNextCellCoordByTab(currentCellCoord, rowsCount, cellsCount);\n        case 'ArrowUp':\n            return getNextCellCoordByArrowUp(currentCellCoord);\n        case 'ArrowDown':\n            return getNextCellCoordByArrowDown(currentCellCoord, rowsCount);\n        case 'ArrowLeft':\n            return getNextCellCoordByArrowLeft(currentCellCoord, cellsCount);\n    }\n    return currentCellCoord;\n}\nfunction getNextCellCoordByTab(currentCellCoord, rowsCount, cellsCount) {\n    const nextCellPos = { rowIndex: 0, cellIndex: 0 };\n    if (currentCellCoord.cellIndex !== cellsCount - 1) {\n        // not last cell\n        nextCellPos.rowIndex = currentCellCoord.rowIndex;\n        nextCellPos.cellIndex = currentCellCoord.cellIndex + 1;\n        return nextCellPos;\n    }\n    // last cell\n    if (currentCellCoord.rowIndex !== rowsCount - 1) {\n        // not last row\n        nextCellPos.rowIndex = currentCellCoord.rowIndex + 1;\n        nextCellPos.cellIndex = 0;\n        return nextCellPos;\n    }\n    return currentCellCoord;\n}\nfunction getNextCellCoordByArrowLeft(currentCellCoord, cellsCount) {\n    const nextCellPos = { rowIndex: 0, cellIndex: 0 };\n    if (currentCellCoord.cellIndex !== 0) {\n        // not first cell\n        nextCellPos.rowIndex = currentCellCoord.rowIndex;\n        nextCellPos.cellIndex = currentCellCoord.cellIndex - 1;\n        return nextCellPos;\n    }\n    // first cell\n    if (currentCellCoord.rowIndex !== 0) {\n        // not first row\n        nextCellPos.rowIndex = currentCellCoord.rowIndex - 1;\n        nextCellPos.cellIndex = cellsCount - 1;\n        return nextCellPos;\n    }\n    return currentCellCoord;\n}\nfunction getNextCellCoordByArrowUp(currentCellCoord) {\n    const nextCellPos = { rowIndex: 0, cellIndex: 0 };\n    if (currentCellCoord.rowIndex !== 0) {\n        // not first cell\n        nextCellPos.rowIndex = currentCellCoord.rowIndex - 1;\n        nextCellPos.cellIndex = currentCellCoord.cellIndex;\n        return nextCellPos;\n    }\n    return currentCellCoord;\n}\nfunction getNextCellCoordByArrowDown(currentCellCoord, rowsCount) {\n    const nextCellPos = { rowIndex: 0, cellIndex: 0 };\n    if (currentCellCoord.rowIndex + 1 !== rowsCount) {\n        // not first cell\n        nextCellPos.rowIndex = currentCellCoord.rowIndex + 1;\n        nextCellPos.cellIndex = currentCellCoord.cellIndex;\n        return nextCellPos;\n    }\n    return currentCellCoord;\n}\nfunction getNextCellCoordByEscape(currentCellCoord) {\n    return currentCellCoord;\n}\nfunction getCellLevelSelection(container) {\n    let cellLevelSelection = container.querySelector('database-cell-level-selection');\n    if (!cellLevelSelection) {\n        cellLevelSelection = new CellLevelSelection();\n        container.appendChild(cellLevelSelection);\n    }\n    return cellLevelSelection;\n}\nfunction clearDatabaseCellSelectionByDatabaseId(databaseId) {\n    const container = getRowsContainer(databaseId);\n    const cellLevelSelection = container.querySelector('database-cell-level-selection');\n    cellLevelSelection?.clearSelection();\n}\n//# sourceMappingURL=utils.js.map","import { assertExists } from '@blocksuite/store';\nexport function getClosestRowIndex(element) {\n    const rowIndex = element\n        .closest('.database-row')\n        ?.getAttribute('data-row-index');\n    if (rowIndex) {\n        return Number(rowIndex);\n    }\n    // Header row has no index.\n    return -1;\n}\nexport function getClosestRowId(element) {\n    const rowId = element.closest('.database-row')?.getAttribute('data-row-id');\n    if (rowId) {\n        return rowId;\n    }\n    // Header row has no id.\n    return '';\n}\nexport function getSelectedRowIdsByIndexes(database, indexes) {\n    return indexes.map(item => getRowIdByIndex(database, item));\n}\nexport function getSelectedRowIndexes(startCell, endCell) {\n    const currentRowIndex = getClosestRowIndex(startCell);\n    const startRowIndex = getClosestRowIndex(endCell);\n    if (currentRowIndex === -1 || startRowIndex === -1)\n        return [];\n    const minIndex = Math.min(currentRowIndex, startRowIndex);\n    const maxIndex = Math.max(currentRowIndex, startRowIndex);\n    const rowIndexes = [];\n    for (let id = minIndex; id <= maxIndex; id++) {\n        rowIndexes.push(id);\n    }\n    return rowIndexes;\n}\nexport function getClosestDatabase(element) {\n    const database = element?.closest('affine-database');\n    assertExists(database);\n    return database;\n}\nexport function getClosestDatabaseId(element) {\n    const databaseId = getClosestDatabase(element).getAttribute('data-block-id');\n    assertExists(databaseId);\n    return databaseId;\n}\nexport function isInDatabase(element) {\n    const database = element.closest('affine-database');\n    return database !== null;\n}\nfunction getRowIdByIndex(database, index) {\n    const rowId = database\n        .querySelector(`.database-row[data-row-index=\"${index}\"]`)\n        ?.getAttribute('data-row-id');\n    assertExists(rowId);\n    return rowId;\n}\n//# sourceMappingURL=utils.js.map","import { BaseService } from '../__internal__/service/index.js';\nexport class DividerBlockService extends BaseService {\n    block2html(block, { childText = '', begin, end } = {}) {\n        return `<hr/>`;\n    }\n}\n//# sourceMappingURL=divider-service.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference types=\"vite/client\" />\nimport { BLOCK_CHILDREN_CONTAINER_PADDING_LEFT } from '@blocksuite/global/config';\nimport { BlockElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { registerService } from '../__internal__/service.js';\nimport { DividerBlockService } from './divider-service.js';\nlet DividerBlockComponent = class DividerBlockComponent extends BlockElement {\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:divider', DividerBlockService);\n    }\n    firstUpdated() {\n        this.model.propsUpdated.on(() => this.requestUpdate());\n        this.model.childrenUpdated.on(() => this.requestUpdate());\n    }\n    render() {\n        const children = html `<div\n      class=\"affine-block-children-container\"\n      style=\"padding-left: ${BLOCK_CHILDREN_CONTAINER_PADDING_LEFT}px\"\n    >\n      ${this.content}\n    </div>`;\n        return html `\n      <div class=${`affine-divider-block-container`}>\n        <hr />\n        ${children}\n      </div>\n    `;\n    }\n};\nDividerBlockComponent.styles = css `\n    .affine-divider-block-container {\n      width: 100%;\n      height: 20px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      margin-top: calc(var(--affine-paragraph-space) + 8px);\n      margin-bottom: calc(var(--affine-paragraph-space) + 8px);\n    }\n    hr {\n      width: 100%;\n    }\n  `;\nDividerBlockComponent = __decorate([\n    customElement('affine-divider')\n], DividerBlockComponent);\nexport { DividerBlockComponent };\n//# sourceMappingURL=divider-block.js.map","export * from './divider-block.js';\nexport * from './divider-model.js';\nexport * from './divider-service.js';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nconst ELEMENT_TAG = 'affine-image-block-circle-loading';\nlet AffineImageBlockCircleLoading = class AffineImageBlockCircleLoading extends ShadowlessElement {\n    render() {\n        return html `<div class=\"affine-image-block-container\">\n      <div class=\"affine-image-block-loading\"></div>\n    </div>`;\n    }\n};\nAffineImageBlockCircleLoading.styles = css `\n    @keyframes affine-image-block-rotate {\n      from {\n        rotate: 0deg;\n      }\n      to {\n        rotate: 360deg;\n      }\n    }\n\n    .affine-image-block-container {\n      width: 24px;\n      height: 24px;\n      overflow: hidden;\n    }\n\n    .affine-image-block-loading {\n      display: inline-block;\n      width: 24px;\n      height: 24px;\n      position: relative;\n      background: conic-gradient(rgba(255, 255, 255, 0.31), #6880ff);\n      border-radius: 50%;\n      animation: affine-image-block-rotate 1s infinite ease-in;\n    }\n\n    .affine-image-block-loading::before {\n      content: '';\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      background-color: white;\n      position: absolute;\n      top: 2px;\n      left: 2px;\n    }\n  `;\nAffineImageBlockCircleLoading = __decorate([\n    customElement(ELEMENT_TAG)\n], AffineImageBlockCircleLoading);\nexport { AffineImageBlockCircleLoading };\n//# sourceMappingURL=circle-loading.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport './circle-loading.js';\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nconst ELEMENT_TAG = 'affine-image-block-loading-card';\nlet AffineImageBlockLoadingCard = class AffineImageBlockLoadingCard extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this.content = 'Loading content...';\n    }\n    render() {\n        return html `\n      <div class=\"affine-image-block-loading-card\">\n        <affine-image-block-circle-loading></affine-image-block-circle-loading>\n        <div class=\"affine-image-block-content\">${this.content}</div>\n      </div>\n    `;\n    }\n};\nAffineImageBlockLoadingCard.styles = css `\n    .affine-image-block-loading-card {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n      border: 1px solid #ebeeff;\n      border-radius: 10px;\n      background: #fbfbff;\n    }\n\n    .affine-image-block-content {\n      height: 30px;\n      line-height: 22px;\n      padding-top: 8px;\n      color: var(--affine-primary-color);\n      font-size: 16px;\n      font-weight: 400;\n    }\n  `;\n__decorate([\n    property()\n], AffineImageBlockLoadingCard.prototype, \"content\", void 0);\nAffineImageBlockLoadingCard = __decorate([\n    customElement(ELEMENT_TAG)\n], AffineImageBlockLoadingCard);\nexport { AffineImageBlockLoadingCard };\n//# sourceMappingURL=loading-card.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nconst notFoundIcon = html `<svg\n  width=\"25\"\n  height=\"24\"\n  viewBox=\"0 0 25 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M14.5 3H8.3C6.61984 3 5.77976 3 5.13803 3.32698C4.57354 3.6146 4.1146 4.07354 3.82698 4.63803C3.5 5.27976 3.5 6.11984 3.5 7.8V16.2C3.5 17.8802 3.5 18.7202 3.82698 19.362C4.1146 19.9265 4.57354 20.3854 5.13803 20.673C5.77976 21 6.61984 21 8.3 21H12.5L15.5 18L11.5 14L12.8418 12.6582C12.8197 12.6391 12.7979 12.6205 12.7762 12.6022C12.4696 12.3444 12.1366 12.1162 11.7278 11.987C11.1185 11.7945 10.4637 11.8016 9.85866 12.0072C9.45274 12.1452 9.12474 12.3806 8.82383 12.645C8.82383 12.645 6.60291 14.8415 5.5 15.9308V6.6C5.5 6.03995 5.5 5.75992 5.60899 5.54601C5.70487 5.35785 5.85785 5.20487 6.04601 5.10899C6.25992 5 6.53995 5 7.1 5H12.5L14.5 3ZM13.304 7.80408C13.1102 8.15931 13 8.56677 13 9C13 9.94759 13.5271 10.7719 14.3041 11.1959L15.5 10L13.304 7.80408ZM15.4156 11.4986L16.9142 10L13.9514 7.03724C14.3773 6.7008 14.9152 6.5 15.5 6.5C16.8806 6.5 18 7.61914 18 9C18 10.3809 16.8806 11.5 15.5 11.5C15.4718 11.5 15.4437 11.4995 15.4156 11.4986ZM13.5691 13.3451C13.6352 13.4103 13.7029 13.4775 13.7724 13.5464L14.7645 14.5302C15.0059 14.2937 15.2246 14.0861 15.4261 13.9167C15.7329 13.6587 16.0663 13.4302 16.4756 13.3011C17.0855 13.1087 17.7409 13.1162 18.3463 13.3226C18.7524 13.4611 19.0805 13.6971 19.3813 13.9622C19.4202 13.9965 19.4598 14.0322 19.5 14.0694V6.6C19.5 6.03995 19.5 5.75992 19.391 5.54601C19.2951 5.35785 19.1422 5.20487 18.954 5.10899C18.7401 5 18.4601 5 17.9 5H13.9143L15.9143 3H16.7C18.3802 3 19.2202 3 19.862 3.32698C20.4265 3.6146 20.8854 4.07354 21.173 4.63803C21.5 5.27976 21.5 6.11984 21.5 7.8V16.2C21.5 17.8802 21.5 18.7202 21.173 19.362C20.8854 19.9265 20.4265 20.3854 19.862 20.673C19.2202 21 18.3802 21 16.7 21H13.9143L16.9142 18L12.9142 14L13.5691 13.3451Z\"\n    fill=\"#6880FF\"\n  />\n</svg>`;\nconst ELEMENT_TAG = 'affine-image-block-not-found-card';\nlet AffineImageBlockNotFoundCard = class AffineImageBlockNotFoundCard extends ShadowlessElement {\n    render() {\n        return html `\n      <div class=\"affine-image-block-not-found-card\">${notFoundIcon}</div>\n    `;\n    }\n};\nAffineImageBlockNotFoundCard.styles = css `\n    .affine-image-block-not-found-card {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n      border: 1px solid var(--affine-border-color);\n      border-radius: 10px;\n      background: var(--affine-background-primary-color);\n    }\n  `;\nAffineImageBlockNotFoundCard = __decorate([\n    customElement(ELEMENT_TAG)\n], AffineImageBlockNotFoundCard);\nexport { AffineImageBlockNotFoundCard };\n//# sourceMappingURL=image-not-found.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ImageBlockComponent_1;\nimport './placeholder/loading-card.js';\nimport './placeholder/image-not-found.js';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nlet ImageBlockComponent = ImageBlockComponent_1 = class ImageBlockComponent extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this._imageReady = {\n            dispose: () => {\n                return;\n            },\n        };\n        this._imageState = 'loading';\n        this._retryCount = 0;\n        this._fetchError = (e) => {\n            // Do have the id but cannot find the blob\n            //  this is probably because the blob is not uploaded yet\n            this._imageState = 'waitUploaded';\n            this._retryCount++;\n            console.warn('Cannot find blob, retrying', this._retryCount);\n            if (this._retryCount < ImageBlockComponent_1.maxRetryCount) {\n                setTimeout(() => {\n                    this._fetchImage();\n                    // 1s, 2s, 3s\n                }, 1000 * this._retryCount);\n            }\n            else {\n                console.error(e);\n                this._imageState = 'failed';\n            }\n        };\n        this._fetchImage = () => {\n            if (this._imageState === 'ready') {\n                return;\n            }\n            const storage = this.model.page.blobs;\n            storage\n                .get(this.model.sourceId)\n                .then(blob => {\n                if (blob) {\n                    this._source = URL.createObjectURL(blob);\n                    this._imageState = 'ready';\n                }\n                else {\n                    this._fetchError(new Error('Cannot find blob'));\n                }\n            })\n                .catch(this._fetchError);\n        };\n    }\n    async firstUpdated() {\n        this.model.propsUpdated.on(() => this.requestUpdate());\n        this.model.childrenUpdated.on(() => this.requestUpdate());\n        // exclude padding and border width\n        const { width, height } = this.model;\n        if (width && height) {\n            this.resizeImg.style.width = width + 'px';\n            this.resizeImg.style.height = height + 'px';\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this._imageState = 'loading';\n        this._fetchImage();\n        this._disposables.add(this.model.page.workspace.slots.blobUpdate.on(this._fetchImage));\n    }\n    disconnectedCallback() {\n        this._imageReady.dispose();\n        if (this._source) {\n            URL.revokeObjectURL(this._source);\n        }\n        super.disconnectedCallback();\n    }\n    render() {\n        const resizeImgStyle = {\n            width: 'unset',\n            height: 'unset',\n        };\n        const { width, height } = this.model;\n        if (width && height) {\n            resizeImgStyle.width = `${width}px`;\n            resizeImgStyle.height = `${height}px`;\n        }\n        const img = {\n            waitUploaded: html `<affine-image-block-loading-card\n        content=\"Delivering content...\"\n      ></affine-image-block-loading-card>`,\n            loading: html `<affine-image-block-loading-card\n        content=\"Loading content...\"\n      ></affine-image-block-loading-card>`,\n            ready: html `<img src=${this._source} />`,\n            failed: html `<affine-image-block-not-found-card></affine-image-block-not-found-card>`,\n        }[this._imageState];\n        // For the first list item, we need to add a margin-top to make it align with the text\n        // const shouldAddMarginTop = index === 0 && deep === 0;\n        return html `\n      <div class=\"affine-image-wrapper\">\n        <div class=\"resizable-img\" style=${styleMap(resizeImgStyle)}>\n          ${img}\n        </div>\n      </div>\n    `;\n    }\n};\nImageBlockComponent.styles = css `\n    .affine-image-wrapper {\n      padding: 8px;\n      width: 100%;\n      text-align: center;\n      line-height: 0;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      margin-top: calc(var(--affine-paragraph-space) + 8px);\n      overflow: hidden;\n    }\n    .affine-image-wrapper img {\n      max-width: 100%;\n      margin: auto;\n      width: 100%;\n    }\n\n    .resizable {\n      max-width: 100%;\n    }\n\n    .active .resizable {\n      border: 1px solid var(--affine-primary-color) !important;\n    }\n    .resizable .image-option-container {\n      display: none;\n      position: absolute;\n      top: 4px;\n      right: -52px;\n      margin: 0;\n      padding-left: 12px;\n    }\n\n    .embed-editing-state {\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 10px;\n      list-style: none;\n      padding: 4px;\n      width: 40px;\n      background-color: var(--affine-background-overlay-panel-color);\n      margin: 0;\n    }\n\n    .resizable .resizes {\n      /* width: 100%; */\n      height: 100%;\n      box-sizing: border-box;\n      line-height: 0;\n    }\n\n    .resizable .resizes .resize {\n      /* display: none; */\n      width: 10px;\n      height: 10px;\n      border-radius: 50%; /*magic to turn square into circle*/\n      background: white;\n      border: 2px solid var(--affine-primary-color);\n      position: absolute;\n    }\n\n    .resizable:hover .resize {\n      display: block;\n    }\n    .active .resize {\n      display: block !important;\n    }\n    .resizable .resizes .resize.top-left {\n      left: -5px;\n      top: -5px;\n      cursor: nwse-resize; /*resizer cursor*/\n    }\n    .resizable .resizes .resize.top-right {\n      right: -5px;\n      top: -5px;\n      cursor: nesw-resize;\n    }\n    .resizable .resizes .resize.bottom-left {\n      left: -5px;\n      bottom: -5px;\n      cursor: nesw-resize;\n    }\n    .resizable .resizes .resize.bottom-right {\n      right: -5px;\n      bottom: -5px;\n      cursor: nwse-resize;\n    }\n\n    .resizable-img {\n      border: 1px solid var(--affine-white-90);\n    }\n    .resizable-img:hover {\n      border: 1px solid var(--affine-primary-color);\n    }\n\n    .resizable-img img {\n      width: 100%;\n    }\n  `;\nImageBlockComponent.maxRetryCount = 3;\n__decorate([\n    property()\n], ImageBlockComponent.prototype, \"model\", void 0);\n__decorate([\n    query('.resizable-img')\n], ImageBlockComponent.prototype, \"resizeImg\", void 0);\n__decorate([\n    state()\n], ImageBlockComponent.prototype, \"_source\", void 0);\n__decorate([\n    state()\n], ImageBlockComponent.prototype, \"_imageState\", void 0);\nImageBlockComponent = ImageBlockComponent_1 = __decorate([\n    customElement('affine-image')\n], ImageBlockComponent);\nexport { ImageBlockComponent };\n//# sourceMappingURL=image-block.js.map","export * from './image-block.js';\n//# sourceMappingURL=index.js.map","import { BaseService } from '../__internal__/service/index.js';\nexport class EmbedBlockService extends BaseService {\n    block2html(block, { childText = '', begin, end } = {}) {\n        return `<figure><img src=\"${block.sourceId}\" alt=\"${block.caption}\"><figcaption>${block.caption}</figcaption></figure>`;\n    }\n    block2Text(block, { childText = '', begin, end } = {}) {\n        return block.caption;\n    }\n    block2Json(block, begin, end) {\n        return {\n            type: block.type,\n            sourceId: block.sourceId,\n            width: block.width,\n            height: block.height,\n            caption: block.caption,\n            flavour: block.flavour,\n            children: [],\n        };\n    }\n}\n//# sourceMappingURL=embed-service.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BlockElement } from '@blocksuite/lit';\nimport { css, html, nothing } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { registerService } from '../__internal__/service.js';\nimport { EmbedBlockService } from './embed-service.js';\nlet EmbedBlockComponent = class EmbedBlockComponent extends BlockElement {\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:embed', EmbedBlockService);\n    }\n    firstUpdated(changedProperties) {\n        super.firstUpdated(changedProperties);\n        this.updateComplete.then(() => {\n            this._caption = this.model?.caption ?? '';\n            if (this._caption.length > 0) {\n                // Caption input should be toggled manually.\n                // Otherwise it will be lost if the caption is deleted into empty state.\n                this._input.classList.add('caption-show');\n            }\n        });\n        // The embed block can not be focused,\n        // so the active element will be the last activated element.\n        // If the active element is the title textarea,\n        // any event will dispatch from it and be ignored. (Most events will ignore title)\n        // so we need to blur it.\n        // See also https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n        this.addEventListener('click', () => {\n            if (document.activeElement &&\n                document.activeElement instanceof HTMLElement) {\n                document.activeElement.blur();\n            }\n        });\n        this._input.addEventListener('pointerup', (e) => {\n            e.stopPropagation();\n        });\n    }\n    _onInputChange() {\n        this._caption = this._input.value;\n        this.model.page.updateBlock(this.model, { caption: this._caption });\n    }\n    _onInputBlur() {\n        if (!this._caption) {\n            this._input.classList.remove('caption-show');\n        }\n    }\n    render() {\n        const slot = this.model.type === 'image'\n            ? html `<affine-image .model=${this.model}></affine-image>`\n            : nothing;\n        return html `\n      ${slot}\n      <div class=\"affine-embed-block-container\">\n        <div class=\"affine-embed-wrapper\">\n          <input\n            .disabled=${this.model.page.readonly}\n            placeholder=\"Write a caption\"\n            class=\"affine-embed-wrapper-caption\"\n            value=${this._caption}\n            @input=${this._onInputChange}\n            @blur=${this._onInputBlur}\n            @click=${(e) => {\n            e.stopPropagation();\n        }}\n          />\n        </div>\n      </div>\n    `;\n    }\n};\nEmbedBlockComponent.styles = css `\n    affine-embed {\n      display: block;\n    }\n    .affine-embed-wrapper {\n      text-align: center;\n      margin-bottom: calc(var(--affine-paragraph-space) + 8px);\n    }\n    .affine-embed-wrapper-caption {\n      width: 100%;\n      font-size: var(--affine-font-sm);\n      outline: none;\n      border: 0;\n      font-family: inherit;\n      text-align: center;\n      color: var(--affine-icon-color);\n      display: none;\n      background: var(--affine-background-primary-color);\n    }\n    .affine-embed-wrapper-caption::placeholder {\n      color: var(--affine-placeholder-color);\n    }\n\n    .affine-embed-wrapper .caption-show {\n      display: inline-block;\n    }\n  `;\n__decorate([\n    query('input')\n], EmbedBlockComponent.prototype, \"_input\", void 0);\n__decorate([\n    state()\n], EmbedBlockComponent.prototype, \"_caption\", void 0);\nEmbedBlockComponent = __decorate([\n    customElement('affine-embed')\n], EmbedBlockComponent);\nexport { EmbedBlockComponent };\n//# sourceMappingURL=embed-block.js.map","export * from './embed-block.js';\nexport * from './embed-model.js';\nexport * from './embed-service.js';\nexport * from './image/index.js';\n//# sourceMappingURL=index.js.map","import { getService } from '../__internal__/service.js';\nimport { BaseService } from '../__internal__/service/index.js';\nimport { addSerializedBlocks } from '../__internal__/service/json2block.js';\nexport class FrameBlockService extends BaseService {\n    async json2Block(focusedBlockModel, pastedBlocks) {\n        await addSerializedBlocks(focusedBlockModel.page, pastedBlocks, focusedBlockModel, 0);\n    }\n    block2Json(block, begin, end) {\n        const delta = block.text?.sliceToDelta(begin || 0, end) || [];\n        return {\n            flavour: block.flavour,\n            type: block.type,\n            text: delta,\n            xywh: block.xywh,\n            background: block.background,\n            children: block.children?.map((child, index) => {\n                if (index === block.children.length - 1) {\n                    return getService(child.flavour).block2Json(child, 0, end);\n                }\n                return getService(child.flavour).block2Json(child);\n            }),\n        };\n    }\n}\n//# sourceMappingURL=frame-service.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference types=\"vite/client\" />\nimport { BlockElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { registerService } from '../__internal__/service.js';\nimport { FrameBlockService } from './frame-service.js';\nlet FrameBlockComponent = class FrameBlockComponent extends BlockElement {\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:frame', FrameBlockService);\n    }\n    firstUpdated() {\n        this.model.propsUpdated.on(() => this.requestUpdate());\n        this.model.childrenUpdated.on(() => this.requestUpdate());\n    }\n    render() {\n        return html `\n      <div class=\"affine-frame-block-container\">\n        <div class=\"affine-block-children-container\">${this.content}</div>\n      </div>\n    `;\n    }\n};\nFrameBlockComponent.styles = css `\n    .affine-frame-block-container {\n      display: flow-root;\n    }\n    .affine-frame-block-container.selected {\n      background-color: var(--affine-hover-color);\n    }\n  `;\nFrameBlockComponent = __decorate([\n    customElement('affine-frame')\n], FrameBlockComponent);\nexport { FrameBlockComponent };\n//# sourceMappingURL=frame-block.js.map","export * from './frame-block.js';\nexport * from './frame-model.js';\nexport * from './frame-service.js';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nlet CounterBlock = class CounterBlock extends LitElement {\n    constructor() {\n        super();\n        this.count = 0;\n    }\n    async _notify() {\n        this.count++;\n        // https://lit.dev/docs/components/events/#dispatching-events-after-an-element-updates\n        await this.updateComplete;\n        const options = {\n            detail: this.count,\n            bubbles: true,\n            composed: true,\n        };\n        this.dispatchEvent(new CustomEvent('block-count-update', options));\n    }\n    render() {\n        return html ` <div @click=${this._notify}>${this.count}</div> `;\n    }\n};\n__decorate([\n    property()\n], CounterBlock.prototype, \"count\", void 0);\nCounterBlock = __decorate([\n    customElement('counter-block')\n], CounterBlock);\nexport { CounterBlock };\n//# sourceMappingURL=counter-block.js.map","export * from './counter-block.js';\n//# sourceMappingURL=index.js.map","class LRUCache {\n    constructor(maxSize) {\n        this.maxSize = maxSize;\n        this.cache = new Map();\n    }\n    get(key) {\n        const value = this.cache.get(key);\n        if (value === undefined) {\n            return null;\n        }\n        this.cache.delete(key);\n        this.cache.set(key, value);\n        return value;\n    }\n    set(key, value) {\n        if (this.cache.size >= this.maxSize) {\n            const firstKey = this.cache.keys().next().value;\n            this.cache.delete(firstKey);\n        }\n        this.cache.set(key, value);\n    }\n}\nexport const highlightCache = new LRUCache(100);\n//# sourceMappingURL=highlight-cache.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { assertExists } from '@blocksuite/store';\nimport { VText, ZERO_WIDTH_SPACE } from '@blocksuite/virgo';\nimport { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { queryCurrentMode } from '../std.js';\nimport { DARK_THEME, LIGHT_THEME } from './utils/consts.js';\nimport { highlightCache, } from './utils/highlight-cache.js';\nlet AffineCodeLine = class AffineCodeLine extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this.delta = {\n            insert: ZERO_WIDTH_SPACE,\n        };\n        this.highlightOptionsGetter = null;\n    }\n    render() {\n        assertExists(this.highlightOptionsGetter, 'highlightOptionsGetter is not set');\n        const { lang, highlighter } = this.highlightOptionsGetter();\n        if (!highlighter || !highlighter.getLoadedLanguages().includes(lang)) {\n            const vText = new VText();\n            vText.str = this.delta.insert;\n            vText.styles = styleMap({});\n            return html `<span>${vText}</span>`;\n        }\n        const mode = queryCurrentMode();\n        const cacheKey = `${this.delta.insert}-${lang}-${mode}`;\n        const cache = highlightCache.get(cacheKey);\n        let tokens = [\n            {\n                content: this.delta.insert,\n            },\n        ];\n        if (cache) {\n            tokens = cache;\n        }\n        else {\n            tokens = highlighter.codeToThemedTokens(this.delta.insert, lang, mode === 'dark' ? DARK_THEME : LIGHT_THEME)[0];\n            highlightCache.set(cacheKey, tokens);\n        }\n        const vTexts = tokens.map(token => {\n            const vText = new VText();\n            vText.str = token.content;\n            vText.styles = styleMap({\n                color: token.color,\n            });\n            return vText;\n        });\n        return html `<span>${vTexts}</span>`;\n    }\n};\n__decorate([\n    property({ type: Object })\n], AffineCodeLine.prototype, \"delta\", void 0);\n__decorate([\n    property()\n], AffineCodeLine.prototype, \"highlightOptionsGetter\", void 0);\nAffineCodeLine = __decorate([\n    customElement('affine-code-line')\n], AffineCodeLine);\nexport { AffineCodeLine };\n//# sourceMappingURL=affine-code-line.js.map","export * from './surface-model.js';\n//# sourceMappingURL=index.js.map","// source (2018-03-11): https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js\nfunction isVisible(elem) {\n    return (!!elem &&\n        !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n}\nexport function onClickOutside(element, callback, event = 'click', reusable = false) {\n    const outsideClickListener = (event) => {\n        // support shadow dom\n        const path = event.composedPath && event.composedPath();\n        const isOutside = path\n            ? path.indexOf(element) < 0\n            : !element.contains(event.target) && isVisible(element);\n        if (!isOutside)\n            return;\n        callback(element, event.target);\n        // if reuseable, need to manually remove the listener\n        if (!reusable)\n            removeClickListener();\n    };\n    document.addEventListener(event, outsideClickListener);\n    const removeClickListener = () => {\n        document.removeEventListener(event, outsideClickListener);\n    };\n    return removeClickListener;\n}\n/** select tag color poll */\nconst tagColorPoll = [\n    'var(--affine-tag-blue)',\n    'var(--affine-tag-green)',\n    'var(--affine-tag-teal)',\n    'var(--affine-tag-white)',\n    'var(--affine-tag-purple)',\n    'var(--affine-tag-red)',\n    'var(--affine-tag-pink)',\n    'var(--affine-tag-yellow)',\n    'var(--affine-tag-orange)',\n    'var(--affine-tag-gray)',\n];\nfunction tagColorHelper() {\n    let colors = [...tagColorPoll];\n    return () => {\n        if (colors.length === 0) {\n            colors = [...tagColorPoll];\n        }\n        const index = Math.floor(Math.random() * colors.length);\n        const color = colors.splice(index, 1)[0];\n        return color;\n    };\n}\nexport const getTagColor = tagColorHelper();\nexport function isDivider(action) {\n    return action.type === 'divider';\n}\n//# sourceMappingURL=utils.js.map","export var ColumnInsertPosition;\n(function (ColumnInsertPosition) {\n    ColumnInsertPosition[\"Left\"] = \"left\";\n    ColumnInsertPosition[\"Right\"] = \"right\";\n})(ColumnInsertPosition || (ColumnInsertPosition = {}));\nexport var SearchState;\n(function (SearchState) {\n    /** show search input */\n    SearchState[\"SearchInput\"] = \"input\";\n    /** show search icon */\n    SearchState[\"SearchIcon\"] = \"icon\";\n    /** searching */\n    SearchState[\"Searching\"] = \"searching\";\n    /** show more action */\n    SearchState[\"Action\"] = \"action\";\n})(SearchState || (SearchState = {}));\nexport var SelectMode;\n(function (SelectMode) {\n    SelectMode[\"Multi\"] = \"multi\";\n    SelectMode[\"Single\"] = \"single\";\n})(SelectMode || (SelectMode = {}));\n//# sourceMappingURL=types.js.map","import { css } from 'lit';\nexport const actionStyles = css `\n  .action {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 32px;\n    padding: 4px 8px;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  .action:hover {\n    background: var(--affine-hover-color);\n  }\n  .action-content {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n  }\n  .action-content > svg {\n    width: 20px;\n    height: 20px;\n    color: var(--affine-icon-color);\n    fill: var(--affine-icon-color);\n  }\n  .action-divider {\n    height: 0.5px;\n    background: var(--affine-divider-color);\n    margin: 8px 0;\n  }\n`;\nexport const styles = css `\n  :host {\n    background: var(--affine-background-primary-color);\n    box-shadow: var(--affine-menu-shadow);\n    padding: 8px;\n    border: 1px solid var(--affine-border-color);\n    border-radius: 8px;\n    z-index: 1;\n    font-family: var(--affine-font-family);\n  }\n\n  .affine-database-edit-column-popup {\n    display: flex;\n    flex-direction: column;\n    color: var(--affine-text-primary-color);\n  }\n  .affine-database-edit-column-popup * {\n    box-sizing: border-box;\n  }\n  .rename,\n  .delete,\n  .column-type {\n    fill: var(--affine-icon-color);\n  }\n  .column-type > svg {\n    transform: rotate(-90deg);\n  }\n  ${actionStyles}\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DatabaseDone, DatabaseMultiSelect, DatabaseNumber, DatabaseProgress, DatabaseSelect, TextIcon, TodoIcon, } from '@blocksuite/global/config';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { actionStyles } from './styles.js';\nconst columnTypes = [\n    {\n        type: 'rich-text',\n        text: 'Text',\n        icon: TextIcon,\n    },\n    {\n        type: 'select',\n        text: 'Select',\n        icon: DatabaseSelect,\n    },\n    {\n        type: 'multi-select',\n        text: 'Multi-select',\n        icon: DatabaseMultiSelect,\n    },\n    {\n        type: 'number',\n        text: 'Number',\n        icon: DatabaseNumber,\n    },\n    {\n        type: 'checkbox',\n        text: 'Checkbox',\n        icon: TodoIcon,\n    },\n    {\n        type: 'progress',\n        text: 'Progress',\n        icon: DatabaseProgress,\n    },\n];\nconst styles = css `\n  :host {\n    z-index: 1;\n    width: 200px;\n    padding: 8px;\n    border: 1px solid var(--affine-border-color);\n    border-radius: 8px;\n    background: var(--affine-background-primary-color);\n    box-shadow: var(--affine-menu-shadow);\n    font-family: var(--affine-font-family);\n  }\n  ${actionStyles}\n  .action > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  .rich-text {\n    fill: var(--affine-icon-color);\n  }\n  .column-type {\n    padding: 0;\n    color: var(--affine-text-secondary-color);\n    font-size: 14px;\n    cursor: unset;\n  }\n  .column-type:hover {\n    background: none;\n  }\n  .selected {\n    color: var(--affine-text-emphasis-color);\n    background: rgba(0, 0, 0, 0.02);\n  }\n  .selected svg {\n    color: var(--affine-text-emphasis-color);\n  }\n  .selected.rich-text svg {\n    fill: var(--affine-text-emphasis-color);\n  }\n  /* .action.disabled {\n    cursor: not-allowed;\n  }\n  .action.disabled:hover {\n    background: unset;\n  } */\n`;\nlet ColumnTypePopup = class ColumnTypePopup extends LitElement {\n    render() {\n        return html `\n      <div class=\"affine-database-column-type-popup\">\n        <div class=\"action column-type\">\n          <div class=\"action-content\"><span>Column type</span></div>\n        </div>\n        <div class=\"action-divider\"></div>\n        ${columnTypes.map(column => {\n            const selected = column.type === this.columnType;\n            const onChangeColumnType = () => {\n                if (!selected) {\n                    this.changeColumnType(this.columnId, column.type);\n                }\n            };\n            return html `\n            <div\n              class=\"action ${column.type} ${selected ? 'selected' : ''}\"\n              @click=${onChangeColumnType}\n            >\n              <div class=\"action-content\">\n                ${column.icon}<span>${column.text}</span>\n              </div>\n              ${selected ? DatabaseDone : null}\n            </div>\n          `;\n        })}\n      </div>\n    `;\n    }\n};\nColumnTypePopup.styles = styles;\n__decorate([\n    property()\n], ColumnTypePopup.prototype, \"columnType\", void 0);\n__decorate([\n    property()\n], ColumnTypePopup.prototype, \"columnId\", void 0);\n__decorate([\n    property()\n], ColumnTypePopup.prototype, \"changeColumnType\", void 0);\nColumnTypePopup = __decorate([\n    customElement('affine-database-column-type-popup')\n], ColumnTypePopup);\nexport { ColumnTypePopup };\n//# sourceMappingURL=column-type-popup.js.map","import { assertExists } from '@blocksuite/store';\nimport { ColumnInsertPosition } from '../../types.js';\nexport function changeColumnType(columnId, targetType, targetColumn, targetModel, columnRenderer) {\n    if (isTitleColumn(targetColumn))\n        return;\n    const currentType = targetColumn.type;\n    targetModel.page.captureSync();\n    // select -> multi-select\n    if (currentType === 'select' && targetType === 'multi-select') {\n        updateColumn(columnId, { type: targetType }, targetModel);\n    }\n    // multi-select -> select\n    else if (currentType === 'multi-select' && targetType === 'select') {\n        updateColumn(columnId, { type: targetType }, targetModel);\n        targetModel.convertCellsByColumn(columnId, 'select');\n    }\n    // number -> rich-text\n    else if (currentType === 'number' && targetType === 'rich-text') {\n        updateColumn(columnId, { type: targetType }, targetModel);\n        targetModel.convertCellsByColumn(columnId, 'rich-text');\n    }\n    else {\n        // incompatible types: clear the value of the column\n        const renderer = columnRenderer.get(targetType);\n        updateColumn(columnId, {\n            ...renderer.propertyCreator(),\n            type: targetType,\n        }, targetModel);\n        targetModel.deleteCellsByColumn(columnId);\n    }\n}\nexport function onActionClick(actionType, columnId, targetModel, columnIndex, setTitleColumnEditId, insertColumn) {\n    if (actionType === 'rename') {\n        setTitleColumnEditId(columnId);\n        return;\n    }\n    if (actionType === 'insert-right' || actionType === 'insert-left') {\n        if (actionType === 'insert-right') {\n            insertColumn(ColumnInsertPosition.Right);\n        }\n        else {\n            insertColumn(ColumnInsertPosition.Left);\n        }\n        return;\n    }\n    if (actionType === 'delete') {\n        targetModel.page.captureSync();\n        targetModel.deleteColumn(columnId);\n        targetModel.deleteCellsByColumn(columnId);\n        targetModel.applyColumnUpdate();\n        return;\n    }\n    if (actionType === 'move-left' || actionType === 'move-right') {\n        const targetIndex = actionType === 'move-left' ? columnIndex - 1 : columnIndex + 1;\n        targetModel.page.captureSync();\n        targetModel.moveColumn(columnIndex, targetIndex);\n        targetModel.applyColumnUpdate();\n        return;\n    }\n    if (actionType === 'duplicate') {\n        // TODO: rich text copy throws, check reason\n        targetModel.page.captureSync();\n        const currentSchema = targetModel.getColumn(columnId);\n        assertExists(currentSchema);\n        const { id: copyId, ...nonIdProps } = currentSchema;\n        const schema = { ...nonIdProps };\n        const id = targetModel.addColumn(schema, columnIndex + 1);\n        targetModel.applyColumnUpdate();\n        targetModel.copyCellsByColumn(copyId, id);\n        return;\n    }\n}\nexport function updateColumn(columnId, schemaProperties, targetModel) {\n    const currentSchema = targetModel.getColumn(columnId);\n    assertExists(currentSchema);\n    const schema = { ...currentSchema, ...schemaProperties };\n    targetModel.updateColumn(schema);\n}\nexport function isTitleColumn(column) {\n    return typeof column === 'string';\n}\n//# sourceMappingURL=utils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ArrowDownIcon, DatabaseDuplicate, DatabaseInsertLeft, DatabaseInsertRight, DatabaseMoveLeft, DatabaseMoveRight, DeleteIcon, PenIcon, TextIcon, } from '@blocksuite/global/config';\nimport { createPopper } from '@popperjs/core';\nimport { html, LitElement } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { isDivider } from '../../../utils.js';\nimport { ColumnTypePopup } from './column-type-popup.js';\nimport { styles } from './styles.js';\nimport { changeColumnType, isTitleColumn, onActionClick } from './utils.js';\nconst columnActions = [\n    {\n        type: 'rename',\n        text: 'Rename',\n        icon: PenIcon,\n    },\n    {\n        type: 'divider',\n    },\n    {\n        type: 'column-type',\n        text: 'Column type',\n        icon: TextIcon,\n    },\n    {\n        type: 'duplicate',\n        text: 'Duplicate column',\n        icon: DatabaseDuplicate,\n    },\n    {\n        type: 'insert-left',\n        text: 'Insert left column',\n        icon: DatabaseInsertLeft,\n    },\n    {\n        type: 'insert-right',\n        text: 'Insert right column',\n        icon: DatabaseInsertRight,\n    },\n    {\n        type: 'move-left',\n        text: 'Move left',\n        icon: DatabaseMoveLeft,\n    },\n    {\n        type: 'move-right',\n        text: 'Move Right',\n        icon: DatabaseMoveRight,\n    },\n    {\n        type: 'divider',\n    },\n    {\n        type: 'delete',\n        text: 'Delete column',\n        icon: DeleteIcon,\n    },\n];\nconst titleColumnActions = [\n    {\n        type: 'rename',\n        text: 'Rename',\n        icon: PenIcon,\n    },\n    {\n        type: 'insert-right',\n        text: 'Insert right column',\n        icon: DatabaseInsertRight,\n    },\n];\nlet EditColumnPopup = class EditColumnPopup extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._onShowColumnType = (columnId) => {\n            if (this._columnTypePopup)\n                return;\n            this._columnTypePopup = new ColumnTypePopup();\n            this._columnTypePopup.changeColumnType = this._changeColumnType;\n            this._columnTypePopup.columnId = columnId;\n            if (!isTitleColumn(this.targetColumn)) {\n                this._columnTypePopup.columnType = this.targetColumn.type;\n            }\n            this._container.appendChild(this._columnTypePopup);\n            createPopper(this._container, this._columnTypePopup, {\n                placement: 'right-start',\n                modifiers: [\n                    {\n                        name: 'offset',\n                        options: {\n                            offset: [-9, 12],\n                        },\n                    },\n                ],\n            });\n        };\n        this._onHideColumnType = () => {\n            if (this._columnTypePopup) {\n                this._columnTypePopup?.remove();\n                this._columnTypePopup = null;\n            }\n        };\n        this._changeColumnType = (columnId, targetType) => {\n            changeColumnType(columnId, targetType, this.targetColumn, this.targetModel, this.columnRenderer);\n            this.closePopup();\n        };\n        this._onActionClick = (actionType, columnId) => {\n            onActionClick(actionType, columnId, this.targetModel, this.columnIndex, this.setTitleColumnEditId, this.insertColumn);\n            this.closePopup();\n        };\n        this._renderActions = () => {\n            const actions = isTitleColumn(this.targetColumn)\n                ? titleColumnActions\n                : columnActions;\n            return html `\n      ${actions.map(action => {\n                if (isDivider(action)) {\n                    return html `<div class=\"action-divider\"></div>`;\n                }\n                // boundary\n                if ((this.columnIndex === 0 && action.type === 'move-left') ||\n                    (this.columnIndex === this.targetModel.columns.length - 1 &&\n                        action.type === 'move-right')) {\n                    return null;\n                }\n                const columnId = isTitleColumn(this.targetColumn)\n                    ? '-1'\n                    : this.targetColumn.id;\n                const onMouseOver = isTitleColumn(this.targetColumn)\n                    ? undefined\n                    : action.type === 'column-type'\n                        ? () => this._onShowColumnType(columnId)\n                        : this._onHideColumnType;\n                return html `\n          <div\n            class=\"action ${action.type}\"\n            @mouseover=${onMouseOver}\n            @click=${() => this._onActionClick(action.type, columnId)}\n          >\n            <div class=\"action-content\">\n              ${action.icon}<span>${action.text}</span>\n            </div>\n            ${action.type === 'column-type' ? ArrowDownIcon : html ``}\n          </div>\n        `;\n            })}\n    `;\n        };\n    }\n    render() {\n        return html `\n      <div class=\"affine-database-edit-column-popup\">\n        ${this._renderActions()}\n      </div>\n    `;\n    }\n};\nEditColumnPopup.styles = styles;\n__decorate([\n    property()\n], EditColumnPopup.prototype, \"targetModel\", void 0);\n__decorate([\n    property()\n], EditColumnPopup.prototype, \"columnRenderer\", void 0);\n__decorate([\n    property()\n], EditColumnPopup.prototype, \"targetColumn\", void 0);\n__decorate([\n    property()\n], EditColumnPopup.prototype, \"columnIndex\", void 0);\n__decorate([\n    property()\n], EditColumnPopup.prototype, \"closePopup\", void 0);\n__decorate([\n    property()\n], EditColumnPopup.prototype, \"setTitleColumnEditId\", void 0);\n__decorate([\n    property()\n], EditColumnPopup.prototype, \"insertColumn\", void 0);\n__decorate([\n    query('input')\n], EditColumnPopup.prototype, \"titleInput\", void 0);\n__decorate([\n    query('.affine-database-edit-column-popup')\n], EditColumnPopup.prototype, \"_container\", void 0);\nEditColumnPopup = __decorate([\n    customElement('affine-database-edit-column-popup')\n], EditColumnPopup);\nexport { EditColumnPopup };\n//# sourceMappingURL=edit-column-popup.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nlet ColumnDragIndicator = class ColumnDragIndicator extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.targetRect = null;\n        this.scale = 1;\n    }\n    render() {\n        if (!this.targetRect) {\n            return null;\n        }\n        const rect = this.targetRect;\n        const style = styleMap({\n            width: `${3 * this.scale}px`,\n            height: `${rect.height}px`,\n            transform: `translate(${rect.left}px, ${rect.top}px)`,\n        });\n        return html `\n      <div class=\"affine-database-column-drag-indicator\" style=${style}></div>\n    `;\n    }\n};\nColumnDragIndicator.styles = css `\n    .affine-database-column-drag-indicator {\n      position: fixed;\n      z-index: 10;\n      top: 0;\n      left: 0;\n      background: var(--affine-primary-color);\n      transition-property: width, transform;\n      transition-duration: 100ms;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-delay: 0s;\n      pointer-events: none;\n    }\n  `;\n__decorate([\n    property()\n], ColumnDragIndicator.prototype, \"targetRect\", void 0);\n__decorate([\n    property()\n], ColumnDragIndicator.prototype, \"scale\", void 0);\nColumnDragIndicator = __decorate([\n    customElement('affine-database-column-drag-indicator')\n], ColumnDragIndicator);\nexport { ColumnDragIndicator };\n//# sourceMappingURL=column-drag-indicator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nlet ColumnDragPreview = class ColumnDragPreview extends ShadowlessElement {\n    render() {\n        return html `\n      <style>\n        affine-database-column-drag-preview {\n          display: flex;\n          flex-direction: column;\n          position: fixed;\n          top: 0;\n          left: 0;\n          height: 220px;\n          width: fit-content;\n          border: 1px solid var(--affine-border-color);\n          border-radius: 4px;\n          overflow: hidden;\n          cursor: none;\n          user-select: none;\n          pointer-events: none;\n          caret-color: transparent;\n          z-index: 100;\n        }\n\n        .preview-column-header {\n          opacity: 0.8;\n          border-bottom: 1px solid var(--affine-border-color);\n          background: var(--affine-tertiary-color);\n        }\n        .preview-column-header .affine-database-column-move svg {\n          cursor: grabbing;\n          opacity: 1;\n        }\n        .preview-column-header .affine-database-column-move circle {\n          fill: var(--affine-text-emphasis-color);\n        }\n\n        .preview-column-content {\n          flex: 1;\n          opacity: 0.8;\n          background: var(--affine-white);\n        }\n      </style>\n    `;\n    }\n};\nColumnDragPreview = __decorate([\n    customElement('affine-database-column-drag-preview')\n], ColumnDragPreview);\nexport { ColumnDragPreview };\n//# sourceMappingURL=column-drag-preview.js.map","import { DisposableGroup } from '@blocksuite/global/utils';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { Point } from '../../../../../__internal__/index.js';\nimport { ColumnDragIndicator } from './column-drag-indicator.js';\nimport { ColumnDragPreview } from './column-drag-preview.js';\nexport function initMoveColumnHandlers(headerContainer, tableContainer, targetModel) {\n    let dragPreview = null;\n    let dragColumnConfig = null;\n    let indicator = document.querySelector('affine-database-column-drag-indicator');\n    if (!indicator) {\n        indicator = new ColumnDragIndicator();\n        document.body.appendChild(indicator);\n    }\n    let rafId = -1;\n    const onColumnDragStart = (event) => {\n        event.stopPropagation();\n        assertExists(event.dataTransfer);\n        event.dataTransfer.effectAllowed = 'move';\n        const headerColumns = Array.from(headerContainer.querySelectorAll('.affine-database-column')).filter(column => !column.classList.contains('add-column-button'));\n        const dragIcon = event.target;\n        const dragHeaderColumn = dragIcon.closest('.affine-database-column');\n        assertExists(dragHeaderColumn);\n        const dragIndex = headerColumns.indexOf(dragHeaderColumn) - 1;\n        const database = tableContainer.closest('affine-database');\n        assertExists(database);\n        const { x, y } = dragHeaderColumn.getBoundingClientRect();\n        const tableBody = tableContainer.closest('.affine-database-block-table');\n        assertExists(tableBody);\n        const { left, right } = tableBody.getBoundingClientRect();\n        dragColumnConfig = {\n            dragIndex,\n            tableBody,\n            headerColumns,\n            targetIndex: -1,\n            indicatorHeight: tableContainer.clientHeight,\n            previewBoundaries: {\n                left,\n                right,\n            },\n            offset: {\n                x: event.clientX - x,\n                y: event.clientY - y,\n            },\n        };\n        dragPreview = createDragPreview(event);\n        tableContainer.appendChild(dragPreview);\n    };\n    const onColumnDrag = (event) => {\n        if (!dragColumnConfig)\n            return;\n        assertExists(dragPreview);\n        if (dragPreview.style.opacity !== '1') {\n            dragPreview.style.opacity = '1';\n        }\n        const x = event.clientX;\n        const y = event.clientY;\n        const { dragIndex, tableBody, previewBoundaries, indicatorHeight, headerColumns, offset: { x: offsetX, y: offsetY }, } = dragColumnConfig;\n        dragPreview.style.transform = `translate(${x - offsetX}px, ${y - offsetY}px)`;\n        const point = new Point(x, y);\n        const { element, index: targetIndex } = getClosestElement(point, headerColumns);\n        const elementRect = element.getBoundingClientRect();\n        const outOfBoundaries = elementRect.right < previewBoundaries.left ||\n            elementRect.right > previewBoundaries.right;\n        // both side of drag element should hide the indicator\n        const rect = dragIndex === targetIndex ||\n            dragIndex === targetIndex - 1 ||\n            outOfBoundaries\n            ? null\n            : new DOMRect(elementRect.right, elementRect.top, 1, indicatorHeight);\n        assertExists(indicator);\n        indicator.targetRect = rect;\n        dragColumnConfig.targetIndex = targetIndex - 1;\n        // auto scroll\n        const autoLeft = x <= previewBoundaries.left + 50;\n        const autoRight = x >= previewBoundaries.right - 50;\n        const auto = autoLeft || autoRight;\n        const autoScroll = () => {\n            if (!auto) {\n                cancelAnimationFrame(rafId);\n                return;\n            }\n            else {\n                rafId = requestAnimationFrame(autoScroll);\n            }\n            if (autoRight) {\n                tableBody.scrollLeft += 10;\n            }\n            if (autoLeft) {\n                tableBody.scrollLeft -= 10;\n            }\n        };\n        cancelAnimationFrame(rafId);\n        rafId = requestAnimationFrame(autoScroll);\n    };\n    const onColumnDragEnd = (event) => {\n        if (!dragColumnConfig)\n            return;\n        const { dragIndex: fromIndex, targetIndex } = dragColumnConfig;\n        // clear data\n        dragColumnConfig = null;\n        if (indicator)\n            indicator.targetRect = null;\n        if (dragPreview) {\n            dragPreview.remove();\n            dragPreview = null;\n        }\n        const toIndex = targetIndex + 1;\n        if (\n        // self\n        fromIndex === toIndex - 1 ||\n            // same position\n            fromIndex === toIndex) {\n            return;\n        }\n        targetModel.page.captureSync();\n        targetModel.moveColumn(fromIndex, toIndex);\n        targetModel.applyColumnUpdate();\n    };\n    const disposables = new DisposableGroup();\n    const stopPropagation = (e) => e.stopPropagation();\n    const columnMoveElements = headerContainer.querySelectorAll('.affine-database-column-move');\n    columnMoveElements.forEach(moveElement => {\n        // prevent block selection and drag-handle\n        disposables.addFromEvent(moveElement, 'pointerdown', stopPropagation);\n        disposables.addFromEvent(moveElement, 'pointermove', stopPropagation);\n        disposables.addFromEvent(moveElement, 'pointerup', stopPropagation);\n        disposables.addFromEvent(moveElement, 'click', stopPropagation);\n        // init drag event\n        disposables.addFromEvent(moveElement, 'dragstart', onColumnDragStart);\n        disposables.addFromEvent(moveElement, 'drag', onColumnDrag);\n        disposables.addFromEvent(moveElement, 'dragend', onColumnDragEnd);\n    });\n    return disposables;\n}\nfunction createDragPreview(event) {\n    const dragPreview = new ColumnDragPreview();\n    dragPreview.style.opacity = '0';\n    const previewFragment = document.createDocumentFragment();\n    // header\n    const dragIcon = event.target;\n    const headerColumn = dragIcon.closest('.affine-database-column');\n    assertExists(headerColumn);\n    const headerColumnClone = headerColumn.cloneNode(true);\n    headerColumnClone.classList.add('preview-column-header');\n    previewFragment.appendChild(headerColumnClone);\n    // content\n    const previewContent = document.createElement('div');\n    previewContent.classList.add('preview-column-content');\n    previewFragment.appendChild(previewContent);\n    dragPreview.appendChild(previewFragment);\n    event.dataTransfer?.setDragImage(dragPreview, 0, 0);\n    return dragPreview;\n}\nfunction getClosestElement(point, headerColumns) {\n    let element = null;\n    let index = -1;\n    const length = headerColumns.length;\n    for (let i = 0; i < length; i++) {\n        const column = headerColumns[i];\n        const rect = column.getBoundingClientRect();\n        if (point.x >= rect.left && point.x <= rect.right) {\n            element = column;\n            index = i;\n            break;\n        }\n    }\n    // boundary check\n    if (!element) {\n        const firstColumnRect = headerColumns[0].getBoundingClientRect();\n        if (point.x <= firstColumnRect.left) {\n            // left boundary\n            element = headerColumns[0];\n            index = 0;\n        }\n        else {\n            // right boundary\n            element = headerColumns[length - 1];\n            index = length - 1;\n        }\n    }\n    return {\n        element,\n        index,\n    };\n}\n//# sourceMappingURL=index.js.map","import { assertExists, DisposableGroup } from '@blocksuite/global/utils';\nimport { DEFAULT_ADD_BUTTON_WIDTH, DEFAULT_COLUMN_MIN_WIDTH, } from '../../../consts.js';\nexport function initChangeColumnWidthHandlers(headerContainer, tableContainer, targetModel, changeActiveColumnIndex) {\n    let changeColumnWidthConfig = null;\n    const onColumnWidthPointerdown = (event, index) => {\n        event.stopPropagation();\n        // all rows cell in current column\n        const currentColumnCells = Array.from(tableContainer.querySelectorAll(`.database-cell:nth-child(${index + 1})`));\n        const dragHandleCell = headerContainer.querySelector(`.database-cell:nth-child(${index + 1})`);\n        assertExists(dragHandleCell);\n        const parentElement = tableContainer.parentElement;\n        assertExists(parentElement);\n        changeColumnWidthConfig = {\n            index,\n            rowCells: currentColumnCells,\n            scrollLeft: parentElement.scrollLeft,\n            lastClientX: event.clientX,\n            startClientX: event.clientX,\n            rawWidth: currentColumnCells[0].clientWidth,\n            currentCell: dragHandleCell,\n            rafId: undefined,\n        };\n        changeActiveColumnIndex(index);\n    };\n    const onColumnWidthPointermove = (event) => {\n        event.stopPropagation();\n        if (!changeColumnWidthConfig)\n            return;\n        const { rafId, rowCells, rawWidth, lastClientX, startClientX, scrollLeft: startScrollLeft, } = changeColumnWidthConfig;\n        if (event.clientX - lastClientX === 0)\n            return;\n        const direction = event.clientX - lastClientX > 0 ? 'right' : 'left';\n        changeColumnWidthConfig.lastClientX = event.clientX;\n        const onUpdateDOM = () => {\n            const columnWidth = rawWidth + event.clientX - startClientX <= DEFAULT_COLUMN_MIN_WIDTH\n                ? DEFAULT_COLUMN_MIN_WIDTH\n                : rawWidth + event.clientX - startClientX;\n            // update column width\n            rowCells.forEach(cell => {\n                cell.style.width = `${columnWidth}px`;\n                const titleText = cell.querySelector('.affine-database-column-text-input');\n                if (titleText) {\n                    // 54px is the width of other elements of the column\n                    titleText.style.width = `${columnWidth - 54}px`;\n                }\n            });\n            // scroll when crossing the right border\n            const parentElement = tableContainer.parentElement;\n            assertExists(parentElement);\n            const { right: boundaryRight, left: boundaryLeft } = parentElement.getBoundingClientRect();\n            // the distance from the drag handle to the right border\n            const dragHandleRight = event.clientX - boundaryRight + DEFAULT_ADD_BUTTON_WIDTH;\n            // x\n            if (dragHandleRight >= 0) {\n                // → | →\n                // the `|` is boundary\n                if (direction === 'right') {\n                    // 1. Drag right 100 (scroll distance 100)\n                    // 2. Drag left 30 (scroll distance unchanged)\n                    // 3. At this point, dragging further to the right should keep the 100\n                    parentElement.scrollLeft = Math.max(parentElement.scrollLeft, startScrollLeft + dragHandleRight);\n                }\n                else {\n                    // → | ←\n                    let scrollLeft = parentElement.scrollLeft;\n                    if (dragHandleRight <= DEFAULT_ADD_BUTTON_WIDTH) {\n                        scrollLeft += dragHandleRight;\n                    }\n                    parentElement.scrollLeft = Math.min(scrollLeft, startScrollLeft + dragHandleRight);\n                }\n                return;\n            }\n            // scroll when crossing the left border\n            const dragHandleLeft = event.clientX - boundaryLeft - DEFAULT_ADD_BUTTON_WIDTH;\n            // ← | ←\n            if (dragHandleLeft <= 0 && parentElement.scrollLeft > 0) {\n                parentElement.scrollLeft = startScrollLeft + dragHandleLeft;\n            }\n        };\n        if (rafId)\n            cancelAnimationFrame(rafId);\n        changeColumnWidthConfig.rafId = requestAnimationFrame(onUpdateDOM);\n    };\n    const onColumnWidthPointerup = (event) => {\n        event.stopPropagation();\n        changeActiveColumnIndex(-1);\n        if (!changeColumnWidthConfig)\n            return;\n        const { rafId, index, rowCells } = changeColumnWidthConfig;\n        if (rafId)\n            cancelAnimationFrame(rafId);\n        changeColumnWidthConfig = null;\n        const columnWidth = rowCells[0].offsetWidth;\n        targetModel.page.captureSync();\n        if (index === 0) {\n            targetModel.page.updateBlock(targetModel, {\n                titleColumnWidth: columnWidth,\n            });\n        }\n        else {\n            const columnId = targetModel.columns[index - 1].id;\n            const columnProps = targetModel.getColumn(columnId);\n            targetModel.updateColumn({\n                ...columnProps,\n                width: columnWidth,\n            });\n            targetModel.applyColumnUpdate();\n        }\n    };\n    const disposables = new DisposableGroup();\n    const dragHandles = headerContainer.querySelectorAll('.affine-database-column-drag-handle');\n    dragHandles.forEach((dragHandle, index) => {\n        disposables.addFromEvent(dragHandle, 'pointerdown', (event) => onColumnWidthPointerdown(event, index));\n    });\n    disposables.addFromEvent(document, 'pointermove', onColumnWidthPointermove);\n    disposables.addFromEvent(document, 'pointerup', onColumnWidthPointerup);\n    return disposables;\n}\n//# sourceMappingURL=index.js.map","import { css } from 'lit';\nimport { DEFAULT_ADD_BUTTON_WIDTH, DEFAULT_COLUMN_MIN_WIDTH, } from '../../consts.js';\nexport const styles = css `\n  .affine-database-column-header {\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    height: 40px;\n    border-bottom: 1px solid var(--affine-border-color);\n  }\n  .affine-database-column-header > .affine-database-column:first-child {\n    background: var(--affine-hover-color);\n  }\n\n  .affine-database-column {\n    position: relative;\n    z-index: 1;\n    cursor: pointer;\n    background: var(--affine-white);\n    transform: translateX(0);\n  }\n  .database-cell {\n    min-width: ${DEFAULT_COLUMN_MIN_WIDTH}px;\n  }\n  .database-cell.add-column-button {\n    flex: 1;\n    min-width: ${DEFAULT_ADD_BUTTON_WIDTH}px;\n    min-height: 100%;\n    display: flex;\n    align-items: center;\n  }\n  .affine-database-column-content {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    width: 100%;\n    height: 100%;\n    padding: 8px;\n    border-right: 1px solid var(--affine-border-color);\n  }\n  .affine-database-column:last-child .affine-database-column-content {\n    border-right: none;\n  }\n  .affine-database-column-drag-handle {\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: -8px;\n    width: 16px;\n    height: 100%;\n    cursor: col-resize;\n  }\n  .affine-database-column-drag-handle::before {\n    content: ' ';\n    display: none;\n    position: absolute;\n    width: 2px;\n    height: 100%;\n    left: 7px;\n    background: var(--affine-text-emphasis-color);\n    box-shadow: 0px 0px 8px rgba(84, 56, 255, 0.35);\n  }\n  .affine-database-column-drag-handle:hover::before,\n  .affine-database-column-drag-handle.dragging::before {\n    display: block;\n  }\n  .affine-database-column-content:hover,\n  .affine-database-column-content.edit {\n    background: linear-gradient(\n        0deg,\n        var(--affine-hover-color),\n        var(--affine-hover-color)\n      ),\n      var(--affine-white);\n  }\n  .affine-database-column-content.edit .affine-database-column-text-icon {\n    opacity: 1;\n  }\n  .affine-database-column-text {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    /* https://stackoverflow.com/a/36247448/15443637 */\n    overflow: hidden;\n    color: var(--affine-text-secondary-color);\n    font-size: 14px;\n    font-weight: 600;\n  }\n  .affine-database-column-type-icon {\n    display: flex;\n    align-items: center;\n    border: 1px solid transparent;\n    border-radius: 4px;\n  }\n  .affine-database-column-type-icon.edit {\n    background: linear-gradient(\n        0deg,\n        var(--affine-hover-color),\n        var(--affine-hover-color)\n      ),\n      var(--affine-white);\n    border-color: var(--affine-border-color);\n  }\n  .affine-database-column-type-icon.edit:hover {\n    background: var(--affine-white);\n  }\n  .affine-database-column-type-icon svg {\n    width: 16px;\n    height: 16px;\n    fill: var(--affine-icon-color);\n  }\n  .affine-database-column-text-content {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n  }\n  .affine-database-column-content:hover .affine-database-column-text-icon {\n    opacity: 1;\n  }\n  .affine-database-column-text-input {\n    flex: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .affine-database-column-text-icon {\n    display: flex;\n    align-items: center;\n    width: 16px;\n    height: 16px;\n    background: var(--affine-white);\n    border: 1px solid var(--affine-border-color);\n    border-radius: 4px;\n    opacity: 0;\n  }\n  .affine-database-column-text-save-icon {\n    display: flex;\n    align-items: center;\n    width: 16px;\n    height: 16px;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    fill: var(--affine-icon-color);\n  }\n  .affine-database-column-text-save-icon:hover {\n    background: var(--affine-white);\n    border-color: var(--affine-border-color);\n  }\n  .affine-database-column-text-icon svg {\n    fill: var(--affine-icon-color);\n  }\n  .affine-database-column-input {\n    width: 100%;\n    height: 24px;\n    padding: 0;\n    border: none;\n    color: inherit;\n    font-weight: 600;\n    font-size: 14px;\n    font-family: var(--affine-font-family);\n    background: transparent;\n  }\n  .affine-database-column-input:focus {\n    outline: none;\n  }\n  .affine-database-column-move {\n    display: flex;\n    align-items: center;\n  }\n  .affine-database-column-move svg {\n    width: 10px;\n    height: 14px;\n    color: var(--affine-black-10);\n    cursor: grab;\n    opacity: 0;\n  }\n  .affine-database-column-content:hover svg {\n    opacity: 1;\n  }\n\n  .affine-database-add-column-button {\n    visibility: hidden;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 38px;\n    cursor: pointer;\n  }\n  .header-add-column-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 100%;\n    cursor: pointer;\n  }\n\n  .affine-database-column-move-preview {\n    position: fixed;\n    z-index: 100;\n    width: 100px;\n    height: 100px;\n    background: var(--affine-text-emphasis-color);\n  }\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DatabaseAddColumn, DatabaseDone, DatabaseDragIcon, DatabaseMultiSelect, DatabaseNumber, DatabaseProgress, DatabaseSelect, PenIcon, TextIcon, TodoIcon, } from '@blocksuite/global/config';\nimport { assertExists, DisposableGroup } from '@blocksuite/global/utils';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { createPopper } from '@popperjs/core';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html } from 'lit/static-html.js';\nimport { getDefaultPage } from '../../../../__internal__/index.js';\nimport { onClickOutside } from '../../../utils.js';\nimport { DEFAULT_COLUMN_TITLE_HEIGHT } from '../../consts.js';\nimport { ColumnInsertPosition } from '../../types.js';\nimport { ColumnTypePopup } from '../edit-column-popup/column-type-popup.js';\nimport { EditColumnPopup } from '../edit-column-popup/edit-column-popup.js';\nimport { changeColumnType } from '../edit-column-popup/utils.js';\nimport { initMoveColumnHandlers } from './column-move/index.js';\nimport { initChangeColumnWidthHandlers } from './column-width/index.js';\nimport { styles } from './styles.js';\nconst columnTypeIconMap = {\n    select: DatabaseSelect,\n    number: DatabaseNumber,\n    checkbox: TodoIcon,\n    progress: DatabaseProgress,\n    'rich-text': TextIcon,\n    'multi-select': DatabaseMultiSelect,\n};\nlet DatabaseColumnHeader = class DatabaseColumnHeader extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this._editingColumnId = '';\n        this._changingColumnTypeId = '';\n        this._widthChangingIndex = -1;\n        this._columnWidthDisposables = new DisposableGroup();\n        this._columnMoveDisposables = new DisposableGroup();\n        this._isHeaderHover = false;\n        this._indicator = null;\n        this._editingColumnPopupIndex = -1;\n        this.setEditingColumnId = (id) => {\n            this._editingColumnId = id;\n        };\n        this.showAddColumnButton = (event) => {\n            const databaseElement = this.closest('affine-database');\n            assertExists(databaseElement);\n            const { right: boundaryRight } = databaseElement.getBoundingClientRect();\n            const { left: headerAddColumnButtonLeft } = this._headerAddColumnButton.getBoundingClientRect();\n            let isInHeader = true;\n            if (event) {\n                // mouse over the header\n                isInHeader =\n                    event.offsetY <= DEFAULT_COLUMN_TITLE_HEIGHT && event.offsetY >= 0;\n            }\n            const needShow = boundaryRight <= headerAddColumnButtonLeft;\n            if (needShow && this._isHeaderHover && isInHeader) {\n                this._addColumnButton.style.visibility = 'visible';\n            }\n            else {\n                this._addColumnButton.style.visibility = 'hidden';\n            }\n        };\n        this._setChangingColumnIndex = (index) => {\n            if (this._widthChangingIndex !== index) {\n                this._widthChangingIndex = index;\n            }\n        };\n        this._onShowEditColumnPopup = (target, column, index) => {\n            if (this._editingColumnId || this.readonly)\n                return;\n            if (this._editingColumnPopupIndex === index) {\n                this._editingColumnPopupIndex = -1;\n                return;\n            }\n            this._editingColumnPopupIndex = index;\n            const currentEl = target;\n            const reference = currentEl.closest('.affine-database-column');\n            assertExists(reference);\n            const editColumn = new EditColumnPopup();\n            editColumn.setTitleColumnEditId = this.setEditingColumnId;\n            editColumn.targetModel = this.targetModel;\n            editColumn.targetColumn = column;\n            editColumn.columnIndex = index - 1;\n            editColumn.columnRenderer = this.columnRenderer;\n            editColumn.closePopup = () => {\n                this._editingColumnPopupIndex = -1;\n                editColumn.remove();\n            };\n            editColumn.insertColumn = position => {\n                const insertIdex = position === ColumnInsertPosition.Right ? index : index - 1;\n                this.addColumn(insertIdex);\n            };\n            document.body.appendChild(editColumn);\n            createPopper(reference, editColumn, { placement: 'bottom-start' });\n            onClickOutside(editColumn, (ele, target) => {\n                // click outside of column title, need to reset the index\n                if (!target.closest('.affine-database-column-content')) {\n                    this._editingColumnPopupIndex = -1;\n                }\n                ele.remove();\n            }, 'mousedown');\n        };\n        this._onShowColumnTypePopup = (event, columnId, column) => {\n            if (this._editingColumnId === '' || this.readonly)\n                return;\n            if (this._changingColumnTypeId === columnId) {\n                this._changingColumnTypeId = '';\n                return;\n            }\n            event.stopPropagation();\n            this._changingColumnTypeId = columnId;\n            const popup = new ColumnTypePopup();\n            popup.columnId = columnId;\n            popup.columnType = column.type;\n            popup.changeColumnType = (columnId, type) => {\n                changeColumnType(columnId, type, column, this.targetModel, this.columnRenderer);\n                this._changingColumnTypeId = '';\n                popup.remove();\n            };\n            document.body.appendChild(popup);\n            const target = event.target;\n            const reference = target.closest('.affine-database-column-content');\n            assertExists(reference);\n            createPopper(reference, popup, {\n                placement: 'bottom-start',\n            });\n            onClickOutside(popup, (ele, target) => {\n                if (!target.closest('.affine-database-column-type-icon')) {\n                    this._changingColumnTypeId = '';\n                }\n                ele.remove();\n            }, 'mousedown');\n        };\n        this._onKeydown = (event, type, column) => {\n            if (event.key === 'Enter') {\n                this.targetModel.page.captureSync();\n                this._saveColumnTitle(type, column);\n                return;\n            }\n            if (event.key === 'Escape') {\n                this.setEditingColumnId('');\n                return;\n            }\n        };\n        this._saveColumnTitle = (type, column) => {\n            // Prevent triggering again after press enter key\n            if (this._editingColumnId === '')\n                return;\n            const name = this._titleColumnInput.value;\n            if (type === 'title') {\n                // title column\n                this._onUpdateTitleColumn(name);\n            }\n            else {\n                // other columns\n                assertExists(column);\n                this._onUpdateNormalColumn(name, column);\n            }\n            // To handle this situation:\n            // 1. click the pen icon, edit the title\n            // 2. then click the other column's pen icon, edit the title\n            if (this._editingColumnId === column?.id) {\n                this.setEditingColumnId('');\n            }\n        };\n        this._onUpdateTitleColumn = (titleColumnName) => {\n            this.targetModel.page.captureSync();\n            this.targetModel.page.updateBlock(this.targetModel, {\n                titleColumnName,\n            });\n            this.setEditingColumnId('');\n        };\n        this._onUpdateNormalColumn = (name, column) => {\n            this.targetModel.page.captureSync();\n            this.targetModel.updateColumn({\n                ...column,\n                name,\n            });\n            this.targetModel.applyColumnUpdate();\n            this.setEditingColumnId('');\n        };\n        this._onEditColumnTitle = (event, columnId) => {\n            event.stopPropagation();\n            this.setEditingColumnId(columnId);\n        };\n        this._onAddColumn = () => {\n            if (this.readonly)\n                return;\n            this.addColumn(this.targetModel.columns.length);\n        };\n    }\n    get tableContainer() {\n        return this.parentElement;\n    }\n    get readonly() {\n        return this.targetModel.page.readonly;\n    }\n    firstUpdated() {\n        if (this.readonly)\n            return;\n        this._initChangeColumnWidthHandlers();\n        this._initSetDragHandleHeightEffect();\n        this._initHeaderMousemoveHandlers();\n        this._initMoveColumnHandlers();\n        const databaseElement = this.closest('affine-database');\n        if (databaseElement) {\n            this._initResizeEffect(databaseElement);\n        }\n    }\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        if (this.readonly)\n            return;\n        if (changedProperties.has('_editingColumnId') && !!this._editingColumnId) {\n            this._titleColumnInput.focus();\n            const length = this._titleColumnInput.value.length;\n            this._titleColumnInput.setSelectionRange(0, length);\n        }\n        if (changedProperties.has('columns')) {\n            // bind event when new column is added\n            this._initMoveColumnHandlers();\n            this._initChangeColumnWidthHandlers();\n        }\n        // When dragging a block or adding a new row to the database, the changedProperties.size is 0\n        if (changedProperties.size === 0 || changedProperties.has('columns')) {\n            this._setDragHandleHeight();\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this._columnWidthDisposables.dispose();\n        if (this._indicator) {\n            this._indicator.targetRect = null;\n        }\n    }\n    _initResizeEffect(element) {\n        const pageBlock = getDefaultPage(this.targetModel.page);\n        const viewportElement = pageBlock?.viewportElement;\n        if (viewportElement) {\n            const resizeObserver = new ResizeObserver((entries) => {\n                for (const { target } of entries) {\n                    if (target === viewportElement) {\n                        const { right: containerRight } = element.getBoundingClientRect();\n                        // calc the position of add column button\n                        this._addColumnButton.style.left = `${containerRight}px`;\n                        break;\n                    }\n                }\n            });\n            resizeObserver.observe(viewportElement);\n        }\n    }\n    _initSetDragHandleHeightEffect() {\n        const mutationObserver = new MutationObserver(() => {\n            this._setDragHandleHeight();\n        });\n        const tableContainer = this.closest('.affine-database-table-container');\n        assertExists(tableContainer);\n        mutationObserver.observe(tableContainer, {\n            childList: true,\n            subtree: true,\n        });\n        this._disposables.add(() => mutationObserver.disconnect());\n    }\n    _setDragHandleHeight() {\n        const databaseElement = this.closest('affine-database');\n        // When dragging to generate a database preview,\n        // the database may not be rendered to the page in time\n        if (!databaseElement)\n            return;\n        const databaseBody = databaseElement.querySelector('.affine-database-block-rows');\n        assertExists(databaseBody);\n        const dragHandleHeight = databaseBody.clientHeight + DEFAULT_COLUMN_TITLE_HEIGHT - 1;\n        const allDragHandle = databaseElement.querySelectorAll('.affine-database-column-drag-handle');\n        allDragHandle.forEach(handle => {\n            handle.style.height = `${dragHandleHeight}px`;\n        });\n    }\n    _initHeaderMousemoveHandlers() {\n        this._disposables.addFromEvent(this._headerContainer, 'mouseover', event => {\n            this._isHeaderHover = true;\n            this.showAddColumnButton(event);\n        });\n        this._disposables.addFromEvent(this._headerContainer, 'mouseleave', event => {\n            this._isHeaderHover = false;\n            this.showAddColumnButton(event);\n        });\n    }\n    _initChangeColumnWidthHandlers() {\n        // Don't `dispose()` if column width is being changed\n        const isChangingWidth = this._widthChangingIndex !== -1;\n        if (isChangingWidth)\n            return;\n        this._columnWidthDisposables.dispose();\n        const disposables = initChangeColumnWidthHandlers(this._headerContainer, this.tableContainer, this.targetModel, this._setChangingColumnIndex);\n        this._columnWidthDisposables = disposables;\n    }\n    _initMoveColumnHandlers() {\n        // remove previous handlers\n        this._columnMoveDisposables.dispose();\n        const disposables = initMoveColumnHandlers(this._headerContainer, this.tableContainer, this.targetModel);\n        // bind new handlers\n        this._columnMoveDisposables = disposables;\n    }\n    render() {\n        const style = styleMap({\n            width: `${this.targetModel.titleColumnWidth}px`,\n        });\n        const isTitleEditing = this._editingColumnId === '-1' && !this.readonly;\n        return html `\n      <div class=\"affine-database-column-header database-row\">\n        <div class=\"affine-database-column database-cell\" style=${style}>\n          <div\n            class=\"affine-database-column-content ${this._editingColumnId ===\n            '-1'\n            ? 'edit'\n            : ''}\"\n            data-column-id=\"-1\"\n            @click=${(event) => this._onShowEditColumnPopup(event.target, this.targetModel.titleColumnName, 0)}\n          >\n            <div class=\"affine-database-column-text\">\n              <div class=\"affine-database-column-type-icon\">${TextIcon}</div>\n              ${isTitleEditing\n            ? html `<div class=\"affine-database-column-text-content\">\n                    <input\n                      class=\"affine-database-column-input\"\n                      value=${this.targetModel.titleColumnName}\n                      @keydown=${(event) => this._onKeydown(event, 'title')}\n                      @pointerdown=${(event) => event.stopPropagation()}\n                    />\n                    <div\n                      class=\"affine-database-column-text-save-icon\"\n                      @click=${(event) => {\n                event.stopPropagation();\n                this._saveColumnTitle('title');\n            }}\n                    >\n                      ${DatabaseDone}\n                    </div>\n                  </div>`\n            : html `<div class=\"affine-database-column-text-content\">\n                    <div class=\"affine-database-column-text-input\">\n                      ${this.targetModel.titleColumnName}\n                    </div>\n                    ${this.readonly\n                ? null\n                : html `<div\n                          class=\"affine-database-column-text-icon\"\n                          @click=${(e) => this._onEditColumnTitle(e, '-1')}\n                        >\n                          ${PenIcon}\n                        </div>`}\n                  </div>`}\n            </div>\n          </div>\n        </div>\n        ${repeat(this.columns, column => column.id, (column, index) => {\n            const style = styleMap({\n                width: `${column.width}px`,\n            });\n            const isEditing = this._editingColumnId === column.id && !this.readonly;\n            const isChangingColumnType = this._changingColumnTypeId === column.id;\n            return html `\n              <div class=\"affine-database-column database-cell\" style=${style}>\n                <div\n                  class=\"affine-database-column-content ${isEditing\n                ? 'edit'\n                : ''}\"\n                  data-column-id=\"${column.id}\"\n                  @click=${(event) => this._onShowEditColumnPopup(event.target, column, index + 1)}\n                >\n                  <div class=\"affine-database-column-text ${column.type}\">\n                    <div\n                      class=\"affine-database-column-type-icon ${isEditing\n                ? 'edit'\n                : ''} ${isChangingColumnType ? 'active' : ''}\"\n                      @click=${(e) => this._onShowColumnTypePopup(e, column.id, column)}\n                    >\n                      ${columnTypeIconMap[column.type]}\n                    </div>\n                    ${isEditing\n                ? html `<div class=\"affine-database-column-text-content\">\n                          <input\n                            class=\"affine-database-column-input\"\n                            value=${column.name}\n                            @keydown=${(event) => this._onKeydown(event, 'normal', column)}\n                            @pointerdown=${(event) => event.stopPropagation()}\n                          />\n                          <div\n                            class=\"affine-database-column-text-save-icon\"\n                            @click=${(event) => {\n                    event.stopPropagation();\n                    this._saveColumnTitle('normal', column);\n                }}\n                          >\n                            ${DatabaseDone}\n                          </div>\n                        </div>`\n                : html `<div class=\"affine-database-column-text-content\">\n                          <div class=\"affine-database-column-text-input\">\n                            ${column.name}\n                          </div>\n                          ${this.readonly\n                    ? null\n                    : html `<div\n                                class=\"affine-database-column-text-icon\"\n                                @click=${(e) => this._onEditColumnTitle(e, column.id)}\n                              >\n                                ${PenIcon}\n                              </div>`}\n                        </div>`}\n                  </div>\n                  ${this.readonly\n                ? null\n                : html `<div\n                        draggable=\"true\"\n                        class=\"affine-database-column-move\"\n                      >\n                        ${DatabaseDragIcon}\n                      </div>`}\n                </div>\n                ${this.readonly\n                ? null\n                : html `<div\n                      class=\"affine-database-column-drag-handle ${this\n                    ._widthChangingIndex === index\n                    ? 'dragging'\n                    : ''}\"\n                    ></div>`}\n              </div>\n            `;\n        })}\n        <div class=\"affine-database-column database-cell add-column-button\">\n          ${this.readonly\n            ? null\n            : html `<div\n                  class=\"affine-database-column-drag-handle  ${this\n                ._widthChangingIndex === this.columns.length\n                ? 'dragging'\n                : ''}\"\n                ></div>\n                <div\n                  class=\"header-add-column-button\"\n                  @click=${this._onAddColumn}\n                >\n                  ${DatabaseAddColumn}\n                </div>`}\n        </div>\n        ${this.readonly\n            ? null\n            : html `<div\n              class=\"affine-database-add-column-button\"\n              data-test-id=\"affine-database-add-column-button\"\n              @click=${this._onAddColumn}\n            >\n              ${DatabaseAddColumn}\n            </div>`}\n      </div>\n    `;\n    }\n};\nDatabaseColumnHeader.styles = styles;\n__decorate([\n    property()\n], DatabaseColumnHeader.prototype, \"targetModel\", void 0);\n__decorate([\n    property()\n], DatabaseColumnHeader.prototype, \"columns\", void 0);\n__decorate([\n    property()\n], DatabaseColumnHeader.prototype, \"addColumn\", void 0);\n__decorate([\n    property()\n], DatabaseColumnHeader.prototype, \"columnRenderer\", void 0);\n__decorate([\n    state()\n], DatabaseColumnHeader.prototype, \"_editingColumnId\", void 0);\n__decorate([\n    state()\n], DatabaseColumnHeader.prototype, \"_changingColumnTypeId\", void 0);\n__decorate([\n    query('.affine-database-column-input')\n], DatabaseColumnHeader.prototype, \"_titleColumnInput\", void 0);\n__decorate([\n    query('.affine-database-column-header')\n], DatabaseColumnHeader.prototype, \"_headerContainer\", void 0);\n__decorate([\n    query('.affine-database-add-column-button')\n], DatabaseColumnHeader.prototype, \"_addColumnButton\", void 0);\n__decorate([\n    query('.header-add-column-button')\n], DatabaseColumnHeader.prototype, \"_headerAddColumnButton\", void 0);\n__decorate([\n    state()\n], DatabaseColumnHeader.prototype, \"_widthChangingIndex\", void 0);\nDatabaseColumnHeader = __decorate([\n    customElement('affine-database-column-header')\n], DatabaseColumnHeader);\nexport { DatabaseColumnHeader };\n//# sourceMappingURL=column-header.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { property } from 'lit/decorators.js';\nexport class TableViewCell extends ShadowlessElement {\n}\nexport class DatabaseCellElement extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this.cell = null;\n    }\n}\n__decorate([\n    property()\n], DatabaseCellElement.prototype, \"rowHost\", void 0);\n__decorate([\n    property()\n], DatabaseCellElement.prototype, \"databaseModel\", void 0);\n__decorate([\n    property()\n], DatabaseCellElement.prototype, \"rowModel\", void 0);\n__decorate([\n    property()\n], DatabaseCellElement.prototype, \"column\", void 0);\n__decorate([\n    property()\n], DatabaseCellElement.prototype, \"cell\", void 0);\nexport function defineColumnRenderer(type, propertyCreator, defaultValue, components, config) {\n    return {\n        displayName: config.displayName,\n        type,\n        propertyCreator,\n        components,\n        defaultValue,\n    };\n}\nexport class ColumnRendererHelper {\n    constructor() {\n        this._columns = new Map();\n    }\n    register(renderer) {\n        const columns = this._columns;\n        if (columns.has(renderer.type)) {\n            throw new Error('cannot register twice for ' + renderer.type);\n        }\n        columns.set(renderer.type, renderer);\n    }\n    get(type) {\n        const renderer = this._columns.get(type);\n        if (!renderer) {\n            throw new Error('cannot find renderer');\n        }\n        return renderer;\n    }\n    list() {\n        return [...this._columns.values()];\n    }\n}\n//# sourceMappingURL=register.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { html } from 'lit/static-html.js';\nimport { onClickOutside } from '../../utils.js';\nimport { DatabaseCellElement } from '../register.js';\n/** affine-database-cell-container padding */\nconst CELL_PADDING = 8;\nlet DatabaseCellContainer = class DatabaseCellContainer extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this._isEditing = false;\n        this._onClick = (event) => {\n            if (this.readonly)\n                return;\n            this._isEditing = true;\n            this.removeEventListener('click', this._onClick);\n            setTimeout(() => {\n                onClickOutside(this, () => {\n                    this.addEventListener('click', this._onClick);\n                    this._isEditing = false;\n                }, 'mousedown');\n            });\n        };\n        this.setEditing = (isEditing) => {\n            this._isEditing = isEditing;\n            if (!this._isEditing) {\n                setTimeout(() => {\n                    this.addEventListener('click', this._onClick);\n                });\n            }\n        };\n        this.setHeight = (height) => {\n            this.style.height = `${height + CELL_PADDING * 2}px`;\n        };\n    }\n    get readonly() {\n        return this.databaseModel.page.readonly;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const disposables = this._disposables;\n        disposables.addFromEvent(this, 'click', this._onClick);\n    }\n    firstUpdated() {\n        this.setAttribute('data-block-is-database-input', 'true');\n        this.setAttribute('data-row-id', this.rowModel.id);\n        this.setAttribute('data-column-id', this.column.id);\n    }\n    setValue(value, option = { captureSync: true }) {\n        queueMicrotask(() => {\n            if (option.captureSync) {\n                this.databaseModel.page.captureSync();\n            }\n            this.databaseModel.updateCell(this.rowModel.id, {\n                columnId: this.column.id,\n                value,\n            });\n            this.databaseModel.applyColumnUpdate();\n            this.requestUpdate();\n        });\n    }\n    updateColumnProperty(apply) {\n        const newProperty = apply(this.column);\n        this.databaseModel.page.captureSync();\n        this.databaseModel.updateColumn({\n            ...this.column,\n            ...newProperty,\n        });\n    }\n    /* eslint-disable lit/binding-positions, lit/no-invalid-html */\n    render() {\n        const renderer = this.columnRenderer.get(this.column.type);\n        const cell = this.databaseModel.getCell(this.rowModel.id, this.column.id);\n        if (!this.readonly &&\n            this._isEditing &&\n            renderer.components.CellEditing !== null) {\n            const editingTag = renderer.components.CellEditing.tag;\n            return html `\n        <${editingTag}\n          data-is-editing-cell=\"true\"\n          .rowHost=${this}\n          .databaseModel=${this.databaseModel}\n          .rowModel=${this.rowModel}\n          .column=${this.column}\n          .cell=${cell}\n        ></${editingTag}>\n      `;\n        }\n        const previewTag = renderer.components.Cell.tag;\n        return html `\n      <${previewTag}\n        .rowHost=${this}\n        .databaseModel=${this.databaseModel}\n        .rowModel=${this.rowModel}\n        .column=${this.column}\n        .cell=${cell}\n      ></${previewTag}>\n    `;\n    }\n};\nDatabaseCellContainer.styles = css `\n    affine-database-cell-container {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      padding: 0 ${CELL_PADDING}px;\n      border-right: 1px solid var(--affine-border-color);\n    }\n\n    affine-database-cell-container * {\n      box-sizing: border-box;\n    }\n  `;\n__decorate([\n    state()\n], DatabaseCellContainer.prototype, \"_isEditing\", void 0);\n__decorate([\n    property()\n], DatabaseCellContainer.prototype, \"columnRenderer\", void 0);\nDatabaseCellContainer = __decorate([\n    customElement('affine-database-cell-container')\n], DatabaseCellContainer);\nexport { DatabaseCellContainer };\n//# sourceMappingURL=cell-container.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ArrowDownIcon, CopyIcon, DatabaseKanbanViewIcon, DatabaseTableViewIcon, DeleteIcon, } from '@blocksuite/global/config';\nimport { createPopper } from '@popperjs/core';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { copyBlocks } from '../../../../__internal__/clipboard/utils/commons.js';\nimport { toast } from '../../../../components/toast.js';\nimport { isDivider } from '../../../utils.js';\nimport { actionStyles } from '../edit-column-popup/styles.js';\nconst toolbarActions = [\n    {\n        type: 'database-type',\n        text: 'Database type',\n        icon: DatabaseTableViewIcon,\n    },\n    {\n        type: 'copy',\n        text: 'Copy',\n        icon: CopyIcon,\n    },\n    {\n        type: 'divider',\n    },\n    {\n        type: 'delete-database',\n        text: 'Delete database',\n        icon: DeleteIcon,\n    },\n];\nconst databaseTypes = [\n    {\n        type: 'table',\n        text: 'Table view',\n        icon: DatabaseTableViewIcon,\n    },\n    {\n        type: 'kanban',\n        text: 'Kanban view',\n        icon: DatabaseKanbanViewIcon,\n    },\n];\nlet DatabaseTypePopup = class DatabaseTypePopup extends LitElement {\n    render() {\n        return html `\n      <div class=\"affine-database-type-popup\">\n        <div class=\"action database-type\">\n          <div class=\"action-content\"><span>Database type</span></div>\n        </div>\n        <div class=\"action-divider\"></div>\n        ${databaseTypes.map(column => {\n            const isKanban = column.type === 'kanban';\n            const selected = column.type === this.dbType && !isKanban;\n            return html `\n            <div\n              class=\"action ${column.type} ${selected\n                ? 'selected'\n                : ''} ${isKanban ? 'disabled' : ''}\"\n            >\n              <div class=\"action-content\">\n                ${column.icon}<span>${column.text}</span>\n              </div>\n            </div>\n          `;\n        })}\n      </div>\n    `;\n    }\n};\nDatabaseTypePopup.styles = css `\n    :host {\n      width: 200px;\n      padding: 8px;\n      border: 1px solid var(--affine-border-color);\n      border-radius: 8px;\n      background: var(--affine-background-primary-color);\n      box-shadow: 0px 0px 12px rgba(66, 65, 73, 0.14),\n        inset 0px 0px 0px 0.5px var(--affine-border-color);\n    }\n    :host * {\n      box-sizing: border-box;\n    }\n    ${actionStyles}\n    .action > svg {\n      width: 16px;\n      height: 16px;\n      fill: var(--affine-icon-color);\n    }\n    .database-type {\n      height: 30px;\n      padding: 0;\n      color: var(--affine-text-secondary-color);\n      font-size: 14px;\n      cursor: unset;\n    }\n    .database-type:hover {\n      background: none;\n    }\n    .selected {\n      color: var(--affine-text-emphasis-color);\n      background: rgba(0, 0, 0, 0.02);\n    }\n    .selected svg {\n      color: var(--affine-text-emphasis-color);\n    }\n    .selected.table-view svg {\n      fill: var(--affine-text-emphasis-color);\n    }\n    .action.disabled {\n      cursor: not-allowed;\n    }\n    .action.disabled:hover {\n      background: unset;\n    }\n  `;\n__decorate([\n    property()\n], DatabaseTypePopup.prototype, \"dbType\", void 0);\nDatabaseTypePopup = __decorate([\n    customElement('affine-database-type-popup')\n], DatabaseTypePopup);\nlet ToolbarActionPopup = class ToolbarActionPopup extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._onActionClick = (event, actionType) => {\n            event.stopPropagation();\n            if (actionType === 'delete-database') {\n                const models = [this.targetModel, ...this.targetModel.children];\n                models.forEach(model => this.targetModel.page.deleteBlock(model));\n            }\n            else if (actionType === 'copy') {\n                copyBlocks({\n                    type: 'Block',\n                    models: [this.targetModel],\n                    startOffset: 0,\n                    endOffset: 0,\n                });\n                toast('Copied Database to clipboard');\n            }\n            this.close();\n        };\n        this._onShowDatabaseType = () => {\n            if (this._databaseTypePopup)\n                return;\n            this._databaseTypePopup = new DatabaseTypePopup();\n            this._databaseTypePopup.dbType = 'table';\n            this._container.appendChild(this._databaseTypePopup);\n            createPopper(this._container, this._databaseTypePopup, {\n                placement: 'right-start',\n                modifiers: [\n                    {\n                        name: 'offset',\n                        options: {\n                            offset: [-9, 12],\n                        },\n                    },\n                ],\n            });\n        };\n        this._onHideDatabaseType = () => {\n            if (this._databaseTypePopup) {\n                this._databaseTypePopup?.remove();\n                this._databaseTypePopup = null;\n            }\n        };\n        this._renderActions = () => {\n            return html `\n      ${toolbarActions.map(action => {\n                if (isDivider(action)) {\n                    return html `<div class=\"action-divider\"></div>`;\n                }\n                const onMouseOver = action.type === 'database-type'\n                    ? this._onShowDatabaseType\n                    : this._onHideDatabaseType;\n                return html `\n          <div\n            class=\"action ${action.type}\"\n            @mouseover=${onMouseOver}\n            @click=${(event) => this._onActionClick(event, action.type)}\n          >\n            <div class=\"action-content\">\n              ${action.icon}<span>${action.text}</span>\n            </div>\n            ${action.type === 'database-type' ? ArrowDownIcon : html ``}\n          </div>\n        `;\n            })}\n    `;\n        };\n    }\n    render() {\n        return html `<div class=\"affine-database-toolbar-action-popup\">\n      ${this._renderActions()}\n    </div>`;\n    }\n};\nToolbarActionPopup.styles = css `\n    :host {\n      width: 200px;\n      height: 128px;\n      padding: 8px;\n      border: 1px solid var(--affine-border-color);\n      border-radius: 8px;\n      box-shadow: 0px 0px 12px rgba(66, 65, 73, 0.14),\n        inset 0px 0px 0px 0.5px var(--affine-border-color);\n      z-index: var(--affine-z-index-popover);\n      background: var(--affine-white);\n    }\n    :host * {\n      box-sizing: border-box;\n    }\n    ${actionStyles}\n    .action-content > svg {\n      width: 20px;\n      height: 20px;\n      fill: var(--affine-icon-color);\n    }\n    .action > svg {\n      width: 16px;\n      height: 16px;\n      fill: var(--affine-icon-color);\n    }\n    .database-type > svg {\n      transform: rotate(-90deg);\n    }\n  `;\n__decorate([\n    property()\n], ToolbarActionPopup.prototype, \"close\", void 0);\n__decorate([\n    query('.affine-database-toolbar-action-popup')\n], ToolbarActionPopup.prototype, \"_container\", void 0);\nToolbarActionPopup = __decorate([\n    customElement('affine-database-toolbar-action-popup')\n], ToolbarActionPopup);\nexport { ToolbarActionPopup };\n//# sourceMappingURL=toolbar-action-popup.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { PlusIcon } from '@blocksuite/global/config';\nimport { ShadowlessElement } from '@blocksuite/lit';\nimport { DisposableGroup } from '@blocksuite/store';\nimport { assertExists } from '@blocksuite/store';\nimport { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { Point, Rect } from '../../../../std.js';\nlet NewRecordPreview = class NewRecordPreview extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this.offset = { x: 0, y: 0 };\n    }\n    render() {\n        return html `\n      <style>\n        affine-database-new-record-preview {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          position: fixed;\n          top: 0;\n          left: 0;\n          height: 32px;\n          width: 32px;\n          border: 1px solid var(--affine-border-color);\n          border-radius: 50%;\n          background: linear-gradient(\n              0deg,\n              rgba(96, 70, 254, 0.3),\n              rgba(96, 70, 254, 0.3)\n            ),\n            linear-gradient(\n              0deg,\n              var(--affine-hover-color),\n              var(--affine-hover-color)\n            ),\n            var(--affine-white);\n          box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.05),\n            0px 0px 0px 0.5px var(--affine-black-10);\n          cursor: none;\n          user-select: none;\n          pointer-events: none;\n          caret-color: transparent;\n          z-index: 100;\n        }\n        affine-database-new-record-preview svg {\n          width: 16px;\n          height: 16px;\n        }\n        affine-database-new-record-preview path {\n          fill: var(--affine-brand-color);\n        }\n      </style>\n      ${PlusIcon}\n    `;\n    }\n};\n__decorate([\n    property()\n], NewRecordPreview.prototype, \"offset\", void 0);\nNewRecordPreview = __decorate([\n    customElement('affine-database-new-record-preview')\n], NewRecordPreview);\nexport function initAddNewRecordHandlers(element, container, addRow) {\n    let dragConfig = null;\n    let dragPreview = null;\n    const database = container.closest('affine-database');\n    if (!database)\n        return;\n    const rowContainer = database.querySelector('.affine-database-block-rows');\n    assertExists(rowContainer);\n    const indicator = document.querySelector('affine-drag-indicator');\n    if (!indicator) {\n        const indicator = (document.createElement('affine-drag-indicator'));\n        document.body.appendChild(indicator);\n    }\n    const onDragStart = (event) => {\n        event.stopPropagation();\n        assertExists(event.dataTransfer);\n        event.dataTransfer.effectAllowed = 'move';\n        dragPreview = new NewRecordPreview();\n        dragPreview.style.opacity = '0';\n        event.dataTransfer?.setDragImage(dragPreview, 0, 0);\n        container.appendChild(dragPreview);\n        const rows = Array.from(rowContainer.querySelectorAll('.affine-database-block-row'));\n        dragConfig = {\n            index: -1,\n            rows,\n        };\n    };\n    const onDrag = (event) => {\n        if (!dragConfig)\n            return;\n        if (!dragPreview)\n            return;\n        if (dragPreview.style.opacity !== '1') {\n            dragPreview.style.opacity = '1';\n        }\n        const x = event.clientX;\n        const y = event.clientY;\n        dragPreview.style.transform = `translate(${x}px, ${y}px)`;\n        const point = new Point(x, y);\n        const row = getClosestRow(point, dragConfig.rows);\n        assertExists(indicator);\n        if (row) {\n            const { top, bottom } = row.element.getBoundingClientRect();\n            const rectTop = row.isLast ? bottom : top;\n            const { width: databaseWidth, left: databaseLeft } = database.getBoundingClientRect();\n            indicator.rect = Rect.fromLWTH(databaseLeft, databaseWidth, rectTop, 3);\n            dragConfig.index = row.insertRowIndex;\n        }\n        else {\n            indicator.rect = null;\n            dragConfig.index = -1;\n        }\n    };\n    const onDragEnd = () => {\n        if (!dragConfig)\n            return;\n        const { index } = dragConfig;\n        // clear data\n        dragConfig = null;\n        if (indicator)\n            indicator.rect = null;\n        if (dragPreview) {\n            dragPreview.remove();\n            dragPreview = null;\n        }\n        if (index !== -1) {\n            addRow(index);\n        }\n    };\n    const disposables = new DisposableGroup();\n    const stopPropagation = (e) => {\n        e.stopPropagation();\n    };\n    disposables.addFromEvent(element, 'pointerdown', stopPropagation);\n    disposables.addFromEvent(element, 'pointermove', stopPropagation);\n    disposables.addFromEvent(element, 'pointerup', stopPropagation);\n    disposables.addFromEvent(element, 'dragstart', onDragStart);\n    disposables.addFromEvent(element, 'drag', onDrag);\n    disposables.addFromEvent(element, 'dragend', onDragEnd);\n    return disposables;\n}\nfunction getClosestRow(point, rows) {\n    const length = rows.length;\n    for (let i = 0; i < length; i++) {\n        const row = rows[i];\n        const { top, bottom } = row.getBoundingClientRect();\n        if (point.y <= top + 20 && point.y >= top - 20) {\n            return {\n                element: row,\n                insertRowIndex: i,\n                isLast: false,\n            };\n        }\n        // last row\n        if (i === length - 1) {\n            if (point.y >= bottom - 20 && point.y <= bottom + 20) {\n                return {\n                    element: row,\n                    insertRowIndex: i + 1,\n                    isLast: true,\n                };\n            }\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport './toolbar-action-popup.js';\nimport { DatabaseSearchClose, DatabaseSearchIcon, MoreHorizontalIcon, PlusIcon, } from '@blocksuite/global/config';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { DisposableGroup } from '@blocksuite/store';\nimport { createPopper } from '@popperjs/core';\nimport { css, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { stopPropagation } from '../../../../page-block/edgeless/utils.js';\nimport { onClickOutside } from '../../../utils.js';\nimport { SearchState } from '../../types.js';\nimport { initAddNewRecordHandlers } from './index.js';\nimport { ToolbarActionPopup } from './toolbar-action-popup.js';\nconst styles = css `\n  .affine-database-toolbar {\n    display: none;\n    align-items: center;\n    gap: 26px;\n  }\n  .affine-database-toolbar-search svg,\n  .affine-database-toolbar svg {\n    width: 16px;\n    height: 16px;\n    fill: var(--affine-icon-color);\n  }\n  .affine-database-toolbar-item {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n  }\n  .search-container.hidden {\n    overflow: hidden;\n  }\n  .affine-database-toolbar-item.more-action {\n    width: 32px;\n    height: 32px;\n    border-radius: 4px;\n  }\n  .affine-database-toolbar-item.more-action:hover,\n  .more-action.active {\n    background: var(--affine-hover-color);\n  }\n  .affine-database-search-container {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    width: 16px;\n    height: 32px;\n    padding: 8px 0;\n    border-radius: 8px;\n    transition: all 0.3s ease;\n  }\n  .affine-database-search-container > svg {\n    min-width: 16px;\n    min-height: 16px;\n  }\n  .search-container-expand {\n    width: 138px;\n    padding: 8px 12px;\n    background-color: var(--affine-hover-color);\n  }\n  .search-input-container {\n    display: flex;\n    align-items: center;\n  }\n  .search-input-container > .close-icon {\n    display: flex;\n    align-items: center;\n  }\n  .close-icon .code {\n    width: 31px;\n    height: 18px;\n    padding: 2px 6px;\n    border-radius: 4px;\n    background: var(--affine-white-10);\n  }\n  .affine-database-search-input-icon {\n    display: inline-flex;\n  }\n  .affine-database-search-input {\n    flex: 1;\n    height: 16px;\n    width: 80px;\n    border: none;\n    font-family: var(--affine-font-family);\n    font-size: var(--affine-font-sm);\n    box-sizing: border-box;\n    color: inherit;\n    background: transparent;\n  }\n  .affine-database-search-input:focus {\n    outline: none;\n  }\n  .affine-database-search-input::placeholder {\n    color: var(--affine-placeholder-color);\n    font-size: var(--affine-font-sm);\n  }\n\n  .affine-database-toolbar-item.new-record {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    width: 120px;\n    height: 32px;\n    padding: 6px 8px;\n    border-radius: 8px;\n    font-size: 14px;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.05),\n      0px 0px 0px 0.5px var(--affine-black-10);\n    background: linear-gradient(\n        0deg,\n        var(--affine-hover-color),\n        var(--affine-hover-color)\n      ),\n      var(--affine-white);\n  }\n  .new-record > tool-tip {\n    max-width: 280px;\n  }\n\n  .show-toolbar {\n    display: flex;\n  }\n`;\nlet DatabaseToolbar = class DatabaseToolbar extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this._recordAddDisposables = new DisposableGroup();\n        this._onSearch = (event) => {\n            const el = event.target;\n            const inputValue = el.value.trim();\n            this.setSearchState(SearchState.Searching);\n            if (inputValue === '') {\n                this.setSearchState(SearchState.SearchInput);\n            }\n            const { _databaseMap } = this;\n            const existingRowIds = Object.keys(_databaseMap).filter(key => {\n                return (_databaseMap[key].findIndex(item => item.toLocaleLowerCase().includes(inputValue.toLocaleLowerCase())) > -1);\n            });\n            const filteredRowIds = this.targetModel.children\n                .filter(child => existingRowIds.includes(child.id))\n                .map(child => child.id);\n            this.setFilteredRowIds(filteredRowIds);\n            // When deleting the search content, the rich-text in the database row will automatically get the focus,\n            // causing the search box to blur. So, here we manually make it focus.\n            requestAnimationFrame(() => el.focus());\n        };\n        this._onSearchKeydown = (event) => {\n            if (event.key === 'Escape') {\n                if (this._searchInput.value) {\n                    this._searchInput.value = '';\n                    this.setSearchState(SearchState.SearchInput);\n                }\n                else {\n                    this._resetSearchStatus();\n                    this._searchContainer.classList.add('hidden');\n                }\n            }\n        };\n        this._clearSearch = (event) => {\n            event.stopPropagation();\n            this._searchInput.value = '';\n            this.setSearchState(SearchState.SearchInput);\n        };\n        this._onShowSearch = () => {\n            this.setSearchState(SearchState.SearchInput);\n            const removeListener = onClickOutside(this._searchContainer, () => {\n                if (this.searchState !== SearchState.Searching) {\n                    this._searchContainer.classList.add('hidden');\n                    this.setSearchState(SearchState.SearchIcon);\n                    removeListener();\n                }\n            }, 'click', true);\n        };\n        this._onFocusSearchInput = () => {\n            if (this.searchState === SearchState.SearchInput) {\n                this._searchInput.focus();\n                this._searchContainer.classList.remove('hidden');\n            }\n            else {\n                this._searchInput.blur();\n            }\n        };\n        this._onShowAction = () => {\n            if (this.readonly)\n                return;\n            if (this._toolbarAction) {\n                this._closeToolbarAction();\n                return;\n            }\n            this.setSearchState(SearchState.Action);\n            this._toolbarAction = new ToolbarActionPopup();\n            this._toolbarAction.targetModel = this.targetModel;\n            this._toolbarAction.close = this._closeToolbarAction;\n            this._moreActionContainer.appendChild(this._toolbarAction);\n            createPopper(this._moreActionContainer, this._toolbarAction, {\n                placement: 'bottom',\n            });\n            onClickOutside(this._moreActionContainer, () => {\n                this._closeToolbarAction();\n            }, 'mousedown');\n        };\n        this._closeToolbarAction = () => {\n            this._toolbarAction?.remove();\n            this._toolbarAction = undefined;\n        };\n        this._resetSearchStatus = () => {\n            this._searchInput.value = '';\n            this.setFilteredRowIds([]);\n            this.setSearchState(SearchState.SearchIcon);\n        };\n        this._onAddNewRecord = () => {\n            if (this.readonly)\n                return;\n            this.addRow(0);\n        };\n    }\n    get readonly() {\n        return this.targetModel.page.readonly;\n    }\n    firstUpdated() {\n        if (!this.readonly) {\n            this._initAddRecordHandlers();\n        }\n    }\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        if (!this.readonly) {\n            this._initAddRecordHandlers();\n        }\n    }\n    _initAddRecordHandlers() {\n        // remove previous handlers\n        this._recordAddDisposables.dispose();\n        const disposables = initAddNewRecordHandlers(this._newRecord, this, this.addRow);\n        if (disposables) {\n            // bind new handlers\n            this._recordAddDisposables = disposables;\n        }\n    }\n    get _databaseMap() {\n        const databaseMap = {};\n        for (const child of this.targetModel.children) {\n            // The first value is the text context of the row block\n            databaseMap[child.id] = [child.text?.toString() ?? ''];\n        }\n        const { cells } = this.targetModel;\n        const rowIds = this.targetModel.children.map(child => child.id);\n        rowIds.forEach(rowId => {\n            // The map containing all columns related to this row (block)\n            const columnMap = cells[rowId];\n            if (!columnMap)\n                return;\n            // Flatten the columnMap into a list of values\n            const columnValues = Object.keys(columnMap).map(key => {\n                const value = columnMap[key].value;\n                if (Array.isArray(value)) {\n                    return value.map(item => item.value);\n                }\n                return columnMap[key].value + '';\n            });\n            databaseMap[rowId].push(...columnValues.flat());\n        });\n        return databaseMap;\n    }\n    render() {\n        const expandSearch = this.searchState === SearchState.SearchInput ||\n            this.searchState === SearchState.Searching;\n        const isActiveMoreAction = this.searchState === SearchState.Action;\n        const onSearchIconClick = expandSearch ? undefined : this._onShowSearch;\n        const closeIcon = this._searchInput\n            ? this._searchInput.value === ''\n                ? null\n                : DatabaseSearchClose\n            : null;\n        const searchTool = html `\n      <div\n        class=\"affine-database-search-container ${expandSearch\n            ? 'search-container-expand'\n            : ''}\"\n        @click=${onSearchIconClick}\n        @transitionend=${this._onFocusSearchInput}\n      >\n        <div class=\"affine-database-search-input-icon\">\n          ${DatabaseSearchIcon}\n        </div>\n        <div class=\"search-input-container\">\n          <input\n            placeholder=\"Search...\"\n            class=\"affine-database-search-input\"\n            @input=${this._onSearch}\n            @click=${(event) => event.stopPropagation()}\n            @keydown=${this._onSearchKeydown}\n            @pointerdown=${stopPropagation}\n          />\n          <div class=\"has-tool-tip close-icon\" @click=${this._clearSearch}>\n            ${closeIcon}\n            <tool-tip inert arrow tip-position=\"top\" role=\"tooltip\">\n              <span class=\"code\">Esc</span> to clear all\n            </tool-tip>\n          </div>\n        </div>\n      </div>\n    `;\n        return html `<div\n      class=\"affine-database-toolbar ${this.hoverState ? 'show-toolbar' : ''}\"\n    >\n      <div class=\"affine-database-toolbar-item search-container hidden\">\n        ${searchTool}\n      </div>\n      ${this.readonly\n            ? null\n            : html `<div\n              class=\"affine-database-toolbar-item more-action ${isActiveMoreAction\n                ? 'active'\n                : ''}\"\n              @click=${this._onShowAction}\n            >\n              ${MoreHorizontalIcon}\n            </div>\n            <div\n              class=\"has-tool-tip affine-database-toolbar-item new-record\"\n              draggable=\"true\"\n              @click=${this._onAddNewRecord}\n            >\n              ${PlusIcon}<span>New Record</span>\n              <tool-tip inert arrow tip-position=\"top\" role=\"tooltip\"\n                >You can drag this button to the desired location and add a\n                record\n              </tool-tip>\n            </div>`}\n    </div>`;\n    }\n};\nDatabaseToolbar.styles = styles;\n__decorate([\n    property()\n], DatabaseToolbar.prototype, \"targetModel\", void 0);\n__decorate([\n    property()\n], DatabaseToolbar.prototype, \"hoverState\", void 0);\n__decorate([\n    property()\n], DatabaseToolbar.prototype, \"searchState\", void 0);\n__decorate([\n    property()\n], DatabaseToolbar.prototype, \"addRow\", void 0);\n__decorate([\n    property()\n], DatabaseToolbar.prototype, \"setSearchState\", void 0);\n__decorate([\n    property()\n], DatabaseToolbar.prototype, \"setFilteredRowIds\", void 0);\n__decorate([\n    query('.affine-database-search-input')\n], DatabaseToolbar.prototype, \"_searchInput\", void 0);\n__decorate([\n    query('.more-action')\n], DatabaseToolbar.prototype, \"_moreActionContainer\", void 0);\n__decorate([\n    query('.search-container')\n], DatabaseToolbar.prototype, \"_searchContainer\", void 0);\n__decorate([\n    query('.new-record')\n], DatabaseToolbar.prototype, \"_newRecord\", void 0);\nDatabaseToolbar = __decorate([\n    customElement('affine-database-toolbar')\n], DatabaseToolbar);\nexport { DatabaseToolbar };\n//# sourceMappingURL=toolbar.js.map","import { VEditor } from '@blocksuite/virgo';\nimport * as Y from 'yjs';\nimport { activeEditorManager } from '../../__internal__/utils/active-editor-manager.js';\nclass VirgoInput {\n    constructor(options) {\n        this.yDoc = new Y.Doc();\n        this._active = true;\n        this.type = 'default';\n        this.maxLength = Infinity;\n        const { rootElement, yText = this.yDoc.getText(VirgoInput.YTEXT_NAME), maxLength, type, } = options;\n        const text = yText.toString();\n        if (maxLength) {\n            this.maxLength = maxLength;\n            if (text.length > maxLength) {\n                throw new Error('The text exceeds the limit length.');\n            }\n        }\n        if (type) {\n            this.type = type;\n        }\n        if (yText instanceof Y.Text) {\n            if (yText.doc) {\n                this.yText = yText;\n                this.yDoc = yText.doc;\n            }\n            else {\n                throw new Error('Y.Text should be binded to Y.Doc.');\n            }\n        }\n        else {\n            this.yText = this.yDoc.getText(VirgoInput.YTEXT_NAME);\n            this.yText.insert(0, text);\n        }\n        this.undoManager = new Y.UndoManager(this.yText, {\n            trackedOrigins: new Set([this.yDoc.clientID]),\n        });\n        this.undoManager.on('stack-item-added', (event) => {\n            const vRange = this.vEditor.getVRange();\n            event.stackItem.meta.set('v-range', vRange);\n        });\n        this.undoManager.on('stack-item-popped', (event) => {\n            const vRange = event.stackItem.meta.get('v-range');\n            if (vRange) {\n                this.vEditor.setVRange(vRange);\n            }\n        });\n        this.vEditor = new VEditor(this.yText, {\n            active: () => activeEditorManager.isActive(options.rootElement) && this.active,\n        });\n        this.vEditor.mount(rootElement);\n        this.vEditor.bindHandlers({\n            paste: (event) => {\n                event.stopPropagation();\n                const data = event.clipboardData\n                    ?.getData('text/plain')\n                    ?.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n                if (!data) {\n                    return;\n                }\n                const vRange = this.vEditor.getVRange();\n                if (vRange) {\n                    if (vRange.length > 0) {\n                        this.vEditor.yText.delete(vRange.index, vRange.length);\n                    }\n                    const length = this.vEditor.yText.length;\n                    const restLength = this.maxLength - length;\n                    if (restLength <= 0) {\n                        return;\n                    }\n                    const text = data.length > restLength ? data.slice(0, restLength) : data;\n                    this.vEditor.insertText(vRange, text);\n                    this.vEditor.setVRange({\n                        index: vRange.index + text.length,\n                        length: 0,\n                    });\n                    this.undoManager.stopCapturing();\n                }\n            },\n            virgoInput: ctx => {\n                const vRange = this.vEditor.getVRange();\n                if (!vRange) {\n                    return ctx;\n                }\n                let originalText = this.vEditor.yText.toString();\n                if (vRange.length > 0) {\n                    originalText = `${originalText.substring(0, vRange.index)}${originalText.substring(vRange.index + vRange.length)}`;\n                }\n                const tmpText = `${originalText.substring(0, vRange.index)}${ctx.data ?? ''}${originalText.substring(vRange.index)}`;\n                let flag = true;\n                if (tmpText.length >= this.maxLength) {\n                    ctx.skipDefault = true;\n                    flag = false;\n                }\n                if (flag) {\n                    this.undoManager.stopCapturing();\n                }\n                return ctx;\n            },\n            virgoCompositionEnd: ctx => {\n                const vRange = this.vEditor.getVRange();\n                if (!vRange) {\n                    return ctx;\n                }\n                let originalText = this.vEditor.yText.toString();\n                if (vRange.length > 0) {\n                    originalText = `${originalText.substring(0, vRange.index)}${originalText.substring(vRange.index + vRange.length)}`;\n                }\n                const tmpText = `${originalText.substring(0, vRange.index)}${ctx.data}${originalText.substring(vRange.index)}`;\n                let flag = true;\n                if (tmpText.length >= this.maxLength) {\n                    // We should not use `skipDefault` because we need to clear text node from IME.\n                    ctx.data = '';\n                    flag = false;\n                }\n                if (flag) {\n                    this.undoManager.stopCapturing();\n                }\n                return ctx;\n            },\n            keydown: e => {\n                if (e instanceof KeyboardEvent &&\n                    (e.ctrlKey || e.metaKey) &&\n                    (e.key === 'z' || e.key === 'Z')) {\n                    e.preventDefault();\n                    if (e.shiftKey) {\n                        this.redo();\n                    }\n                    else {\n                        this.undo();\n                    }\n                }\n            },\n        });\n        rootElement.addEventListener('blur', () => {\n            if (this.type === 'number') {\n                const text = this.yText.toString();\n                const num = parseFloat(text);\n                const transformedText = isNaN(num) ? '' : num.toString();\n                if (text !== transformedText) {\n                    this.setActive(false);\n                    this.setValue(transformedText);\n                    // prevent vRange applied after value changed\n                    requestAnimationFrame(() => {\n                        this.setActive(true);\n                    });\n                }\n            }\n        });\n    }\n    get value() {\n        return this.yText.toString();\n    }\n    get active() {\n        return this._active;\n    }\n    setActive(value) {\n        this._active = value;\n    }\n    setValue(str) {\n        if (str.length > this.maxLength) {\n            throw new Error('The text exceeds the limit length.');\n        }\n        this.yText.delete(0, this.yText.length);\n        this.yText.insert(0, str);\n        this.vEditor.setVRange({\n            index: str.length,\n            length: 0,\n        });\n        this.undoManager.stopCapturing();\n    }\n    undo() {\n        this.undoManager.undo();\n    }\n    redo() {\n        this.undoManager.redo();\n    }\n}\nVirgoInput.YTEXT_NAME = 'YTEXT_NAME';\nexport { VirgoInput };\n//# sourceMappingURL=virgo-input.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { setupVirgoScroll } from '../../../__internal__/utils/virgo.js';\nimport { VirgoInput } from '../../../components/virgo-input/virgo-input.js';\nimport { DATABASE_TITLE_LENGTH, DEFAULT_TITLE } from '../consts.js';\nlet DatabaseTitle = class DatabaseTitle extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this._titleVInput = null;\n        this._handleKeyDown = (event) => {\n            if (event.key === 'Enter') {\n                // prevent insert v-line\n                event.preventDefault();\n                // insert new row\n                this.addRow(0);\n                return;\n            }\n        };\n        this._onTitleFocus = () => {\n            this._titleContainer.classList.remove('ellipsis');\n            this._titleVInput?.setActive(true);\n            if (this._titleVInput?.value === 'Database') {\n                this._titleVInput?.setValue('');\n            }\n        };\n        this._onTitleBlur = () => {\n            this._titleContainer.classList.add('ellipsis');\n            this._titleVInput?.setActive(false);\n            if (this._titleVInput?.value === '') {\n                this._titleVInput?.setValue(DEFAULT_TITLE);\n            }\n        };\n    }\n    firstUpdated() {\n        this._initTitleVEditor();\n        const disposables = this._disposables;\n        disposables.addFromEvent(this._titleContainer, 'focus', this._onTitleFocus);\n        disposables.addFromEvent(this._titleContainer, 'blur', this._onTitleBlur);\n        // prevent block selection\n        const onStopPropagation = (event) => event.stopPropagation();\n        this._disposables.addFromEvent(this, 'pointerdown', onStopPropagation);\n        this._disposables.addFromEvent(this, 'pointermove', onStopPropagation);\n    }\n    _initTitleVEditor() {\n        this._titleVInput = new VirgoInput({\n            yText: this.targetModel.title.yText,\n            rootElement: this._titleContainer,\n            maxLength: DATABASE_TITLE_LENGTH,\n        });\n        setupVirgoScroll(this.targetModel.page, this._titleVInput.vEditor);\n        this._titleVInput.vEditor.setReadonly(this.targetModel.page.readonly);\n        this._titleContainer.addEventListener('keydown', this._handleKeyDown);\n        // for title placeholder\n        this.targetModel.title.yText.observe(() => {\n            this.requestUpdate();\n        });\n    }\n    render() {\n        const isEmpty = !this.targetModel.title || !this.targetModel.title.length;\n        return html `<div class=\"affine-database-title\">\n      <div\n        class=\"database-title ${isEmpty ? 'database-title-empty' : ''}\"\n        data-block-is-database-title=\"true\"\n        title=${this.targetModel.title.toString()}\n      ></div>\n    </div>`;\n    }\n};\nDatabaseTitle.styles = css `\n    .affine-database-title {\n      flex: 1;\n      max-width: 300px;\n      min-width: 300px;\n      height: 30px;\n    }\n\n    .database-title {\n      position: sticky;\n      width: 300px;\n      height: 30px;\n      font-size: 18px;\n      font-weight: 600;\n      line-height: 24px;\n      color: var(--affine-text-primary-color);\n      font-family: inherit;\n      /* overflow-x: scroll; */\n      overflow: hidden;\n      cursor: text;\n    }\n\n    .database-title [data-virgo-text='true'] {\n      display: block;\n      white-space: pre !important;\n    }\n\n    .database-title.ellipsis [data-virgo-text='true'] {\n      white-space: nowrap !important;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .database-title:focus {\n      outline: none;\n    }\n\n    .database-title:disabled {\n      background-color: transparent;\n    }\n\n    .database-title-empty::before {\n      content: 'Database';\n      color: var(--affine-placeholder-color);\n      position: absolute;\n      opacity: 0.5;\n    }\n  `;\n__decorate([\n    property()\n], DatabaseTitle.prototype, \"targetModel\", void 0);\n__decorate([\n    property()\n], DatabaseTitle.prototype, \"addRow\", void 0);\n__decorate([\n    query('.database-title')\n], DatabaseTitle.prototype, \"_titleContainer\", void 0);\nDatabaseTitle = __decorate([\n    customElement('affine-database-title')\n], DatabaseTitle);\nexport { DatabaseTitle };\n//# sourceMappingURL=database-title.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { literal } from 'lit/static-html.js';\nimport { checkboxChecked, checkboxUnchecked, } from '../../../../list-block/utils/icons.js';\nimport { DatabaseCellElement, defineColumnRenderer, } from '../../register.js';\nlet CheckboxCell = class CheckboxCell extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.cellType = 'checkbox';\n    }\n    firstUpdated() {\n        this._disposables.addFromEvent(this, 'click', this._onChange);\n    }\n    _onChange() {\n        const checked = !this.cell?.value;\n        this.rowHost.setValue(checked);\n    }\n    render() {\n        const checked = this.cell?.value ?? false;\n        const icon = checked ? checkboxChecked() : checkboxUnchecked();\n        return html `<div class=\"affine-database-checkbox-container\">\n      <div class=\"affine-database-checkbox checkbox ${checked && 'checked'}\">\n        ${icon}\n      </div>\n    </div>`;\n    }\n};\nCheckboxCell.tag = literal `affine-database-checkbox-cell`;\nCheckboxCell.styles = css `\n    affine-database-checkbox-cell {\n      display: block;\n      width: 100%;\n      height: 100%;\n      cursor: pointer;\n    }\n\n    .affine-database-checkbox-container {\n      height: 100%;\n    }\n\n    .affine-database-checkbox {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n    }\n  `;\nCheckboxCell = __decorate([\n    customElement('affine-database-checkbox-cell')\n], CheckboxCell);\nexport const CheckboxColumnRenderer = defineColumnRenderer('checkbox', () => ({}), () => false, {\n    Cell: CheckboxCell,\n    CellEditing: null,\n}, {\n    displayName: 'Checkbox',\n});\n//# sourceMappingURL=checkbox.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { html, literal } from 'lit/static-html.js';\nimport { DatabaseCellElement, defineColumnRenderer, } from '../../register.js';\nimport { SelectMode } from '../../types.js';\nlet MultiSelectCell = class MultiSelectCell extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.cellType = 'multi-select';\n    }\n    render() {\n        return html `\n      <affine-database-select-cell\n        .rowHost=${this.rowHost}\n        .databaseModel=${this.databaseModel}\n        .rowModel=${this.rowModel}\n        .column=${this.column}\n        .cell=${this.cell}\n      ></affine-database-select-cell>\n    `;\n    }\n};\nMultiSelectCell.styles = css `\n    :host {\n      width: 100%;\n    }\n  `;\nMultiSelectCell.tag = literal `affine-database-multi-select-cell`;\nMultiSelectCell = __decorate([\n    customElement('affine-database-multi-select-cell')\n], MultiSelectCell);\nlet MultiSelectCellEditing = class MultiSelectCellEditing extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.cellType = 'multi-select';\n    }\n    render() {\n        return html `\n      <affine-database-select-cell-editing\n        data-is-editing-cell=\"true\"\n        .rowHost=${this.rowHost}\n        .databaseModel=${this.databaseModel}\n        .rowModel=${this.rowModel}\n        .column=${this.column}\n        .cell=${this.cell}\n        .mode=${SelectMode.Multi}\n      ></affine-database-select-cell-editing>\n    `;\n    }\n};\nMultiSelectCellEditing.tag = literal `affine-database-multi-select-cell-editing`;\nMultiSelectCellEditing = __decorate([\n    customElement('affine-database-multi-select-cell-editing')\n], MultiSelectCellEditing);\nexport const MultiSelectColumnRenderer = defineColumnRenderer('multi-select', () => ({\n    selection: [],\n}), () => [], {\n    Cell: MultiSelectCell,\n    CellEditing: MultiSelectCellEditing,\n}, {\n    displayName: 'Multi Select',\n});\n//# sourceMappingURL=multi-select.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { assertExists } from '@blocksuite/store';\nimport { css, html } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\nimport { literal } from 'lit/static-html.js';\nimport { setupVirgoScroll } from '../../../../__internal__/utils/virgo.js';\nimport { VirgoInput } from '../../../../components/virgo-input/virgo-input.js';\nimport { DatabaseCellElement, defineColumnRenderer, } from '../../register.js';\nlet NumberCellEditing = class NumberCellEditing extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.cellType = 'number';\n        this._vInput = null;\n        this._onClick = () => {\n            this.databaseModel.page.captureSync();\n        };\n        this._onInitVEditor = () => {\n            let value;\n            if (!this.cell?.value) {\n                const yText = new this.databaseModel.page.YText('');\n                this.databaseModel.updateCell(this.rowModel.id, {\n                    columnId: this.column.id,\n                    value: yText,\n                });\n                value = yText;\n            }\n            else {\n                value = this.cell.value;\n            }\n            this._vInput = new VirgoInput({\n                yText: value,\n                rootElement: this._container,\n                type: 'number',\n            });\n            setupVirgoScroll(this.databaseModel.page, this.vEditor);\n            this._container.addEventListener('keydown', event => {\n                if (!this._vInput)\n                    return;\n                if (event.key === 'Enter') {\n                    if (event.shiftKey) {\n                        // soft enter\n                    }\n                    else {\n                        // exit editing\n                        this.rowHost.setEditing(false);\n                        this._container.blur();\n                    }\n                    event.preventDefault();\n                    return;\n                }\n            });\n        };\n    }\n    get vEditor() {\n        assertExists(this._vInput);\n        return this._vInput.vEditor;\n    }\n    firstUpdated() {\n        this._disposables.addFromEvent(this, 'click', this._onClick);\n        this._onInitVEditor();\n    }\n    render() {\n        return html `<div class=\"affine-database-number number virgo-editor\"></div>`;\n    }\n};\nNumberCellEditing.styles = css `\n    affine-database-number-cell-editing {\n      display: block;\n      width: 100%;\n      height: 100%;\n      cursor: text;\n    }\n\n    .affine-database-number {\n      display: flex;\n      align-items: center;\n      height: 100%;\n    }\n    .affine-database-number:focus {\n      outline: none;\n    }\n    .affine-database-number v-line {\n      display: flex !important;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n    }\n    .affine-database-number v-line > div {\n      flex-grow: 1;\n    }\n  `;\nNumberCellEditing.tag = literal `affine-database-number-cell-editing`;\n__decorate([\n    query('.affine-database-number')\n], NumberCellEditing.prototype, \"_container\", void 0);\nNumberCellEditing = __decorate([\n    customElement('affine-database-number-cell-editing')\n], NumberCellEditing);\nexport { NumberCellEditing };\nexport const NumberColumnRenderer = defineColumnRenderer('number', () => ({\n    decimal: 0,\n}), page => new page.YText(''), {\n    Cell: NumberCellEditing,\n    CellEditing: null,\n}, {\n    displayName: 'Number',\n});\n//# sourceMappingURL=number.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { literal } from 'lit/static-html.js';\nimport { DatabaseCellElement, defineColumnRenderer, } from '../../register.js';\nconst styles = css `\n  affine-database-progress-cell-editing {\n    display: block;\n    width: 100%;\n    height: 100%;\n    padding: 0 4px;\n  }\n\n  affine-database-progress-cell-editing:hover\n    .affine-database-progress-drag-handle {\n    opacity: 1;\n  }\n\n  .affine-database-progress {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    gap: 4px;\n  }\n\n  .affine-database-progress-bar {\n    position: relative;\n    width: 104px;\n  }\n\n  .affine-database-progress-bg {\n    overflow: hidden;\n    width: 100%;\n    height: 13px;\n    border-radius: 22px;\n  }\n\n  .affine-database-progress-fg {\n    height: 100%;\n  }\n\n  .affine-database-progress-drag-handle {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(0px, -1px);\n    width: 6px;\n    height: 15px;\n    border-radius: 2px;\n    opacity: 0;\n    cursor: ew-resize;\n    background: var(--affine-primary-color);\n    transition: opacity 0.2s ease-in-out;\n  }\n\n  .progress-number {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 18px;\n    width: 25px;\n    color: var(--affine-text-secondary-color);\n    font-size: 14px;\n  }\n`;\nconst progressColors = {\n    empty: 'var(--affine-black-10)',\n    processing: 'var(--affine-processing-color)',\n    success: 'var(--affine-success-color)',\n};\nlet ProgressCellEditing = class ProgressCellEditing extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.cellType = 'progress';\n        this._dragConfig = null;\n        this._progressBgWidth = 0;\n        this._onDocumentMove = () => {\n            if (!this._dragConfig)\n                return;\n            this._onPointerUp();\n        };\n        this._onPointerDown = (event) => {\n            event.stopPropagation();\n            const { left, width } = this._progressBg.getBoundingClientRect();\n            const visibleWidth = width - 6;\n            this._dragConfig = {\n                stepWidth: visibleWidth / 100,\n                boundLeft: left,\n                containerWidth: visibleWidth,\n            };\n            this.databaseModel.page.captureSync();\n        };\n        this._onPointerMove = (event) => {\n            event.stopPropagation();\n            if (!this._dragConfig)\n                return;\n            const x = event.clientX;\n            const { boundLeft, containerWidth, stepWidth } = this._dragConfig;\n            let steps;\n            if (x <= boundLeft) {\n                steps = 0;\n            }\n            else if (x - boundLeft >= containerWidth) {\n                steps = 100;\n            }\n            else {\n                steps = Math.floor((x - boundLeft) / stepWidth);\n            }\n            if (this.cell?.value !== steps) {\n                this.rowHost.setValue(steps, { captureSync: false });\n            }\n        };\n        this._onPointerUp = () => {\n            this._dragConfig = null;\n            this.databaseModel.page.captureSync();\n        };\n    }\n    firstUpdated() {\n        const disposables = this._disposables;\n        disposables.addFromEvent(this._dragHandle, 'pointerdown', this._onPointerDown);\n        disposables.addFromEvent(this, 'pointermove', this._onPointerMove);\n        disposables.addFromEvent(this, 'pointerup', this._onPointerUp);\n        disposables.addFromEvent(document, 'pointermove', this._onDocumentMove);\n        const { width } = this._progressBg.getBoundingClientRect();\n        const visibleWidth = width - 6;\n        this._progressBgWidth = visibleWidth;\n        const value = this.cell?.value;\n        if (value) {\n            this._setDragHandlePosition(value);\n        }\n    }\n    _setDragHandlePosition(value) {\n        const x = this._progressBgWidth * (value / 100);\n        this._dragHandle.style.transform = `translate(${x}px, -1px)`;\n    }\n    updated(_changedProperties) {\n        super.updated(_changedProperties);\n        if (_changedProperties.has('cell')) {\n            this._setDragHandlePosition(this.cell?.value ?? 0);\n        }\n    }\n    render() {\n        const progress = this.cell?.value ?? 0;\n        let backgroundColor = progressColors.processing;\n        if (progress === 100) {\n            backgroundColor = progressColors.success;\n        }\n        const fgStyles = styleMap({\n            width: `${progress}%`,\n            backgroundColor,\n        });\n        const bgStyles = styleMap({\n            backgroundColor: progress === 0 ? progressColors.empty : 'var(--affine-hover-color)',\n        });\n        return html `<div\n      class=\"affine-database-progress\"\n      @mousedown=${(e) => e.preventDefault()}\n    >\n      <div class=\"affine-database-progress-bar\">\n        <div class=\"affine-database-progress-bg\" style=${bgStyles}>\n          <div class=\"affine-database-progress-fg\" style=${fgStyles}></div>\n          <div class=\"affine-database-progress-drag-handle\"></div>\n        </div>\n      </div>\n      <div class=\"progress-number progress\">${progress}</div>\n    </div>`;\n    }\n};\nProgressCellEditing.styles = styles;\nProgressCellEditing.tag = literal `affine-database-progress-cell-editing`;\n__decorate([\n    query('.affine-database-progress-drag-handle')\n], ProgressCellEditing.prototype, \"_dragHandle\", void 0);\n__decorate([\n    query('.affine-database-progress-bg')\n], ProgressCellEditing.prototype, \"_progressBg\", void 0);\nProgressCellEditing = __decorate([\n    customElement('affine-database-progress-cell-editing')\n], ProgressCellEditing);\nexport const ProgressColumnRenderer = defineColumnRenderer('progress', () => ({}), () => 0, {\n    Cell: ProgressCellEditing,\n    CellEditing: null,\n}, {\n    displayName: 'Progress',\n});\n//# sourceMappingURL=progress.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { assertExists } from '@blocksuite/global/utils';\nimport { Text } from '@blocksuite/store';\nimport { VEditor } from '@blocksuite/virgo';\nimport { css } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\nimport { html, literal } from 'lit/static-html.js';\nimport { activeEditorManager } from '../../../../__internal__/utils/active-editor-manager.js';\nimport { setupVirgoScroll } from '../../../../__internal__/utils/virgo.js';\nimport { DatabaseCellElement, defineColumnRenderer, } from '../../register.js';\nfunction toggleStyle(vEditor, attrs) {\n    const vRange = vEditor.getVRange();\n    if (!vRange) {\n        return;\n    }\n    const root = vEditor.rootElement;\n    if (!root) {\n        return;\n    }\n    const deltas = vEditor.getDeltasByVRange(vRange);\n    let oldAttributes = {};\n    for (const [delta] of deltas) {\n        const attributes = delta.attributes;\n        if (!attributes) {\n            continue;\n        }\n        oldAttributes = { ...attributes };\n    }\n    const newAttributes = Object.fromEntries(Object.entries(attrs).map(([k, v]) => {\n        if (typeof v === 'boolean' &&\n            v === oldAttributes[k]) {\n            return [k, !v];\n        }\n        else {\n            return [k, v];\n        }\n    }));\n    vEditor.formatText(vRange, newAttributes, {\n        mode: 'merge',\n    });\n    root.blur();\n    vEditor.syncVRange();\n}\nlet TextCell = class TextCell extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.vEditor = null;\n        this.cellType = 'rich-text';\n        this._initYText = (text) => {\n            const yText = new this.databaseModel.page.YText(text);\n            this.databaseModel.updateCell(this.rowModel.id, {\n                columnId: this.column.id,\n                value: yText,\n            });\n            return yText;\n        };\n        this._handleKeyDown = (event) => {\n            if (event.key !== 'Escape') {\n                if (event.key === 'Tab') {\n                    event.preventDefault();\n                    return;\n                }\n                event.stopPropagation();\n            }\n            if (!this.vEditor)\n                return;\n            if (event.key === 'Enter') {\n                if (event.shiftKey) {\n                    // soft enter\n                    this._onSoftEnter();\n                }\n                else {\n                    // exit editing\n                    this.rowHost.setEditing(false);\n                    this._container.blur();\n                }\n                event.preventDefault();\n                return;\n            }\n            const vEditor = this.vEditor;\n            switch (event.key) {\n                // bold ctrl+b\n                case 'B':\n                case 'b':\n                    if (event.metaKey || event.ctrlKey) {\n                        event.preventDefault();\n                        toggleStyle(this.vEditor, { bold: true });\n                    }\n                    break;\n                // italic ctrl+i\n                case 'I':\n                case 'i':\n                    if (event.metaKey || event.ctrlKey) {\n                        event.preventDefault();\n                        toggleStyle(this.vEditor, { italic: true });\n                    }\n                    break;\n                // underline ctrl+u\n                case 'U':\n                case 'u':\n                    if (event.metaKey || event.ctrlKey) {\n                        event.preventDefault();\n                        toggleStyle(this.vEditor, { underline: true });\n                    }\n                    break;\n                // strikethrough ctrl+shift+s\n                case 'S':\n                case 's':\n                    if ((event.metaKey || event.ctrlKey) && event.shiftKey) {\n                        event.preventDefault();\n                        toggleStyle(vEditor, { strike: true });\n                    }\n                    break;\n                // inline code ctrl+shift+e\n                case 'E':\n                case 'e':\n                    if ((event.metaKey || event.ctrlKey) && event.shiftKey) {\n                        event.preventDefault();\n                        toggleStyle(vEditor, { code: true });\n                    }\n                    break;\n                default:\n                    break;\n            }\n        };\n        this._onSoftEnter = () => {\n            if (this.cell && this.vEditor) {\n                const vRange = this.vEditor.getVRange();\n                assertExists(vRange);\n                const page = this.databaseModel.page;\n                page.captureSync();\n                const text = new Text(this.vEditor.yText);\n                text.replace(vRange.index, length, '\\n');\n                this.vEditor.setVRange({\n                    index: vRange.index + 1,\n                    length: 0,\n                });\n            }\n        };\n    }\n    get readonly() {\n        return this.databaseModel.page.readonly;\n    }\n    firstUpdated() {\n        this._onInitVEditor();\n        this._disposables.addFromEvent(this, 'click', this._handleClick);\n    }\n    _handleClick() {\n        this.databaseModel.page.captureSync();\n    }\n    _onInitVEditor() {\n        let value;\n        if (!this.cell?.value) {\n            value = this._initYText();\n        }\n        else {\n            // When copying the database, the type of the value is `string`.s\n            if (typeof this.cell.value === 'string') {\n                value = this._initYText(this.cell.value);\n            }\n            else {\n                value = this.cell.value;\n            }\n        }\n        this.vEditor = new VEditor(value, {\n            active: () => activeEditorManager.isActive(this),\n        });\n        setupVirgoScroll(this.databaseModel.page, this.vEditor);\n        this.vEditor.mount(this._container);\n        this.vEditor.bindHandlers({\n            keydown: this._handleKeyDown,\n        });\n        this.vEditor.setReadonly(this.readonly);\n    }\n    render() {\n        return html `<div class=\"affine-database-rich-text virgo-editor\"></div>`;\n    }\n};\nTextCell.styles = css `\n    affine-database-rich-text-cell {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      cursor: text;\n    }\n\n    .affine-database-rich-text {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      outline: none;\n    }\n    .affine-database-rich-text v-line {\n      display: flex !important;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n    }\n    .affine-database-rich-text v-line > div {\n      flex-grow: 1;\n    }\n  `;\nTextCell.tag = literal `affine-database-rich-text-cell`;\n__decorate([\n    query('.affine-database-rich-text')\n], TextCell.prototype, \"_container\", void 0);\nTextCell = __decorate([\n    customElement('affine-database-rich-text-cell')\n], TextCell);\nexport { TextCell };\nexport const RichTextColumnRenderer = defineColumnRenderer('rich-text', () => ({}), page => new page.YText(''), {\n    Cell: TextCell,\n    CellEditing: null,\n}, {\n    displayName: 'Rich Text',\n});\n//# sourceMappingURL=rich-text.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { setupVirgoScroll } from '../../../../../__internal__/utils/virgo.js';\nimport { VirgoInput } from '../../../../../components/virgo-input/virgo-input.js';\nimport { SELECT_TAG_NAME_MAX_LENGTH } from '../../../consts.js';\nlet SelectOption = class SelectOption extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this._onOptionFocus = () => {\n            this._container.classList.remove('ellipsis');\n        };\n        this._onOptionBlur = () => {\n            this._container.classList.add('ellipsis');\n        };\n    }\n    get _vEditor() {\n        return this._vInput.vEditor;\n    }\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        if (changedProperties.has('editing')) {\n            if (this.editing) {\n                this._vEditor.focusEnd();\n            }\n            this._vEditor.setReadonly(!this.editing);\n            this._vEditor.setText(this.select.value);\n        }\n        if (changedProperties.has('select')) {\n            this._vEditor.setText(this.select.value);\n        }\n    }\n    getSelectionValue() {\n        return this._vEditor.yText.toString();\n    }\n    _onInitVEditor() {\n        this._vInput = new VirgoInput({\n            yText: this.select.value,\n            rootElement: this._container,\n            maxLength: SELECT_TAG_NAME_MAX_LENGTH,\n        });\n        setupVirgoScroll(this.databaseModel.page, this._vEditor);\n        // When editing the current select, other sibling selects should not be edited\n        this._vEditor.setReadonly(!this.editing);\n        this._container.addEventListener('keydown', event => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                if (this._vInput.value.length > 0) {\n                    this.saveSelectionName(this.index);\n                }\n            }\n            if (event.key === 'Escape') {\n                event.stopPropagation();\n                event.preventDefault();\n                this.setEditingIndex(-1);\n                this._container.blur();\n            }\n        });\n    }\n    firstUpdated() {\n        this._disposables.addFromEvent(this._container, 'focus', this._onOptionFocus);\n        this._disposables.addFromEvent(this._container, 'blur', this._onOptionBlur);\n        this._onInitVEditor();\n    }\n    render() {\n        const style = styleMap({\n            backgroundColor: this.select.color,\n            cursor: this.editing ? 'text' : 'pointer',\n        });\n        return html `<div\n      class=\"select-option-text virgo-editor\"\n      style=${style}\n    ></div>`;\n    }\n};\nSelectOption.styles = css `\n    affine-database-select-option {\n      display: flex;\n      align-items: center;\n    }\n    .select-option-text {\n      display: inline-block;\n      min-width: 22px;\n      height: 100%;\n      max-width: 100%;\n      padding: 2px 10px;\n      border-radius: 4px;\n      background: var(--affine-tag-pink);\n      overflow: hidden;\n      cursor: text;\n    }\n    .select-option-text:focus {\n      outline: none;\n    }\n\n    .select-option-text [data-virgo-text='true'] {\n      display: block;\n      white-space: nowrap !important;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n  `;\n__decorate([\n    property()\n], SelectOption.prototype, \"databaseModel\", void 0);\n__decorate([\n    property()\n], SelectOption.prototype, \"select\", void 0);\n__decorate([\n    property()\n], SelectOption.prototype, \"editing\", void 0);\n__decorate([\n    property()\n], SelectOption.prototype, \"index\", void 0);\n__decorate([\n    property()\n], SelectOption.prototype, \"saveSelectionName\", void 0);\n__decorate([\n    property()\n], SelectOption.prototype, \"setEditingIndex\", void 0);\n__decorate([\n    query('.select-option-text')\n], SelectOption.prototype, \"_container\", void 0);\nSelectOption = __decorate([\n    customElement('affine-database-select-option')\n], SelectOption);\nexport { SelectOption };\n//# sourceMappingURL=select-option.js.map","import { DisposableGroup } from '@blocksuite/store';\nimport { getService } from '../../../__internal__/service.js';\nimport { resetNativeSelection } from '../../../std.js';\nimport { getCellCoord } from '../components/selection/utils.js';\nconst CELL_SELECTION_MOVE_KEYS = [\n    'Tab',\n    'Enter',\n    'ArrowUp',\n    'ArrowDown',\n    'ArrowLeft',\n    'ArrowRight',\n];\nconst CELL_SELECTION_ENTER_KEYS = ['Tab', 'Escape'];\nexport class CellSelectionManager {\n    constructor(dispatcher, model) {\n        this._disposables = new DisposableGroup();\n        this._service = null;\n        this._onClick = (ctx) => {\n            this._service?.clearCellLevelSelection();\n        };\n        this._onCellSelectionMove = (ctx) => {\n            const e = ctx.get('keyboardState');\n            const event = e.raw;\n            if (CELL_SELECTION_MOVE_KEYS.indexOf(event.key) <= -1)\n                return;\n            const service = getService('affine:database');\n            const cellSelection = service.getLastCellSelection();\n            if (!cellSelection)\n                return;\n            event.preventDefault();\n            const { databaseId, coords } = cellSelection;\n            if (event.key === 'Enter') {\n                // enter editing state\n                service.setCellSelection({\n                    type: 'edit',\n                    coords,\n                    databaseId,\n                });\n            }\n            else {\n                // set cell selection\n                const nextCoord = getCellCoord(coords[0], databaseId, event.key);\n                service.setCellSelection({\n                    type: 'select',\n                    coords: [nextCoord],\n                    databaseId,\n                });\n            }\n            return true;\n        };\n        this._add = (name, fn) => {\n            this._disposables.add(this._dispatcher.add(name, fn));\n        };\n        this.onCellSelectionChange = (event) => {\n            if (!isValidKey(event.key))\n                return;\n            event.preventDefault();\n            event.stopPropagation();\n            const element = event.target;\n            selectCellByElement(element, this._model.id, event.key);\n        };\n        this._dispatcher = dispatcher;\n        this._model = model;\n        this._service = getService('affine:database');\n        this._add('click', this._onClick);\n        this._add('keyDown', this._onCellSelectionMove);\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n}\nfunction isValidKey(key) {\n    return CELL_SELECTION_ENTER_KEYS.indexOf(key) > -1;\n}\nexport function selectCellByElement(element, databaseId, key) {\n    const rowsContainer = element.closest('.affine-database-block-rows');\n    const currentCell = element.closest('.database-cell');\n    if (!rowsContainer)\n        return;\n    if (!currentCell)\n        return;\n    const editor = currentCell.querySelector('.virgo-editor');\n    editor?.blur();\n    resetNativeSelection(null);\n    const nextCoord = getCellCoord(currentCell, databaseId, key);\n    const service = getService('affine:database');\n    // TODO\n    // Maybe we can no longer trigger the cell selection logic after selecting the row selection.\n    const hasRowSelection = service.getLastRowSelection() !== null;\n    if (hasRowSelection)\n        return;\n    service.setCellSelection({\n        type: 'select',\n        coords: [nextCoord],\n        databaseId,\n    });\n}\n//# sourceMappingURL=cell.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DeleteIcon, PenIcon } from '@blocksuite/global/config';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { isDivider } from '../../../../utils.js';\nimport { actionStyles } from '../../edit-column-popup/styles.js';\nconst tagActions = [\n    {\n        type: 'rename',\n        text: 'Rename',\n        icon: PenIcon,\n    },\n    {\n        type: 'divider',\n    },\n    {\n        type: 'delete',\n        text: 'Delete',\n        icon: DeleteIcon,\n    },\n];\nlet SelectActionPopup = class SelectActionPopup extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._onAction = (e, type) => {\n            e.stopPropagation();\n            this.onAction(type, this.index);\n            this.onClose();\n        };\n    }\n    render() {\n        return html `\n      <div class=\"affine-database-select-action\">\n        ${tagActions.map(action => {\n            if (isDivider(action))\n                return html `<div class=\"action-divider\"></div>`;\n            return html `\n            <div\n              class=\"action ${action.type}\"\n              @mousedown=${(e) => this._onAction(e, action.type)}\n            >\n              <div class=\"action-content\">\n                ${action.icon}<span>${action.text}</span>\n              </div>\n            </div>\n          `;\n        })}\n      </div>\n    `;\n    }\n};\nSelectActionPopup.styles = css `\n    :host {\n      z-index: 11;\n    }\n    .affine-database-select-action {\n      width: 200px;\n      padding: 8px;\n      border: 1px solid var(--affine-border-color);\n      border-radius: 8px;\n      background: var(--affine-white);\n      box-shadow: var(--affine-menu-shadow);\n    }\n    ${actionStyles}\n    .action {\n      color: var(--affine-text-primary-color);\n    }\n    .action svg {\n      width: 20px;\n      height: 20px;\n    }\n    .rename,\n    .delete {\n      fill: var(--affine-icon-color);\n    }\n  `;\n__decorate([\n    property()\n], SelectActionPopup.prototype, \"index\", void 0);\n__decorate([\n    property()\n], SelectActionPopup.prototype, \"onAction\", void 0);\n__decorate([\n    property()\n], SelectActionPopup.prototype, \"onClose\", void 0);\nSelectActionPopup = __decorate([\n    customElement('affine-database-select-action-popup')\n], SelectActionPopup);\nexport { SelectActionPopup };\n//# sourceMappingURL=select-option-popup.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport './select-option.js';\nimport { DatabaseDone, DatabaseSearchClose, MoreHorizontalIcon, PlusIcon, } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { nanoid } from '@blocksuite/store';\nimport { createPopper } from '@popperjs/core';\nimport { css } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html, literal } from 'lit/static-html.js';\nimport { getTagColor, onClickOutside } from '../../../../utils.js';\nimport { SELECT_EDIT_POPUP_WIDTH, SELECT_TAG_NAME_MAX_LENGTH, } from '../../../consts.js';\nimport { DatabaseCellElement } from '../../../register.js';\nimport { selectCellByElement, } from '../../../selection-manager/cell.js';\nimport { SelectMode } from '../../../types.js';\nimport { SelectActionPopup } from './select-option-popup.js';\nconst KEYS_WHITE_LIST = ['Enter', 'ArrowUp', 'ArrowDown'];\nconst styles = css `\n  affine-database-select-cell-editing {\n    z-index: 2;\n    border: 1px solid var(--affine-border-color);\n    border-radius: 8px;\n    background: var(--affine-background-primary-color);\n    box-shadow: var(--affine-shadow-2);\n  }\n  .affine-database-select-cell-select {\n    font-size: var(--affine-font-sm);\n  }\n  .select-input-container {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 6px;\n    min-height: 44px;\n    padding: 10px 8px;\n    background: var(--affine-hover-color);\n  }\n  .select-input {\n    flex: 1 1 0%;\n    height: 24px;\n    border: none;\n    font-family: var(--affine-font-family);\n    color: inherit;\n    background: transparent;\n    line-height: 24px;\n  }\n  .select-input:focus {\n    outline: none;\n  }\n  .select-input::placeholder {\n    color: var(--affine-placeholder-color);\n  }\n  .select-option-container {\n    padding: 8px;\n    color: var(--affine-black-90);\n  }\n  .select-option-container-header {\n    padding: 8px 0px;\n    color: var(--affine-black-60);\n  }\n  .select-input-container .select-selected {\n    display: flex;\n    align-items: center;\n    padding: 2px 10px;\n    gap: 10px;\n    height: 28px;\n    background: var(--affine-tag-white);\n    border-radius: 4px;\n    color: var(--affine-black-90);\n    background: var(--affine-tertiary-color);\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n  .select-selected-text {\n    width: calc(100% - 16px);\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n  .select-selected > .close-icon {\n    display: flex;\n    align-items: center;\n  }\n  .select-selected > .close-icon:hover {\n    cursor: pointer;\n  }\n  .select-selected > .close-icon > svg {\n    fill: var(--affine-black-90);\n  }\n  .select-option-new {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    height: 36px;\n    padding: 4px;\n    gap: 5px;\n    border-radius: 4px;\n    background: var(--affine-selected-color);\n  }\n  .select-option-new-text {\n    flex: 1;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    height: 28px;\n    padding: 2px 10px;\n    border-radius: 4px;\n    background: var(--affine-tag-red);\n  }\n  .select-option-new-icon {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    height: 28px;\n    color: var(--affine-text-primary-color);\n  }\n  .select-option-new-icon svg {\n    width: 16px;\n    height: 16px;\n  }\n  .select-option {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 36px;\n    padding: 4px;\n    border-radius: 4px;\n    margin-bottom: 4px;\n    cursor: pointer;\n  }\n  .select-option.selected,\n  .select-option:hover {\n    background: var(--affine-hover-color);\n  }\n  .select-option:hover .select-option-icon {\n    display: flex;\n  }\n  .select-option-text-container {\n    width: calc(100% - 28px);\n    overflow: hidden;\n  }\n  .select-option-icon {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    width: 28px;\n    height: 28px;\n    border-radius: 3px;\n    cursor: pointer;\n  }\n  .select-option-icon:hover {\n    background: var(--affine-hover-color);\n  }\n  .select-option-icon svg {\n    width: 16px;\n    height: 16px;\n    pointer-events: none;\n  }\n  .editing {\n    background: var(--affine-hover-color);\n  }\n  .editing .select-option-text [data-virgo-text='true'] {\n    display: block;\n    white-space: pre !important;\n    overflow: unset;\n    text-overflow: unset;\n  }\n  .editing .select-option-icon {\n    display: flex;\n    background: var(--affine-hover-background);\n  }\n`;\nlet SelectCellEditing = class SelectCellEditing extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.value = undefined;\n        this.cellType = 'select';\n        this.mode = SelectMode.Single;\n        this._inputValue = '';\n        this._editingIndex = -1;\n        this._selectedOptionIndex = -1;\n        this._selectColor = undefined;\n        this._onSelectOption = (event) => {\n            const key = event.key;\n            if (KEYS_WHITE_LIST.indexOf(key) <= -1)\n                return;\n            event.preventDefault();\n            event.stopPropagation();\n            const maxIndex = this.selectionList.length - 1;\n            if (this._selectedOptionIndex === maxIndex && key === 'ArrowDown') {\n                this._selectedOptionIndex = 0;\n                return;\n            }\n            if (this._selectedOptionIndex <= 0 && key === 'ArrowUp') {\n                this._selectedOptionIndex = maxIndex;\n                return;\n            }\n            if (key === 'ArrowDown') {\n                this._selectedOptionIndex++;\n            }\n            else if (key === 'ArrowUp') {\n                this._selectedOptionIndex--;\n            }\n            else if (key === 'Enter') {\n                const index = this._selectedOptionIndex;\n                if (index === -1)\n                    return;\n                if (this.isSingleMode) {\n                    this._selectedOptionIndex = -1;\n                }\n                const selected = this.cell?.value ?? [];\n                const currentSelection = this.selectionList[index];\n                this._onSelect(selected, currentSelection);\n                const cell = this._selectOptionContainer.closest('.database-cell');\n                assertExists(cell);\n                this._selectCell(cell, 'Escape');\n            }\n        };\n        this._selectCell = (element, key, exitEditing = false) => {\n            if (this.isSingleMode || exitEditing)\n                this.rowHost.setEditing(false);\n            selectCellByElement(element, this.databaseModel.id, key);\n        };\n        this._onDeleteSelected = (selectedValue, value) => {\n            const filteredValue = selectedValue.filter(item => item !== value);\n            this.rowHost.setValue(filteredValue);\n        };\n        this._onSelectSearchInput = (event) => {\n            const value = event.target.value;\n            this._inputValue = value;\n            if (!this._selectColor) {\n                this._selectColor = getTagColor();\n            }\n        };\n        this._onSelectOrAdd = (event, selectedValue) => {\n            const inputValue = this._inputValue.trim();\n            if (event.key === 'Backspace' && inputValue === '') {\n                this._onDeleteSelected(selectedValue, selectedValue[selectedValue.length - 1]);\n            }\n            else if (event.key === 'Enter' && inputValue !== '') {\n                if (this._selectedOptionIndex !== -1)\n                    return;\n                const selectTag = this.selectionList.find(item => item.value === inputValue);\n                if (selectTag) {\n                    this._onSelect(selectedValue, selectTag);\n                }\n                else {\n                    this._onAddSelection(selectedValue);\n                }\n            }\n            else if (event.key === 'Escape') {\n                this._selectCell(event.target, 'Escape', true);\n            }\n            else if (event.key === 'Tab') {\n                event.preventDefault();\n                this._selectCell(event.target, 'Tab', true);\n            }\n        };\n        this._onSelect = (selectedValue, select) => {\n            // when editing, do not select\n            if (this._editingIndex !== -1)\n                return;\n            const isExist = selectedValue.findIndex(item => item.value === select.value) > -1;\n            if (isExist)\n                return;\n            this.value = select;\n            const isSelected = selectedValue.indexOf(this.value) > -1;\n            if (!isSelected) {\n                const newValue = this.isSingleMode\n                    ? [this.value]\n                    : [...selectedValue, this.value];\n                this.rowHost.setValue(newValue);\n                if (this.isSingleMode)\n                    this.rowHost.setEditing(false);\n                if (!this.isSingleMode && newValue.length > 1) {\n                    this._calcRowHostHeight();\n                }\n            }\n        };\n        this._onAddSelection = (selectedValue) => {\n            let value = this._inputValue.trim();\n            if (value === '')\n                return;\n            if (value.length > SELECT_TAG_NAME_MAX_LENGTH) {\n                value = value.slice(0, SELECT_TAG_NAME_MAX_LENGTH);\n            }\n            const tagColor = this._selectColor ?? getTagColor();\n            this._selectColor = undefined;\n            const newSelect = { id: nanoid(), value, color: tagColor };\n            this.rowHost.updateColumnProperty(property => {\n                const selection = property.selection;\n                return {\n                    ...property,\n                    selection: selection.findIndex(select => select.value === value) === -1\n                        ? [...selection, newSelect]\n                        : selection,\n                };\n            });\n            const newValue = this.isSingleMode\n                ? [newSelect]\n                : [...selectedValue, newSelect];\n            this.rowHost.setValue(newValue);\n            this.rowHost.setEditing(false);\n            if (!this.isSingleMode && newValue.length > 1) {\n                this._calcRowHostHeight();\n            }\n        };\n        this._calcRowHostHeight = () => {\n            setTimeout(() => {\n                const shadowRoot = this.rowHost.shadowRoot?.children[0].shadowRoot?.children[0].shadowRoot;\n                const selectCell = shadowRoot?.querySelector('.affine-database-select-cell-container');\n                if (selectCell) {\n                    const { height } = selectCell.getBoundingClientRect();\n                    this.rowHost.setHeight(height);\n                }\n            });\n        };\n        this._onSelectAction = (type, index) => {\n            if (type === 'rename') {\n                this._setEditingIndex(index);\n                return;\n            }\n            if (type === 'delete') {\n                this.databaseModel.updateColumn({\n                    ...this.column,\n                    selection: this.selectionList.filter((_, i) => i !== index),\n                });\n                const select = this.selectionList[index];\n                this.databaseModel.deleteSelectedCellTag(this.column.id, select);\n                return;\n            }\n        };\n        this._showSelectAction = (index) => {\n            const selectOption = this.querySelectorAll('.select-option').item(index);\n            assertExists(selectOption);\n            const action = new SelectActionPopup();\n            action.onAction = this._onSelectAction;\n            action.index = index;\n            selectOption.appendChild(action);\n            const onClose = () => action.remove();\n            action.onClose = onClose;\n            createPopper({\n                getBoundingClientRect: () => {\n                    const optionIcon = selectOption.querySelector('.select-option-icon');\n                    assertExists(optionIcon);\n                    const { height } = action.getBoundingClientRect();\n                    const rect = optionIcon.getBoundingClientRect();\n                    rect.y = rect.y + height + 36;\n                    rect.x = rect.x + 33;\n                    return rect;\n                },\n            }, action, {\n                placement: 'bottom-end',\n            });\n            onClickOutside(selectOption, onClose, 'mousedown');\n        };\n        this._onSaveSelectionName = (index) => {\n            const selectOption = this._selectOptionContainer\n                .querySelectorAll('affine-database-select-option')\n                .item(index);\n            const selection = [...this.selectionList];\n            const value = selectOption.getSelectionValue();\n            const isExist = selection.findIndex((select, i) => i !== index && select.value === value) > -1;\n            if (isExist)\n                return;\n            const oldSelect = selection[index];\n            const newSelect = { ...oldSelect, value };\n            selection[index] = newSelect;\n            this.databaseModel.updateColumn({\n                ...this.column,\n                selection,\n            });\n            this.databaseModel.renameSelectedCellTag(this.column.id, oldSelect, newSelect);\n            this._setEditingIndex(-1);\n        };\n        this._setEditingIndex = (index) => {\n            this._editingIndex = index;\n        };\n    }\n    get isSingleMode() {\n        return this.mode === SelectMode.Single;\n    }\n    get selectionList() {\n        return this.column.selection;\n    }\n    firstUpdated() {\n        this.style.width = `${SELECT_EDIT_POPUP_WIDTH}px`;\n        this._selectInput.focus();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this._disposables.addFromEvent(document.body, 'keydown', this._onSelectOption);\n        createPopper({\n            getBoundingClientRect: () => {\n                const rect = this.rowHost.getBoundingClientRect();\n                rect.y = rect.y - rect.height - 2;\n                rect.x = rect.x - 2;\n                return rect;\n            },\n        }, this, {\n            placement: 'bottom-start',\n            strategy: 'fixed',\n        });\n    }\n    updated(_changedProperties) {\n        super.updated(_changedProperties);\n        if (_changedProperties.has('cell')) {\n            this._selectInput.focus();\n        }\n    }\n    render() {\n        const filteredSelection = this.selectionList.filter(item => {\n            if (!this._inputValue) {\n                return true;\n            }\n            return (item.value\n                .toLocaleLowerCase()\n                .indexOf(this._inputValue.toLocaleLowerCase()) > -1);\n        });\n        const selectedTag = this.cell?.value ?? [];\n        const showCreateTip = this._inputValue &&\n            filteredSelection.findIndex(item => item.value === this._inputValue) ===\n                -1;\n        const selectCreateTip = showCreateTip\n            ? html `<div class=\"select-option-new\" @click=${this._onAddSelection}>\n          <div class=\"select-option-new-icon\">Create ${PlusIcon}</div>\n          <span\n            class=\"select-option-new-text\"\n            style=${styleMap({ backgroundColor: this._selectColor })}\n            >${this._inputValue}</span\n          >\n        </div>`\n            : null;\n        return html `\n      <div class=\"affine-database-select-cell-select\">\n        <div class=\"select-input-container\">\n          ${selectedTag.map(item => {\n            const style = styleMap({\n                backgroundColor: item.color,\n            });\n            return html `<div class=\"select-selected\" style=${style}>\n              <div class=\"select-selected-text\">${item.value}</div>\n              <span\n                class=\"close-icon\"\n                @click=${() => this._onDeleteSelected(selectedTag, item)}\n                >${DatabaseSearchClose}</span\n              >\n            </div>`;\n        })}\n          <input\n            class=\"select-input\"\n            placeholder=\"Type here...\"\n            maxlength=${SELECT_TAG_NAME_MAX_LENGTH}\n            @input=${this._onSelectSearchInput}\n            @keydown=${(event) => this._onSelectOrAdd(event, selectedTag)}\n          />\n        </div>\n        <div class=\"select-option-container\">\n          <div class=\"select-option-container-header\">\n            Select tag or create one\n          </div>\n          ${selectCreateTip}\n          ${repeat(filteredSelection, select => select.id, (select, index) => {\n            const isEditing = index === this._editingIndex;\n            const isSelected = index === this._selectedOptionIndex;\n            const onOptionIconClick = isEditing\n                ? () => this._onSaveSelectionName(index)\n                : () => this._showSelectAction(index);\n            const classes = classMap({\n                'select-option': true,\n                selected: isSelected,\n                editing: isEditing,\n            });\n            return html `\n                <div class=\"${classes}\">\n                  <div\n                    class=\"select-option-text-container\"\n                    @click=${() => this._onSelect(selectedTag, select)}\n                  >\n                    <affine-database-select-option\n                      style=${styleMap({\n                cursor: isEditing ? 'text' : 'pointer',\n            })}\n                      .databaseModel=${this.databaseModel}\n                      .select=${select}\n                      .editing=${isEditing}\n                      .index=${index}\n                      .saveSelectionName=${this._onSaveSelectionName}\n                      .setEditingIndex=${this._setEditingIndex}\n                    ></affine-database-select-option>\n                  </div>\n                  <div class=\"select-option-icon\" @click=${onOptionIconClick}>\n                    ${isEditing ? DatabaseDone : MoreHorizontalIcon}\n                  </div>\n                </div>\n              `;\n        })}\n        </div>\n      </div>\n    `;\n    }\n};\nSelectCellEditing.styles = styles;\nSelectCellEditing.tag = literal `affine-database-select-cell-editing`;\n__decorate([\n    property()\n], SelectCellEditing.prototype, \"mode\", void 0);\n__decorate([\n    query('.select-input')\n], SelectCellEditing.prototype, \"_selectInput\", void 0);\n__decorate([\n    state()\n], SelectCellEditing.prototype, \"_inputValue\", void 0);\n__decorate([\n    state()\n], SelectCellEditing.prototype, \"_editingIndex\", void 0);\n__decorate([\n    state()\n], SelectCellEditing.prototype, \"_selectedOptionIndex\", void 0);\n__decorate([\n    query('.select-option-container')\n], SelectCellEditing.prototype, \"_selectOptionContainer\", void 0);\nSelectCellEditing = __decorate([\n    customElement('affine-database-select-cell-editing')\n], SelectCellEditing);\nexport { SelectCellEditing };\n//# sourceMappingURL=select-cell-editing.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html, literal } from 'lit/static-html.js';\nimport { DatabaseCellElement, defineColumnRenderer, } from '../../../register.js';\nimport { SelectCellEditing } from './select-cell-editing.js';\nlet SelectCell = class SelectCell extends DatabaseCellElement {\n    constructor() {\n        super(...arguments);\n        this.cellType = 'select';\n    }\n    render() {\n        const values = this.cell?.value ?? [];\n        return html `\n      <div\n        class=\"affine-database-select-cell-container\"\n        style=${styleMap({\n            maxWidth: `${this.column.width}px`,\n        })}\n      >\n        ${values.map(item => {\n            const style = styleMap({\n                backgroundColor: item.color,\n            });\n            return html `<span class=\"select-selected\" style=${style}\n            >${item.value}</span\n          >`;\n        })}\n      </div>\n    `;\n    }\n};\nSelectCell.styles = css `\n    affine-database-select-cell {\n      display: flex;\n      align-items: center;\n      width: calc(100% + 8px);\n      height: 100%;\n      margin: -2px -4px;\n    }\n    .affine-database-select-cell-container * {\n      box-sizing: border-box;\n    }\n    .affine-database-select-cell-container {\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: 6px;\n      width: 100%;\n      cursor: pointer;\n      font-size: var(--affine-font-sm);\n    }\n    .affine-database-select-cell-container .select-selected {\n      height: 28px;\n      padding: 2px 10px;\n      border-radius: 4px;\n      white-space: nowrap;\n      background: var(--affine-tag-white);\n    }\n  `;\nSelectCell.tag = literal `affine-database-select-cell`;\nSelectCell = __decorate([\n    customElement('affine-database-select-cell')\n], SelectCell);\nexport const SelectColumnRenderer = defineColumnRenderer('select', () => ({\n    selection: [],\n}), () => [], {\n    Cell: SelectCell,\n    CellEditing: SelectCellEditing,\n}, {\n    displayName: 'Select',\n});\n//# sourceMappingURL=select.js.map","import { ColumnRendererHelper } from '../../register.js';\nimport { CheckboxColumnRenderer } from './checkbox.js';\nimport { MultiSelectColumnRenderer } from './multi-select.js';\nimport { NumberColumnRenderer } from './number.js';\nimport { ProgressColumnRenderer } from './progress.js';\nimport { RichTextColumnRenderer } from './rich-text.js';\nimport { SelectColumnRenderer } from './select/select.js';\nexport function registerInternalRenderer() {\n    const columnRenderer = new ColumnRendererHelper();\n    columnRenderer.register(NumberColumnRenderer);\n    columnRenderer.register(SelectColumnRenderer);\n    columnRenderer.register(MultiSelectColumnRenderer);\n    columnRenderer.register(RichTextColumnRenderer);\n    columnRenderer.register(ProgressColumnRenderer);\n    columnRenderer.register(CheckboxColumnRenderer);\n    return columnRenderer;\n}\n//# sourceMappingURL=index.js.map","import './cell-container.js';\nimport { html } from 'lit';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { DEFAULT_COLUMN_MIN_WIDTH } from '../consts.js';\nimport { SearchState } from '../types.js';\nexport function DataBaseRowContainer(databaseBlock, filteredRowIds, searchState, root) {\n    const databaseModel = databaseBlock.model;\n    const columns = databaseModel.columns;\n    const filteredChildren = searchState === SearchState.Searching\n        ? databaseModel.children.filter(child => filteredRowIds.indexOf(child.id) > -1)\n        : databaseModel.children;\n    return html `\n    <style>\n      .affine-database-block-rows {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: flex-start;\n      }\n\n      .affine-database-block-row {\n        width: 100%;\n        min-height: 44px;\n        display: flex;\n        flex-direction: row;\n        border-bottom: 1px solid var(--affine-border-color);\n      }\n      .affine-database-block-row.selected > .database-cell {\n        background: transparent;\n      }\n      .affine-database-block-row > .affine-database-block-row-cell:first-child {\n        background: var(--affine-hover-color);\n      }\n      .affine-database-block-row > .database-cell {\n        background: var(--affine-white);\n      }\n\n      .affine-database-block-row-cell-content {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        min-height: 44px;\n        padding: 0 8px;\n        border-right: 1px solid var(--affine-border-color);\n        transform: translateX(0);\n      }\n      .affine-database-block-row-cell-content > [data-block-id] {\n        width: 100%;\n      }\n      .affine-database-block-row-cell-content > affine-paragraph {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n      }\n      .affine-database-block-row-cell-content > affine-paragraph > .text {\n        width: 100%;\n        margin-top: unset;\n      }\n      .database-cell {\n        min-width: ${DEFAULT_COLUMN_MIN_WIDTH}px;\n      }\n      .database-cell:last-child affine-database-cell-container {\n        border-right: none;\n      }\n    </style>\n    <div class=\"affine-database-block-rows\">\n      ${repeat(filteredChildren, child => child.id, (child, idx) => {\n        const style = styleMap({\n            width: `${databaseModel.titleColumnWidth}px`,\n        });\n        return html `\n            <div\n              class=\"affine-database-block-row database-row\"\n              data-row-index=\"${idx}\"\n              data-row-id=\"${child.id}\"\n            >\n              <div\n                class=\"affine-database-block-row-cell database-cell\"\n                style=${style}\n              >\n                <div class=\"affine-database-block-row-cell-content\">\n                  ${root.renderModel(child)}\n                </div>\n              </div>\n              ${repeat(columns, column => {\n            return html `\n                  <div\n                    class=\"database-cell\"\n                    style=${styleMap({\n                width: `${column.width}px`,\n            })}\n                  >\n                    <affine-database-cell-container\n                      .databaseModel=${databaseModel}\n                      .rowModel=${child}\n                      .column=${column}\n                      .columnRenderer=${databaseBlock.columnRenderer}\n                    >\n                    </affine-database-cell-container>\n                  </div>\n                `;\n        })}\n              <div class=\"database-cell add-column-button\"></div>\n            </div>\n          `;\n    })}\n    </div>\n  `;\n}\n//# sourceMappingURL=row-container.js.map","import { caretRangeFromPoint, DisposableGroup } from '@blocksuite/store';\nimport { getService } from '../../../__internal__/service.js';\nimport { DragHandle } from '../../../components/drag-handle.js';\nimport { handleNativeRangeDragMove, isBlankArea, resetNativeSelection, } from '../../../std.js';\nimport { getDatabaseById } from '../components/selection/utils.js';\nimport { getClosestDatabase, getClosestDatabaseId, getSelectedRowIdsByIndexes, getSelectedRowIndexes, isInDatabase, } from './utils.js';\nexport class RowSelectionManager {\n    constructor(dispatcher, model) {\n        this._disposables = new DisposableGroup();\n        this._service = null;\n        this._startCell = null;\n        this._database = null;\n        this._columnWidthHandles = [];\n        this._startRange = null;\n        this._rowIds = [];\n        this._isInDatabase = false;\n        this._onDragStart = (ctx) => {\n            const e = ctx.get('pointerState');\n            const { clientX: x, clientY: y, target } = e.raw;\n            const targetElement = target;\n            this._isInDatabase = isInDatabase(targetElement);\n            if (!this._isInDatabase) {\n                return false;\n            }\n            const startRange = caretRangeFromPoint(x, y);\n            this._startRange = startRange;\n            if (!isBlankArea(e)) {\n                const el = document.elementFromPoint(x, y);\n                this._startCell = el?.closest('.database-cell') ?? null;\n                const database = getClosestDatabase(this._startCell);\n                this._database = database;\n                this._columnWidthHandles = Array.from(database.querySelectorAll('.affine-database-column-drag-handle'));\n                this._setColumnWidthHandleDisplay('none');\n            }\n            return true;\n        };\n        this._onDragMove = (ctx) => {\n            if (!this._isInDatabase) {\n                return false;\n            }\n            const e = ctx.get('pointerState');\n            e.raw.preventDefault();\n            const { clientX: x, clientY: y, target } = e.raw;\n            if (!isInDatabase(target)) {\n                return false;\n            }\n            // In order to avoid missing the underlying database-related elements, use `elementsFromPoint` instead\n            const elements = Array.from(document.elementsFromPoint(x, y));\n            const endCell = elements.find(el => el.classList.contains('database-cell'));\n            const startCell = this._startCell;\n            if (!endCell || !startCell || !this._database)\n                return false;\n            if (endCell === startCell) {\n                // current cell, native selection\n                const editor = elements.find(el => el.classList.contains('virgo-editor'));\n                if (editor) {\n                    const { left, right } = editor.getBoundingClientRect();\n                    // Prevent native cross-cell selections from being generated\n                    if (x <= left + 1 || x >= right - 1) {\n                        return true;\n                    }\n                    handleNativeRangeDragMove(this._startRange, e);\n                }\n                if (this._rowIds.length > 0) {\n                    this._clearRowSelection();\n                }\n            }\n            else {\n                // cross cell, row-level selection\n                e.raw.preventDefault();\n                resetNativeSelection(null);\n                const rowIndexes = getSelectedRowIndexes(startCell, endCell);\n                const rowIds = getSelectedRowIdsByIndexes(this._database, rowIndexes);\n                this._rowIds = rowIds;\n                const databaseId = getClosestDatabaseId(endCell);\n                this._service?.setRowSelection({\n                    type: 'select',\n                    rowIds,\n                    databaseId,\n                });\n            }\n            return true;\n        };\n        this._onDragEnd = (ctx) => {\n            const e = ctx.get('pointerState');\n            const target = e.raw.target;\n            if (!isInDatabase(target)) {\n                return;\n            }\n            this._startRange = null;\n            this._setColumnWidthHandleDisplay('block');\n        };\n        this._onClick = (ctx) => {\n            const e = ctx.get('pointerState');\n            const target = e.raw.target;\n            if (target instanceof DragHandle)\n                return;\n            const rowSelection = this._service?.getLastRowSelection();\n            if (rowSelection) {\n                this._clearRowSelection();\n            }\n        };\n        this._onKeydown = (ctx) => {\n            const e = ctx.get('keyboardState');\n            const event = e.raw;\n            const key = event.key;\n            if (key === 'Delete' || key === 'Backspace') {\n                this._onRowSelectionDelete();\n            }\n            else if (key === 'Escape') {\n                const service = getService('affine:database');\n                const cellSelection = service.getLastCellSelection();\n                if (cellSelection) {\n                    const { databaseId, coords: [coord], } = cellSelection;\n                    // clear cell selection\n                    service.clearCellLevelSelection();\n                    // select row\n                    const database = getDatabaseById(databaseId);\n                    const rowIds = getSelectedRowIdsByIndexes(database, [coord.rowIndex]);\n                    service.setRowSelection({\n                        type: 'select',\n                        rowIds,\n                        databaseId,\n                    });\n                }\n            }\n        };\n        this._onRowSelectionDelete = () => {\n            const service = getService('affine:database');\n            const rowSelection = service.getLastRowSelection();\n            if (!rowSelection)\n                return;\n            const { rowIds } = rowSelection;\n            const page = this._model.page;\n            const children = this._model.children;\n            page.captureSync();\n            if (children.length === rowIds.length) {\n                // delete the database\n                page.deleteBlock(this._model);\n            }\n            else {\n                // delete rows\n                page.updateBlock(this._model, {\n                    children: children.filter(child => rowIds.indexOf(child.id) === -1),\n                });\n            }\n            service.clearRowSelection();\n            return true;\n        };\n        this._add = (name, fn) => {\n            this._disposables.add(this._dispatcher.add(name, fn));\n        };\n        this._dispatcher = dispatcher;\n        this._model = model;\n        this._service = getService('affine:database');\n        this._add('dragStart', this._onDragStart);\n        this._add('dragMove', this._onDragMove);\n        this._add('dragEnd', this._onDragEnd);\n        this._add('click', this._onClick);\n        this._add('keyDown', this._onKeydown);\n    }\n    _setColumnWidthHandleDisplay(display) {\n        this._columnWidthHandles.forEach(handle => {\n            handle.style.display = display;\n        });\n    }\n    _clearRowSelection() {\n        this._rowIds = [];\n        this._service?.clearRowSelection();\n        resetNativeSelection(null);\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n}\n//# sourceMappingURL=row.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// related component\nimport './components/column-header/column-header.js';\nimport './components/cell-container.js';\nimport './components/toolbar/toolbar.js';\nimport './components/database-title.js';\nimport { PlusIcon } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { css } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { html } from 'lit/static-html.js';\nimport { asyncFocusRichText } from '../../__internal__/index.js';\nimport { tooltipStyle } from '../../components/tooltip/tooltip.js';\nimport { onClickOutside } from '../utils.js';\nimport { registerInternalRenderer } from './components/column-type/index.js';\nimport { DataBaseRowContainer } from './components/row-container.js';\nimport { DEFAULT_COLUMN_WIDTH } from './consts.js';\nimport { CellSelectionManager } from './selection-manager/cell.js';\nimport { RowSelectionManager } from './selection-manager/row.js';\nimport { SearchState } from './types.js';\nconst styles = css `\n  affine-database-table {\n    position: relative;\n  }\n\n  .affine-database-block-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 44px;\n    margin: 18px 0 0;\n  }\n\n  .affine-database-block-table {\n    position: relative;\n    width: 100%;\n    padding-bottom: 4px;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border-top: 1.5px solid var(--affine-border-color);\n  }\n  .affine-database-block-table:hover {\n    padding-bottom: 0px;\n  }\n  .affine-database-block-table::-webkit-scrollbar {\n    -webkit-appearance: none;\n    display: block;\n  }\n  .affine-database-block-table::-webkit-scrollbar:horizontal {\n    height: 4px;\n  }\n  .affine-database-block-table::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: var(--affine-black-10);\n  }\n  .affine-database-block-table:hover::-webkit-scrollbar:horizontal {\n    height: 8px;\n  }\n  .affine-database-block-table:hover::-webkit-scrollbar-thumb {\n    border-radius: 16px;\n    background-color: var(--affine-black-30);\n  }\n  .affine-database-block-table:hover::-webkit-scrollbar-track {\n    background-color: var(--affine-hover-color);\n  }\n\n  .affine-database-table-container {\n    position: relative;\n    width: fit-content;\n    min-width: 100%;\n  }\n\n  .affine-database-block-tag-circle {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    display: inline-block;\n  }\n\n  .affine-database-block-tag {\n    display: inline-flex;\n    border-radius: 11px;\n    align-items: center;\n    padding: 0 8px;\n    cursor: pointer;\n  }\n\n  .affine-database-block-footer {\n    display: flex;\n    width: 100%;\n    height: 28px;\n    margin-top: -8px;\n  }\n  .affine-database-block-footer:hover {\n    position: relative;\n    z-index: 1;\n    background-color: var(--affine-hover-color-filled);\n  }\n  .affine-database-block-footer:hover .affine-database-block-add-row {\n    display: flex;\n  }\n\n  .affine-database-block-add-row {\n    display: none;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n    gap: 4px;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    user-select: none;\n    font-size: 14px;\n  }\n  .affine-database-block-add-row svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  ${tooltipStyle}\n`;\nlet DatabaseTable = class DatabaseTable extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this.flavour = 'affine:database';\n        this._searchState = SearchState.SearchIcon;\n        this._filteredRowIds = [];\n        this._hoverState = false;\n        this._columnRenderer = registerInternalRenderer();\n        this._initRowSelectionEvents = () => {\n            this._rowSelection = new RowSelectionManager(this.root.uiEventDispatcher, this.model);\n        };\n        this._initCellSelectionEvents = () => {\n            this._cellSelection = new CellSelectionManager(this.root.uiEventDispatcher, this.model);\n        };\n        this._setFilteredRowIds = (rowIds) => {\n            this._filteredRowIds = rowIds;\n        };\n        this._setSearchState = (state) => {\n            this._searchState = state;\n        };\n        this._onDatabaseScroll = (event) => {\n            this._columnHeaderComponent.showAddColumnButton();\n        };\n        this._onMouseOver = () => {\n            this._hoverState = true;\n        };\n        this._onMouseLeave = () => {\n            if (this._searchState === SearchState.SearchIcon) {\n                this._updateHoverState();\n            }\n        };\n        this._onClick = () => {\n            setTimeout(() => {\n                onClickOutside(this, () => {\n                    if (this._searchState !== SearchState.Searching) {\n                        this._resetHoverState();\n                        this._resetSearchState();\n                    }\n                }, 'mousedown');\n            });\n        };\n        this._addRow = (index) => {\n            if (this.readonly)\n                return;\n            const currentSearchState = this._searchState;\n            this._resetSearchState();\n            this._resetHoverState();\n            const page = this.model.page;\n            page.captureSync();\n            const id = page.addBlock('affine:paragraph', {}, this.model.id, index);\n            asyncFocusRichText(page, id);\n            // save the search state\n            this._setSearchState(currentSearchState);\n        };\n        this._addColumn = (index) => {\n            if (this.readonly)\n                return;\n            this.model.page.captureSync();\n            const currentColumns = this.model.columns;\n            const defaultColumnType = 'multi-select';\n            const renderer = this._columnRenderer.get(defaultColumnType);\n            const schema = {\n                type: defaultColumnType,\n                name: `Column ${currentColumns.length + 1}`,\n                width: DEFAULT_COLUMN_WIDTH,\n                hide: false,\n                ...renderer.propertyCreator(),\n            };\n            const id = this.model.addColumn(schema, index);\n            this.model.applyColumnUpdate();\n            requestAnimationFrame(() => {\n                this._columnHeaderComponent.setEditingColumnId(id);\n            });\n        };\n    }\n    get columnRenderer() {\n        return this._columnRenderer;\n    }\n    get columns() {\n        return this.model.columns;\n    }\n    get readonly() {\n        return this.model.page.readonly;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this._updateHoverState();\n        this._initRowSelectionEvents();\n        this._initCellSelectionEvents();\n        const disposables = this._disposables;\n        disposables.addFromEvent(this, 'mouseover', this._onMouseOver);\n        disposables.addFromEvent(this, 'mouseleave', this._onMouseLeave);\n        disposables.addFromEvent(this, 'click', this._onClick);\n        disposables.addFromEvent(this, 'keydown', this._cellSelection.onCellSelectionChange);\n    }\n    firstUpdated() {\n        this.model.propsUpdated.on(() => {\n            this.requestUpdate();\n            // TODO: optimize performance here\n            this.querySelectorAll('affine-database-cell-container').forEach(cell => {\n                cell.requestUpdate();\n            });\n            this.querySelector('affine-database-column-header')?.requestUpdate();\n        });\n        this.model.childrenUpdated.on(() => {\n            this.requestUpdate();\n            // TODO: optimize performance here\n            this.querySelectorAll('affine-database-cell-container').forEach(cell => {\n                cell.requestUpdate();\n            });\n            this.querySelector('affine-database-column-header')?.requestUpdate();\n            this._updateHoverState();\n        });\n        if (this.readonly)\n            return;\n        const tableContent = this._tableContainer.parentElement;\n        assertExists(tableContent);\n        this._disposables.addFromEvent(tableContent, 'scroll', this._onDatabaseScroll);\n    }\n    _updateHoverState() {\n        if (this.model.children.length === 0) {\n            this._hoverState = true;\n            return;\n        }\n        this._resetHoverState();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this._rowSelection.dispose();\n        this._cellSelection.dispose();\n    }\n    _resetSearchState() {\n        this._searchState = SearchState.SearchIcon;\n    }\n    _resetHoverState() {\n        this._hoverState = false;\n    }\n    render() {\n        const rows = DataBaseRowContainer(this, this._filteredRowIds, this._searchState, this.root);\n        return html `\n      <div class=\"affine-database-table\">\n        <div class=\"affine-database-block-title-container\">\n          <affine-database-title\n            .addRow=${this._addRow}\n            .targetModel=${this.model}\n          ></affine-database-title>\n          <affine-database-toolbar\n            .addRow=${this._addRow}\n            .targetModel=${this.model}\n            .hoverState=${this._hoverState}\n            .searchState=${this._searchState}\n            .setSearchState=${this._setSearchState}\n            .setFilteredRowIds=${this._setFilteredRowIds}\n          ></affine-database-toolbar>\n        </div>\n        <div class=\"affine-database-block-table\">\n          <div class=\"affine-database-table-container\">\n            <affine-database-column-header\n              .columns=${this.columns}\n              .targetModel=${this.model}\n              .addColumn=${this._addColumn}\n              .columnRenderer=${this.columnRenderer}\n            ></affine-database-column-header>\n            ${rows}\n          </div>\n        </div>\n        ${this.readonly\n            ? null\n            : html `<div class=\"affine-database-block-footer\">\n              <div\n                class=\"affine-database-block-add-row\"\n                data-test-id=\"affine-database-add-row-button\"\n                role=\"button\"\n                @click=${() => this._addRow()}\n              >\n                ${PlusIcon}<span>New Record</span>\n              </div>\n            </div>`}\n      </div>\n    `;\n    }\n};\nDatabaseTable.styles = styles;\n__decorate([\n    property()\n], DatabaseTable.prototype, \"model\", void 0);\n__decorate([\n    property()\n], DatabaseTable.prototype, \"root\", void 0);\n__decorate([\n    query('.affine-database-table-container')\n], DatabaseTable.prototype, \"_tableContainer\", void 0);\n__decorate([\n    query('affine-database-column-header')\n], DatabaseTable.prototype, \"_columnHeaderComponent\", void 0);\n__decorate([\n    state()\n], DatabaseTable.prototype, \"_searchState\", void 0);\n__decorate([\n    state()\n], DatabaseTable.prototype, \"_filteredRowIds\", void 0);\n__decorate([\n    state()\n], DatabaseTable.prototype, \"_hoverState\", void 0);\nDatabaseTable = __decorate([\n    customElement('affine-database-table')\n], DatabaseTable);\nexport { DatabaseTable };\n//# sourceMappingURL=table-view.js.map","// related component\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { html } from 'lit/static-html.js';\nimport {} from '../../__internal__/index.js';\nconst styles = css `\n  affine-database-kanban {\n    position: relative;\n  }\n`;\nlet DatabaseKanban = class DatabaseKanban extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this.flavour = 'affine:database';\n    }\n    get slots() {\n        return this.host.slots;\n    }\n    get page() {\n        return this.host.page;\n    }\n    get clipboard() {\n        return this.host.clipboard;\n    }\n    get getService() {\n        return this.host.getService;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n    }\n    render() {\n        return html `<div class=\"affine-database-kanban\">kanban view</div>`;\n    }\n};\nDatabaseKanban.styles = styles;\n__decorate([\n    property()\n], DatabaseKanban.prototype, \"model\", void 0);\n__decorate([\n    property()\n], DatabaseKanban.prototype, \"host\", void 0);\nDatabaseKanban = __decorate([\n    customElement('affine-database-kanban')\n], DatabaseKanban);\nexport { DatabaseKanban };\n//# sourceMappingURL=kanban-view.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// related component\nimport './table/table-view.js';\nimport './kanban/kanban-view.js';\nimport { BlockElement } from '@blocksuite/lit';\nimport { customElement } from 'lit/decorators.js';\nimport { html, literal, unsafeStatic } from 'lit/static-html.js';\nimport { registerService } from '../__internal__/service.js';\nimport { DatabaseBlockService } from './database-service.js';\nlet DatabaseBlockComponent = class DatabaseBlockComponent extends BlockElement {\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:database', DatabaseBlockService);\n        this.model.propsUpdated.on(() => this.requestUpdate());\n    }\n    render() {\n        const databaseTag = literal `affine-database-${unsafeStatic(this.model.mode)}`;\n        /* eslint-disable lit/binding-positions, lit/no-invalid-html */\n        return html `\n      <${databaseTag}\n        .root=${this.root}\n        .model=${this.model}\n        class=\"affine-block-element\"\n      ></${databaseTag}>\n    `;\n    }\n};\nDatabaseBlockComponent = __decorate([\n    customElement('affine-database')\n], DatabaseBlockComponent);\nexport { DatabaseBlockComponent };\n//# sourceMappingURL=database-block.js.map","export * from './database-block.js';\nexport * from './database-model.js';\nexport * from './types.js';\n//# sourceMappingURL=index.js.map","import { Slot } from '@blocksuite/store';\nimport { VARIABLES } from './css-variables.js';\nexport function extractCssVariables(element) {\n    const styles = window.getComputedStyle(element);\n    const variables = VARIABLES.reduce((acc, cssName) => {\n        const value = styles.getPropertyValue(cssName).trim();\n        acc[cssName] = value;\n        // --affine-palette-transparent: special values added for the sake of logical consistency.\n        if (cssName === '--affine-palette-transparent' && !value) {\n            acc[cssName] = '#00000000';\n        }\n        return acc;\n    }, {});\n    return variables;\n}\n/**\n * Observer theme changing by `data-theme` property\n */\nexport class ThemeObserver extends Slot {\n    constructor() {\n        super(...arguments);\n        this._mode = '';\n        this._cssVariables = null;\n    }\n    get cssVariables() {\n        return this._cssVariables;\n    }\n    observer(element) {\n        this._observer?.disconnect();\n        this._cssVariables = extractCssVariables(element);\n        this._observer = new MutationObserver(() => {\n            const mode = element.getAttribute('data-theme');\n            if (this._mode !== mode) {\n                this._cssVariables = extractCssVariables(element);\n                this.emit(this._cssVariables);\n            }\n        });\n        this._observer.observe(element, {\n            attributes: true,\n            attributeFilter: ['data-theme'],\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._observer?.disconnect();\n    }\n}\n//# sourceMappingURL=theme-observer.js.map","import { literal } from 'lit/static-html.js';\nimport { BookmarkBlockSchema } from '../bookmark-block/index.js';\nimport { CodeBlockSchema } from '../code-block/code-model.js';\nimport { DatabaseBlockSchema } from '../database-block/database-model.js';\nimport { DividerBlockSchema } from '../divider-block/divider-model.js';\nimport { EmbedBlockSchema } from '../embed-block/embed-model.js';\nimport { FrameBlockSchema } from '../frame-block/frame-model.js';\nimport { ListBlockSchema } from '../list-block/list-model.js';\nimport { PageBlockSchema } from '../page-block/page-model.js';\nimport { ParagraphBlockSchema } from '../paragraph-block/paragraph-model.js';\nimport { SurfaceBlockSchema } from '../surface-block/surface-model.js';\nexport const pagePreset = new Map([\n    [PageBlockSchema, literal `affine-default-page`],\n    [SurfaceBlockSchema, literal `affine-surface`],\n    [ListBlockSchema, literal `affine-list`],\n    [FrameBlockSchema, literal `affine-frame`],\n    [DatabaseBlockSchema, literal `affine-database`],\n    [DividerBlockSchema, literal `affine-divider`],\n    [CodeBlockSchema, literal `affine-code`],\n    [EmbedBlockSchema, literal `affine-embed`],\n    [ParagraphBlockSchema, literal `affine-paragraph`],\n    [BookmarkBlockSchema, literal `affine-bookmark`],\n]);\nexport const edgelessPreset = new Map([\n    [PageBlockSchema, literal `affine-edgeless-page`],\n    [SurfaceBlockSchema, literal `affine-surface`],\n    [ListBlockSchema, literal `affine-list`],\n    [FrameBlockSchema, literal `affine-frame`],\n    [DatabaseBlockSchema, literal `affine-database`],\n    [DividerBlockSchema, literal `affine-divider`],\n    [CodeBlockSchema, literal `affine-code`],\n    [EmbedBlockSchema, literal `affine-embed`],\n    [ParagraphBlockSchema, literal `affine-paragraph`],\n    [BookmarkBlockSchema, literal `affine-bookmark`],\n]);\n//# sourceMappingURL=index.js.map","/// <reference types=\"@blocksuite/global\" />\n// manual import to avoid being tree-shaken\nimport './page-block/index.js';\nimport './counter-block/index.js';\nimport './paragraph-block/index.js';\nimport './list-block/index.js';\nimport './frame-block/index.js';\nimport './divider-block/index.js';\nimport './__internal__/rich-text/link-node/index.js';\nimport './__internal__/rich-text/reference-node.js';\nimport './code-block/affine-code-line.js';\nimport './__internal__/rich-text/virgo/affine-text.js';\nimport './__internal__/rich-text/link-node/affine-link.js';\nimport './embed-block/index.js';\nimport './embed-block/image/index.js';\nimport './surface-block/index.js';\nimport './database-block/index.js';\nexport * from './__internal__/rich-text/rich-text-operations.js';\nexport { getServiceOrRegister } from './__internal__/service.js';\nexport * from './__internal__/theme/css-variables.js';\nexport * from './__internal__/theme/theme-observer.js';\nexport * from './__internal__/utils/active-editor-manager.js';\nexport * from './__internal__/utils/block-range.js';\nexport * from './__internal__/utils/common-operations.js';\nexport * from './__internal__/utils/filesys.js';\nexport * from './__internal__/utils/query.js';\nexport * as SelectionUtils from './__internal__/utils/selection.js';\nexport * from './__internal__/utils/std.js';\nexport * from './__internal__/utils/types.js';\nexport * from './bookmark-block/index.js';\nexport * from './code-block/index.js';\nexport { FormatQuickBar } from './components/format-quick-bar/format-bar-node.js';\nexport * from './components/index.js';\nexport * from './counter-block/index.js';\nexport * from './database-block/index.js';\nexport * from './divider-block/index.js';\nexport * from './embed-block/image/index.js';\nexport * from './embed-block/index.js';\nexport * from './frame-block/index.js';\nexport * from './list-block/index.js';\nexport * from './page-block/index.js';\nexport * from './paragraph-block/index.js';\nexport * from './preset/index.js';\nexport * from './surface-block/index.js';\nconst env = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n        ? window\n        : // @ts-ignore\n            typeof global !== 'undefined'\n                ? // @ts-ignore\n                    global\n                : {};\nconst importIdentifier = '__ $BLOCKSUITE_BLOCKS$ __';\nif (env[importIdentifier] === true) {\n    // https://github.com/yjs/yjs/issues/438\n    console.error('@blocksuite/blocks was already imported. This breaks constructor checks and will lead to issues!');\n}\nif (typeof window === 'undefined') {\n    throw new Error('Seems like you are importing @blocksuite/blocks in SSR mode. Which is not supported for now.');\n}\nenv[importIdentifier] = true;\n//# sourceMappingURL=index.js.map","import { BaseService } from '../__internal__/service/index.js';\nimport { json2block } from '../__internal__/service/json2block.js';\nexport class ListBlockService extends BaseService {\n    block2html(block, { childText = '', begin, end } = {}) {\n        let text = super.block2html(block, {\n            childText,\n            begin,\n            end,\n        });\n        const previousSiblingBlock = block.page.getPreviousSibling(block);\n        const nextSiblingBlock = block.page.getNextSibling(block);\n        switch (block.type) {\n            case 'bulleted':\n            case 'toggle':\n                text = `<li>${text}</li>`;\n                break;\n            case 'numbered':\n                text = `<li>${text}</li>`;\n                break;\n            case 'todo':\n                text = `<li><input disabled type=\"checkbox\" ${block.checked ? 'checked' : ''}>${text}</li>`;\n                break;\n            default:\n                break;\n        }\n        if (previousSiblingBlock?.flavour !== block.flavour ||\n            previousSiblingBlock.type !== block.type) {\n            switch (block.type) {\n                case 'bulleted':\n                case 'toggle':\n                case 'todo':\n                    text = `<ul>${text}`;\n                    break;\n                case 'numbered':\n                    text = `<ol>${text}`;\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (nextSiblingBlock?.flavour !== block.flavour ||\n            nextSiblingBlock.type !== block.type) {\n            switch (block.type) {\n                case 'bulleted':\n                case 'toggle':\n                case 'todo':\n                    text = `${text}</ul>`;\n                    break;\n                case 'numbered':\n                    text = `${text}</ol>`;\n                    break;\n                default:\n                    break;\n            }\n        }\n        return text;\n    }\n    async json2Block(focusedBlockModel, pastedBlocks, range) {\n        const convertToPastedIfEmpty = pastedBlocks[0].flavour !== 'affine:list';\n        return json2block(focusedBlockModel, pastedBlocks, {\n            range,\n            convertToPastedIfEmpty,\n        });\n    }\n}\n//# sourceMappingURL=list-service.js.map","function number2letter(n) {\n    const ordA = 'a'.charCodeAt(0);\n    const ordZ = 'z'.charCodeAt(0);\n    const len = ordZ - ordA + 1;\n    let s = '';\n    while (n >= 0) {\n        s = String.fromCharCode((n % len) + ordA) + s;\n        n = Math.floor(n / len) - 1;\n    }\n    return s;\n}\n// Derive from https://gist.github.com/imilu/00f32c61e50b7ca296f91e9d96d8e976\nexport function number2roman(num) {\n    const lookup = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1,\n    };\n    let romanStr = '';\n    for (const i in lookup) {\n        while (num >= lookup[i]) {\n            romanStr += i;\n            num -= lookup[i];\n        }\n    }\n    return romanStr;\n}\nfunction getPrefix(depth, index) {\n    const map = [() => index + 1, number2letter, () => number2roman(index + 1)];\n    return map[depth % map.length](index);\n}\nexport function getNumberPrefix(index, depth) {\n    const prefix = getPrefix(depth, index);\n    return `${prefix} .`;\n}\n//# sourceMappingURL=get-number-prefix.js.map","import { html } from 'lit';\nimport { getNumberPrefix } from './get-number-prefix.js';\nimport { checkboxChecked, checkboxUnchecked, points, toggleDown, toggleRight, } from './icons.js';\nexport function ListIcon(model, index, depth, showChildren, onClick) {\n    const icon = (() => {\n        switch (model.type) {\n            case 'bulleted':\n                return points[depth % points.length];\n            case 'numbered':\n                return getNumberPrefix(index, depth);\n            case 'todo':\n                return model.checked ? checkboxChecked() : checkboxUnchecked();\n            case 'toggle':\n                return showChildren\n                    ? toggleDown()\n                    : toggleRight(model.children.length > 0);\n            default:\n                return '';\n        }\n    })();\n    return html `\n    <div\n      class=\"affine-list-block__prefix ${model.type === 'todo'\n        ? 'affine-list-block__todo-prefix'\n        : ''}\"\n      @click=\"${(e) => onClick(e)}\"\n    >\n      ${icon}\n    </div>\n  `;\n}\n//# sourceMappingURL=get-list-icon.js.map","const getIndex = (model) => {\n    const siblings = model.page.getParent(model)?.children || [];\n    const fakeIndex = siblings.findIndex(v => v === model);\n    // fakeIndex is the index of the model in the parent's children array\n    // but we need to filter out the other list items\n    let index = 0;\n    for (let i = 0; i < fakeIndex; i++) {\n        if (siblings[i].flavour === model.flavour &&\n            siblings[i].type === model.type) {\n            index += 1;\n        }\n        else {\n            index = 0;\n        }\n    }\n    return index;\n};\nconst getListDeep = (model) => {\n    let deep = 0;\n    let parent = model.page.getParent(model);\n    while (parent?.flavour === model.flavour) {\n        deep++;\n        parent = model.page.getParent(parent);\n    }\n    return deep;\n};\nexport const getListInfo = (model) => {\n    const deep = getListDeep(model);\n    const index = getIndex(model);\n    return { deep, index };\n};\n//# sourceMappingURL=get-list-info.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference types=\"vite/client\" />\nimport '../__internal__/rich-text/rich-text.js';\nimport { BLOCK_CHILDREN_CONTAINER_PADDING_LEFT } from '@blocksuite/global/config';\nimport { BlockElement } from '@blocksuite/lit';\nimport { assertExists } from '@blocksuite/store';\nimport { css, html, nothing } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { getPageBlock } from '../__internal__/index.js';\nimport { attributeRenderer } from '../__internal__/rich-text/virgo/attribute-renderer.js';\nimport { affineTextAttributes, } from '../__internal__/rich-text/virgo/types.js';\nimport { registerService } from '../__internal__/service.js';\nimport { DefaultPageBlockComponent } from '../index.js';\nimport { ListBlockService } from './list-service.js';\nimport { ListIcon } from './utils/get-list-icon.js';\nimport { getListInfo } from './utils/get-list-info.js';\nlet ListBlockComponent = class ListBlockComponent extends BlockElement {\n    constructor() {\n        super(...arguments);\n        this.showChildren = true;\n        this.textSchema = {\n            attributesSchema: affineTextAttributes,\n            textRenderer: attributeRenderer,\n        };\n        this._onClickIcon = (e) => {\n            e.stopPropagation();\n            if (this.model.type === 'toggle') {\n                this.showChildren = !this.showChildren;\n                return;\n            }\n            else if (this.model.type === 'todo') {\n                this.model.page.captureSync();\n                const checkedPropObj = { checked: !this.model.checked };\n                this.model.page.updateBlock(this.model, checkedPropObj);\n                return;\n            }\n            this._select();\n        };\n    }\n    _select() {\n        const pageBlock = getPageBlock(this.model);\n        assertExists(pageBlock);\n        if (pageBlock instanceof DefaultPageBlockComponent) {\n            pageBlock.selection.selectOneBlock(this);\n        }\n    }\n    firstUpdated() {\n        this.model.propsUpdated.on(() => this.requestUpdate());\n        this.model.childrenUpdated.on(() => this.requestUpdate());\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:list', ListBlockService);\n    }\n    render() {\n        const { deep, index } = getListInfo(this.model);\n        const { model, showChildren, _onClickIcon } = this;\n        const listIcon = ListIcon(model, index, deep, showChildren, _onClickIcon);\n        // For the first list item, we need to add a margin-top to make it align with the text\n        const shouldAddMarginTop = index === 0 && deep === 0;\n        const children = html `<div\n      class=\"affine-block-children-container\"\n      style=\"padding-left: ${BLOCK_CHILDREN_CONTAINER_PADDING_LEFT}px\"\n    >\n      ${this.content}\n    </div>`;\n        return html `\n      <div\n        class=${`affine-list-block-container ${shouldAddMarginTop ? 'affine-list-block-container--first' : ''}`}\n      >\n        <div\n          class=${`affine-list-rich-text-wrapper ${this.model.checked ? 'affine-list--checked' : ''}`}\n        >\n          ${listIcon}\n          <rich-text\n            .model=${this.model}\n            .textSchema=${this.textSchema}\n          ></rich-text>\n        </div>\n        ${this.showChildren ? children : nothing}\n      </div>\n    `;\n    }\n};\nListBlockComponent.styles = css `\n    .affine-list-block-container {\n      box-sizing: border-box;\n      border-radius: 5px;\n      margin-top: 2px;\n    }\n    .affine-list-block-container--first {\n      margin-top: var(--affine-paragraph-space);\n    }\n    .affine-list-block-container .affine-list-block-container {\n      margin-top: 0;\n    }\n    .affine-list-block-container.selected {\n      background-color: var(--affine-hover-color);\n    }\n    .affine-list-rich-text-wrapper {\n      display: flex;\n      align-items: center;\n    }\n    .affine-list-rich-text-wrapper rich-text {\n      flex: 1;\n    }\n\n    .affine-list-block__prefix {\n      flex-shrink: 0;\n      min-width: 26px;\n      height: 26px;\n      margin-right: 4px;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      align-self: flex-start;\n      color: var(--affine-list-color);\n      font-size: 14px;\n      line-height: var(--affine-line-height);\n      user-select: none;\n    }\n    .affine-list-block__todo-prefix {\n      cursor: pointer;\n    }\n    .affine-list-block__todo {\n      width: 16px;\n      height: 16px;\n      border-radius: 4px;\n      border: 1px solid var(--affine-icon-color);\n    }\n    .affine-list-block__todo.affine-list-block__todo--active {\n      background: var(--affine-icon-color);\n    }\n\n    .affine-list--checked {\n      color: var(--affine-icon-color);\n    }\n  `;\n__decorate([\n    state()\n], ListBlockComponent.prototype, \"showChildren\", void 0);\nListBlockComponent = __decorate([\n    customElement('affine-list')\n], ListBlockComponent);\nexport { ListBlockComponent };\n//# sourceMappingURL=list-block.js.map","export * from './list-block.js';\nexport * from './list-model.js';\nexport * from './list-service.js';\n//# sourceMappingURL=index.js.map","import { html } from 'lit';\nexport const point1 = () => {\n    return html `\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <circle cx=\"12\" cy=\"12\" r=\"2\" />\n    </svg>\n  `;\n};\nexport const point2 = () => {\n    return html `\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M12 13.5C12.8284 13.5 13.5 12.8284 13.5 12C13.5 11.1716 12.8284 10.5 12 10.5C11.1716 10.5 10.5 11.1716 10.5 12C10.5 12.8284 11.1716 13.5 12 13.5ZM12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z\"\n      />\n    </svg>\n  `;\n};\nexport const point3 = () => {\n    return html `\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        d=\"M11.6056 10.1634C11.8234 9.94555 12.1766 9.94555 12.3944 10.1634L13.8366 11.6056C14.0545 11.8234 14.0545 12.1766 13.8366 12.3944L12.3944 13.8366C12.1766 14.0545 11.8234 14.0545 11.6056 13.8366L10.1634 12.3944C9.94555 12.1766 9.94555 11.8234 10.1634 11.6056L11.6056 10.1634Z\"\n      />\n    </svg>\n  `;\n};\nexport const point4 = () => {\n    return html `\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M13.4422 12L12 10.5578L10.5578 12L12 13.4422L13.4422 12ZM12.3944 10.1634C12.1766 9.94555 11.8234 9.94555 11.6056 10.1634L10.1634 11.6056C9.94555 11.8234 9.94555 12.1766 10.1634 12.3944L11.6056 13.8366C11.8234 14.0545 12.1766 14.0545 12.3944 13.8366L13.8366 12.3944C14.0545 12.1766 14.0545 11.8234 13.8366 11.6056L12.3944 10.1634Z\"\n        fill=\"#7389FD\"\n      />\n    </svg>\n  `;\n};\nexport const toggleRight = (enabled = true) => {\n    return html `\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-is-toggle-icon=\"true\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 20 20\"\n    >\n      <path\n        data-is-toggle-icon=\"true\"\n        fill=\"currentColor\"\n        opacity=\"${!enabled ? '0.6' : '1'}\"\n        d=\"m15.795 11.272l-8 5A1.5 1.5 0 0 1 5.5 15V5a1.5 1.5 0 0 1 2.295-1.272l8 5a1.5 1.5 0 0 1 0 2.544Z\"\n      />\n    </svg>\n  `;\n};\nexport const toggleDown = () => {\n    return html `\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-is-toggle-icon=\"true\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 20 20\"\n      @mousedown=\"${(e) => {\n        // console.log('preventing def svg');\n        // e.preventDefault();\n    }}\"\n    >\n      <path\n        data-is-toggle-icon=\"true\"\n        fill=\"currentColor\"\n        d=\"m8.728 15.795l-5-8A1.5 1.5 0 0 1 5 5.5h10a1.5 1.5 0 0 1 1.272 2.295l-5 8a1.5 1.5 0 0 1-2.544 0Z\"\n      />\n    </svg>\n  `;\n};\nexport const chevronCircleRight = (enabled = true) => {\n    return html `\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        opacity=\"${!enabled ? '0.6' : '1'}\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504S8 393 8 256S119 8 256 8zm113.9 231L234.4 103.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L285.1 256L183.5 357.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L369.9 273c9.4-9.4 9.4-24.6 0-34z\"\n      />\n    </svg>\n  `;\n};\nexport const chevronCircleDown = () => {\n    return html `\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M504 256c0 137-111 248-248 248S8 393 8 256S119 8 256 8s248 111 248 248zM273 369.9l135.5-135.5c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L256 285.1L154.4 183.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L239 369.9c9.4 9.4 24.6 9.4 34 0z\"\n      />\n    </svg>\n  `;\n};\nexport const checkboxChecked = () => {\n    return html `\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M7 4C5.34315 4 4 5.34315 4 7V17C4 18.6569 5.34315 20 7 20H17C18.6569 20 20 18.6569 20 17V7C20 5.34315 18.6569 4 17 4H7ZM17.5665 9.56473C17.8785 9.25181 17.8776 8.74528 17.5647 8.43336C17.2518 8.12144 16.7453 8.12225 16.4334 8.43517L10.3547 14.5333L7.56666 11.7352C7.2548 11.4222 6.74827 11.4213 6.43529 11.7331C6.1223 12.045 6.12139 12.5515 6.43325 12.8645L9.64626 16.0891C10.037 16.4813 10.672 16.4814 11.0629 16.0893L17.5665 9.56473Z\"\n        fill=\"#A6ABB7\"\n      />\n    </svg>\n  `;\n};\nexport const checkboxUnchecked = () => {\n    return html `\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M17 5.6H7C6.2268 5.6 5.6 6.2268 5.6 7V17C5.6 17.7732 6.2268 18.4 7 18.4H17C17.7732 18.4 18.4 17.7732 18.4 17V7C18.4 6.2268 17.7732 5.6 17 5.6ZM7 4C5.34315 4 4 5.34315 4 7V17C4 18.6569 5.34315 20 7 20H17C18.6569 20 20 18.6569 20 17V7C20 5.34315 18.6569 4 17 4H7Z\"\n        fill=\"#A6ABB7\"\n      />\n    </svg>\n  `;\n};\nexport const points = [point1(), point2(), point3(), point4()];\n//# sourceMappingURL=icons.js.map","import { BLOCK_CHILDREN_CONTAINER_PADDING_LEFT, BLOCK_SERVICE_LOADING_ATTR, DRAG_HANDLE_OFFSET_LEFT, } from '@blocksuite/global/config';\nimport { assertExists, matchFlavours } from '@blocksuite/global/utils';\nimport { copyBlocks } from '../../__internal__/clipboard/index.js';\nimport {} from '../../__internal__/index.js';\nimport { getBlockElementById, getBlockElementByModel, getBlockElementsExcludeSubtrees, getClosestBlockElementByPoint, getModelByBlockElement, isInSamePath, } from '../../__internal__/index.js';\nimport { getService, getServiceOrRegister, } from '../../__internal__/service.js';\nimport { DragHandle } from '../../components/index.js';\nimport { toast } from '../../components/toast.js';\nfunction hasOptionBar(block) {\n    if (block.flavour === 'affine:code')\n        return true;\n    if (block.flavour === 'affine:embed' && block.type === 'image')\n        return true;\n    return false;\n}\nfunction getBlockWithOptionBarRect(hoverDom, block) {\n    if (hoverDom.hasAttribute(BLOCK_SERVICE_LOADING_ATTR)) {\n        return hoverDom;\n    }\n    if (block.flavour === 'affine:code') {\n        const codeBlockDom = hoverDom.querySelector('.affine-code-block-container');\n        assertExists(codeBlockDom);\n        return codeBlockDom;\n    }\n    else if (block.flavour === 'affine:embed' && block.type === 'image') {\n        const imgElement = hoverDom.querySelector('.resizable-img');\n        assertExists(imgElement);\n        return imgElement;\n    }\n    throw new Error('unreachable');\n}\nfunction getDetectRect(block, blockRect) {\n    const detectRect = copyRect(blockRect);\n    // there is a optionBar on the right side\n    if (block.flavour === 'affine:code') {\n        detectRect.width += 52;\n    }\n    else if (block.flavour === 'affine:embed' && block.type === 'image') {\n        detectRect.width += 50;\n    }\n    return detectRect;\n}\n// Workaround native DOMRect clone issue in #632\n// See https://stackoverflow.com/questions/42713229/getboundingclientrect-object-properties-cannot-be-copied\nfunction copyRect(rect) {\n    const { top, right, bottom, left, width, height, x, y } = rect;\n    return { top, right, bottom, left, width, height, x, y };\n}\nexport function getBlockEditingStateByPosition(blocks, x, y, options) {\n    const end = blocks.length - 1;\n    if (end === -1)\n        return null;\n    const start = 0;\n    return binarySearchBlockEditingState(blocks, x, y, start, end, options);\n}\nexport function getBlockEditingStateByCursor(blocks, x, y, cursor, options) {\n    let end = blocks.length - 1;\n    if (end === -1)\n        return null;\n    const size = options?.size || 5;\n    const start = Math.max(cursor - size, 0);\n    end = Math.min(cursor + size, end);\n    return binarySearchBlockEditingState(blocks, x, y, start, end, options);\n}\n// seek range: [start, end]\nfunction binarySearchBlockEditingState(blocks, x, y, start, end, options) {\n    const noSkipX = !options?.skipX;\n    const dragging = !!options?.dragging;\n    let containerLeft = 0;\n    if (noSkipX) {\n        const firstBlock = getBlockAndRect(blocks, 0);\n        containerLeft = firstBlock.blockRect.left;\n    }\n    let inside = false;\n    while (start <= end) {\n        const mid = start + Math.floor((end - start) / 2);\n        const { block, blockRect, detectRect, hoverDom } = getBlockAndRect(blocks, mid);\n        // if the detectRect is not in the view port, it's definitely not the block we want\n        if (detectRect.top > window.innerHeight) {\n            end = mid - 1;\n            continue;\n        }\n        else if (detectRect.bottom < 0) {\n            start = mid + 1;\n            continue;\n        }\n        // code block use async loading\n        if (block.flavour === 'affine:code' && !hoverDom) {\n            // @TODO: need more tests\n            if (mid === start || mid === end) {\n                return null;\n            }\n            // may have consecutive code blocks\n            let result = binarySearchBlockEditingState(blocks, x, y, mid + 1, end, options);\n            if (result) {\n                return result;\n            }\n            result = binarySearchBlockEditingState(blocks, x, y, start, mid - 1, options);\n            return result;\n        }\n        else if (matchFlavours(block, ['affine:database'])) {\n            // double check when current block is database block\n            const result = binarySearchBlockEditingState(blocks, x, y, mid + 1, end, options);\n            if (result) {\n                return result;\n            }\n        }\n        !inside && (inside = y >= detectRect.top && y <= detectRect.bottom);\n        if (inside) {\n            assertExists(blockRect);\n            if (noSkipX) {\n                if (dragging) {\n                    x = Math.max(x + DRAG_HANDLE_OFFSET_LEFT, containerLeft);\n                    let n = mid - 1;\n                    if (n > 0) {\n                        let depth = Math.floor((blockRect.left - containerLeft) /\n                            BLOCK_CHILDREN_CONTAINER_PADDING_LEFT);\n                        while (n >= 0 && depth >= 0) {\n                            const result = getBlockAndRect(blocks, n);\n                            if (result.hoverDom.compareDocumentPosition(hoverDom) &\n                                Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                                if (x >= result.blockRect.left && x < blockRect.left) {\n                                    return {\n                                        rect: result.blockRect,\n                                        model: result.block,\n                                        element: result.hoverDom,\n                                    };\n                                }\n                                else {\n                                    depth--;\n                                    n--;\n                                }\n                            }\n                            else {\n                                n--;\n                            }\n                        }\n                    }\n                }\n                else {\n                    // y-coord is checked before\n                    if (!isPointIn(x, detectRect)) {\n                        return null;\n                    }\n                }\n            }\n            return {\n                rect: blockRect,\n                model: block,\n                element: hoverDom,\n            };\n        }\n        if (detectRect.top > y) {\n            end = mid - 1;\n        }\n        else if (detectRect.bottom < y) {\n            start = mid + 1;\n        }\n        // if search failed, it may be caused by the mouse fall between two blocks\n        if (start > end) {\n            let targetIndex = -1;\n            // now start = end + 1, eg: [0, 1, ..., end start ..., blocks.length - 1]\n            if (start === blocks.length) {\n                targetIndex = end;\n            }\n            else if (end === -1) {\n                targetIndex = start;\n            }\n            else {\n                const { detectRect: prevDetectRect } = getBlockAndRect(blocks, end);\n                const { detectRect: nextDetectRect } = getBlockAndRect(blocks, start);\n                if (y <\n                    prevDetectRect.bottom +\n                        (nextDetectRect.top - prevDetectRect.bottom) / 2) {\n                    // nearer to prevDetectRect\n                    targetIndex = end;\n                }\n                else {\n                    // nearer to nextDetectRect\n                    targetIndex = start;\n                }\n            }\n            inside = true;\n            start = end = targetIndex;\n        }\n    }\n    return null;\n}\nfunction isPointIn(x, detectRect) {\n    return x >= detectRect.left && x <= detectRect.left + detectRect.width;\n}\nconst offscreen = document.createElement('div');\nfunction getBlockAndRect(blocks, mid) {\n    const block = blocks[mid];\n    let hoverDom = getBlockElementById(block.id);\n    // Give an empty position (xywh=0,0,0,0) for invisible blocks.\n    // Block may be hidden, e.g., inside a toggle list, see https://github.com/toeverything/blocksuite/pull/1139)\n    if (!hoverDom) {\n        hoverDom = offscreen;\n    }\n    assertExists(hoverDom);\n    let blockRect = null;\n    let detectRect = null;\n    if (hasOptionBar(block)) {\n        blockRect = getBlockWithOptionBarRect(hoverDom, block).getBoundingClientRect();\n        detectRect = getDetectRect(block, blockRect);\n    }\n    else {\n        blockRect = hoverDom.getBoundingClientRect();\n        if (block.flavour === 'affine:database') {\n            // in a database block, `.affine-database-block-title` which is its own editing area\n            detectRect = hoverDom\n                ?.querySelector('.affine-database-block-title')\n                ?.getBoundingClientRect();\n        }\n        else if (block.children.length) {\n            // in a nested block, `rich-text` which is its own editing area\n            detectRect = hoverDom\n                ?.querySelector('rich-text')\n                ?.getBoundingClientRect();\n        }\n        else {\n            detectRect = blockRect;\n        }\n    }\n    return {\n        block,\n        hoverDom,\n        blockRect,\n        detectRect,\n    };\n}\nexport async function downloadImage(model) {\n    const img = await getUrlByModel(model);\n    if (!img) {\n        return;\n    }\n    const arrayBuffer = await img.arrayBuffer();\n    const buffer = new Uint8Array(arrayBuffer);\n    let fileType;\n    if (buffer[0] === 0x47 &&\n        buffer[1] === 0x49 &&\n        buffer[2] === 0x46 &&\n        buffer[3] === 0x38) {\n        fileType = 'image/gif';\n    }\n    else if (buffer[0] === 0x89 &&\n        buffer[1] === 0x50 &&\n        buffer[2] === 0x4e &&\n        buffer[3] === 0x47) {\n        fileType = 'image/png';\n    }\n    else if (buffer[0] === 0xff &&\n        buffer[1] === 0xd8 &&\n        buffer[2] === 0xff &&\n        buffer[3] === 0xe0) {\n        fileType = 'image/jpeg';\n    }\n    else {\n        // unknown, fallback to png\n        console.error('unknown image type');\n        fileType = 'image/png';\n    }\n    const downloadUrl = URL.createObjectURL(new Blob([arrayBuffer], { type: fileType }));\n    const a = document.createElement('a');\n    const event = new MouseEvent('click');\n    a.download = 'image';\n    a.href = downloadUrl;\n    a.dispatchEvent(event);\n    // cleanup\n    a.remove();\n    URL.revokeObjectURL(downloadUrl);\n}\nexport async function copyImage(model) {\n    copyBlocks({\n        type: 'Block',\n        models: [model],\n        startOffset: 0,\n        endOffset: 0,\n    });\n    toast('Copied image to clipboard');\n}\nfunction getTextDelta(model) {\n    if (!model.text) {\n        return [];\n    }\n    return model.text.toDelta();\n}\n// TODO merge with copy-cut-manager\nexport async function copyBlock(model) {\n    const copyType = 'blocksuite/x-c+w';\n    const delta = getTextDelta(model);\n    const copyData = {\n        data: [\n            {\n                type: model.type,\n                flavour: model.flavour,\n                sourceId: model.sourceId,\n                text: delta,\n                children: [],\n            },\n        ],\n    };\n    const copySuccess = performNativeCopy([\n        { mimeType: copyType, data: JSON.stringify(copyData) },\n        { mimeType: 'text/plain', data: model.text?.toString() || '' },\n    ]);\n    return copySuccess;\n}\nfunction performNativeCopy(items) {\n    let success = false;\n    const tempElem = document.createElement('textarea');\n    tempElem.value = 'temp';\n    document.body.appendChild(tempElem);\n    tempElem.select();\n    tempElem.setSelectionRange(0, tempElem.value.length);\n    const listener = (e) => {\n        const clipboardData = e.clipboardData;\n        if (clipboardData) {\n            items.forEach(item => clipboardData.setData(item.mimeType, item.data));\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        tempElem.removeEventListener('copy', listener);\n    };\n    tempElem.addEventListener('copy', listener);\n    try {\n        success = document.execCommand('copy');\n    }\n    finally {\n        tempElem.removeEventListener('copy', listener);\n        document.body.removeChild(tempElem);\n    }\n    return success;\n}\nexport function focusCaption(model) {\n    const blockEle = getBlockElementByModel(model);\n    assertExists(blockEle);\n    const dom = blockEle.querySelector('.affine-embed-wrapper-caption');\n    dom.classList.add('caption-show');\n    dom.focus();\n}\nasync function getUrlByModel(model) {\n    assertExists(model.sourceId);\n    const store = await model.page.blobs;\n    const url = store?.get(model.sourceId);\n    return url;\n}\nexport function copyCode(codeBlockModel) {\n    copyBlocks({\n        type: 'Block',\n        models: [codeBlockModel],\n        startOffset: 0,\n        endOffset: 0,\n    });\n    toast('Copied to clipboard');\n}\nexport function getAllowSelectedBlocks(model) {\n    const result = [];\n    const blocks = model.children.slice();\n    const dfs = (blocks) => {\n        for (const block of blocks) {\n            if (block.flavour !== 'affine:frame') {\n                result.push(block);\n            }\n            block.children.length && dfs(block.children);\n        }\n    };\n    dfs(blocks);\n    return result;\n}\nexport function createDragHandle(pageBlock) {\n    return new DragHandle({\n        // drag handle should be the same level with editor-container\n        container: pageBlock.mouseRoot,\n        onDropCallback(_point, blockElements, editingState, type) {\n            if (!editingState || type === 'none')\n                return;\n            const { model } = editingState;\n            const page = pageBlock.page;\n            const models = getBlockElementsExcludeSubtrees(blockElements).map(getModelByBlockElement);\n            if (models.length === 1 && isInSamePath(page, model, models[0]))\n                return;\n            page.captureSync();\n            const parent = page.getParent(model);\n            const dragBlockParent = page.getParent(models[0]);\n            if (type === 'database') {\n                page.moveBlocks(models, model);\n            }\n            else {\n                assertExists(parent);\n                page.moveBlocks(models, parent, model, type === 'before');\n            }\n            // unneeded\n            // pageBlock.selection.clear();\n            // pageBlock.selection.state.type = 'block';\n            pageBlock.updateComplete.then(() => {\n                if (dragBlockParent &&\n                    matchFlavours(dragBlockParent, ['affine:database'])) {\n                    const service = getService('affine:database');\n                    service.refreshRowSelection();\n                }\n                if (parent && matchFlavours(parent, ['affine:database'])) {\n                    pageBlock.selection.clear();\n                    return;\n                }\n                // update selection rects\n                // block may change its flavour after moved.\n                requestAnimationFrame(() => {\n                    pageBlock.selection.setSelectedBlocks(blockElements\n                        .map(b => getBlockElementById(b.model.id))\n                        .filter((b) => !!b));\n                });\n            });\n        },\n        setDragType(dragging) {\n            pageBlock.selection.state.type = dragging ? 'block:drag' : 'block';\n        },\n        setSelectedBlock(modelState, element) {\n            if (element && element.closest('affine-database')) {\n                const service = getService('affine:database');\n                const toggled = service.toggleRowSelection(element);\n                if (toggled) {\n                    pageBlock.selection.clear();\n                    return;\n                }\n            }\n            const model = modelState?.model;\n            if (model) {\n                const parent = model.page.getParent(model);\n                if (parent && matchFlavours(parent, ['affine:database'])) {\n                    const service = getService('affine:database');\n                    service.setRowSelectionByElement(modelState.element);\n                    return;\n                }\n            }\n            pageBlock.selection.selectOneBlock(modelState?.element, modelState?.rect);\n            const service = getServiceOrRegister('affine:database');\n            Promise.resolve(service).then(service => {\n                const rowSelection = service.getLastRowSelection();\n                if (rowSelection) {\n                    service.clearRowSelection();\n                }\n            });\n        },\n        getSelectedBlocks() {\n            return pageBlock.selection.state.selectedBlocks;\n        },\n        getClosestBlockElement(point) {\n            return getClosestBlockElementByPoint(point, {\n                rect: pageBlock.innerRect,\n            });\n        },\n    });\n}\n//# sourceMappingURL=utils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { TransparentIcon } from '@blocksuite/global/config';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nexport class ColorEvent extends Event {\n    constructor(type, { detail, composed, bubbles, }) {\n        super(type, { bubbles, composed });\n        this.detail = detail;\n    }\n}\n// export class ColorEvent extends CustomEvent<RawCssVariableNames> {}\nconst DEFAULT_COLORS = [\n    '--affine-palette-line-yellow',\n    '--affine-palette-line-orange',\n    '--affine-palette-line-tangerine',\n    '--affine-palette-line-red',\n    '--affine-palette-line-magenta',\n    '--affine-palette-line-purple',\n    '--affine-palette-line-green',\n    '--affine-palette-line-blue',\n    '--affine-palette-line-navy',\n    '--affine-palette-line-black',\n    '--affine-palette-line-grey',\n    '--affine-palette-line-white',\n];\nexport const DEFAULT_SELECTED_COLOR = DEFAULT_COLORS[9];\nexport function isTransparent(color) {\n    return color.toLowerCase() === '--affine-palette-transparent';\n}\nfunction isSameColorWithBackground(color) {\n    return [\n        '--affine-palette-line-white',\n        '--affine-palette-shape-white',\n    ].includes(color.toLowerCase());\n}\nfunction TransparentColor(hollowCircle = false) {\n    const containerStyle = {\n        position: 'relative',\n        width: '16px',\n        height: '16px',\n        stroke: 'none',\n    };\n    const maskStyle = {\n        position: 'absolute',\n        width: '10px',\n        height: '10px',\n        left: '3px',\n        top: '3.5px',\n        borderRadius: '50%',\n        background: 'var(--affine-popover-background)',\n    };\n    const mask = hollowCircle\n        ? html `<div style=${styleMap(maskStyle)}></div>`\n        : nothing;\n    return html `<div style=${styleMap(containerStyle)}>\n    ${TransparentIcon} ${mask}\n  </div>`;\n}\nfunction BorderedHollowCircle(color) {\n    const strokeWidth = isSameColorWithBackground(color) ? 1 : 0;\n    const style = {\n        fill: `var(${color})`,\n        stroke: 'var(--affine-border-color)',\n    };\n    return html `<svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M12.3125 8C12.3125 10.3817 10.3817 12.3125 8 12.3125C5.61827 12.3125 3.6875 10.3817 3.6875 8C3.6875 5.61827 5.61827 3.6875 8 3.6875C10.3817 3.6875 12.3125 5.61827 12.3125 8ZM8 15.5C12.1421 15.5 15.5 12.1421 15.5 8C15.5 3.85786 12.1421 0.5 8 0.5C3.85786 0.5 0.5 3.85786 0.5 8C0.5 12.1421 3.85786 15.5 8 15.5Z\"\n      stroke-width=\"${strokeWidth}\"\n      style=${styleMap(style)}\n    />\n  </svg> `;\n}\nfunction AdditionIcon(color, hollowCircle) {\n    if (isTransparent(color)) {\n        return TransparentColor(hollowCircle);\n    }\n    if (hollowCircle) {\n        return BorderedHollowCircle(color);\n    }\n    return nothing;\n}\nexport function ColorUnit(color, { hollowCircle, letter, } = {}) {\n    const additionIcon = AdditionIcon(color, !!hollowCircle);\n    const colorStyle = !hollowCircle ? { background: `var(${color})` } : {};\n    const borderStyle = isSameColorWithBackground(color) && !hollowCircle\n        ? {\n            border: '1px solid var(--affine-border-color)',\n        }\n        : {};\n    const style = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '16px',\n        height: '16px',\n        borderRadius: '50%',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        ...borderStyle,\n        ...colorStyle,\n    };\n    return html `<div\n    class=\"color-unit\"\n    style=${styleMap(style)}\n    aria-label=${color.toLowerCase()}\n    data-letter=${letter ? 'A' : ''}\n  >\n    ${additionIcon}\n  </div>`;\n}\nlet EdgelessColorPanel = class EdgelessColorPanel extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.options = DEFAULT_COLORS;\n        this.showLetterMark = false;\n        this.hollowCircle = false;\n    }\n    _onSelect(value) {\n        this.dispatchEvent(new ColorEvent('select', {\n            detail: value,\n            composed: true,\n            bubbles: true,\n        }));\n        this.value = value;\n    }\n    render() {\n        return repeat(this.options, color => color, color => {\n            const unit = ColorUnit(color, {\n                hollowCircle: this.hollowCircle,\n                letter: this.showLetterMark,\n            });\n            return html `\n          <div\n            class=\"color-container\"\n            ?active=${color === this.value}\n            @click=${() => this._onSelect(color)}\n          >\n            ${unit}\n          </div>\n        `;\n        });\n    }\n};\nEdgelessColorPanel.styles = css `\n    :host {\n      display: flex;\n      width: 204px;\n      padding: 8px 12px;\n      flex-direction: row;\n      flex-wrap: wrap;\n      gap: 12px;\n      box-sizing: border-box;\n      background: var(--affine-popover-background);\n    }\n\n    .color-container {\n      display: flex;\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      box-sizing: border-box;\n      align-items: center;\n      justify-content: center;\n      overflow: hidden;\n      cursor: pointer;\n    }\n\n    .color-container[active] {\n      border: 1px solid var(--affine-primary-color);\n    }\n\n    .color-unit::before {\n      content: attr(data-letter);\n      display: block;\n      font-size: 12px;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessColorPanel.prototype, \"value\", void 0);\n__decorate([\n    property()\n], EdgelessColorPanel.prototype, \"options\", void 0);\n__decorate([\n    property()\n], EdgelessColorPanel.prototype, \"showLetterMark\", void 0);\n__decorate([\n    property()\n], EdgelessColorPanel.prototype, \"hollowCircle\", void 0);\nEdgelessColorPanel = __decorate([\n    customElement('edgeless-color-panel')\n], EdgelessColorPanel);\nexport { EdgelessColorPanel };\n//# sourceMappingURL=color-panel.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AlighLeftIcon, AlignCenterIcon, AlignRightIcon, } from '@blocksuite/global/config';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nlet EdgelessAlignPanel = class EdgelessAlignPanel extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.value = 'left';\n    }\n    _onSelect(value) {\n        this.value = value;\n        if (this.onSelect) {\n            this.onSelect(value);\n        }\n    }\n    render() {\n        return html `\n      <div class=\"align-panel-container\">\n        <edgeless-tool-icon-button\n          .tooltip=${'Left'}\n          .active=${this.value === 'left'}\n          @click=${() => {\n            this._onSelect('left');\n        }}\n        >\n          ${AlighLeftIcon}\n        </edgeless-tool-icon-button>\n        <edgeless-tool-icon-button\n          .tooltip=${'Center'}\n          .active=${this.value === 'center'}\n          @click=${() => {\n            this._onSelect('center');\n        }}\n        >\n          ${AlignCenterIcon}\n        </edgeless-tool-icon-button>\n        <edgeless-tool-icon-button\n          .tooltip=${'Right'}\n          .active=${this.value === 'right'}\n          @click=${() => {\n            this._onSelect('right');\n        }}\n        >\n          ${AlignRightIcon}\n        </edgeless-tool-icon-button>\n      </div>\n    `;\n    }\n};\nEdgelessAlignPanel.styles = css `\n    :host {\n      display: block;\n      z-index: 2;\n    }\n    .align-panel-container {\n      display: flex;\n      flex-direction: row;\n      align-items: flex-start;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n      fill: none;\n      stroke: currentColor;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessAlignPanel.prototype, \"value\", void 0);\n__decorate([\n    property()\n], EdgelessAlignPanel.prototype, \"onSelect\", void 0);\nEdgelessAlignPanel = __decorate([\n    customElement('edgeless-align-panel')\n], EdgelessAlignPanel);\nexport { EdgelessAlignPanel };\n//# sourceMappingURL=align-panel.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../align-panel.js';\nimport { AlighLeftIcon, AlignCenterIcon, AlignRightIcon, } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { countBy, maxBy } from '../../../../__internal__/utils/std.js';\nimport { ColorUnit } from '../color-panel.js';\nimport { createButtonPopper } from '../utils.js';\nfunction getMostCommonColor(texts) {\n    const colors = countBy(texts, (text) => text.color);\n    const max = maxBy(Object.entries(colors), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonAlign(texts) {\n    const aligns = countBy(texts, (text) => text.textAlign);\n    const max = maxBy(Object.entries(aligns), ([k, count]) => count);\n    return max ? max[0] : 'left';\n}\nconst TEXT_COLORS = [\n    '--affine-palette-line-yellow',\n    '--affine-palette-line-orange',\n    '--affine-palette-line-tangerine',\n    '--affine-palette-line-red',\n    '--affine-palette-line-magenta',\n    '--affine-palette-line-purple',\n    '--affine-palette-line-navy',\n    '--affine-palette-line-blue',\n    '--affine-palette-line-green',\n    '--affine-palette-line-white',\n    '--affine-palette-line-black',\n    '--affine-palette-line-grey',\n];\nexport const DEFAULT_DARK_TEXT_COLOR = TEXT_COLORS[9];\nexport const DEFAULT_LIGHT_TEXT_COLOR = TEXT_COLORS[10];\nlet EdgelessChangeTextButton = class EdgelessChangeTextButton extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.texts = [];\n        this._popperShow = false;\n        this._colorSelectorPopper = null;\n        this._textAlignPopper = null;\n    }\n    _setTextColor(color) {\n        this.texts.forEach(text => {\n            this.surface.updateElement(text.id, {\n                color,\n            });\n        });\n        this.slots.selectionUpdated.emit({ ...this.selectionState });\n    }\n    _setTextAlign(align) {\n        this.texts.forEach(text => {\n            this.surface.updateElement(text.id, {\n                textAlign: align,\n            });\n        });\n        this.slots.selectionUpdated.emit({ ...this.selectionState });\n    }\n    firstUpdated(changedProperties) {\n        const _disposables = this._disposables;\n        this._colorSelectorPopper = createButtonPopper(this._textColorButton, this._textColorMenu, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._colorSelectorPopper);\n        this._textAlignPopper = createButtonPopper(this._textAlignButton, this._textAlignMenu, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._textAlignPopper);\n        super.firstUpdated(changedProperties);\n    }\n    render() {\n        const selectedColor = getMostCommonColor(this.texts) ?? TEXT_COLORS[0];\n        const selectedAlign = getMostCommonAlign(this.texts);\n        return html `\n      <edgeless-tool-icon-button\n        class=\"text-color-button\"\n        .tooltip=${this._popperShow ? '' : 'Text Color'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._colorSelectorPopper?.toggle()}\n      >\n        ${ColorUnit(selectedColor)}\n      </edgeless-tool-icon-button>\n      <div class=\"color-panel-container text-color\">\n        <edgeless-color-panel\n          .value=${selectedColor}\n          .options=${TEXT_COLORS}\n          @select=${(event) => {\n            this._setTextColor(event.detail);\n        }}\n        ></edgeless-color-panel>\n      </div>\n\n      <menu-divider .vertical=${true}></menu-divider>\n\n      <edgeless-tool-icon-button\n        class=\"text-align-button\"\n        .tooltip=${this._popperShow ? '' : 'Alignment'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._textAlignPopper?.toggle()}\n      >\n        ${selectedAlign === 'left'\n            ? AlighLeftIcon\n            : selectedAlign === 'center'\n                ? AlignCenterIcon\n                : AlignRightIcon}\n      </edgeless-tool-icon-button>\n      <div class=\"align-panel-container text-align\">\n        <edgeless-align-panel\n          .value=${selectedAlign}\n          .onSelect=${(value) => {\n            this._setTextAlign(value);\n        }}\n        ></edgeless-align-panel>\n      </div>\n    `;\n    }\n};\nEdgelessChangeTextButton.styles = css `\n    :host {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      color: var(--affine-text-primary-color);\n      stroke: none;\n      fill: currentColor;\n    }\n\n    .color-panel-container,\n    .align-panel-container {\n      display: none;\n      padding: 4px;\n      justify-content: center;\n      align-items: center;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n    }\n\n    .color-panel-container[data-show],\n    .align-panel-container[data-show] {\n      display: block;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessChangeTextButton.prototype, \"texts\", void 0);\n__decorate([\n    property()\n], EdgelessChangeTextButton.prototype, \"page\", void 0);\n__decorate([\n    property()\n], EdgelessChangeTextButton.prototype, \"surface\", void 0);\n__decorate([\n    property()\n], EdgelessChangeTextButton.prototype, \"selectionState\", void 0);\n__decorate([\n    property()\n], EdgelessChangeTextButton.prototype, \"slots\", void 0);\n__decorate([\n    state()\n], EdgelessChangeTextButton.prototype, \"_popperShow\", void 0);\n__decorate([\n    query('.text-color-button')\n], EdgelessChangeTextButton.prototype, \"_textColorButton\", void 0);\n__decorate([\n    query('.color-panel-container.text-color')\n], EdgelessChangeTextButton.prototype, \"_textColorMenu\", void 0);\n__decorate([\n    query('.text-align-button')\n], EdgelessChangeTextButton.prototype, \"_textAlignButton\", void 0);\n__decorate([\n    query('.align-panel-container.text-align')\n], EdgelessChangeTextButton.prototype, \"_textAlignMenu\", void 0);\nEdgelessChangeTextButton = __decorate([\n    customElement('edgeless-change-text-button')\n], EdgelessChangeTextButton);\nexport { EdgelessChangeTextButton };\n//# sourceMappingURL=change-text-button.js.map","import { Bound, getCommonBound } from '@blocksuite/phasor';\nimport { createPopper } from '@popperjs/core';\nimport { html } from 'lit';\nimport { getSelectionBoxBound, getXYWH, isTopLevelBlock } from '../utils.js';\nexport function getCommonRectStyle(rect, active = false, selected = false) {\n    return {\n        '--affine-border-width': `${active ? 2 : 1}px`,\n        left: rect.x + 'px',\n        top: rect.y + 'px',\n        width: rect.width + 'px',\n        height: rect.height + 'px',\n        backgroundColor: !active && selected ? 'var(--affine-hover-color)' : '',\n    };\n}\nexport function getSelectedRect(selected, viewport) {\n    if (selected.length === 0) {\n        return new DOMRect(0, 0, 0, 0);\n    }\n    const rects = selected.map(selectable => {\n        const { x, y, width, height } = getSelectionBoxBound(viewport, getXYWH(selectable));\n        return {\n            x,\n            y,\n            w: width,\n            h: height,\n        };\n    });\n    const commonBound = getCommonBound(rects);\n    return new DOMRect(commonBound?.x, commonBound?.y, commonBound?.w, commonBound?.h);\n}\nexport function getSelectableBounds(selected) {\n    const bounds = new Map();\n    for (const s of selected) {\n        let bound;\n        if (isTopLevelBlock(s)) {\n            bound = Bound.deserialize(getXYWH(s));\n        }\n        else {\n            bound = new Bound(s.x, s.y, s.w, s.h);\n        }\n        bounds.set(s.id, bound);\n    }\n    return bounds;\n}\nexport function listenClickAway(element, onClickAway) {\n    const callback = (event) => {\n        const inside = event.composedPath().includes(element);\n        if (!inside) {\n            onClickAway();\n        }\n    };\n    document.addEventListener('click', callback);\n    return {\n        dispose: () => {\n            document.removeEventListener('click', callback);\n        },\n    };\n}\nconst ATTR_SHOW = 'data-show';\n/**\n * Using attribute 'data-show' to control popper visibility.\n *\n * ```css\n * selector {\n *   display: none;\n * }\n * selector[data-show] {\n *   display: block;\n * }\n * ```\n */\nexport function createButtonPopper(reference, popperElement, stateUpdated = () => {\n    /** DEFAULT EMPTY FUNCTION */\n}) {\n    const popper = createPopper(reference, popperElement, {\n        placement: 'top',\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset: [0, 12],\n                },\n            },\n        ],\n    });\n    const show = () => {\n        popperElement.setAttribute(ATTR_SHOW, '');\n        popper.setOptions(options => ({\n            ...options,\n            modifiers: [\n                ...(options.modifiers ?? []),\n                { name: 'eventListeners', enabled: false },\n            ],\n        }));\n        popper.update();\n        stateUpdated({ display: 'show' });\n    };\n    const hide = () => {\n        popperElement.removeAttribute(ATTR_SHOW);\n        popper.setOptions(options => ({\n            ...options,\n            modifiers: [\n                ...(options.modifiers ?? []),\n                { name: 'eventListeners', enabled: false },\n            ],\n        }));\n        stateUpdated({ display: 'hidden' });\n    };\n    const toggle = () => {\n        if (popperElement.hasAttribute(ATTR_SHOW)) {\n            hide();\n        }\n        else {\n            show();\n        }\n    };\n    const clickAway = listenClickAway(reference, () => hide());\n    return {\n        popper,\n        show,\n        hide,\n        toggle,\n        dispose: () => {\n            popper.destroy();\n            clickAway.dispose();\n        },\n    };\n}\nexport function getTooltipWithShortcut(tip, shortcut) {\n    return html `<span>${tip}</span\n    ><span style=\"margin-left: 10px;\">(${shortcut})</span>`;\n}\n//# sourceMappingURL=utils.js.map","export class BinaryHeap {\n    constructor(scoreFunction) {\n        this._content = [];\n        this._scoreFunction = scoreFunction;\n    }\n    push(element) {\n        // Add the new element to the end of the array.\n        this._content.push(element);\n        // Allow it to sink down.\n        this.sinkDown(this._content.length - 1);\n    }\n    pop() {\n        const { _content } = this;\n        // Store the first element so we can return it later.\n        const result = _content[0];\n        // Get the element at the end of the array.\n        const end = _content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (_content.length > 0) {\n            _content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    }\n    remove(element) {\n        const { _content, _scoreFunction } = this;\n        const i = _content.indexOf(element);\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        const end = _content.pop();\n        if (i !== _content.length - 1) {\n            _content[i] = end;\n            if (_scoreFunction(end) < _scoreFunction(element)) {\n                this.sinkDown(i);\n            }\n            else {\n                this.bubbleUp(i);\n            }\n        }\n    }\n    size() {\n        return this._content.length;\n    }\n    rescoreElement(element) {\n        this.sinkDown(this._content.indexOf(element));\n    }\n    sinkDown(n) {\n        const { _content, _scoreFunction } = this;\n        // Fetch the element that has to be sunk.\n        const element = this._content[n];\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = ((n + 1) >> 1) - 1;\n            const parent = _content[parentN];\n            // Swap the elements if the parent is greater.\n            if (_scoreFunction(element) < _scoreFunction(parent)) {\n                _content[parentN] = element;\n                _content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    }\n    bubbleUp(n) {\n        const { _content, _scoreFunction } = this;\n        // Look up the target element and its score.\n        const length = _content.length;\n        const element = _content[n];\n        const elemScore = _scoreFunction(element);\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            // Compute the indices of the child elements.\n            const child2N = (n + 1) << 1;\n            const child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            let swap = null;\n            let child1Score = null;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                const child1 = _content[child1N];\n                child1Score = _scoreFunction(child1);\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                const child2 = _content[child2N];\n                const child2Score = _scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                _content[n] = _content[swap];\n                _content[swap] = element;\n                n = swap;\n            }\n            // Otherwise, we are done.\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=heap.js.map","import { BinaryHeap } from './heap.js';\nfunction manhattan(start, end) {\n    return Math.abs(start.x - end.x) + Math.abs(start.y - end.y);\n}\nfunction pathTo(element) {\n    let curr = element;\n    const path = [];\n    while (curr.parent) {\n        path.unshift(curr);\n        curr = curr.parent;\n    }\n    path.unshift(curr);\n    return path;\n}\nexport function aStarRoute(graph, start, end, heuristic = manhattan) {\n    const openHeap = new BinaryHeap(element => element.f);\n    start.h = heuristic(start, end);\n    openHeap.push(start);\n    while (openHeap.size() > 0) {\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n        const currentNode = openHeap.pop();\n        // End case -- result has been found, return the traced path.\n        if (currentNode === end) {\n            return pathTo(currentNode);\n        }\n        // Normal case -- move currentNode from open to closed, process each of its neighbors.\n        currentNode.closed = true;\n        // Find all neighbors for the current node.\n        const neighbors = graph.neighbors(currentNode);\n        for (let i = 0, il = neighbors.length; i < il; ++i) {\n            const neighbor = neighbors[i];\n            if (neighbor.closed) {\n                // Not a valid node to process, skip to next neighbor.\n                continue;\n            }\n            // The g score is the shortest distance from start to current node.\n            // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n            const gScore = currentNode.g + neighbor.cost(currentNode);\n            const beenVisited = neighbor.visited;\n            if (!beenVisited || gScore < neighbor.g) {\n                // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                neighbor.visited = true;\n                neighbor.parent = currentNode;\n                neighbor.h = neighbor.h || heuristic(neighbor, end);\n                neighbor.g = gScore;\n                neighbor.f = neighbor.g + neighbor.h;\n                if (!beenVisited) {\n                    // Pushing to heap will put it in proper place based on the 'f' value.\n                    openHeap.push(neighbor);\n                }\n                else {\n                    // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                    openHeap.rescoreElement(neighbor);\n                }\n            }\n        }\n    }\n    // No result was found - empty array signifies failure to find path.\n    return [];\n}\n//# sourceMappingURL=a-star.js.map","function isDirectionChanged(p, fromNode) {\n    if (fromNode.parent) {\n        if ((fromNode.x === fromNode.parent.x && fromNode.x !== p.x) ||\n            (fromNode.y === fromNode.parent.y && fromNode.y !== p.y)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport class Graph {\n    constructor(points) {\n        this.nodes = {};\n        this.edges = {};\n        this.connections = [];\n        this.gridX = [];\n        this.gridY = [];\n        this._init(points);\n    }\n    _init(points) {\n        this._addGraphNodesAndInitGrid(points);\n        this._linkGraphNodes();\n    }\n    _createGraphNode(p) {\n        return {\n            x: p.x,\n            y: p.y,\n            parent: null,\n            cost: (fromNode) => {\n                const basic = Math.abs(p.x - fromNode.x) + Math.abs(p.y - fromNode.y);\n                const directionChanged = isDirectionChanged(p, fromNode);\n                return basic + (directionChanged ? 10 : 0);\n            },\n            f: 0,\n            h: 0,\n            g: 0,\n        };\n    }\n    _addGraphNodesAndInitGrid(points) {\n        const xs = new Set();\n        const ys = new Set();\n        points.forEach(p => {\n            const node = this._createGraphNode(p);\n            xs.add(p.x);\n            ys.add(p.y);\n            const key = Graph.getKey(p);\n            this.nodes[key] = node;\n            this.edges[key] = new Set();\n        });\n        this.gridX = [...xs.values()].sort((a, b) => a - b);\n        this.gridY = [...ys.values()].sort((a, b) => a - b);\n    }\n    _linkGraphNodes() {\n        const { gridX, gridY } = this;\n        for (let i = 0; i < gridX.length; i++) {\n            for (let j = 0; j < gridY.length; j++) {\n                const key = Graph.getKey({ x: gridX[i], y: gridY[j] });\n                if (!this.nodes[key]) {\n                    continue;\n                }\n                if (j > 0) {\n                    const topKey = Graph.getKey({ x: gridX[i], y: gridY[j - 1] });\n                    if (this.nodes[topKey]) {\n                        this.edges[key].add(topKey);\n                        this.edges[topKey].add(key);\n                        this.connections.push([this.nodes[key], this.nodes[topKey]]);\n                    }\n                }\n                if (i > 0) {\n                    const leftKey = Graph.getKey({ x: gridX[i - 1], y: gridY[j] });\n                    if (this.nodes[leftKey]) {\n                        this.edges[key].add(leftKey);\n                        this.edges[leftKey].add(key);\n                        this.connections.push([this.nodes[key], this.nodes[leftKey]]);\n                    }\n                }\n            }\n        }\n    }\n    neighbors(node) {\n        const key = Graph.getKey(node);\n        const n = [];\n        this.edges[key].forEach(k => {\n            n.push(this.nodes[k]);\n        });\n        return n;\n    }\n    getNode(p) {\n        const k = Graph.getKey(p);\n        return this.nodes[k];\n    }\n    static getKey({ x, y }) {\n        return `${x}:${y}`;\n    }\n    static parseKey(key) {\n        const [x, y] = key.split(':').map(n => Number(n));\n        return { x, y };\n    }\n}\n//# sourceMappingURL=graph.js.map","import { Graph } from '../graph.js';\nfunction createValidNodesAndGrid(findPointInRect) {\n    const nodes = [];\n    const cache = new Set();\n    const gridX = new Set();\n    const gridY = new Set();\n    const addPoint = (x, y, force = false) => {\n        if (!force && findPointInRect(x, y)) {\n            return;\n        }\n        const p = { x, y };\n        const key = Graph.getKey(p);\n        if (cache.has(key)) {\n            return;\n        }\n        cache.add(key);\n        gridX.add(x);\n        gridY.add(y);\n        nodes.push(p);\n    };\n    const hasPoint = (x, y) => {\n        const key = Graph.getKey({ x, y });\n        return cache.has(key);\n    };\n    return {\n        nodes,\n        getGrid: () => {\n            const sortedGridX = [...gridX.values()].sort((a, b) => a - b);\n            const sortedGridY = [...gridY.values()].sort((a, b) => a - b);\n            return {\n                gridX: sortedGridX,\n                gridY: sortedGridY,\n            };\n        },\n        addPoint,\n        hasPoint,\n    };\n}\nfunction addRulersPoints(rulers, addPoint) {\n    const { rows, columns } = rulers;\n    for (let i = 0; i < rows.length; i++) {\n        const isRowEdge = i === 0 || i === rows.length - 2;\n        for (let j = 0; j < columns.length; j++) {\n            const isColumnEdge = j === 0 || j === columns.length - 2;\n            const currentX = columns[j];\n            const currentY = rows[i];\n            addPoint(currentX, currentY);\n            const nextX = isColumnEdge ? undefined : columns[j + 1];\n            const nextY = isRowEdge ? undefined : rows[i + 1];\n            if (nextX) {\n                addPoint((currentX + nextX) / 2, currentY);\n            }\n            if (nextY) {\n                addPoint(currentX, (currentY + nextY) / 2);\n            }\n            if (nextX && nextY) {\n                addPoint((currentX + nextX) / 2, (currentY + nextY) / 2);\n            }\n        }\n    }\n}\nfunction forceAddPointsAsNodes(points, gridX, gridY, addPoint, hasPoint, findPointInRect) {\n    points.forEach(p => {\n        const rect = findPointInRect(p.x, p.y);\n        if (rect) {\n            const direction = rect.relativeDirection(p.x, p.y);\n            switch (direction) {\n                case 'left': {\n                    let index = gridX.indexOf(p.x);\n                    while (index > -1) {\n                        const columnsValue = gridX[index];\n                        if (hasPoint(columnsValue, p.y)) {\n                            break;\n                        }\n                        addPoint(columnsValue, p.y, true);\n                        index--;\n                    }\n                    break;\n                }\n                case 'right': {\n                    let index = gridX.indexOf(p.x);\n                    while (index < gridX.length) {\n                        const columnsValue = gridX[index];\n                        if (hasPoint(columnsValue, p.y)) {\n                            break;\n                        }\n                        addPoint(columnsValue, p.y, true);\n                        index++;\n                    }\n                    break;\n                }\n                case 'top': {\n                    let index = gridY.indexOf(p.y);\n                    while (index > -1) {\n                        const rowsValue = gridY[index];\n                        if (hasPoint(p.x, rowsValue)) {\n                            break;\n                        }\n                        addPoint(p.x, rowsValue, true);\n                        index--;\n                    }\n                    break;\n                }\n                case 'bottom': {\n                    let index = gridY.indexOf(p.y);\n                    while (index < gridY.length) {\n                        const rowsValue = gridY[index];\n                        if (hasPoint(p.x, rowsValue)) {\n                            break;\n                        }\n                        addPoint(p.x, rowsValue, true);\n                        index++;\n                    }\n                    break;\n                }\n            }\n        }\n    });\n}\nexport function createNodes(rulers, rectangles, points) {\n    const findPointInRect = (x, y) => rectangles.find(r => r.contains(x, y));\n    const { nodes, addPoint, hasPoint, getGrid } = createValidNodesAndGrid(findPointInRect);\n    addRulersPoints(rulers, addPoint);\n    const { gridX, gridY } = getGrid();\n    forceAddPointsAsNodes(points, gridX, gridY, addPoint, hasPoint, findPointInRect);\n    return nodes;\n}\n//# sourceMappingURL=create-nodes.js.map","/**\n * Generating a set of horizontal and vertical rulers based on the provided rectangles, points, and margin\n * @param rectangles\n * @param points\n * @param margin [horizontal, vertical]\n * @returns\n */\nexport function createRulers(rectangles, points, margin) {\n    const columns = new Set();\n    const rows = new Set();\n    rectangles.forEach(rect => {\n        columns.add(rect.minX);\n        columns.add(rect.maxX);\n        rows.add(rect.minY);\n        rows.add(rect.maxY);\n    });\n    points.forEach(p => {\n        columns.add(p.x);\n        rows.add(p.y);\n    });\n    const sortedColumns = [...columns.values()].sort((a, b) => a - b);\n    const sortedRows = [...rows.values()].sort((a, b) => a - b);\n    return {\n        columns: [\n            sortedColumns[0] - margin[0],\n            ...sortedColumns,\n            sortedColumns[sortedColumns.length - 1] + margin[0],\n        ],\n        rows: [\n            sortedRows[0] - margin[1],\n            ...sortedRows,\n            sortedRows[sortedRows.length - 1] + margin[1],\n        ],\n    };\n}\n//# sourceMappingURL=create-rulers.js.map","import { Graph } from '../graph.js';\n/**\n * The function checks if manual node generation is applicable under the following conditions:\n * 1. There are no rectangles.\n * 2. There is only one rectangle and two points, and:\n *    - Both points are on the left, right, top, or bottom of the rectangle.\n *    - At least one point is inside the rectangle.\n */\nexport function shouldManualGenerateGraph(rectangles, points) {\n    if (!rectangles.length) {\n        return true;\n    }\n    if (rectangles.length !== 1 || points.length !== 2) {\n        return false;\n    }\n    const p0x = points[0].x;\n    const p0y = points[0].y;\n    const p1x = points[1].x;\n    const p1y = points[1].y;\n    const rect = rectangles[0];\n    const { x, y, maxX, maxY } = rect;\n    const pointsBothOnLeft = p0x <= x && p1x <= rect.x;\n    const pointsBothOnRight = p0x >= maxX && p1x >= maxX;\n    const pointsBothOnTop = p0y <= y && p1y <= y;\n    const pointsBothOnBottom = p0y >= maxY && p1y >= maxY;\n    if (pointsBothOnLeft ||\n        pointsBothOnRight ||\n        pointsBothOnTop ||\n        pointsBothOnBottom) {\n        return true;\n    }\n    return false;\n}\n// Generates a set of nodes manually given a set of rectangles and points.\n// This is useful for simpler cases where path-finding generation is not required.\nexport function manualGenerateGraph(rectangles, points) {\n    // Determine if the rectangles and points are aligned vertically.\n    const isVertical = rectangles.length === 1 &&\n        ((points[0].y <= rectangles[0].y && points[1].y <= rectangles[0].y) ||\n            (points[0].y >= rectangles[0].maxY && points[1].y >= rectangles[0].maxY));\n    // Calculate the edge centers based on whether the alignment is vertical or horizontal.\n    const edgeCenters = isVertical\n        ? [\n            { x: points[0].x, y: (points[0].y + points[1].y) / 2 },\n            { x: points[1].x, y: (points[0].y + points[1].y) / 2 },\n        ]\n        : [\n            { x: (points[0].x + points[1].x) / 2, y: points[0].y },\n            { x: (points[0].x + points[1].x) / 2, y: points[1].y },\n        ];\n    // Create an array of nodes that include the provided points, edge centers,\n    // and the center of the two points.\n    const nodes = [\n        ...points,\n        ...edgeCenters,\n        {\n            x: (points[0].x + points[1].x) / 2,\n            y: (points[0].y + points[1].y) / 2,\n        },\n    ];\n    const graph = new Graph(nodes);\n    return {\n        rectangles,\n        points,\n        inflatedRectangles: [],\n        rulers: { rows: [], columns: [] },\n        nodes,\n        graph,\n    };\n}\n//# sourceMappingURL=manual-generate-graph.js.map","import { Graph } from '../graph.js';\nimport { createNodes } from './create-nodes.js';\nimport { createRulers } from './create-rulers.js';\nimport { manualGenerateGraph, shouldManualGenerateGraph, } from './manual-generate-graph.js';\nexport function createGraph(rectangles, points, margin = [10, 10]) {\n    if (shouldManualGenerateGraph(rectangles, points)) {\n        return manualGenerateGraph(rectangles, points);\n    }\n    const inflatedRects = rectangles.map(r => r.inflate(margin[0], margin[1]));\n    const rulers = createRulers(inflatedRects, points, margin);\n    const nodes = createNodes(rulers, inflatedRects, points);\n    const graph = new Graph(nodes);\n    return {\n        rectangles,\n        points,\n        inflatedRectangles: inflatedRects,\n        rulers,\n        nodes,\n        graph,\n    };\n}\n//# sourceMappingURL=create-graph.js.map","import { aStarRoute } from './a-star.js';\nimport { createGraph } from './create-graph/create-graph.js';\nimport { simplifyPath } from './simplify-path.js';\nexport function route(rectangles, points) {\n    const { graph } = createGraph(rectangles, points);\n    const start = graph.getNode(points[0]);\n    const end = graph.getNode(points[1]);\n    const routed = aStarRoute(graph, start, end);\n    const simplifiedRoute = simplifyPath(routed);\n    return simplifiedRoute;\n}\n//# sourceMappingURL=route.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport { Bound } from '@blocksuite/phasor';\nimport { assertExists } from '@blocksuite/store';\nimport { VEditor } from '@blocksuite/virgo';\nimport { html } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { isCssVariable } from '../../../__internal__/theme/css-variables.js';\nimport { getSelectedRect } from './utils.js';\nlet SurfaceTextEditor = class SurfaceTextEditor extends WithDisposable(ShadowlessElement) {\n    constructor() {\n        super(...arguments);\n        this._vEditor = null;\n        this._element = null;\n        this._edgeless = null;\n        this._keeping = false;\n    }\n    get vEditor() {\n        return this._vEditor;\n    }\n    setKeeping(keeping) {\n        this._keeping = keeping;\n    }\n    _syncRect() {\n        const edgeless = this._edgeless;\n        const element = this._element;\n        if (edgeless && element) {\n            const rect = this._virgoContainer.getBoundingClientRect();\n            const vLines = Array.from(this._virgoContainer.querySelectorAll('v-line'));\n            const lineHeight = vLines[0].getBoundingClientRect().height;\n            edgeless.surface.updateElement(element.id, {\n                xywh: new Bound(element.x, element.y, rect.width / edgeless.surface.viewport.zoom, (vLines.length / edgeless.surface.viewport.zoom) * lineHeight).serialize(),\n            });\n            edgeless.slots.selectionUpdated.emit({\n                selected: [element],\n                active: true,\n            });\n        }\n    }\n    mount(element, edgeless) {\n        this._element = element;\n        this._edgeless = edgeless;\n        this._vEditor = new VEditor(element.text);\n        this._vEditor.slots.updated.on(() => {\n            this._syncRect();\n        });\n        this._disposables.add(edgeless.slots.viewportUpdated.on(() => {\n            this.requestUpdate();\n            requestAnimationFrame(() => {\n                this._syncRect();\n            });\n        }));\n        this.requestUpdate();\n        requestAnimationFrame(() => {\n            assertExists(this._vEditor);\n            this._element?.setDisplay(false);\n            this._vEditor.mount(this._virgoContainer);\n            this._virgoContainer.addEventListener('blur', () => {\n                if (this._keeping)\n                    return;\n                this._unmount();\n            }, {\n                once: true,\n            });\n        });\n    }\n    _unmount() {\n        this.vEditor?.unmount();\n        this._element?.setDisplay(true);\n        if (this._element?.text.length === 0) {\n            this._edgeless?.surface.removeElement(this._element?.id);\n        }\n        this.remove();\n        assertExists(this._edgeless);\n        this._edgeless.slots.selectionUpdated.emit({\n            selected: [],\n            active: false,\n        });\n    }\n    render() {\n        const viewport = this._edgeless?.surface.viewport;\n        let virgoStyle = styleMap({});\n        if (viewport && this._element && this._edgeless) {\n            const zoom = viewport.zoom;\n            const rect = getSelectedRect([this._element], this._edgeless.surface.viewport);\n            virgoStyle = styleMap({\n                position: 'absolute',\n                left: rect.x + 'px',\n                top: rect.y + 'px',\n                fontSize: this._element.fontSize + 'px',\n                fontFamily: this._element.fontFamily,\n                lineHeight: 'initial',\n                outline: 'none',\n                transform: `scale(${zoom}, ${zoom})`,\n                transformOrigin: 'top left',\n                color: isCssVariable(this._element.color)\n                    ? `var(${this._element.color})`\n                    : this._element.color,\n            });\n        }\n        return html `<div style=${virgoStyle} class=\"virgo-container\"></div>`;\n    }\n};\n__decorate([\n    query('.virgo-container')\n], SurfaceTextEditor.prototype, \"_virgoContainer\", void 0);\nSurfaceTextEditor = __decorate([\n    customElement('surface-text-editor')\n], SurfaceTextEditor);\nexport { SurfaceTextEditor };\n//# sourceMappingURL=surface-text-editor.js.map","import { Rectangle, route, simplifyPath } from '@blocksuite/connector';\nimport { Bound, TextElement, } from '@blocksuite/phasor';\nimport { ConnectorElement, ConnectorMode } from '@blocksuite/phasor';\nimport { contains, deserializeXYWH, intersects, isPointIn as isPointInFromPhasor, normalizeWheelDeltaY, serializeXYWH, } from '@blocksuite/phasor';\nimport { assertExists } from '@blocksuite/store';\nimport * as Y from 'yjs';\nimport { handleNativeRangeAtPoint, Point, queryCurrentMode, } from '../../__internal__/index.js';\nimport { isPinchEvent } from '../../__internal__/utils/index.js';\nimport { DEFAULT_DARK_TEXT_COLOR, DEFAULT_LIGHT_TEXT_COLOR, } from './components/component-toolbar/change-text-button.js';\nimport { SurfaceTextEditor } from './components/surface-text-editor.js';\nexport const FRAME_MIN_WIDTH = 200;\nexport const FRAME_MIN_HEIGHT = 20;\nexport const DEFAULT_FRAME_WIDTH = 448;\nexport const DEFAULT_FRAME_HEIGHT = 72;\nexport const DEFAULT_FRAME_OFFSET_X = 30;\nexport const DEFAULT_FRAME_OFFSET_Y = 40;\nconst ATTACHED_DISTANCE = 20;\nexport function isTopLevelBlock(selectable) {\n    return !!selectable && 'flavour' in selectable;\n}\nexport function isPhasorElement(selectable) {\n    return !isTopLevelBlock(selectable);\n}\nfunction isPointIn(block, pointX, pointY) {\n    const [x, y, w, h] = deserializeXYWH(block.xywh);\n    return isPointInFromPhasor({ x, y, w, h }, pointX, pointY);\n}\nexport function pickTopBlock(blocks, modelX, modelY) {\n    for (let i = blocks.length - 1; i >= 0; i--) {\n        const block = blocks[i];\n        if (isPointIn(block, modelX, modelY)) {\n            return block;\n        }\n    }\n    return null;\n}\nexport function pickBlocksByBound(blocks, bound) {\n    return blocks.filter(block => {\n        const [x, y, w, h] = deserializeXYWH(block.xywh);\n        const blockBound = { x, y, w, h };\n        return contains(bound, blockBound) || intersects(bound, blockBound);\n    });\n}\nexport function getSelectionBoxBound(viewport, xywh) {\n    const [modelX, modelY, modelW, modelH] = deserializeXYWH(xywh);\n    const [x, y] = viewport.toViewCoord(modelX, modelY);\n    return new DOMRect(x, y, modelW * viewport.zoom, modelH * viewport.zoom);\n}\nexport function initWheelEventHandlers(container) {\n    const wheelHandler = (e) => {\n        e.preventDefault();\n        const { viewport } = container.surface;\n        // pan\n        if (!isPinchEvent(e)) {\n            const dx = e.deltaX / viewport.zoom;\n            const dy = e.deltaY / viewport.zoom;\n            viewport.applyDeltaCenter(dx, dy);\n            container.slots.viewportUpdated.emit();\n        }\n        // zoom\n        else {\n            const { centerX, centerY } = viewport;\n            const prevZoom = viewport.zoom;\n            const rect = container.getBoundingClientRect();\n            // Perform zooming relative to the mouse position\n            const [baseX, baseY] = container.surface.toModelCoord(e.clientX - rect.x, e.clientY - rect.y);\n            const zoom = normalizeWheelDeltaY(e.deltaY, viewport.zoom);\n            viewport.setZoom(zoom);\n            const newZoom = viewport.zoom;\n            const offsetX = centerX - baseX;\n            const offsetY = centerY - baseY;\n            const newCenterX = baseX + offsetX * (prevZoom / newZoom);\n            const newCenterY = baseY + offsetY * (prevZoom / newZoom);\n            viewport.setCenter(newCenterX, newCenterY);\n            container.slots.viewportUpdated.emit();\n        }\n    };\n    container.addEventListener('wheel', wheelHandler);\n    const dispose = () => container.removeEventListener('wheel', wheelHandler);\n    return dispose;\n}\nexport function getXYWH(element) {\n    return isTopLevelBlock(element)\n        ? element.xywh\n        : serializeXYWH(element.x, element.y, element.w, element.h);\n}\nexport function stopPropagation(event) {\n    event.stopPropagation();\n}\n// https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\nexport function getCursorMode(mouseMode) {\n    switch (mouseMode.type) {\n        case 'default':\n            return 'default';\n        case 'pan':\n            return mouseMode.panning ? 'grabbing' : 'grab';\n        case 'brush':\n        case 'shape':\n        case 'connector':\n            return 'crosshair';\n        case 'text':\n            return 'text';\n        default:\n            return 'default';\n    }\n}\nexport function pickBy(surface, page, x, y, filter) {\n    const [modelX, modelY] = surface.viewport.toModelCoord(x, y);\n    const selectedShapes = surface.pickByPoint(modelX, modelY).filter(filter);\n    return selectedShapes.length\n        ? selectedShapes[selectedShapes.length - 1]\n        : pickTopBlock((page.root?.children).filter(child => child.flavour === 'affine:frame') ?? [], modelX, modelY);\n}\nfunction pickById(surface, page, id) {\n    const blocks = page.root?.children.filter(child => child.flavour === 'affine:frame') ?? [];\n    const element = surface.pickById(id) || blocks.find(b => b.id === id);\n    return element;\n}\nexport function generateConnectorPath(startRect, endRect, startPoint, endPoint, originControllers, mode = ConnectorMode.Orthogonal, \n// this indicating which part of the path is fixed when there are customized control points\nfixed) {\n    if (mode !== ConnectorMode.Orthogonal) {\n        return [startPoint, endPoint];\n    }\n    let customizedStart = Infinity;\n    let customizedEnd = -1;\n    originControllers.forEach((c, index) => {\n        if (c.customized) {\n            customizedStart = Math.min(customizedStart, index);\n            customizedEnd = Math.max(customizedEnd, index);\n        }\n    });\n    let path = [];\n    if (fixed && customizedEnd > -1) {\n        const part0EndPoint = originControllers[customizedStart];\n        const part0 = fixed === 'start'\n            ? originControllers.slice(0, customizedStart + 1)\n            : route(startRect ? [startRect] : [], [startPoint, part0EndPoint]);\n        const part1 = originControllers.slice(customizedStart, customizedEnd + 1);\n        const part2StartPoint = originControllers[customizedEnd];\n        const part2 = fixed === 'end'\n            ? originControllers.slice(customizedEnd)\n            : route(endRect ? [endRect] : [], [part2StartPoint, endPoint]);\n        path = simplifyPath([...part0.slice(0, -1), ...part1, ...part2.slice(1)]);\n    }\n    else {\n        path = route([startRect, endRect].filter(r => !!r), [\n            startPoint,\n            endPoint,\n        ]);\n    }\n    if (path.length < 3) {\n        path = [startPoint, endPoint];\n    }\n    return path;\n}\nfunction getAttachedPointByDirection({ x, y, w, h }, direction) {\n    switch (direction) {\n        case 'top': {\n            return { x: x + w / 2, y };\n        }\n        case 'right': {\n            return { x: x + w, y: y + h / 2 };\n        }\n        case 'bottom': {\n            return { x: x + w / 2, y: y + h };\n        }\n        case 'left': {\n            return { x, y: y + h / 2 };\n        }\n        default: {\n            throw new Error(`Unknown direction: ${direction}`);\n        }\n    }\n}\nexport function getAttachedPoint(x, y, rect) {\n    if (!rect || !rect.contains(x, y)) {\n        return { point: { x, y }, position: null };\n    }\n    const direction = rect.relativeDirection(x, y);\n    const position = {\n        x: (x - rect.x) / rect.w,\n        y: (y - rect.y) / rect.h,\n    };\n    const attachedPoint = getAttachedPointByDirection(rect, direction);\n    const distance = Math.sqrt(Math.pow(x - attachedPoint.x, 2) + Math.pow(y - attachedPoint.y, 2));\n    if (distance < ATTACHED_DISTANCE) {\n        return {\n            point: attachedPoint,\n            position: {\n                x: (attachedPoint.x - rect.x) / rect.w,\n                y: (attachedPoint.y - rect.y) / rect.h,\n            },\n        };\n    }\n    return { point: { x, y }, position };\n}\nfunction getAttachedPointByPosition(rect, position) {\n    const x = rect.x + rect.w * position.x;\n    const y = rect.y + rect.h * position.y;\n    const direction = rect.relativeDirection(x, y);\n    const attachedPoint = getAttachedPointByDirection(rect, direction);\n    const distance = Math.sqrt(Math.pow(x - attachedPoint.x, 2) + Math.pow(y - attachedPoint.y, 2));\n    if (distance < ATTACHED_DISTANCE) {\n        return attachedPoint;\n    }\n    return { x, y };\n}\nexport function getConnectorAttachedInfo(element, surface, page) {\n    const { startElement, endElement } = element;\n    const start = startElement?.id\n        ? pickById(surface, page, startElement.id)\n        : null;\n    const startRect = start\n        ? new Rectangle(...deserializeXYWH(getXYWH(start)))\n        : null;\n    const startPoint = startRect && startElement\n        ? getAttachedPointByPosition(startRect, startElement.position)\n        : {\n            x: element.x + element.controllers[0].x,\n            y: element.y + element.controllers[0].y,\n        };\n    const end = endElement?.id ? pickById(surface, page, endElement.id) : null;\n    const endRect = end ? new Rectangle(...deserializeXYWH(getXYWH(end))) : null;\n    const endPoint = endRect && endElement\n        ? getAttachedPointByPosition(endRect, endElement.position)\n        : {\n            x: element.x + element.controllers[element.controllers.length - 1].x,\n            y: element.y + element.controllers[element.controllers.length - 1].y,\n        };\n    return {\n        start: {\n            element: startElement,\n            rect: startRect,\n            point: startPoint,\n        },\n        end: {\n            element: endElement,\n            rect: endRect,\n            point: endPoint,\n        },\n    };\n}\nexport function isConnectorAndBindingsAllSelected(connector, selected) {\n    const connectorSelected = selected.find(s => s.id === connector.id);\n    if (!connectorSelected) {\n        return false;\n    }\n    const { startElement, endElement } = connector;\n    const startSelected = selected.find(s => s.id === startElement?.id);\n    const endSelected = selected.find(s => s.id === endElement?.id);\n    if (!startElement && !endElement) {\n        return true;\n    }\n    if (!startElement && endSelected) {\n        return true;\n    }\n    if (!endElement && startSelected) {\n        return true;\n    }\n    if (startSelected && endSelected) {\n        return true;\n    }\n    return false;\n}\nexport function handleElementChangedEffectForConnector(element, selected, surface, page) {\n    if (element.type !== 'connector') {\n        const bindingElements = surface.getBindingElements(element.id);\n        bindingElements.forEach(bindingElement => {\n            if (bindingElement instanceof ConnectorElement) {\n                // if all connector and binding element are selected, they will process in common method.\n                // like:\n                // mode-controllers/default-mode: _handleSurfaceDragMove\n                // components/edgeless-selected-rect: _onDragMove\n                if (isConnectorAndBindingsAllSelected(bindingElement, selected)) {\n                    return;\n                }\n                const { startElement, endElement, id, x, y, controllers, mode } = bindingElement;\n                const { start, end } = getConnectorAttachedInfo(bindingElement, surface, page);\n                const fixed = startElement?.id === element.id\n                    ? 'end'\n                    : endElement?.id === element.id\n                        ? 'start'\n                        : undefined;\n                const routes = generateConnectorPath(start.rect, end.rect, start.point, end.point, controllers.map(c => ({ ...c, x: c.x + x, y: c.y + y })), mode, fixed);\n                surface.updateElement(id, {\n                    controllers: routes,\n                });\n            }\n        });\n    }\n}\nexport function getBackgroundGrid(viewportX, viewportY, zoom, showGrid) {\n    const step = zoom < 0.5 ? 2 : 1 / (Math.floor(zoom) || 1);\n    const gap = 20 * step * zoom;\n    const translateX = -viewportX * zoom;\n    const translateY = -viewportY * zoom;\n    return {\n        gap,\n        translateX,\n        translateY,\n        grid: showGrid\n            ? 'radial-gradient(var(--affine-edgeless-grid-color) 1px, var(--affine-background-primary-color) 1px)'\n            : 'unset',\n    };\n}\nexport function addNote(edgeless, page, event, width = DEFAULT_FRAME_WIDTH) {\n    const frameId = edgeless.addFrameWithPoint(new Point(event.point.x, event.point.y), {\n        width,\n    });\n    page.addBlock('affine:paragraph', {}, frameId);\n    edgeless.slots.mouseModeUpdated.emit({ type: 'default' });\n    // Wait for mouseMode updated\n    requestAnimationFrame(() => {\n        const blocks = page.root?.children.filter(child => child.flavour === 'affine:frame') ?? [];\n        const element = blocks.find(b => b.id === frameId);\n        if (element) {\n            edgeless.slots.selectionUpdated.emit({\n                selected: [element],\n                active: true,\n            });\n            // Waiting dom updated, `frame mask` is removed\n            edgeless.updateComplete.then(() => {\n                // Cannot reuse `handleNativeRangeClick` directly here,\n                // since `retargetClick` will re-target to pervious editor\n                handleNativeRangeAtPoint(event.raw.clientX, event.raw.clientY);\n            });\n        }\n    });\n}\nexport function mountTextEditor(textElement, edgeless) {\n    const textEditor = new SurfaceTextEditor();\n    const pageBlockContainer = edgeless.pageBlockContainer;\n    pageBlockContainer.appendChild(textEditor);\n    textEditor.mount(textElement, edgeless);\n    textEditor.vEditor?.focusEnd();\n    edgeless.selection.switchToDefaultMode({\n        selected: [textElement],\n        active: true,\n    });\n}\nexport function addText(edgeless, event) {\n    const selected = edgeless.surface.pickTop(event.x, event.y);\n    if (!selected) {\n        const [modelX, modelY] = edgeless.surface.viewport.toModelCoord(event.x, event.y);\n        const mode = queryCurrentMode();\n        const id = edgeless.surface.addElement('text', {\n            xywh: new Bound(modelX, modelY, 32, 32).serialize(),\n            text: new Y.Text(),\n            textAlign: 'left',\n            fontSize: 24,\n            color: mode === 'dark' ? DEFAULT_DARK_TEXT_COLOR : DEFAULT_LIGHT_TEXT_COLOR,\n        });\n        edgeless.page.captureSync();\n        const textElement = edgeless.surface.pickById(id);\n        assertExists(textElement);\n        if (textElement instanceof TextElement) {\n            mountTextEditor(textElement, edgeless);\n        }\n    }\n}\nexport function xywhArrayToObject(element) {\n    const [x, y, w, h] = deserializeXYWH(element.xywh);\n    return {\n        x,\n        y,\n        w,\n        h,\n    };\n}\n//# sourceMappingURL=utils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ArrowDownIcon, DualLinkIcon16, LinkedPageIcon, PageIcon, } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { assertExists } from '@blocksuite/store';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport {} from '../../std.js';\nconst styles = css `\n  :host {\n    position: relative;\n  }\n\n  .btn {\n    box-sizing: border-box;\n    display: inline-flex;\n    align-items: center;\n    border: none;\n    padding: 1px 4px;\n    border-radius: 5px;\n    gap: 4px;\n    background: transparent;\n    cursor: pointer;\n\n    user-select: none;\n    font-family: var(--affine-font-family);\n    fill: var(--affine-text-secondary-color);\n    color: var(--affine-text-secondary-color);\n    pointer-events: auto;\n  }\n\n  .btn > span {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  .btn:hover {\n    background: var(--affine-hover-color);\n  }\n\n  .btn:active {\n    background: var(--affine-hover-color);\n  }\n\n  .backlink-popover {\n    position: absolute;\n    left: 0;\n    bottom: -8px;\n\n    display: flex;\n    flex-direction: column;\n    padding: 8px 4px;\n    background: var(--affine-white);\n    box-shadow: var(--affine-menu-shadow);\n    border-radius: 12px;\n    transform: translateY(100%);\n    z-index: 1;\n  }\n\n  .backlink-popover .group-title {\n    color: var(--affine-text-secondary-color);\n    margin: 8px 12px;\n  }\n\n  .backlink-popover icon-button {\n    padding: 8px;\n    justify-content: flex-start;\n    gap: 8px;\n  }\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 4px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: #b1b1b1;\n  }\n`;\nlet BacklinkButton = class BacklinkButton extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this._backlinks = [];\n        this._showPopover = false;\n        // Handle click outside\n        this._onClickAway = (e) => {\n            if (e.target === this)\n                return;\n            if (!this._showPopover)\n                return;\n            this._showPopover = false;\n        };\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.tabIndex = 0;\n        const page = this.page;\n        assertExists(page);\n        const backlinkIndexer = page.workspace.indexer.backlink;\n        this._backlinks = backlinkIndexer.getBacklink(page.id);\n        backlinkIndexer.slots.indexUpdated.on(() => {\n            this._backlinks = backlinkIndexer.getBacklink(page.id);\n            if (!this._backlinks.length) {\n                this._showPopover = false;\n            }\n        });\n        this._disposables.addFromEvent(window, 'mousedown', this._onClickAway);\n    }\n    onClick() {\n        this._showPopover = !this._showPopover;\n    }\n    render() {\n        // Only show linked page backlinks\n        const linkedBacklinks = this._backlinks.filter(({ type }) => type === 'LinkedPage');\n        if (!linkedBacklinks.length) {\n            return null;\n        }\n        return html `<div class=\"btn\" @click=${this.onClick}>\n        ${DualLinkIcon16}<span>Backlinks (${linkedBacklinks.length})</span\n        >${ArrowDownIcon}\n      </div>\n      ${this._showPopover\n            ? backlinkPopover(this.host, linkedBacklinks)\n            : null}`;\n    }\n};\nBacklinkButton.styles = styles;\n__decorate([\n    property()\n], BacklinkButton.prototype, \"page\", void 0);\n__decorate([\n    property()\n], BacklinkButton.prototype, \"host\", void 0);\n__decorate([\n    state()\n], BacklinkButton.prototype, \"_backlinks\", void 0);\n__decorate([\n    state()\n], BacklinkButton.prototype, \"_showPopover\", void 0);\nBacklinkButton = __decorate([\n    customElement('backlink-button')\n], BacklinkButton);\nexport { BacklinkButton };\nconst DEFAULT_PAGE_NAME = 'Untitled';\nfunction backlinkPopover(host, backlinks) {\n    const metas = host.page.workspace.meta.pageMetas;\n    return html `<div class=\"backlink-popover\">\n    <div class=\"group-title\">Linked to this page</div>\n    <div class=\"group\" style=\"overflow-y: scroll; max-height: 372px;\">\n      ${backlinks.map(({ pageId, blockId, type }) => {\n        const icon = type === 'LinkedPage' ? LinkedPageIcon : PageIcon;\n        const pageMeta = metas.find(page => page.id === pageId);\n        if (!pageMeta) {\n            console.warn('Unexpected page meta not found', pageId);\n        }\n        const title = pageMeta?.title || DEFAULT_PAGE_NAME;\n        return html `<icon-button\n          width=\"248px\"\n          height=\"32px\"\n          text=${title}\n          @click=${() => {\n            if (pageId === host.page.id) {\n                // On the current page, no need to jump\n                // TODO jump to block\n                return;\n            }\n            host.slots.pageLinkClicked.emit({ pageId, blockId });\n        }}\n        >\n          ${icon}\n        </icon-button>`;\n    })}\n    </div>\n  </div>`;\n}\n//# sourceMappingURL=backlink-popover.js.map","import { CaptionIcon, CopyIcon, DeleteIcon, DownloadIcon, } from '@blocksuite/global/config';\nimport { html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { tooltipStyle } from '../../components/tooltip/tooltip.js';\nimport { stopPropagation } from '../edgeless/utils.js';\nimport { copyImage, downloadImage, focusCaption } from './utils.js';\nexport function DraggingArea(rect) {\n    if (rect === null)\n        return null;\n    const style = {\n        left: rect.left + 'px',\n        top: rect.top + 'px',\n        width: rect.width + 'px',\n        height: rect.height + 'px',\n    };\n    return html `\n    <style>\n      .affine-page-dragging-area {\n        position: absolute;\n        background: var(--affine-hover-color);\n        z-index: 1;\n        pointer-events: none;\n      }\n    </style>\n    <div class=\"affine-page-dragging-area\" style=${styleMap(style)}></div>\n  `;\n}\nexport function EmbedSelectedRectsContainer(rects, viewportOffset) {\n    return html `\n    <style>\n      .affine-page-selected-embed-rects-container > div {\n        position: absolute;\n        display: block;\n        border: 2px solid var(--affine-primary-color);\n        user-select: none;\n      }\n    </style>\n    <div class=\"affine-page-selected-embed-rects-container resizable\">\n      ${rects.map(rect => {\n        const style = {\n            left: rect.left + viewportOffset.x + 'px',\n            top: rect.top + viewportOffset.y + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n        };\n        return html `\n          <div class=\"resizes\" style=${styleMap(style)}>\n            <div class=\"resize top-left\"></div>\n            <div class=\"resize top-right\"></div>\n            <div class=\"resize bottom-left\"></div>\n            <div class=\"resize bottom-right\"></div>\n          </div>\n        `;\n    })}\n    </div>\n  `;\n}\nexport function EmbedEditingContainer(embedEditingState, slots, viewportOffset) {\n    if (!embedEditingState)\n        return null;\n    const { rect: { x, y }, model, } = embedEditingState;\n    const style = {\n        left: x + viewportOffset.x + 'px',\n        top: y + viewportOffset.y + 'px',\n    };\n    return html `\n    <style>\n      .affine-embed-editing-state-container > div {\n        position: absolute;\n        display: block;\n        z-index: 1;\n      }\n      ${tooltipStyle}\n    </style>\n\n    <div\n      class=\"affine-embed-editing-state-container\"\n      @pointerdown=${stopPropagation}\n    >\n      <div style=${styleMap(style)} class=\"embed-editing-state\">\n        <format-bar-button\n          class=\"has-tool-tip\"\n          width=\"100%\"\n          @click=${() => {\n        focusCaption(model);\n        slots.embedRectsUpdated.emit([]);\n    }}\n        >\n          ${CaptionIcon}\n          <tool-tip inert tip-position=\"right\" role=\"tooltip\">Caption</tool-tip>\n        </format-bar-button>\n        <format-bar-button\n          class=\"has-tool-tip\"\n          width=\"100%\"\n          @click=${() => {\n        downloadImage(model);\n    }}\n        >\n          ${DownloadIcon}\n          <tool-tip inert tip-position=\"right\" role=\"tooltip\"\n            >Download\n          </tool-tip>\n        </format-bar-button>\n        <format-bar-button\n          class=\"has-tool-tip\"\n          width=\"100%\"\n          @click=${() => {\n        copyImage(model);\n    }}\n        >\n          ${CopyIcon}\n          <tool-tip inert tip-position=\"right\" role=\"tooltip\"\n            >Copy to clipboard\n          </tool-tip>\n        </format-bar-button>\n        <format-bar-button\n          class=\"has-tool-tip\"\n          width=\"100%\"\n          @click=\"${() => {\n        model.page.deleteBlock(model);\n        slots.embedRectsUpdated.emit([]);\n    }}\"\n        >\n          ${DeleteIcon}\n          <tool-tip inert tip-position=\"right\" role=\"tooltip\">Delete</tool-tip>\n        </format-bar-button>\n      </div>\n    </div>\n  `;\n}\n//# sourceMappingURL=components.js.map","import { SCROLL_THRESHOLD } from '@blocksuite/global/config';\nimport { matchFlavours } from '@blocksuite/store';\nimport { contains, getBlockElementsExcludeSubtrees, getRectByBlockElement, } from '../../../__internal__/index.js';\nimport { getExtendBlockRange } from '../../../__internal__/utils/block-range.js';\n// distance to the upper and lower boundaries of the viewport\nconst threshold = SCROLL_THRESHOLD / 2;\nfunction intersects(a, b, offset) {\n    return (a.left + offset.x < b.right &&\n        a.right + offset.x > b.left &&\n        a.top + offset.y < b.bottom &&\n        a.bottom + offset.y > b.top);\n}\n// See https://github.com/toeverything/blocksuite/pull/904 and\n// https://github.com/toeverything/blocksuite/issues/839#issuecomment-1411742112\n// for more context.\n//\n// The `bound` is a rect of drag-and-drop selection.\nexport function filterBlocksExcludeSubtrees(blockCache, bound, offset) {\n    const entries = Array.from(blockCache.entries());\n    const len = entries.length;\n    const results = [];\n    // empty\n    if (len === 0)\n        return results;\n    let prevIndex = -1;\n    for (let i = 0; i < len; i++) {\n        const [block, rect] = entries[i];\n        if (intersects(rect, bound, offset)) {\n            if (prevIndex === -1) {\n                prevIndex = i;\n            }\n            else {\n                let prevBlock = entries[prevIndex][0];\n                // prev block before and contains block\n                if (contains(prevBlock, block)) {\n                    if (matchFlavours(prevBlock.model, ['affine:database'])) {\n                        continue;\n                    }\n                    else {\n                        // not continuous block\n                        if (results.length > 1) {\n                            continue;\n                        }\n                        prevIndex = i;\n                        results.shift();\n                    }\n                }\n                else {\n                    // backward search parent block and remove its subtree\n                    // only keep blocks of same level\n                    const { previousElementSibling } = block;\n                    // previousElementSibling is not prev block and previousElementSibling contains prev block\n                    if (previousElementSibling &&\n                        previousElementSibling !== prevBlock &&\n                        contains(previousElementSibling, prevBlock)) {\n                        let n = i;\n                        let m = results.length;\n                        while (n--) {\n                            prevBlock = entries[n][0];\n                            if (prevBlock === previousElementSibling) {\n                                results.push({ block: prevBlock, index: n });\n                                break;\n                            }\n                            else if (m > 0) {\n                                results.pop();\n                                m--;\n                            }\n                        }\n                    }\n                    prevIndex = i;\n                }\n            }\n            results.push({ block, index: i });\n        }\n    }\n    return results;\n}\nexport function updateLocalSelectionRange(page) {\n    const blockRange = getExtendBlockRange(page);\n    if (!blockRange || blockRange.type === 'Block') {\n        return;\n    }\n    const userRange = {\n        startOffset: blockRange.startOffset,\n        endOffset: blockRange.endOffset,\n        blockIds: blockRange.models.map(m => m.id),\n    };\n    page.awarenessStore.setLocalRange(page, userRange);\n}\n/*\nfunction computeSelectionType(\n  selectedBlocks: Element[],\n  selectionType?: PageSelectionType\n) {\n  let newSelectionType: PageSelectionType = selectionType ?? 'native';\n\n  const isOnlyBlock = selectedBlocks.length === 1;\n  for (const block of selectedBlocks) {\n    if (selectionType) continue;\n    if (!('model' in block)) continue;\n\n    // Calculate selection type\n    const model = getModelByElement(block);\n    newSelectionType = 'block';\n\n    // Other selection types are possible if only one block is selected\n    if (!isOnlyBlock) continue;\n\n    const flavour = model.flavour;\n    switch (flavour) {\n      case 'affine:embed': {\n        newSelectionType = 'embed';\n        break;\n      }\n      case 'affine:database': {\n        newSelectionType = 'database';\n        break;\n      }\n    }\n  }\n  return newSelectionType;\n}\n*/\nexport function setSelectedBlocks(state, slots, selectedBlocks, rects) {\n    state.selectedBlocks = selectedBlocks;\n    if (rects) {\n        slots.selectedRectsUpdated.emit(rects);\n        return;\n    }\n    const calculatedRects = [];\n    for (const block of getBlockElementsExcludeSubtrees(selectedBlocks)) {\n        calculatedRects.push(getRectByBlockElement(block));\n    }\n    slots.selectedRectsUpdated.emit(calculatedRects);\n}\nexport function autoScroll(selection, e, hooks) {\n    const { state } = selection;\n    const { y } = e.point;\n    const { viewportElement } = selection;\n    const { viewport } = state;\n    const { scrollHeight, clientHeight } = viewport;\n    let { scrollTop } = viewport;\n    const max = scrollHeight - clientHeight;\n    hooks.init();\n    let auto = true;\n    const autoScroll = () => {\n        if (!auto) {\n            state.clearRaf();\n            return;\n        }\n        else {\n            state.rafID = requestAnimationFrame(autoScroll);\n        }\n        // TODO: for the behavior of scrolling, see the native selection\n        // speed easeOutQuad + easeInQuad\n        if (Math.ceil(scrollTop) < max && clientHeight - y < threshold) {\n            // ↓\n            const d = (threshold - (clientHeight - y)) * 0.25;\n            scrollTop += d;\n            auto = Math.ceil(scrollTop) < max;\n            viewportElement.scrollTop = scrollTop;\n            hooks.onScroll(d);\n        }\n        else if (scrollTop > 0 && y < threshold) {\n            // ↑\n            const d = (y - threshold) * 0.25;\n            scrollTop += d;\n            auto = scrollTop > 0;\n            viewportElement.scrollTop = scrollTop;\n            hooks.onScroll(d);\n        }\n        else {\n            auto = false;\n            hooks.onMove();\n        }\n    };\n    state.clearRaf();\n    state.rafID = requestAnimationFrame(autoScroll);\n}\n//# sourceMappingURL=utils.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { autoScroll } from './utils.js';\nexport const BlockDragHandlers = {\n    onStart(selection, e) {\n        const { state } = selection;\n        // rich-text should be unfocused\n        state.blur();\n        state.type = 'block';\n        selection.updateViewport();\n        const { scrollLeft, scrollTop } = state.viewport;\n        state.resetDraggingArea(e, {\n            scrollTop,\n            scrollLeft,\n        });\n        state.refreshBlockRectCache();\n    },\n    onMove(selection, e) {\n        autoScroll(selection, e, {\n            init() {\n                const { x, y } = e.point;\n                const { draggingArea, viewport: { scrollLeft, scrollTop }, } = selection.state;\n                assertExists(draggingArea);\n                draggingArea.end.x = x + scrollLeft;\n                draggingArea.end.y = y + scrollTop;\n            },\n            onScroll(d) {\n                const { draggingArea } = selection.state;\n                assertExists(draggingArea);\n                draggingArea.end.y += d;\n                selection.updateDraggingArea(draggingArea);\n            },\n            onMove() {\n                const { blockCache, draggingArea, viewportOffset } = selection.state;\n                assertExists(draggingArea);\n                const rect = selection.updateDraggingArea(draggingArea);\n                selection.selectBlocksByDraggingArea(blockCache, rect, viewportOffset);\n            },\n        });\n    },\n    onEnd(selection, _) {\n        selection.state.type = 'block';\n        selection.state.clearDraggingArea();\n        selection.slots.draggingAreaUpdated.emit(null);\n        // do not clear selected rects here\n    },\n};\n//# sourceMappingURL=block-drag-handlers.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { getModelByElement } from '../../../index.js';\nexport class EmbedResizeManager {\n    constructor(state, slots) {\n        this._originPosition = { x: 0, y: 0 };\n        this._dropContainer = null;\n        this._dropContainerSize = {\n            w: 0,\n            h: 0,\n            left: 0,\n        };\n        this._dragMoveTarget = 'right';\n        this.state = state;\n        this.slots = slots;\n    }\n    onStart(e) {\n        this._originPosition.x = e.raw.pageX;\n        this._originPosition.y = e.raw.pageY;\n        this._dropContainer = e.raw.target.closest('.resizes');\n        const rect = this._dropContainer?.getBoundingClientRect();\n        this._dropContainerSize.w = rect.width;\n        this._dropContainerSize.h = rect.height;\n        this._dropContainerSize.left = rect.left;\n        if (e.raw.target.className.includes('right')) {\n            this._dragMoveTarget = 'right';\n        }\n        else {\n            this._dragMoveTarget = 'left';\n        }\n    }\n    onMove(e) {\n        const activeComponent = this.state.activeComponent || this.state.selectedEmbeds[0];\n        if (!activeComponent)\n            return;\n        let width = 0;\n        let height = 0;\n        let left = 0;\n        if (this._dragMoveTarget === 'right') {\n            width =\n                this._dropContainerSize.w + (e.raw.pageX - this._originPosition.x);\n        }\n        else {\n            width =\n                this._dropContainerSize.w - (e.raw.pageX - this._originPosition.x);\n        }\n        if (width < activeComponent.getBoundingClientRect().width && width >= 50) {\n            if (this._dragMoveTarget === 'right') {\n                left =\n                    this._dropContainerSize.left -\n                        (e.raw.pageX - this._originPosition.x) / 2;\n            }\n            else {\n                left =\n                    this._dropContainerSize.left +\n                        (e.raw.pageX - this._originPosition.x) / 2;\n            }\n            height = width * (this._dropContainerSize.h / this._dropContainerSize.w);\n            if (this._dropContainer) {\n                this.slots.embedRectsUpdated.emit([\n                    new DOMRect(left, this._dropContainer.getBoundingClientRect().top, width, height),\n                ]);\n                const activeImg = this.state.activeComponent?.querySelector('.resizable-img');\n                if (activeImg) {\n                    activeImg.style.width = width + 'px';\n                    activeImg.style.height = height + 'px';\n                }\n            }\n        }\n    }\n    onEnd() {\n        assertExists(this.state.activeComponent);\n        const dragModel = getModelByElement(this.state.activeComponent);\n        dragModel.page.captureSync();\n        assertExists(this._dropContainer);\n        const { width, height } = this._dropContainer.getBoundingClientRect();\n        dragModel.page.updateBlock(dragModel, { width: width, height: height });\n    }\n}\n//# sourceMappingURL=embed-resize-manager.js.map","import { handleNativeRangeDragMove, noop, Point, } from '../../../__internal__/index.js';\nimport { autoScroll } from './utils.js';\nexport const NativeDragHandlers = {\n    onStart(selection, e) {\n        selection.state.resetStartRange(e);\n        selection.state.type = 'native';\n    },\n    onMove(selection, e) {\n        autoScroll(selection, e, {\n            init() {\n                selection.state.lastPoint = new Point(e.raw.clientX, e.raw.clientY);\n                handleNativeRangeDragMove(selection.state.startRange, e);\n            },\n            onMove: noop,\n            onScroll: noop,\n        });\n    },\n    onEnd(selection, _) {\n        selection.state.clearRaf();\n    },\n};\n//# sourceMappingURL=native-drag-handlers.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { createDragEvent, Point } from '../../../__internal__/index.js';\nimport { autoScroll } from './utils.js';\nexport const PreviewDragHandlers = {\n    onStart(selection, e) {\n        const { container, state } = selection;\n        state.blur();\n        container.components.dragHandle?.onDragStart(createDragEvent('dragstart', e.raw), true);\n    },\n    onMove(selection, e) {\n        autoScroll(selection, e, {\n            init() {\n                const { state } = selection;\n                const { raw: { clientX, clientY }, } = e;\n                state.lastPoint = new Point(clientX, clientY);\n            },\n            onScroll(_) {\n                const { container, state: { lastPoint }, } = selection;\n                assertExists(lastPoint);\n                container.components.dragHandle?.onDrag(createDragEvent('drag', new MouseEvent('mousemove', {\n                    clientX: lastPoint.x,\n                    clientY: lastPoint.y,\n                    screenY: 1,\n                })), true, true);\n            },\n            onMove() {\n                const { raw } = e;\n                const { container } = selection;\n                container.components.dragHandle?.onDrag(createDragEvent('drag', raw), true);\n            },\n        });\n    },\n    onEnd(selection, e) {\n        const { container, state } = selection;\n        state.clearRaf();\n        state.lastPoint = null;\n        container.components.dragHandle?.onDragEnd(createDragEvent('dragend', e.raw), true);\n    },\n    clear(selection) {\n        const { container } = selection;\n        container.components.dragHandle?.onDragEnd(createDragEvent('dragend'));\n    },\n};\n//# sourceMappingURL=preview-drag-handlers.js.map","import { caretRangeFromPoint } from '@blocksuite/global/utils';\nimport { getBlockElementsByElement, getRectByBlockElement, Point, resetNativeSelection, } from '../../../__internal__/index.js';\nexport class PageSelectionState {\n    constructor(type) {\n        this.viewport = {\n            left: 0,\n            top: 0,\n            scrollLeft: 0,\n            scrollTop: 0,\n            scrollHeight: 0,\n            clientHeight: 0,\n            clientWidth: 0,\n        };\n        this.draggingArea = null;\n        this.selectedEmbeds = [];\n        this.selectedBlocks = [];\n        // null: SELECT_ALL\n        this.focusedBlock = null;\n        this.lastPoint = null;\n        this._startRange = null;\n        this._richTextCache = new Map();\n        this._blockCache = new Map();\n        this._embedCache = new Map();\n        this._activeComponent = null;\n        this.type = type;\n    }\n    get activeComponent() {\n        return this._activeComponent;\n    }\n    set activeComponent(component) {\n        this._activeComponent = component;\n    }\n    get startRange() {\n        return this._startRange;\n    }\n    get richTextCache() {\n        return this._richTextCache;\n    }\n    get blockCache() {\n        return this._blockCache;\n    }\n    get embedCache() {\n        return this._embedCache;\n    }\n    get viewportOffset() {\n        const { viewport: { left, top, scrollLeft, scrollTop }, } = this;\n        return {\n            x: scrollLeft - left,\n            y: scrollTop - top,\n        };\n    }\n    resetStartRange(e) {\n        const { clientX, clientY } = e.raw;\n        this._startRange = caretRangeFromPoint(clientX, clientY);\n        // Save the last coordinates so that we can send them when scrolling through the wheel\n        this.lastPoint = new Point(clientX, clientY);\n    }\n    resetDraggingArea(e, offset = {\n        scrollLeft: 0,\n        scrollTop: 0,\n    }) {\n        const { scrollLeft, scrollTop } = offset;\n        let { x, y } = e.point;\n        x += scrollLeft;\n        y += scrollTop;\n        const end = new Point(x, y);\n        this.draggingArea = {\n            start: end.clone(),\n            end,\n        };\n    }\n    refreshBlockRectCache() {\n        this._blockCache.clear();\n        // find all blocks from the document\n        const allBlocks = getBlockElementsByElement(document);\n        for (const block of allBlocks) {\n            this._blockCache.set(block, getRectByBlockElement(block));\n        }\n    }\n    blur() {\n        resetNativeSelection(null);\n        // deactivate keyboard event handler\n        if (document.activeElement &&\n            document.activeElement instanceof HTMLElement) {\n            document.activeElement.blur();\n        }\n    }\n    clearRaf() {\n        if (this.rafID) {\n            this.rafID = void cancelAnimationFrame(this.rafID);\n        }\n    }\n    clearDraggingArea() {\n        this.clearRaf();\n        this.draggingArea = null;\n    }\n    clearNativeSelection() {\n        this.clearRaf();\n        this.type = 'none';\n        this._richTextCache.clear();\n        this._startRange = null;\n        this.lastPoint = null;\n        resetNativeSelection(null);\n    }\n    clearBlockSelection() {\n        this.type = 'none';\n        this._activeComponent = null;\n        this.focusedBlock = null;\n        this.selectedBlocks = [];\n        this.clearDraggingArea();\n    }\n    clearEmbedSelection() {\n        this.type = 'none';\n        this.selectedEmbeds = [];\n        this._activeComponent = null;\n    }\n    clearSelection() {\n        this.clearBlockSelection();\n        this.clearEmbedSelection();\n        this.clearNativeSelection();\n    }\n}\n//# sourceMappingURL=selection-state.js.map","import '../../../components/drag-handle.js';\nimport { PAGE_BLOCK_CHILD_PADDING } from '@blocksuite/global/config';\nimport { assertExists, matchFlavours } from '@blocksuite/global/utils';\nimport {} from '@blocksuite/store';\nimport { AbstractSelectionManager, debounce, getBlockElementByModel, getBlockElementsByElement, getBlockElementsExcludeSubtrees, getBlockElementsIncludeSubtrees, getClosestBlockElementByPoint, getCurrentNativeRange, getEditorContainerByElement, getModelByBlockElement, getRectByBlockElement, getSelectedStateRectByBlockElement, handleNativeRangeClick, handleNativeRangeDragMove, isBlankArea, isDatabaseInput, isDragHandle, isElement, isEmbed, isImage, isInsidePageTitle, isSelectedBlocks, Point, Rect, } from '../../../__internal__/index.js';\nimport { activeEditorManager } from '../../../__internal__/utils/active-editor-manager.js';\nimport { showFormatQuickBar } from '../../../components/format-quick-bar/index.js';\nimport { showFormatQuickBarByClicks } from '../../index.js';\nimport { calcCurrentSelectionPosition, getNativeSelectionMouseDragInfo, repairContextMenuRange, } from '../../utils/position.js';\nimport { BlockDragHandlers } from './block-drag-handlers.js';\nimport { EmbedResizeManager } from './embed-resize-manager.js';\nimport { NativeDragHandlers } from './native-drag-handlers.js';\nimport { PreviewDragHandlers } from './preview-drag-handlers.js';\nimport { PageSelectionState } from './selection-state.js';\nimport { filterBlocksExcludeSubtrees, setSelectedBlocks, updateLocalSelectionRange, } from './utils.js';\nfunction shouldFilterMouseEvent(event) {\n    const target = event.target;\n    if (!target || !(target instanceof HTMLElement)) {\n        return false;\n    }\n    if (target.tagName === 'INPUT') {\n        return true;\n    }\n    if (target.tagName === 'FORMAT-QUICK-BAR') {\n        return true;\n    }\n    return false;\n}\n/**\n * The selection manager used in default mode.\n */\nexport class DefaultSelectionManager extends AbstractSelectionManager {\n    constructor({ container, dispatcher, page, mouseRoot, slots, }) {\n        super(container, dispatcher);\n        this.state = new PageSelectionState('none');\n        this._add = (name, fn) => {\n            this._disposables.add(this._dispatcher.add(name, fn));\n        };\n        this._onContainerDragStart = (ctx) => {\n            const e = ctx.get('pointerState');\n            const target = e.raw.target;\n            if (isInsidePageTitle(target) || isDatabaseInput(target)) {\n                this.state.type = 'none';\n                return;\n            }\n            if (isElement(target) &&\n                (isDragHandle(target) || isSelectedBlocks(target))) {\n                PreviewDragHandlers.onStart(this, e);\n                return;\n            }\n            if (isEmbed(e)) {\n                this.state.type = 'embed';\n                this._embedResizeManager.onStart(e);\n                return;\n            }\n            // disable dragHandle button\n            this.container.components.dragHandle?.setPointerEvents('none');\n            // clear selection first\n            this.clear();\n            if (isBlankArea(e)) {\n                BlockDragHandlers.onStart(this, e);\n            }\n            else {\n                NativeDragHandlers.onStart(this, e);\n            }\n        };\n        this._onContainerDragMove = (ctx) => {\n            const e = ctx.get('pointerState');\n            if (this.state.type === 'native') {\n                NativeDragHandlers.onMove(this, e);\n                return;\n            }\n            if (this.page.readonly)\n                return;\n            if (this.state.type === 'block:drag') {\n                PreviewDragHandlers.onMove(this, e);\n                return;\n            }\n            if (this.state.type === 'block') {\n                BlockDragHandlers.onMove(this, e);\n                return;\n            }\n            if (this.state.type === 'embed') {\n                return this._embedResizeManager.onMove(e);\n            }\n        };\n        this._onContainerDragEnd = (ctx) => {\n            const e = ctx.get('pointerState');\n            this.container.components.dragHandle?.setPointerEvents('auto');\n            if (this.state.type === 'block:drag') {\n                PreviewDragHandlers.onEnd(this, e);\n                return;\n            }\n            if (this.state.type === 'native') {\n                NativeDragHandlers.onEnd(this, e);\n            }\n            else if (this.state.type === 'block') {\n                BlockDragHandlers.onEnd(this, e);\n            }\n            else if (this.state.type === 'embed') {\n                this._embedResizeManager.onEnd();\n            }\n            if (this.page.readonly)\n                return;\n            if (this.state.type === 'native') {\n                const { direction, selectedType } = getNativeSelectionMouseDragInfo(e);\n                // If nothing is selected, we should not show the format bar\n                if (selectedType === 'Caret')\n                    return;\n                showFormatQuickBar({\n                    page: this.page,\n                    container: this.container,\n                    direction,\n                    anchorEl: {\n                        getBoundingClientRect: () => {\n                            return calcCurrentSelectionPosition(direction, this.state);\n                        },\n                    },\n                });\n            }\n            else if (this.state.type === 'block') {\n                if (!this.page.awarenessStore.getFlag('enable_block_selection_format_bar')) {\n                    return;\n                }\n                if (!this.state.selectedBlocks.length) {\n                    return;\n                }\n                // TODO Check if there are valid blocks in the selection before showing the format bar\n                // If all the selected blocks are images, the format bar should not be displayed.\n                const direction = e.start.y < e.point.y ? 'center-bottom' : 'center-top';\n                showFormatQuickBar({\n                    page: this.page,\n                    container: this.container,\n                    direction,\n                    anchorEl: {\n                        // After update block type, the block selection will be cleared and refreshed.\n                        // So we need to get the targe block's rect dynamic.\n                        getBoundingClientRect: () => {\n                            return calcCurrentSelectionPosition(direction, this.state);\n                        },\n                    },\n                });\n            }\n        };\n        this._onContainerPointerDown = (ctx) => {\n            const e = ctx.get('pointerState');\n            if (e.keys.shift) {\n                // dont trigger native selection behavior\n                e.raw.preventDefault();\n            }\n        };\n        this._onContainerClick = (ctx) => {\n            const e = ctx.get('pointerState');\n            const { point: { x, y }, raw: { target, clientX, clientY, pageX }, keys: { shift }, } = e;\n            const hasAddedFrame = this._ensureFrameExists();\n            if (hasAddedFrame && isInsidePageTitle(target)) {\n                requestAnimationFrame(() => {\n                    handleNativeRangeClick(this.page, e, this.container);\n                });\n            }\n            const container = getEditorContainerByElement(this.container);\n            activeEditorManager.setActive(container);\n            const { state } = this;\n            const { viewport } = state;\n            let { type } = state;\n            // do nothing when clicking on scrollbar\n            if (pageX >= viewport.clientWidth + viewport.left)\n                return;\n            // do nothing when clicking on drag-handle\n            if (isElement(target) && isDragHandle(target)) {\n                return;\n            }\n            // shift + click\n            // * native: select texts\n            // * block: select blocks\n            if (shift) {\n                if (type === 'none') {\n                    type = state.type = 'native';\n                }\n                if (type === 'native') {\n                    state.lastPoint = new Point(clientX, clientY);\n                    handleNativeRangeDragMove(state.startRange, e);\n                }\n                else if (type === 'block') {\n                    this.selectedBlocksWithShiftClick(x, y);\n                }\n                return;\n            }\n            // clear selection first\n            this.clear();\n            state.resetStartRange(e);\n            // mouseRoot click will blur all captions\n            const allCaptions = Array.from(document.querySelectorAll('.affine-embed-wrapper-caption'));\n            allCaptions.forEach(el => {\n                if (el !== target) {\n                    el.blur();\n                }\n            });\n            let clickBlockInfo = null;\n            const element = getClosestBlockElementByPoint(new Point(clientX, clientY), {\n                rect: this.container.innerRect,\n            });\n            if (element) {\n                clickBlockInfo = {\n                    model: getModelByBlockElement(element),\n                    rect: getSelectedStateRectByBlockElement(element),\n                    element: element,\n                };\n            }\n            if (clickBlockInfo && clickBlockInfo.model) {\n                const { element } = clickBlockInfo;\n                this.container.lastSelectionPosition = 'start';\n                state.focusedBlock = element;\n            }\n            if (clickBlockInfo &&\n                matchFlavours(clickBlockInfo.model, ['affine:embed', 'affine:divider'])) {\n                window.getSelection()?.removeAllRanges();\n                state.activeComponent = clickBlockInfo.element;\n                assertExists(this.state.activeComponent);\n                if (clickBlockInfo.model.type === 'image') {\n                    state.type = 'embed';\n                    state.selectedEmbeds.push(state.activeComponent);\n                    this.slots.embedRectsUpdated.emit([clickBlockInfo.rect]);\n                }\n                else {\n                    state.type = 'block';\n                    state.selectedBlocks.push(state.activeComponent);\n                    this.slots.selectedRectsUpdated.emit([clickBlockInfo.rect]);\n                }\n                return;\n            }\n            if (isInsidePageTitle(target) ||\n                isDatabaseInput(target) ||\n                // TODO It's a workaround, we need remove the ad-hoc code\n                // Fix https://github.com/toeverything/blocksuite/issues/2459\n                target instanceof HTMLInputElement)\n                return;\n            handleNativeRangeClick(this.page, e, this.container);\n        };\n        this._onContainerDblClick = (ctx) => {\n            const e = ctx.get('pointerState');\n            // clear selection first\n            this.clear();\n            // switch native selection\n            NativeDragHandlers.onStart(this, e);\n            // The following code is for the fullscreen image modal\n            // fixme:\n            //  remove dispatch a custom event\n            //  once we have a better way to handle this\n            //  like plugin system.\n            {\n                const { raw: { clientX, clientY }, } = e;\n                const element = getClosestBlockElementByPoint(new Point(clientX, clientY), {\n                    rect: this.container.innerRect,\n                });\n                if (element) {\n                    const targetModel = getModelByBlockElement(element);\n                    if (targetModel.flavour === 'affine:embed') {\n                        window.dispatchEvent(new CustomEvent('affine.embed-block-db-click', {\n                            detail: {\n                                blockId: targetModel.id,\n                            },\n                        }));\n                    }\n                }\n            }\n            showFormatQuickBarByClicks('double', e, this.page, this.container, this.state);\n        };\n        this._onContainerTripleClick = (ctx) => {\n            const e = ctx.get('pointerState');\n            showFormatQuickBarByClicks('triple', e, this.page, this.container, this.state);\n        };\n        this._onContainerContextMenu = (ctx) => {\n            const e = ctx.get('defaultState');\n            repairContextMenuRange(e.event);\n        };\n        this._onContainerPointerMove = (ctx) => {\n            const e = ctx.get('pointerState');\n            const { dragging, raw } = e;\n            // dont show option menu of image on block/native selection\n            if (dragging || raw.target.closest('.embed-editing-state'))\n                return;\n            const point = new Point(raw.clientX, raw.clientY);\n            let hoverEditingState = null;\n            const { innerRect } = this.container;\n            const element = getClosestBlockElementByPoint(point.clone(), {\n                rect: innerRect,\n            });\n            if (element) {\n                const { left, top, width, height } = getRectByBlockElement(element);\n                hoverEditingState = {\n                    element: element,\n                    model: getModelByBlockElement(element),\n                    rect: new DOMRect(Math.max(left, innerRect.left + PAGE_BLOCK_CHILD_PADDING), top, width, height),\n                };\n            }\n            this.container.components.dragHandle?.onContainerMouseMove(e, hoverEditingState);\n            if (hoverEditingState) {\n                const { model, element } = hoverEditingState;\n                let shouldClear = true;\n                if (model.type === 'image') {\n                    const { state: { viewport: { left, clientWidth }, }, } = this;\n                    const rect = getSelectedStateRectByBlockElement(element);\n                    const tempRect = Rect.fromDOMRect(rect);\n                    const isOutside = rect.right + 60 < left + clientWidth;\n                    tempRect.right += isOutside ? 60 : 0;\n                    if (tempRect.isPointIn(point)) {\n                        // when image size is too large, the option popup should show inside\n                        rect.x = rect.right + (isOutside ? 10 : -50);\n                        hoverEditingState.rect = rect;\n                        shouldClear = false;\n                    }\n                }\n                if (shouldClear) {\n                    hoverEditingState = null;\n                }\n            }\n            this.slots.embedEditingStateUpdated.emit(hoverEditingState);\n        };\n        this._onSelectionChangeWithDebounce = () => {\n            const selection = window.getSelection();\n            if (!selection)\n                return;\n            // filter out selection change event from title\n            if (isInsidePageTitle(selection.anchorNode) ||\n                isInsidePageTitle(selection.focusNode)) {\n                return;\n            }\n            // Exclude selection change outside the editor\n            if (!selection.containsNode(this.container, true)) {\n                return;\n            }\n            const range = getCurrentNativeRange(selection);\n            if (range.collapsed)\n                return;\n            if (this.page.readonly)\n                return;\n            const offsetDelta = selection.anchorOffset - selection.focusOffset;\n            let selectionDirection = 'none';\n            if (offsetDelta > 0) {\n                selectionDirection = 'right-left';\n            }\n            else if (offsetDelta < 0) {\n                selectionDirection = 'left-right';\n            }\n            const direction = selectionDirection === 'left-right' ? 'right-bottom' : 'left-top';\n            // Show quick bar when user select text by keyboard(Shift + Arrow)\n            showFormatQuickBar({\n                page: this.page,\n                container: this.container,\n                direction,\n                anchorEl: {\n                    getBoundingClientRect: () => {\n                        return calcCurrentSelectionPosition(direction, this.state);\n                    },\n                },\n            });\n        };\n        this._onSelectionChangeWithoutDebounce = () => {\n            updateLocalSelectionRange(this.page);\n        };\n        this.slots = slots;\n        this._embedResizeManager = new EmbedResizeManager(this.state, slots);\n        let isDragging = false;\n        this._add('dragStart', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            isDragging = true;\n            this._onContainerDragStart(ctx);\n        });\n        this._add('dragMove', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            this._onContainerDragMove(ctx);\n        });\n        this._dispatcher.add('dragEnd', ctx => {\n            const event = ctx.get('pointerState');\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            isDragging = false;\n            this._onContainerDragEnd(ctx);\n        });\n        this._add('click', ctx => {\n            const event = ctx.get('pointerState');\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            this._onContainerClick(ctx);\n        });\n        this._add('doubleClick', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            this._onContainerDblClick(ctx);\n        });\n        this._add('tripleClick', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            this._onContainerTripleClick(ctx);\n        });\n        this._add('pointerDown', this._onContainerPointerDown);\n        this._add('pointerMove', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            if (this.page.hasFlavour('affine:frame')) {\n                this._onContainerPointerMove(ctx);\n            }\n        });\n        this._add('contextMenu', this._onContainerContextMenu);\n        this._add('virgo-vrange-updated', () => {\n            this._onSelectionChangeWithoutDebounce();\n        });\n        this._add('virgo-vrange-updated', debounce((ctx) => {\n            const { event } = ctx.get('defaultState');\n            if (shouldFilterMouseEvent(event))\n                return;\n            if (isDragging) {\n                return;\n            }\n            this._onSelectionChangeWithDebounce();\n        }, 300));\n    }\n    _ensureFrameExists() {\n        const hasFrame = this.page.hasFlavour('affine:frame');\n        if (!hasFrame) {\n            const frameId = this.page.addBlock('affine:frame', {}, this.page.root);\n            this.page.addBlock('affine:paragraph', {}, frameId);\n            return true;\n        }\n        return false;\n    }\n    get viewportElement() {\n        return this.container.viewportElement;\n    }\n    updateDraggingArea(draggingArea) {\n        if (this.state.focusedBlock !== null) {\n            this.state.focusedBlock = null;\n        }\n        const rect = Rect.fromPoints(draggingArea.start, draggingArea.end).toDOMRect();\n        this.slots.draggingAreaUpdated.emit(rect);\n        return rect;\n    }\n    updateViewport() {\n        const { viewportElement } = this.container;\n        const { clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop } = viewportElement;\n        const { top, left } = viewportElement.getBoundingClientRect();\n        this.state.viewport = {\n            top,\n            left,\n            clientHeight,\n            clientWidth,\n            scrollHeight,\n            scrollLeft,\n            scrollTop,\n        };\n    }\n    updateRects() {\n        const { type } = this.state;\n        if (type === 'block') {\n            this.refreshSelectedBlocksRects();\n        }\n        else if (type === 'embed') {\n            this.refreshEmbedRects();\n        }\n    }\n    refreshDraggingArea(viewportOffset) {\n        const { blockCache, draggingArea } = this.state;\n        if (draggingArea) {\n            this.selectBlocksByDraggingArea(blockCache, Rect.fromPoints(draggingArea.start, draggingArea.end).toDOMRect(), viewportOffset, true);\n        }\n        else {\n            this.state.draggingArea = null;\n            this.slots.draggingAreaUpdated.emit(null);\n            this.refreshSelectedBlocksRects();\n        }\n    }\n    refreshSelectedBlocksRects() {\n        const { focusedBlock, selectedBlocks } = this.state;\n        if (selectedBlocks.length === 0)\n            return;\n        // just refresh selected blocks\n        if (focusedBlock === null) {\n            const rects = getBlockElementsExcludeSubtrees(selectedBlocks).map(getRectByBlockElement);\n            this.slots.selectedRectsUpdated.emit(rects);\n        }\n        else {\n            // only current focused block element\n            this.slots.selectedRectsUpdated.emit([\n                getRectByBlockElement(focusedBlock),\n            ]);\n        }\n    }\n    refreshSelectedBlocksRectsByModels(models) {\n        this.state.selectedBlocks = models\n            .map(getBlockElementByModel)\n            .filter((block) => block !== null);\n        this.refreshSelectedBlocksRects();\n    }\n    refreshEmbedRects(hoverEditingState = null) {\n        const { activeComponent, selectedEmbeds, viewport } = this.state;\n        if (activeComponent && selectedEmbeds.length) {\n            const rect = getSelectedStateRectByBlockElement(activeComponent);\n            const embedRects = [\n                new DOMRect(rect.left, rect.top, rect.width, rect.height),\n            ];\n            // updates editing\n            if (hoverEditingState && isImage(activeComponent)) {\n                const isOutside = rect.right + 60 < viewport.left + viewport.clientWidth;\n                // when image size is too large, the option popup should show inside\n                rect.x = rect.right + (isOutside ? 10 : -50);\n                hoverEditingState.rect = rect;\n            }\n            this.slots.embedRectsUpdated.emit(embedRects);\n        }\n    }\n    refreshRemoteSelection() {\n        const element = this.container.querySelector('remote-selection');\n        if (element) {\n            element.requestUpdate();\n        }\n    }\n    selectOneBlock(element, rect) {\n        // clear selection first\n        this.clear();\n        // rich-text should be unfocused\n        this.state.blur();\n        this.state.type = 'block';\n        this.state.focusedBlock = element;\n        if (!element)\n            return;\n        if (!rect) {\n            rect = getRectByBlockElement(this.state.focusedBlock);\n        }\n        // find subtrees of focused block element\n        const selectedBlocks = getBlockElementsIncludeSubtrees([element]);\n        // only current focused block element\n        setSelectedBlocks(this.state, this.slots, selectedBlocks, [rect]);\n    }\n    selectAllBlocks() {\n        // clear selection first\n        this.clear();\n        this.state.type = 'block';\n        this.state.focusedBlock = null;\n        const selectedBlocks = getBlockElementsByElement(this.container);\n        // clear subtrees\n        const rects = getBlockElementsExcludeSubtrees(selectedBlocks).map(getRectByBlockElement);\n        setSelectedBlocks(this.state, this.slots, selectedBlocks, rects);\n    }\n    selectBlocksByDraggingArea(blockCache, draggingArea, viewportOffset, isScrolling = false) {\n        if (isScrolling) {\n            this.state.refreshBlockRectCache();\n        }\n        const blocks = filterBlocksExcludeSubtrees(blockCache, draggingArea, \n        // subtracting the left/top of the container is required.\n        viewportOffset);\n        const [selectedBlocks, rects] = blocks.reduce((data, { block }) => {\n            data[0].push(...getBlockElementsIncludeSubtrees([block]));\n            data[1].push(getRectByBlockElement(block));\n            return data;\n        }, [[], []]);\n        setSelectedBlocks(this.state, this.slots, selectedBlocks, rects);\n    }\n    selectedBlocksWithShiftClick(x, y) {\n        const { state } = this;\n        const { viewport: { scrollLeft, scrollTop }, viewportOffset, selectedBlocks, } = state;\n        const lastIndex = selectedBlocks.length - 1;\n        if (lastIndex === -1)\n            return;\n        const hasOneBlock = lastIndex === 0;\n        const first = selectedBlocks[0];\n        const last = hasOneBlock ? first : selectedBlocks[lastIndex];\n        const firstRect = getRectByBlockElement(first);\n        const lastRect = hasOneBlock ? firstRect : getRectByBlockElement(last);\n        const rect = Rect.fromPoints(new Point(firstRect.left + viewportOffset.x, firstRect.top + viewportOffset.y), new Point(lastRect.right + viewportOffset.x, lastRect.bottom + viewportOffset.y));\n        const point = new Point(x + scrollLeft, y + scrollTop);\n        let start;\n        let end;\n        let pos = true;\n        if (hasOneBlock) {\n            if (rect.isPointIn(point)) {\n                return;\n            }\n            if (point.y < rect.top) {\n                start = point;\n                end = rect.max;\n                pos = false;\n            }\n            else {\n                start = rect.min;\n                end = point;\n            }\n        }\n        else {\n            if (rect.isPointIn(point)) {\n                if (point.y >= rect.top + rect.height / 2) {\n                    start = point;\n                    end = rect.max;\n                    pos = false;\n                }\n                else {\n                    start = rect.min;\n                    end = point;\n                }\n            }\n            else if (point.y < rect.top) {\n                start = point;\n                end = rect.max;\n                pos = false;\n            }\n            else {\n                start = rect.min;\n                end = point;\n            }\n        }\n        if (start && end) {\n            this.selectBlocksByDraggingArea(state.blockCache, Rect.fromPoints(start, end).toDOMRect(), viewportOffset, true);\n        }\n        const direction = pos ? 'center-bottom' : 'center-top';\n        showFormatQuickBar({\n            page: this.page,\n            container: this.container,\n            direction,\n            anchorEl: {\n                // After update block type, the block selection will be cleared and refreshed.\n                // So we need to get the targe block's rect dynamic.\n                getBoundingClientRect: () => {\n                    return calcCurrentSelectionPosition(direction, state);\n                },\n            },\n        });\n    }\n    setSelectedBlocks(selectedBlocks, rects) {\n        setSelectedBlocks(this.state, this.slots, selectedBlocks, rects);\n    }\n    setFocusedBlock(blockElement) {\n        this.state.focusedBlock = blockElement;\n    }\n    // clear selection: `block`, `block:drag`, `embed`, `native`\n    clear() {\n        const { state, slots } = this;\n        let { type } = state;\n        if (type === 'block:drag') {\n            // clear `drag preview`\n            PreviewDragHandlers.clear(this);\n            type = 'block';\n        }\n        if (type === 'block') {\n            state.clearBlockSelection();\n            slots.selectedRectsUpdated.emit([]);\n            slots.draggingAreaUpdated.emit(null);\n            // `ESC`\n            // clear `format quick bar`\n            this.container.querySelector('format-quick-bar')?.remove();\n        }\n        else if (type === 'embed') {\n            state.clearEmbedSelection();\n            slots.embedRectsUpdated.emit([]);\n            slots.embedEditingStateUpdated.emit(null);\n        }\n        else if (type === 'native') {\n            state.clearNativeSelection();\n        }\n    }\n    dispose() {\n        this.slots.selectedRectsUpdated.dispose();\n        this.slots.draggingAreaUpdated.dispose();\n        this.slots.embedEditingStateUpdated.dispose();\n        this.slots.embedRectsUpdated.dispose();\n        this._disposables.dispose();\n    }\n}\n//# sourceMappingURL=selection-manager.js.map","export { DefaultSelectionManager } from './selection-manager.js';\nexport { PageSelectionState, } from './selection-state.js';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference types=\"vite/client\" />\nimport { BLOCK_ID_ATTR, PAGE_BLOCK_CHILD_PADDING, PAGE_BLOCK_PADDING_BOTTOM, } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { BlockElement } from '@blocksuite/lit';\nimport { matchFlavours, Slot, Utils, } from '@blocksuite/store';\nimport { VEditor } from '@blocksuite/virgo';\nimport { css, html } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { PageClipboard } from '../../__internal__/clipboard/index.js';\nimport { asyncFocusRichText, hotkey, HOTKEY_SCOPE_TYPE, Rect, } from '../../__internal__/index.js';\nimport { getService, registerService } from '../../__internal__/service.js';\nimport { activeEditorManager } from '../../__internal__/utils/active-editor-manager.js';\nimport { PageBlockService } from '../index.js';\nimport { bindHotkeys, removeHotkeys } from '../utils/bind-hotkey.js';\nimport { tryUpdateFrameSize } from '../utils/index.js';\nimport { DraggingArea, EmbedEditingContainer, EmbedSelectedRectsContainer, } from './components.js';\nimport { DefaultSelectionManager } from './selection-manager/index.js';\nimport { createDragHandle, getAllowSelectedBlocks } from './utils.js';\nlet DefaultPageBlockComponent = class DefaultPageBlockComponent extends BlockElement {\n    constructor() {\n        super(...arguments);\n        this.flavour = 'affine:page';\n        this.clipboard = new PageClipboard(this);\n        this.getService = getService;\n        this.lastSelectionPosition = 'start';\n        /**\n         * Shared components\n         */\n        this.components = {\n            dragHandle: null,\n        };\n        this._draggingArea = null;\n        this._selectedRects = [];\n        this._selectedEmbedRects = [];\n        this._isComposing = false;\n        this._resizeObserver = null;\n        this.slots = {\n            draggingAreaUpdated: new Slot(),\n            selectedRectsUpdated: new Slot(),\n            embedRectsUpdated: new Slot(),\n            embedEditingStateUpdated: new Slot(),\n            nativeSelectionToggled: new Slot(),\n            pageLinkClicked: new Slot(),\n        };\n        this._titleVEditor = null;\n        this._updateTitleInMeta = () => {\n            this.page.workspace.setPageMeta(this.page.id, {\n                title: this.model.title.toString(),\n            });\n        };\n        this._onTitleKeyDown = (e) => {\n            if (e.isComposing || this.page.readonly)\n                return;\n            const hasContent = !this.page.isEmpty;\n            const { page, model } = this;\n            const defaultFrame = model.children.find(child => child.flavour === 'affine:frame');\n            if (e.key === 'Enter' && hasContent) {\n                e.preventDefault();\n                assertExists(this._titleVEditor);\n                const vRange = this._titleVEditor.getVRange();\n                assertExists(vRange);\n                const right = model.title.split(vRange.index);\n                const newFirstParagraphId = page.addBlock('affine:paragraph', { text: right }, defaultFrame, 0);\n                asyncFocusRichText(page, newFirstParagraphId);\n                return;\n            }\n            else if (e.key === 'ArrowDown' && hasContent) {\n                e.preventDefault();\n                const firstText = defaultFrame?.children.find(block => matchFlavours(block, ['affine:paragraph', 'affine:list', 'affine:code']));\n                if (firstText) {\n                    asyncFocusRichText(page, firstText.id);\n                }\n                else {\n                    const newFirstParagraphId = page.addBlock('affine:paragraph', {}, defaultFrame, 0);\n                    asyncFocusRichText(page, newFirstParagraphId);\n                }\n                return;\n            }\n            else if (e.key === 'Tab') {\n                e.preventDefault();\n            }\n        };\n        this._onTitlePaste = (event) => {\n            const vEditor = this._titleVEditor;\n            if (!vEditor)\n                return;\n            const vRange = vEditor.getVRange();\n            if (!vRange)\n                return;\n            const data = event.clipboardData?.getData('text/plain');\n            if (data) {\n                const text = data.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n                vEditor.insertText(vRange, text);\n                vEditor.setVRange({\n                    index: vRange.index + text.length,\n                    length: 0,\n                });\n            }\n        };\n        // TODO: disable it on scroll's threshold\n        this._onWheel = (e) => {\n            const { selection } = this;\n            const { state } = selection;\n            const { type, viewport } = state;\n            if (type === 'native') {\n                return;\n            }\n            if (type.startsWith('block')) {\n                e.preventDefault();\n                const { viewportElement } = this;\n                const { scrollTop, scrollHeight, clientHeight } = viewport;\n                const max = scrollHeight - clientHeight;\n                let top = e.deltaY / 2;\n                if (top > 0) {\n                    if (Math.ceil(scrollTop) === max)\n                        return;\n                    top = Math.min(top, max - scrollTop);\n                }\n                else if (top < 0) {\n                    if (scrollTop === 0)\n                        return;\n                    top = Math.max(top, -scrollTop);\n                }\n                viewport.scrollTop += top;\n                // FIXME: need smooth\n                viewportElement.scrollTop += top;\n                if (type === 'block') {\n                    const { draggingArea } = state;\n                    if (draggingArea) {\n                        draggingArea.end.y += top;\n                        selection.updateDraggingArea(draggingArea);\n                    }\n                }\n            }\n            // trigger native scroll\n        };\n        this._onScroll = (e) => {\n            const { selection } = this;\n            const { type, viewport } = selection.state;\n            const { scrollLeft, scrollTop } = e.target;\n            viewport.scrollLeft = scrollLeft;\n            viewport.scrollTop = scrollTop;\n            if (type === 'block') {\n                selection.refreshDraggingArea(selection.state.viewportOffset);\n                return;\n            }\n            if (type === 'embed') {\n                selection.refreshEmbedRects(this._embedEditingState);\n                return;\n            }\n            let point;\n            if (type === 'native') {\n                point = selection.state.startRange && selection.state.lastPoint;\n            }\n            else if (type === 'block:drag') {\n                point = selection.state.lastPoint;\n            }\n            if (point) {\n                // Create a synthetic `pointermove` PointerEvent\n                const evt = new PointerEvent('pointermove', {\n                    clientX: point.x,\n                    clientY: point.y,\n                });\n                document.dispatchEvent(evt);\n            }\n        };\n        this._initDragHandle = () => {\n            const createHandle = () => {\n                this.components.dragHandle = createDragHandle(this);\n                this.components.dragHandle.getDropAllowedBlocks = draggingBlockIds => {\n                    if (draggingBlockIds &&\n                        draggingBlockIds.length === 1 &&\n                        Utils.isInsideBlockByFlavour(this.page, draggingBlockIds[0], 'affine:database')) {\n                        return getAllowSelectedBlocks(this.page.getParent(draggingBlockIds[0]));\n                    }\n                    if (!draggingBlockIds || draggingBlockIds.length === 1) {\n                        return getAllowSelectedBlocks(this.model);\n                    }\n                    else {\n                        return getAllowSelectedBlocks(this.model).filter(block => {\n                            return !draggingBlockIds?.includes(block.id);\n                        });\n                    }\n                };\n            };\n            if (this.page.awarenessStore.getFlag('enable_drag_handle') &&\n                !this.components.dragHandle) {\n                createHandle();\n            }\n            this._disposables.add(this.page.awarenessStore.slots.update.subscribe(msg => msg.state?.flags.enable_drag_handle, enable => {\n                if (enable) {\n                    if (!this.components.dragHandle) {\n                        createHandle();\n                    }\n                }\n                else {\n                    this.components.dragHandle?.remove();\n                    this.components.dragHandle = null;\n                }\n            }, {\n                filter: msg => msg.id === this.page.doc.clientID,\n            }));\n        };\n    }\n    get titleVEditor() {\n        assertExists(this._titleVEditor);\n        return this._titleVEditor;\n    }\n    get innerRect() {\n        const { left, width } = this.pageBlockContainer.getBoundingClientRect();\n        const { clientHeight, top } = this.selection.state.viewport;\n        return Rect.fromLWTH(left, Math.min(width, window.innerWidth), top, Math.min(clientHeight, window.innerHeight));\n    }\n    _initTitleVEditor() {\n        const { model } = this;\n        const title = model.title;\n        this._titleVEditor = new VEditor(title.yText, {\n            active: () => activeEditorManager.isActive(this),\n        });\n        this._titleVEditor.mount(this._titleContainer);\n        this._titleVEditor.bindHandlers({\n            keydown: this._onTitleKeyDown,\n            paste: this._onTitlePaste,\n        });\n        // Workaround for virgo skips composition event\n        this._disposables.addFromEvent(this._titleContainer, 'compositionstart', () => (this._isComposing = true));\n        this._disposables.addFromEvent(this._titleContainer, 'compositionend', () => (this._isComposing = false));\n        this.model.title.yText.observe(() => {\n            this._updateTitleInMeta();\n            this.requestUpdate();\n        });\n        this._titleVEditor.setReadonly(this.page.readonly);\n    }\n    updated(changedProperties) {\n        if (changedProperties.has('model')) {\n            if (this.model && !this._titleVEditor) {\n                this._initTitleVEditor();\n            }\n        }\n    }\n    _initSlotEffects() {\n        const { slots } = this;\n        slots.draggingAreaUpdated.on(rect => {\n            this._draggingArea = rect;\n        });\n        slots.selectedRectsUpdated.on(rects => {\n            this._selectedRects = rects;\n        });\n        slots.embedRectsUpdated.on(rects => {\n            this._selectedEmbedRects = rects;\n            if (rects.length === 0) {\n                this._embedEditingState = null;\n            }\n        });\n        slots.embedEditingStateUpdated.on(embedEditingState => {\n            this._embedEditingState = embedEditingState;\n        });\n        this.model.childrenUpdated.on(() => this.requestUpdate());\n    }\n    _initFrameSizeEffect() {\n        tryUpdateFrameSize(this.page, 1);\n        this.addEventListener('keydown', e => {\n            if (e.ctrlKey || e.metaKey || e.shiftKey)\n                return;\n            tryUpdateFrameSize(this.page, 1);\n        });\n    }\n    _initResizeEffect() {\n        const resizeObserver = new ResizeObserver((entries) => {\n            for (const { target } of entries) {\n                if (target === this.viewportElement) {\n                    this.selection.updateViewport();\n                    this.selection.updateRects();\n                    break;\n                }\n            }\n        });\n        resizeObserver.observe(this.viewportElement);\n        this._resizeObserver = resizeObserver;\n    }\n    firstUpdated() {\n        const { page, selection } = this;\n        const scope = hotkey.newScope(HOTKEY_SCOPE_TYPE.AFFINE_PAGE);\n        if (activeEditorManager.isActive(this)) {\n            hotkey.setScope(scope);\n        }\n        this._disposables.add(activeEditorManager.activeSlot.on(() => {\n            if (activeEditorManager.isActive(this)) {\n                hotkey.setScope(scope);\n            }\n        }));\n        this._disposables.add(() => hotkey.deleteScope(scope));\n        hotkey.withScope(scope, () => {\n            bindHotkeys(page, selection);\n        });\n        hotkey.enableHotkey();\n        this._initDragHandle();\n        this._initSlotEffects();\n        this._initFrameSizeEffect();\n        this._initResizeEffect();\n        this.mouseRoot.addEventListener('wheel', this._onWheel);\n        this.viewportElement.addEventListener('scroll', this._onScroll);\n        this.setAttribute(BLOCK_ID_ATTR, this.model.id);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:page', PageBlockService);\n        this.clipboard.init(this.page);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.mouseRoot = this.parentElement;\n        this.selection = new DefaultSelectionManager({\n            page: this.page,\n            mouseRoot: this.mouseRoot,\n            slots: this.slots,\n            container: this,\n            dispatcher: this.root.uiEventDispatcher,\n        });\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.clipboard.dispose();\n        this._disposables.dispose();\n        this.components.dragHandle?.remove();\n        removeHotkeys();\n        this.selection.clear();\n        this.selection.dispose();\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n        this.mouseRoot.removeEventListener('wheel', this._onWheel);\n        this.viewportElement.removeEventListener('scroll', this._onScroll);\n    }\n    render() {\n        requestAnimationFrame(() => {\n            this.selection.refreshRemoteSelection();\n        });\n        const { page, selection } = this;\n        const { viewportOffset } = selection.state;\n        const draggingArea = DraggingArea(this._draggingArea);\n        const selectedEmbedContainer = EmbedSelectedRectsContainer(this._selectedEmbedRects, viewportOffset);\n        const embedEditingContainer = EmbedEditingContainer(page.readonly ? null : this._embedEditingState, this.slots, viewportOffset);\n        const isEmpty = (!this.model.title || !this.model.title.length) && !this._isComposing;\n        return html `\n      <div class=\"affine-default-viewport\">\n        <div class=\"affine-default-page-block-container\">\n          <div class=\"affine-default-page-block-title-container\">\n            <div\n              data-block-is-title=\"true\"\n              class=\"affine-default-page-block-title ${isEmpty\n            ? 'affine-default-page-block-title-empty'\n            : ''}\"\n            ></div>\n            <backlink-button\n              .host=\"${this}\"\n              .page=\"${this.page}\"\n            ></backlink-button>\n          </div>\n          ${this.content}\n        </div>\n        <affine-selected-blocks\n          .mouseRoot=\"${this.mouseRoot}\"\n          .state=\"${{\n            rects: this._selectedRects,\n            grab: !draggingArea,\n        }}\"\n          .offset=\"${viewportOffset}\"\n        ></affine-selected-blocks>\n        ${draggingArea} ${selectedEmbedContainer} ${embedEditingContainer}\n      </div>\n    `;\n    }\n};\nDefaultPageBlockComponent.styles = css `\n    .affine-default-viewport {\n      position: relative;\n      overflow-x: hidden;\n      overflow-y: auto;\n      height: 100%;\n    }\n\n    .affine-default-page-block-container {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      font-family: var(--affine-font-family);\n      font-size: var(--affine-font-base);\n      line-height: var(--affine-line-height);\n      color: var(--affine-text-primary-color);\n      font-weight: 400;\n      max-width: var(--affine-editor-width);\n      margin: 0 auto;\n      /* cursor: crosshair; */\n      cursor: default;\n      padding-bottom: ${PAGE_BLOCK_PADDING_BOTTOM}px;\n\n      /* Leave a place for drag-handle */\n      padding-left: ${PAGE_BLOCK_CHILD_PADDING}px;\n      padding-right: ${PAGE_BLOCK_CHILD_PADDING}px;\n    }\n\n    .affine-default-page-block-title {\n      width: 100%;\n      font-size: 40px;\n      line-height: 50px;\n      font-weight: 700;\n      outline: none;\n      resize: none;\n      border: 0;\n      font-family: inherit;\n      color: inherit;\n      cursor: text;\n    }\n\n    .affine-default-page-block-title-empty::before {\n      content: 'Title';\n      color: var(--affine-placeholder-color);\n      position: absolute;\n      opacity: 0.5;\n    }\n\n    .affine-default-page-block-title:disabled {\n      background-color: transparent;\n    }\n\n    /*\n    .affine-default-page-block-title-container {\n    }\n    */\n\n    .affine-block-element {\n      display: block;\n    }\n  `;\n__decorate([\n    state()\n], DefaultPageBlockComponent.prototype, \"_draggingArea\", void 0);\n__decorate([\n    state()\n], DefaultPageBlockComponent.prototype, \"_selectedRects\", void 0);\n__decorate([\n    state()\n], DefaultPageBlockComponent.prototype, \"_selectedEmbedRects\", void 0);\n__decorate([\n    state()\n], DefaultPageBlockComponent.prototype, \"_embedEditingState\", void 0);\n__decorate([\n    state()\n], DefaultPageBlockComponent.prototype, \"_isComposing\", void 0);\n__decorate([\n    query('.affine-default-viewport')\n], DefaultPageBlockComponent.prototype, \"viewportElement\", void 0);\n__decorate([\n    query('.affine-default-page-block-container')\n], DefaultPageBlockComponent.prototype, \"pageBlockContainer\", void 0);\n__decorate([\n    query('.affine-default-page-block-title')\n], DefaultPageBlockComponent.prototype, \"_titleContainer\", void 0);\nDefaultPageBlockComponent = __decorate([\n    customElement('affine-default-page')\n], DefaultPageBlockComponent);\nexport { DefaultPageBlockComponent };\n//# sourceMappingURL=default-page-block.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { tooltipStyle } from '../../../components/tooltip/tooltip.js';\nlet EdgelessToolIconButton = class EdgelessToolIconButton extends LitElement {\n    constructor() {\n        super();\n        this.disabled = false;\n        this.coming = false;\n        this.tipPosition = 'top';\n        this.active = false;\n        this.activeMode = 'color';\n        this.addEventListener('click', event => {\n            if (this.disabled) {\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }, { capture: true });\n    }\n    render() {\n        const tooltip = this.coming ? '(Coming soon)' : this.tooltip;\n        const classnames = `icon-container has-tool-tip active-mode-${this.activeMode}`;\n        return html `\n      <div\n        class=${classnames}\n        role=\"button\"\n        ?disabled=${this.disabled}\n        ?active=${this.active}\n      >\n        <slot></slot>\n        ${tooltip\n            ? html `<tool-tip\n              inert\n              role=\"tooltip\"\n              tip-position=${this.tipPosition}\n              arrow\n              >${tooltip}</tool-tip\n            >`\n            : nothing}\n      </div>\n    `;\n    }\n};\nEdgelessToolIconButton.styles = css `\n    .icon-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 4px;\n      color: var(--affine-icon-color);\n      margin: 8px;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n\n    .icon-container:hover {\n      background: var(--affine-hover-color);\n    }\n\n    .icon-container.active-mode-color[active] {\n      color: var(--affine-primary-color);\n    }\n\n    .icon-container.active-mode-background[active] {\n      background: var(--affine-hover-color);\n    }\n\n    .icon-container[disabled] {\n      pointer-events: none;\n      cursor: not-allowed;\n    }\n\n    .icon-container[coming] {\n      cursor: not-allowed;\n      color: var(--affine-text-disable-color);\n    }\n\n    ${tooltipStyle}\n\n    tool-tip {\n      z-index: 12;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessToolIconButton.prototype, \"disabled\", void 0);\n__decorate([\n    property()\n], EdgelessToolIconButton.prototype, \"coming\", void 0);\n__decorate([\n    property()\n], EdgelessToolIconButton.prototype, \"tooltip\", void 0);\n__decorate([\n    property()\n], EdgelessToolIconButton.prototype, \"tipPosition\", void 0);\n__decorate([\n    property()\n], EdgelessToolIconButton.prototype, \"active\", void 0);\n__decorate([\n    property()\n], EdgelessToolIconButton.prototype, \"activeMode\", void 0);\nEdgelessToolIconButton = __decorate([\n    customElement('edgeless-tool-icon-button')\n], EdgelessToolIconButton);\nexport { EdgelessToolIconButton };\n//# sourceMappingURL=tool-icon-button.js.map","import { DiamondIcon, EllipseIcon, RoundedRectangleIcon, SquareIcon, TriangleIcon, } from '@blocksuite/global/config';\nexport const ShapeComponentConfig = [\n    {\n        name: 'rect',\n        icon: SquareIcon,\n        tooltip: 'Square',\n        disabled: false,\n    },\n    {\n        name: 'ellipse',\n        icon: EllipseIcon,\n        tooltip: 'Ellipse',\n        disabled: false,\n    },\n    {\n        name: 'diamond',\n        icon: DiamondIcon,\n        tooltip: 'Diamond',\n        disabled: false,\n    },\n    {\n        name: 'triangle',\n        icon: TriangleIcon,\n        tooltip: 'Triangle',\n        disabled: false,\n    },\n    {\n        name: 'roundedRect',\n        icon: RoundedRectangleIcon,\n        tooltip: 'Rounded rectangle',\n        disabled: false,\n    },\n];\nexport const ShapeComponentConfigMap = ShapeComponentConfig.reduce((acc, config) => {\n    acc[config.name] = config;\n    return acc;\n}, {});\n//# sourceMappingURL=shape-menu-config.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/tool-icon-button.js';\nimport { Slot } from '@blocksuite/store';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { ShapeComponentConfig } from './shape-menu-config.js';\nlet EdgelessShapeMenu = class EdgelessShapeMenu extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.slots = {\n            select: new Slot(),\n        };\n    }\n    _onSelect(value) {\n        this.selectedShape = value;\n        this.slots.select.emit(value);\n    }\n    disconnectedCallback() {\n        this.slots.select.dispose();\n        super.disconnectedCallback();\n    }\n    render() {\n        return html `\n      <div class=\"shape-menu-container\">\n        ${ShapeComponentConfig.map(({ name, icon, tooltip, disabled }) => {\n            return html `\n            <edgeless-tool-icon-button\n              .disabled=${disabled}\n              .tooltip=${tooltip}\n              .active=${this.selectedShape === name}\n              @click=${() => {\n                if (disabled)\n                    return;\n                this._onSelect(name);\n            }}\n            >\n              ${icon}\n            </edgeless-tool-icon-button>\n          `;\n        })}\n      </div>\n    `;\n    }\n};\nEdgelessShapeMenu.styles = css `\n    :host {\n      display: block;\n      z-index: 2;\n    }\n    .shape-menu-container {\n      display: flex;\n      align-items: center;\n      width: 240px;\n      height: 48px;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n      fill: none;\n      stroke: currentColor;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessShapeMenu.prototype, \"selectedShape\", void 0);\nEdgelessShapeMenu = __decorate([\n    customElement('edgeless-shape-menu')\n], EdgelessShapeMenu);\nexport { EdgelessShapeMenu };\n//# sourceMappingURL=shape-menu.js.map","import './tool-icon-button.js';\nimport { css, html } from 'lit';\nexport const lineSizeButtonStyles = [\n    css `\n    .edgeless-component-line-size-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 16px;\n      height: 16px;\n    }\n\n    .edgeless-component-line-size-button div {\n      border-radius: 50%;\n      background-color: var(--affine-icon-color);\n    }\n\n    .edgeless-component-line-size-button.size-s div {\n      width: 4px;\n      height: 4px;\n    }\n    .edgeless-component-line-size-button.size-l div {\n      width: 10px;\n      height: 10px;\n    }\n  `,\n];\nfunction getTooltip(size) {\n    return {\n        s: 'Thin',\n        l: 'Thick',\n    }[size];\n}\nexport function LineSizeButton({ className, size, active, tooltip: tooltipFromProps, onClick, }) {\n    const classnames = `edgeless-component-line-size-button size-${size} ${active ? 'active' : ''}`;\n    const tooltip = tooltipFromProps !== undefined ? tooltipFromProps : getTooltip(size);\n    return html `<edgeless-tool-icon-button\n    class=${className}\n    .active=${active}\n    .activeMode=${'background'}\n    .tooltip=${tooltip}\n    @click=${onClick}\n  >\n    <div class=${classnames}>\n      <div></div>\n    </div>\n  </edgeless-tool-icon-button>`;\n}\n//# sourceMappingURL=line-size-button.js.map","import './tool-icon-button.js';\nimport { BanIcon, ConnectorLIcon, DashLineIcon, } from '@blocksuite/global/config';\nimport { css, html } from 'lit';\nexport const lineStyleButtonStyles = [\n    css `\n    .edgeless-component-line-style-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 16px;\n      height: 16px;\n      color: var(--affine-icon-color);\n    }\n  `,\n];\nfunction getModeIcon(mode) {\n    switch (mode) {\n        case 'solid': {\n            return ConnectorLIcon;\n        }\n        case 'dash': {\n            return DashLineIcon;\n        }\n        case 'none': {\n            return BanIcon;\n        }\n    }\n}\nfunction getModeTooltip(mode) {\n    return {\n        solid: 'Solid',\n        dash: 'Dash',\n        none: 'None',\n    }[mode];\n}\nexport function LineStyleButton({ className, mode, active, tooltip: tooltipFromProps, onClick, }) {\n    const classnames = `edgeless-component-line-style-button mode-${mode} ${active ? 'active' : ''}`;\n    const icon = getModeIcon(mode);\n    const tooltip = tooltipFromProps !== undefined ? tooltipFromProps : getModeTooltip(mode);\n    return html `<edgeless-tool-icon-button\n    class=${className}\n    .active=${active}\n    .activeMode=${'background'}\n    .tooltip=${tooltip}\n    @click=${onClick}\n  >\n    <div class=${classnames}>${icon}</div>\n  </edgeless-tool-icon-button>`;\n}\n//# sourceMappingURL=line-style-button.js.map","import { css, html } from 'lit';\nexport const panelWrapperStyle = [\n    css `\n    .edgeless-component-panel-wrapper {\n      display: flex;\n      padding: 4px;\n      justify-content: center;\n      align-items: center;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n    }\n  `,\n];\nexport function PanelWrapper({ children, className }) {\n    const name = `edgeless-component-panel-wrapper ${className ? className : ''}`;\n    return html `<div class=${name}>${children}</div>`;\n}\n//# sourceMappingURL=panel-wrapper.js.map","import { html } from 'lit';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { LineSizeButton, lineSizeButtonStyles, } from './line-size-button.js';\nimport { LineStyleButton, lineStyleButtonStyles, } from './line-style-button.js';\nimport { PanelWrapper, panelWrapperStyle } from './panel-wrapper.js';\nexport const lineStylesPanelStyles = [\n    panelWrapperStyle,\n    lineSizeButtonStyles,\n    lineStyleButtonStyles,\n];\nexport function LineStylesPanel({ onClick, selectedLineSize, selectedLineStyle, lineStyle = ['solid', 'dash', 'none'], } = {}) {\n    const lineSizeButtons = repeat(['s', 'l'], size => size, size => {\n        return LineSizeButton({\n            size,\n            active: size === selectedLineSize,\n            onClick: () => {\n                onClick?.({\n                    type: 'size',\n                    value: size,\n                });\n            },\n        });\n    });\n    const lineStyleButtons = repeat(lineStyle, mode => mode, mode => {\n        return LineStyleButton({\n            mode,\n            active: mode === selectedLineStyle,\n            onClick: () => {\n                onClick?.({\n                    type: 'lineStyle',\n                    value: mode,\n                });\n            },\n        });\n    });\n    return PanelWrapper({\n        className: 'line-style-panel',\n        children: html `\n      ${lineSizeButtons}\n      <menu-divider .vertical=${true}></menu-divider>\n      ${lineStyleButtons}\n    `,\n    });\n}\n//# sourceMappingURL=line-styles-panel.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../tool-icon-button.js';\nimport '../color-panel.js';\nimport '../../toolbar/shape-tool/shape-menu.js';\nimport { LineStyleIcon } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { StrokeStyle, } from '@blocksuite/phasor';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { countBy, maxBy } from '../../../../__internal__/utils/std.js';\nimport { ShapeComponentConfigMap } from '../../toolbar/shape-tool/shape-menu-config.js';\nimport { isTransparent } from '../color-panel.js';\nimport { ColorUnit } from '../color-panel.js';\nimport { lineSizeButtonStyles } from '../line-size-button.js';\nimport { LineStylesPanel, lineStylesPanelStyles, } from '../line-styles-panel.js';\nimport { createButtonPopper } from '../utils.js';\nfunction getMostCommonShape(elements) {\n    const shapeTypes = countBy(elements, (ele) => {\n        return ele.shapeType === 'rect' && ele.radius\n            ? 'roundedRect'\n            : ele.shapeType;\n    });\n    const max = maxBy(Object.entries(shapeTypes), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonFillColor(elements) {\n    const colors = countBy(elements, (ele) => {\n        return ele.filled ? ele.fillColor : '--affine-palette-transparent';\n    });\n    const max = maxBy(Object.entries(colors), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonStrokeColor(elements) {\n    const colors = countBy(elements, (ele) => {\n        return ele.strokeColor;\n    });\n    const max = maxBy(Object.entries(colors), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonLineSize(elements) {\n    const sizes = countBy(elements, (ele) => {\n        return ele.strokeWidth === 4 ? 's' : 'l';\n    });\n    const max = maxBy(Object.entries(sizes), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonLineStyle(elements) {\n    const sizes = countBy(elements, (ele) => {\n        switch (ele.strokeStyle) {\n            case StrokeStyle.Solid: {\n                return 'solid';\n            }\n            case StrokeStyle.Dashed: {\n                return 'dash';\n            }\n            case StrokeStyle.None: {\n                return 'none';\n            }\n        }\n    });\n    const max = maxBy(Object.entries(sizes), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nconst FILL_COLORS = [\n    '--affine-palette-shape-yellow',\n    '--affine-palette-shape-orange',\n    '--affine-palette-shape-tangerine',\n    '--affine-palette-shape-red',\n    '--affine-palette-shape-magenta',\n    '--affine-palette-shape-purple',\n    '--affine-palette-shape-green',\n    '--affine-palette-shape-blue',\n    '--affine-palette-shape-navy',\n    '--affine-palette-shape-black',\n    '--affine-palette-shape-white',\n    '--affine-palette-transparent',\n];\nexport const DEFAULT_SHAPE_FILL_COLOR = FILL_COLORS[11];\nconst STROKE_COLORS = [\n    '--affine-palette-line-yellow',\n    '--affine-palette-line-orange',\n    '--affine-palette-line-tangerine',\n    '--affine-palette-line-red',\n    '--affine-palette-line-magenta',\n    '--affine-palette-line-purple',\n    '--affine-palette-line-green',\n    '--affine-palette-line-blue',\n    '--affine-palette-line-navy',\n    '--affine-palette-line-black',\n    '--affine-palette-line-white',\n    '--affine-palette-transparent',\n];\nexport const DEFAULT_SHAPE_STROKE_COLOR = STROKE_COLORS[9];\nlet EdgelessChangeShapeButton = class EdgelessChangeShapeButton extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.elements = [];\n        this._popperShow = false;\n        this._shapeMenuPopper = null;\n        this._fillColorMenuPopper = null;\n        this._strokeColorMenuPopper = null;\n        this._lineStylesPanelPopper = null;\n    }\n    _forceUpdateSelection() {\n        // FIXME: force update selection, because connector mode changed\n        this.slots.selectionUpdated.emit({ ...this.selectionState });\n    }\n    _setShapeFillColor(color) {\n        const filled = !isTransparent(color);\n        this.elements.forEach(ele => {\n            this.surface.updateElement(ele.id, {\n                filled,\n                fillColor: color,\n            });\n        });\n        this._forceUpdateSelection();\n    }\n    _setShapeStrokeColor(color) {\n        this.elements.forEach(ele => {\n            this.surface.updateElement(ele.id, {\n                strokeColor: color,\n            });\n        });\n        this._forceUpdateSelection();\n    }\n    _setShapeStrokeWidth(strokeWidth) {\n        this.elements.forEach(ele => {\n            this.surface.updateElement(ele.id, {\n                strokeWidth,\n            });\n        });\n        this._forceUpdateSelection();\n    }\n    _setShapeStrokeStyle(strokeStyle) {\n        this.elements.forEach(ele => {\n            this.surface.updateElement(ele.id, {\n                strokeStyle,\n            });\n        });\n        this._forceUpdateSelection();\n    }\n    _setShapeStyles({ type, value }) {\n        if (type === 'size') {\n            const strokeWidth = value === 's' ? 4 : 10;\n            this._setShapeStrokeWidth(strokeWidth);\n        }\n        else if (type === 'lineStyle') {\n            switch (value) {\n                case 'solid': {\n                    this._setShapeStrokeStyle(StrokeStyle.Solid);\n                    break;\n                }\n                case 'dash': {\n                    this._setShapeStrokeStyle(StrokeStyle.Dashed);\n                    break;\n                }\n                case 'none': {\n                    this._setShapeStrokeStyle(StrokeStyle.None);\n                    break;\n                }\n            }\n        }\n    }\n    firstUpdated(changedProperties) {\n        const _disposables = this._disposables;\n        this._shapeMenuPopper = createButtonPopper(this._changeShapeButton, this._shapeMenu, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._shapeMenuPopper);\n        _disposables.add(this._shapeMenu.slots.select.on(shapeType => {\n            const updatedProps = shapeType === 'roundedRect'\n                ? { shapeType: 'rect', radius: 0.1 }\n                : { shapeType, radius: 0 };\n            this.page.captureSync();\n            this.elements.forEach(element => {\n                this.surface.updateElement(element.id, updatedProps);\n            });\n            this._forceUpdateSelection();\n        }));\n        this._fillColorMenuPopper = createButtonPopper(this._fillColorButton, this._fillColorMenu, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._fillColorMenuPopper);\n        this._strokeColorMenuPopper = createButtonPopper(this._strokeColorButton, this._strokeColorMenu, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._strokeColorMenuPopper);\n        this._lineStylesPanelPopper = createButtonPopper(this._lineStylesButton, this._lineStylesPanel, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._lineStylesPanelPopper);\n        super.firstUpdated(changedProperties);\n    }\n    render() {\n        const selectedShape = getMostCommonShape(this.elements);\n        const icon = selectedShape\n            ? ShapeComponentConfigMap[selectedShape].icon\n            : null;\n        const selectedFillColor = getMostCommonFillColor(this.elements) ?? FILL_COLORS[0];\n        const selectedStrokeColor = getMostCommonStrokeColor(this.elements) ?? STROKE_COLORS[0];\n        const selectedLineSize = getMostCommonLineSize(this.elements) ?? 's';\n        const selectedLineStyle = getMostCommonLineStyle(this.elements) ?? 'solid';\n        return html `\n      <edgeless-tool-icon-button\n        class=\"change-shape-button\"\n        .tooltip=${this._popperShow ? '' : 'Switch type'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._shapeMenuPopper?.toggle()}\n      >\n        ${icon}\n      </edgeless-tool-icon-button>\n      <edgeless-shape-menu .selectedShape=${selectedShape}>\n      </edgeless-shape-menu>\n\n      <menu-divider .vertical=${true}></menu-divider>\n\n      <edgeless-tool-icon-button\n        class=\"fill-color-button\"\n        .tooltip=${this._popperShow ? '' : 'Shape color'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._fillColorMenuPopper?.toggle()}\n      >\n        ${ColorUnit(selectedFillColor)}\n      </edgeless-tool-icon-button>\n      <div class=\"color-panel-container fill-color\">\n        <edgeless-color-panel\n          .value=${selectedFillColor}\n          .options=${FILL_COLORS}\n          @select=${(e) => this._setShapeFillColor(e.detail)}\n        >\n        </edgeless-color-panel>\n      </div>\n\n      <edgeless-tool-icon-button\n        class=\"stroke-color-button\"\n        .tooltip=${this._popperShow ? '' : 'Border color'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._strokeColorMenuPopper?.toggle()}\n      >\n        ${ColorUnit(selectedStrokeColor, { hollowCircle: true })}\n      </edgeless-tool-icon-button>\n      <div class=\"color-panel-container stroke-color\">\n        <edgeless-color-panel\n          .value=${selectedStrokeColor}\n          .options=${STROKE_COLORS}\n          .hollowCircle=${true}\n          @select=${(e) => this._setShapeStrokeColor(e.detail)}\n        >\n        </edgeless-color-panel>\n      </div>\n\n      <menu-divider .vertical=${true}></menu-divider>\n\n      <edgeless-tool-icon-button\n        class=\"line-styles-button\"\n        .tooltip=${this._popperShow ? '' : 'Border style'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._lineStylesPanelPopper?.toggle()}\n      >\n        ${LineStyleIcon}\n      </edgeless-tool-icon-button>\n      ${LineStylesPanel({\n            selectedLineSize,\n            selectedLineStyle,\n            onClick: event => {\n                this._setShapeStyles(event);\n            },\n        })}\n    `;\n    }\n};\nEdgelessChangeShapeButton.styles = [\n    lineSizeButtonStyles,\n    lineStylesPanelStyles,\n    css `\n      :host {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        color: var(--affine-text-primary-color);\n        stroke: none;\n        fill: currentColor;\n      }\n\n      menu-divider {\n        height: 24px;\n      }\n\n      edgeless-shape-menu {\n        display: none;\n      }\n\n      edgeless-shape-menu[data-show] {\n        display: block;\n      }\n\n      .change-shape-button {\n        fill: none;\n        stroke: currentColor;\n      }\n\n      .color-panel-container {\n        display: none;\n        padding: 4px;\n        justify-content: center;\n        align-items: center;\n        background: var(--affine-background-overlay-panel-color);\n        box-shadow: var(--affine-shadow-2);\n        border-radius: 8px;\n      }\n\n      .color-panel-container[data-show] {\n        display: block;\n      }\n\n      .shape-color-button-indicator {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 24px;\n        height: 24px;\n        box-sizing: border-box;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n\n      .shape-color-button-indicator div {\n        border-radius: 50%;\n        width: 16px;\n        height: 16px;\n      }\n\n      .line-style-panel {\n        display: none;\n      }\n      .line-style-panel[data-show] {\n        display: flex;\n      }\n    `,\n];\n__decorate([\n    property()\n], EdgelessChangeShapeButton.prototype, \"elements\", void 0);\n__decorate([\n    property()\n], EdgelessChangeShapeButton.prototype, \"page\", void 0);\n__decorate([\n    property()\n], EdgelessChangeShapeButton.prototype, \"surface\", void 0);\n__decorate([\n    property()\n], EdgelessChangeShapeButton.prototype, \"selectionState\", void 0);\n__decorate([\n    property()\n], EdgelessChangeShapeButton.prototype, \"slots\", void 0);\n__decorate([\n    state()\n], EdgelessChangeShapeButton.prototype, \"_popperShow\", void 0);\n__decorate([\n    query('.change-shape-button')\n], EdgelessChangeShapeButton.prototype, \"_changeShapeButton\", void 0);\n__decorate([\n    query('edgeless-shape-menu')\n], EdgelessChangeShapeButton.prototype, \"_shapeMenu\", void 0);\n__decorate([\n    query('.fill-color-button')\n], EdgelessChangeShapeButton.prototype, \"_fillColorButton\", void 0);\n__decorate([\n    query('.color-panel-container.fill-color')\n], EdgelessChangeShapeButton.prototype, \"_fillColorMenu\", void 0);\n__decorate([\n    query('.stroke-color-button')\n], EdgelessChangeShapeButton.prototype, \"_strokeColorButton\", void 0);\n__decorate([\n    query('.color-panel-container.stroke-color')\n], EdgelessChangeShapeButton.prototype, \"_strokeColorMenu\", void 0);\n__decorate([\n    query('.line-styles-button')\n], EdgelessChangeShapeButton.prototype, \"_lineStylesButton\", void 0);\n__decorate([\n    query('.line-style-panel')\n], EdgelessChangeShapeButton.prototype, \"_lineStylesPanel\", void 0);\nEdgelessChangeShapeButton = __decorate([\n    customElement('edgeless-change-shape-button')\n], EdgelessChangeShapeButton);\nexport { EdgelessChangeShapeButton };\n//# sourceMappingURL=change-shape-button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../tool-icon-button.js';\nimport '../color-panel.js';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { countBy, maxBy } from '../../../../__internal__/utils/std.js';\nimport { BrushSize } from '../../../../__internal__/utils/types.js';\nimport { DEFAULT_SELECTED_COLOR } from '../color-panel.js';\nimport { createButtonPopper } from '../utils.js';\nfunction getMostCommonColor(elements) {\n    const shapeTypes = countBy(elements, (ele) => ele.color);\n    const max = maxBy(Object.entries(shapeTypes), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonSize(elements) {\n    const shapeTypes = countBy(elements, (ele) => ele.lineWidth);\n    const max = maxBy(Object.entries(shapeTypes), ([k, count]) => count);\n    return max ? Number(max[0]) : null;\n}\nlet EdgelessChangeBrushButton = class EdgelessChangeBrushButton extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.elements = [];\n        this._popperShow = false;\n        this._colorPanelPopper = null;\n    }\n    _setBrushSize(size) {\n        this.page.captureSync();\n        this.elements.forEach(element => {\n            if (element.lineWidth !== size) {\n                this.surface.updateElement(element.id, { lineWidth: size });\n            }\n        });\n        // FIXME: force update selection, because brush size changed\n        this.slots.selectionUpdated.emit({ ...this.selectionState });\n    }\n    _setBrushColor(color) {\n        this.page.captureSync();\n        this.elements.forEach(element => {\n            if (element.color !== color) {\n                this.surface.updateElement(element.id, { color });\n            }\n        });\n    }\n    firstUpdated(changedProperties) {\n        const _disposables = this._disposables;\n        this._colorPanelPopper = createButtonPopper(this, this._colorPanel, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._colorPanelPopper);\n        super.firstUpdated(changedProperties);\n    }\n    render() {\n        const selectedColor = getMostCommonColor(this.elements) ?? DEFAULT_SELECTED_COLOR;\n        const style = {\n            backgroundColor: `var(${selectedColor})`,\n        };\n        const selectedSize = getMostCommonSize(this.elements);\n        return html `\n      <edgeless-tool-icon-button\n        .tooltip=${'Thin'}\n        @click=${() => this._setBrushSize(BrushSize.Thin)}\n      >\n        <div\n          class=\"brush-size-button\"\n          ?active=${selectedSize === BrushSize.Thin}\n        >\n          <div class=\"thin\"></div>\n        </div>\n      </edgeless-tool-icon-button>\n      <edgeless-tool-icon-button\n        .tooltip=${'Thick'}\n        @click=${() => this._setBrushSize(BrushSize.Thick)}\n      >\n        <div\n          class=\"brush-size-button\"\n          ?active=${selectedSize === BrushSize.Thick}\n        >\n          <div class=\"thick\"></div>\n        </div>\n      </edgeless-tool-icon-button>\n      <menu-divider .vertical=${true}></menu-divider>\n      <edgeless-tool-icon-button\n        .tooltip=${this._popperShow ? '' : 'Color'}\n        .active=${false}\n        @click=${() => this._colorPanelPopper?.toggle()}\n      >\n        <div class=\"brush-size-button\">\n          <div class=\"thick\" style=${styleMap(style)}></div>\n        </div>\n      </edgeless-tool-icon-button>\n      <div class=\"color-panel-container\">\n        <edgeless-color-panel\n          .value=${selectedColor}\n          @select=${(e) => this._setBrushColor(e.detail)}\n        >\n        </edgeless-color-panel>\n      </div>\n    `;\n    }\n};\nEdgelessChangeBrushButton.styles = css `\n    :host {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      color: var(--affine-text-primary-color);\n      fill: currentColor;\n    }\n\n    menu-divider {\n      height: 24px;\n    }\n\n    .color-panel-container {\n      display: none;\n      padding: 4px;\n      justify-content: center;\n      align-items: center;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n    }\n\n    .color-panel-container[data-show] {\n      display: block;\n    }\n\n    .brush-size-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 24px;\n      height: 24px;\n      box-sizing: border-box;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n\n    .brush-size-button div {\n      border-radius: 50%;\n      background-color: var(--affine-icon-color);\n    }\n\n    .brush-size-button[active] div {\n      background-color: var(--affine-blue);\n    }\n\n    .brush-size-button .thin {\n      width: 4px;\n      height: 4px;\n    }\n\n    .brush-size-button .thick {\n      width: 10px;\n      height: 10px;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessChangeBrushButton.prototype, \"elements\", void 0);\n__decorate([\n    property({ type: Object })\n], EdgelessChangeBrushButton.prototype, \"selectionState\", void 0);\n__decorate([\n    property()\n], EdgelessChangeBrushButton.prototype, \"page\", void 0);\n__decorate([\n    property()\n], EdgelessChangeBrushButton.prototype, \"surface\", void 0);\n__decorate([\n    property()\n], EdgelessChangeBrushButton.prototype, \"slots\", void 0);\n__decorate([\n    state()\n], EdgelessChangeBrushButton.prototype, \"_popperShow\", void 0);\n__decorate([\n    query('.color-panel-container')\n], EdgelessChangeBrushButton.prototype, \"_colorPanel\", void 0);\nEdgelessChangeBrushButton = __decorate([\n    customElement('edgeless-change-brush-button')\n], EdgelessChangeBrushButton);\nexport { EdgelessChangeBrushButton };\n//# sourceMappingURL=change-brush-button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../tool-icon-button.js';\nimport '../color-panel.js';\nimport { ConnectorLIcon, ConnectorXIcon, LineStyleIcon, } from '@blocksuite/global/config';\nimport { StrokeStyle } from '@blocksuite/phasor';\nimport { ConnectorMode } from '@blocksuite/phasor';\nimport { DisposableGroup } from '@blocksuite/store';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { countBy, maxBy } from '../../../../__internal__/utils/std.js';\nimport { generateConnectorPath, getConnectorAttachedInfo, } from '../../utils.js';\nimport { DEFAULT_SELECTED_COLOR } from '../color-panel.js';\nimport { lineSizeButtonStyles } from '../line-size-button.js';\nimport { LineStylesPanel, lineStylesPanelStyles, } from '../line-styles-panel.js';\nimport { createButtonPopper } from '../utils.js';\nfunction getMostCommonColor(elements) {\n    const colors = countBy(elements, (ele) => ele.color);\n    const max = maxBy(Object.entries(colors), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonMode(elements) {\n    const modes = countBy(elements, (ele) => ele.mode);\n    const max = maxBy(Object.entries(modes), ([k, count]) => count);\n    return max ? Number(max[0]) : null;\n}\nfunction getMostCommonLineWidth(elements) {\n    const sizes = countBy(elements, (ele) => {\n        return ele.lineWidth === 4 ? 's' : 'l';\n    });\n    const max = maxBy(Object.entries(sizes), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nfunction getMostCommonLineStyle(elements) {\n    const sizes = countBy(elements, (ele) => {\n        switch (ele.strokeStyle) {\n            case StrokeStyle.Solid: {\n                return 'solid';\n            }\n            case StrokeStyle.Dashed: {\n                return 'dash';\n            }\n            case StrokeStyle.None: {\n                return 'none';\n            }\n        }\n    });\n    const max = maxBy(Object.entries(sizes), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nlet EdgelessChangeConnectorButton = class EdgelessChangeConnectorButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.elements = [];\n        this._colorPanelPopper = null;\n        this._disposables = new DisposableGroup();\n        this._lineStylesPanelPopper = null;\n        this._popperShow = false;\n    }\n    _forceUpdateSelection() {\n        // FIXME: force update selection, because connector mode changed\n        this.slots.selectionUpdated.emit({ ...this.selectionState });\n    }\n    _setConnectorMode(mode) {\n        this.page.captureSync();\n        this.elements.forEach(element => {\n            if (element.mode !== mode) {\n                if (element.mode === ConnectorMode.Orthogonal) {\n                    const controllers = [\n                        element.controllers[0],\n                        element.controllers[element.controllers.length - 1],\n                    ].map(c => {\n                        return {\n                            ...c,\n                            x: c.x + element.x,\n                            y: c.y + element.y,\n                        };\n                    });\n                    this.surface.updateElement(element.id, {\n                        controllers,\n                        mode,\n                    });\n                }\n                else {\n                    const { start, end } = getConnectorAttachedInfo(element, this.surface, this.page);\n                    const route = generateConnectorPath(start.rect, end.rect, start.point, end.point, []);\n                    this.surface.updateElement(element.id, {\n                        controllers: route,\n                        mode,\n                    });\n                }\n            }\n        });\n        this._forceUpdateSelection();\n    }\n    _setConnectorColor(color) {\n        this.page.captureSync();\n        this.elements.forEach(element => {\n            if (element.color !== color) {\n                this.surface.updateElement(element.id, { color });\n            }\n        });\n    }\n    _setShapeStrokeWidth(lineWidth) {\n        this.elements.forEach(ele => {\n            this.surface.updateElement(ele.id, {\n                lineWidth,\n            });\n        });\n        this._forceUpdateSelection();\n    }\n    _setShapeStrokeStyle(strokeStyle) {\n        this.elements.forEach(ele => {\n            this.surface.updateElement(ele.id, {\n                strokeStyle,\n            });\n        });\n        this._forceUpdateSelection();\n    }\n    _setShapeStyles({ type, value }) {\n        if (type === 'size') {\n            const strokeWidth = value === 's' ? 4 : 10;\n            this._setShapeStrokeWidth(strokeWidth);\n        }\n        else if (type === 'lineStyle') {\n            switch (value) {\n                case 'solid': {\n                    this._setShapeStrokeStyle(StrokeStyle.Solid);\n                    break;\n                }\n                case 'dash': {\n                    this._setShapeStrokeStyle(StrokeStyle.Dashed);\n                    break;\n                }\n                case 'none': {\n                    this._setShapeStrokeStyle(StrokeStyle.None);\n                    break;\n                }\n            }\n        }\n    }\n    firstUpdated(changedProperties) {\n        const _disposables = this._disposables;\n        this._colorPanelPopper = createButtonPopper(this._colorButton, this._colorPanel);\n        _disposables.add(this._colorPanelPopper);\n        this._lineStylesPanelPopper = createButtonPopper(this._lineStylesButton, this._lineStylesPanel, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._lineStylesPanelPopper);\n        super.firstUpdated(changedProperties);\n    }\n    render() {\n        const selectedColor = getMostCommonColor(this.elements) ?? DEFAULT_SELECTED_COLOR;\n        const style = {\n            backgroundColor: `var(${selectedColor})`,\n        };\n        const selectedMode = getMostCommonMode(this.elements);\n        const selectedLineSize = getMostCommonLineWidth(this.elements) ?? 's';\n        const selectedLineStyle = getMostCommonLineStyle(this.elements) ?? 'solid';\n        return html `\n      <edgeless-tool-icon-button\n        .tooltip=${'Straight line'}\n        .tipPosition=${'bottom'}\n        @click=${() => this._setConnectorMode(ConnectorMode.Straight)}\n      >\n        <div\n          class=\"connector-mode-button\"\n          ?active=${selectedMode === ConnectorMode.Straight}\n        >\n          ${ConnectorLIcon}\n        </div>\n      </edgeless-tool-icon-button>\n      <edgeless-tool-icon-button\n        .tooltip=${'Connector'}\n        .tipPosition=${'bottom'}\n        @click=${() => this._setConnectorMode(ConnectorMode.Orthogonal)}\n      >\n        <div\n          class=\"connector-mode-button\"\n          ?active=${selectedMode === ConnectorMode.Orthogonal}\n        >\n          ${ConnectorXIcon}\n        </div>\n      </edgeless-tool-icon-button>\n      <menu-divider .vertical=${true}></menu-divider>\n      <edgeless-tool-icon-button\n        class=\"connector-color-button\"\n        .tooltip=${'Color'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._colorPanelPopper?.toggle()}\n      >\n        <div>\n          <div class=\"color\" style=${styleMap(style)}></div>\n        </div>\n      </edgeless-tool-icon-button>\n      <div class=\"color-panel-container\">\n        <edgeless-color-panel\n          .value=${selectedColor}\n          @select=${(e) => this._setConnectorColor(e.detail)}\n        >\n        </edgeless-color-panel>\n      </div>\n\n      <edgeless-tool-icon-button\n        class=\"line-styles-button\"\n        .tooltip=${this._popperShow ? '' : 'Border style'}\n        .tipPosition=${'bottom'}\n        .active=${false}\n        @click=${() => this._lineStylesPanelPopper?.toggle()}\n      >\n        ${LineStyleIcon}\n      </edgeless-tool-icon-button>\n      ${LineStylesPanel({\n            selectedLineSize,\n            selectedLineStyle,\n            lineStyle: ['solid', 'dash'],\n            onClick: event => {\n                this._setShapeStyles(event);\n            },\n        })}\n    `;\n    }\n};\nEdgelessChangeConnectorButton.styles = [\n    lineSizeButtonStyles,\n    lineStylesPanelStyles,\n    css `\n      :host {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        color: var(--affine-text-primary-color);\n        fill: currentColor;\n      }\n\n      menu-divider {\n        height: 24px;\n      }\n\n      .color-panel-container {\n        display: none;\n        padding: 4px;\n        justify-content: center;\n        align-items: center;\n        background: var(--affine-background-overlay-panel-color);\n        box-shadow: var(--affine-shadow-2);\n        border-radius: 8px;\n      }\n\n      .color-panel-container[data-show] {\n        display: block;\n      }\n\n      .connector-mode-button {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 24px;\n        height: 24px;\n        box-sizing: border-box;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n\n      .connector-mode-button[active] {\n        background-color: var(--affine-hover-color);\n      }\n\n      .connector-color-button .color {\n        width: 16px;\n        height: 16px;\n        border-radius: 50%;\n      }\n\n      .line-style-panel {\n        display: none;\n      }\n      .line-style-panel[data-show] {\n        display: flex;\n      }\n    `,\n];\n__decorate([\n    property()\n], EdgelessChangeConnectorButton.prototype, \"elements\", void 0);\n__decorate([\n    property({ type: Object })\n], EdgelessChangeConnectorButton.prototype, \"selectionState\", void 0);\n__decorate([\n    property()\n], EdgelessChangeConnectorButton.prototype, \"page\", void 0);\n__decorate([\n    property()\n], EdgelessChangeConnectorButton.prototype, \"surface\", void 0);\n__decorate([\n    property()\n], EdgelessChangeConnectorButton.prototype, \"slots\", void 0);\n__decorate([\n    query('.connector-color-button')\n], EdgelessChangeConnectorButton.prototype, \"_colorButton\", void 0);\n__decorate([\n    query('.color-panel-container')\n], EdgelessChangeConnectorButton.prototype, \"_colorPanel\", void 0);\n__decorate([\n    query('.line-styles-button')\n], EdgelessChangeConnectorButton.prototype, \"_lineStylesButton\", void 0);\n__decorate([\n    query('.line-style-panel')\n], EdgelessChangeConnectorButton.prototype, \"_lineStylesPanel\", void 0);\nEdgelessChangeConnectorButton = __decorate([\n    customElement('edgeless-change-connector-button')\n], EdgelessChangeConnectorButton);\nexport { EdgelessChangeConnectorButton };\n//# sourceMappingURL=change-connector-button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../tool-icon-button.js';\nimport '../../toolbar/shape-tool/shape-menu.js';\nimport '../color-panel.js';\nimport { FRAME_BACKGROUND_COLORS } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { countBy, maxBy } from '../../../../__internal__/utils/std.js';\nimport { createButtonPopper } from '../utils.js';\nfunction getMostCommonBackground(frames) {\n    const shapeTypes = countBy(frames, (frame) => {\n        return frame.background;\n    });\n    const max = maxBy(Object.entries(shapeTypes), ([k, count]) => count);\n    return max ? max[0] : null;\n}\nlet EdgelessChangeFrameButton = class EdgelessChangeFrameButton extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.frames = [];\n        this._popperShow = false;\n        this._colorSelectorPopper = null;\n    }\n    _renderSelectedColor(color) {\n        const style = { backgroundColor: `var(${color})` };\n        return html `<div class=\"selected-background\" style=${styleMap(style)}>\n      A\n    </div>`;\n    }\n    _setBlockBackground(color) {\n        this.frames.forEach(frame => {\n            this.page.updateBlock(frame, { background: color });\n        });\n        // FIXME: force update selection, because connector mode changed\n        this.slots.selectionUpdated.emit({ ...this.selectionState });\n    }\n    firstUpdated(changedProperties) {\n        const _disposables = this._disposables;\n        this._colorSelectorPopper = createButtonPopper(this, this._colorSelector, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._colorSelectorPopper);\n        super.firstUpdated(changedProperties);\n    }\n    render() {\n        const selectedBackground = getMostCommonBackground(this.frames) || FRAME_BACKGROUND_COLORS[0];\n        return html `\n      <edgeless-tool-icon-button\n        .tooltip=${this._popperShow ? '' : 'Color'}\n        .active=${false}\n        @click=${() => this._colorSelectorPopper?.toggle()}\n      >\n        ${this._renderSelectedColor(selectedBackground)}\n      </edgeless-tool-icon-button>\n      <edgeless-color-panel\n        .value=${selectedBackground}\n        .options=${FRAME_BACKGROUND_COLORS}\n        .showLetterMark=${true}\n        @select=${(event) => {\n            this._setBlockBackground(event.detail);\n        }}\n      ></edgeless-color-panel>\n    `;\n    }\n};\nEdgelessChangeFrameButton.styles = css `\n    :host {\n      display: block;\n      color: var(--affine-text-primary-color);\n      fill: currentColor;\n    }\n\n    edgeless-color-panel {\n      display: none;\n      width: 108px;\n      height: 68px;\n      padding: 8px 12px;\n      flex-wrap: wrap;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n    }\n\n    edgeless-color-panel[data-show] {\n      display: flex;\n    }\n\n    .selected-background {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      width: 16px;\n      height: 16px;\n      box-sizing: border-box;\n      border-radius: 50%;\n      color: var(--affine-text-primary-color);\n      font-size: 12px;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessChangeFrameButton.prototype, \"frames\", void 0);\n__decorate([\n    property()\n], EdgelessChangeFrameButton.prototype, \"page\", void 0);\n__decorate([\n    property()\n], EdgelessChangeFrameButton.prototype, \"selectionState\", void 0);\n__decorate([\n    property()\n], EdgelessChangeFrameButton.prototype, \"slots\", void 0);\n__decorate([\n    state()\n], EdgelessChangeFrameButton.prototype, \"_popperShow\", void 0);\n__decorate([\n    query('edgeless-color-panel')\n], EdgelessChangeFrameButton.prototype, \"_colorSelector\", void 0);\nEdgelessChangeFrameButton = __decorate([\n    customElement('edgeless-change-frame-button')\n], EdgelessChangeFrameButton);\nexport { EdgelessChangeFrameButton };\n//# sourceMappingURL=change-frame-button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../tool-icon-button.js';\nimport '../../toolbar/shape-tool/shape-menu.js';\nimport { MoreHorizontalIcon } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport {} from '../../../../__internal__/index.js';\nimport { isTopLevelBlock } from '../../utils.js';\nimport { createButtonPopper } from '../utils.js';\nconst ACTIONS = [\n    // FIXME: should implement these function\n    // { name: 'Copy', type: 'copy', disabled: true },\n    // { name: 'Paste', type: 'paste', disabled: true },\n    // { name: 'Duplicate', type: 'duplicate', disabled: true },\n    { name: 'Bring to front', type: 'front' },\n    { name: 'Bring forward', type: 'forward' },\n    { name: 'Send backward', type: 'backward' },\n    { name: 'Send to back', type: 'back' },\n    // { name: 'Copy as PNG', type: 'copy as PNG', disabled: true },\n    { name: 'Delete', type: 'delete' },\n];\nfunction Actions(onClick) {\n    return repeat(ACTIONS, action => action.type, action => html `<div\n        class=\"action-item\"\n        @click=${() => onClick(action)}\n        ?data-disabled=${action.disabled}\n      >\n        ${action.name}\n      </div>`);\n}\nlet EdgelessMoreButton = class EdgelessMoreButton extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this.elements = [];\n        this._popperShow = false;\n        this._actionsMenuPopper = null;\n        this._runAction = ({ type }) => {\n            switch (type) {\n                case 'delete':\n                    this._delete();\n                    break;\n                case 'front':\n                case 'forward':\n                case 'backward':\n                case 'back': {\n                    const { frames, shapes } = this._splitElements();\n                    if (frames.length) {\n                        this.slots.reorderingFramesUpdated.emit({\n                            elements: frames,\n                            type,\n                        });\n                    }\n                    if (shapes.length) {\n                        this.slots.reorderingShapesUpdated.emit({\n                            elements: shapes,\n                            type,\n                        });\n                    }\n                    break;\n                }\n            }\n            this._actionsMenuPopper?.hide();\n        };\n    }\n    _splitElements() {\n        const frames = [];\n        const shapes = [];\n        this.elements.forEach(element => {\n            if (isTopLevelBlock(element)) {\n                frames.push(element);\n            }\n            else {\n                shapes.push(element);\n            }\n        });\n        return {\n            frames,\n            shapes,\n        };\n    }\n    _delete() {\n        this.page.captureSync();\n        this.elements.forEach(element => {\n            if (isTopLevelBlock(element)) {\n                const children = this.page.root?.children ?? [];\n                if (children.length > 1) {\n                    this.page.deleteBlock(element);\n                }\n            }\n            else {\n                this.surface.removeElement(element.id);\n            }\n        });\n        this.slots.selectionUpdated.emit({ selected: [], active: false });\n    }\n    firstUpdated(changedProperties) {\n        const _disposables = this._disposables;\n        this._actionsMenuPopper = createButtonPopper(this, this._actionsMenu, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._actionsMenuPopper);\n        super.firstUpdated(changedProperties);\n    }\n    render() {\n        const actions = Actions(this._runAction);\n        return html `\n      <edgeless-tool-icon-button\n        .tooltip=${this._popperShow ? '' : 'More'}\n        .active=${false}\n        @click=${() => this._actionsMenuPopper?.toggle()}\n      >\n        ${MoreHorizontalIcon}\n      </edgeless-tool-icon-button>\n      <div class=\"more-actions-container\">${actions}</div>\n    `;\n    }\n};\nEdgelessMoreButton.styles = css `\n    :host {\n      display: block;\n      color: var(--affine-text-primary-color);\n      fill: currentColor;\n    }\n\n    .more-actions-container {\n      display: none;\n      width: 158px;\n      padding: 8px 4px;\n      justify-content: center;\n      align-items: center;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n      font-size: 16px;\n      line-height: 22px;\n    }\n\n    .more-actions-container[data-show] {\n      display: block;\n    }\n\n    .action-item {\n      width: 100%;\n      height: 32px;\n      box-sizing: border-box;\n      padding: 5px 12px;\n      border-radius: 5px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      cursor: pointer;\n    }\n\n    .action-item:hover {\n      background-color: var(--affine-hover-color);\n    }\n\n    .action-item[data-disabled] {\n      cursor: not-allowed;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessMoreButton.prototype, \"elements\", void 0);\n__decorate([\n    property()\n], EdgelessMoreButton.prototype, \"page\", void 0);\n__decorate([\n    property()\n], EdgelessMoreButton.prototype, \"surface\", void 0);\n__decorate([\n    property()\n], EdgelessMoreButton.prototype, \"slots\", void 0);\n__decorate([\n    state()\n], EdgelessMoreButton.prototype, \"_popperShow\", void 0);\n__decorate([\n    query('.more-actions-container')\n], EdgelessMoreButton.prototype, \"_actionsMenu\", void 0);\nEdgelessMoreButton = __decorate([\n    customElement('edgeless-more-button')\n], EdgelessMoreButton);\nexport { EdgelessMoreButton };\n//# sourceMappingURL=more-button.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction*o(o,t){const f=\"function\"==typeof t;if(void 0!==o){let i=-1;for(const n of o)i>-1&&(yield f?t(i):t),i++,yield n}}export{o as join};\n//# sourceMappingURL=join.js.map\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../tool-icon-button.js';\nimport './change-shape-button.js';\nimport './change-brush-button.js';\nimport './change-connector-button.js';\nimport './change-frame-button.js';\nimport './change-text-button.js';\nimport './more-button.js';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { join } from 'lit/directives/join.js';\nimport { atLeastNMatches, groupBy, } from '../../../../__internal__/utils/std.js';\nimport { isTopLevelBlock, stopPropagation } from '../../utils.js';\nlet EdgelessComponentToolbar = class EdgelessComponentToolbar extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.selected = [];\n    }\n    _groupSelected() {\n        const result = groupBy(this.selected, s => {\n            if (isTopLevelBlock(s)) {\n                return 'frame';\n            }\n            return s.type;\n        });\n        return result;\n    }\n    _getShapeButton(shapeElements) {\n        const shapeButton = shapeElements?.length\n            ? html `<edgeless-change-shape-button\n          .elements=${shapeElements}\n          .page=${this.page}\n          .surface=${this.surface}\n          .slots=${this.slots}\n          .selectionState=${this.selectionState}\n        >\n        </edgeless-change-shape-button>`\n            : null;\n        return shapeButton;\n    }\n    _getBrushButton(brushElements) {\n        return brushElements?.length\n            ? html `<edgeless-change-brush-button\n          .elements=${brushElements}\n          .page=${this.page}\n          .surface=${this.surface}\n          .slots=${this.slots}\n          .selectionState=${this.selectionState}\n        >\n        </edgeless-change-brush-button>`\n            : null;\n    }\n    _getConnectorButton(connectorElements) {\n        return connectorElements?.length\n            ? html ` <edgeless-change-connector-button\n          .elements=${connectorElements}\n          .page=${this.page}\n          .surface=${this.surface}\n          .slots=${this.slots}\n          .selectionState=${this.selectionState}\n        >\n        </edgeless-change-connector-button>`\n            : null;\n    }\n    _getFrameButton(blocks) {\n        return blocks?.length\n            ? html `<edgeless-change-frame-button\n          .frames=${blocks}\n          .page=${this.page}\n          .surface=${this.surface}\n          .slots=${this.slots}\n          .selectionState=${this.selectionState}\n        >\n        </edgeless-change-frame-button>`\n            : null;\n    }\n    _getTextButton(textElements) {\n        return textElements?.length\n            ? html `<edgeless-change-text-button\n          .texts=${textElements}\n          .page=${this.page}\n          .surface=${this.surface}\n          .slots=${this.slots}\n          .selectionState=${this.selectionState}\n        >\n        </edgeless-change-text-button>`\n            : null;\n    }\n    render() {\n        const groupedSelected = this._groupSelected();\n        const { shape, brush, connector, frame, text } = groupedSelected;\n        // when selected types more than two, only show `more` button\n        const selectedAtLeastTwoTypes = atLeastNMatches(Object.values(groupedSelected), e => !!e.length, 2);\n        const buttons = selectedAtLeastTwoTypes\n            ? []\n            : [\n                this._getShapeButton(shape),\n                this._getBrushButton(brush),\n                this._getConnectorButton(connector),\n                this._getFrameButton(frame),\n                this._getTextButton(text),\n            ].filter(b => !!b);\n        const divider = !buttons.length\n            ? nothing\n            : html `<menu-divider .vertical=${true}></menu-divider>`;\n        return html `<div class=\"container\" @pointerdown=${stopPropagation}>\n      ${join(buttons, () => '')} ${divider}\n      <edgeless-more-button\n        .elements=${this.selected}\n        .page=${this.page}\n        .surface=${this.surface}\n        .slots=${this.slots}\n      >\n      </edgeless-more-button>\n    </div>`;\n    }\n};\nEdgelessComponentToolbar.styles = css `\n    :host {\n      display: block;\n      user-select: none;\n    }\n\n    .container {\n      display: flex;\n      align-items: center;\n      height: 48px;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n    }\n\n    menu-divider {\n      height: 24px;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessComponentToolbar.prototype, \"selected\", void 0);\n__decorate([\n    property({ type: Object })\n], EdgelessComponentToolbar.prototype, \"selectionState\", void 0);\n__decorate([\n    property()\n], EdgelessComponentToolbar.prototype, \"page\", void 0);\n__decorate([\n    property()\n], EdgelessComponentToolbar.prototype, \"surface\", void 0);\n__decorate([\n    property()\n], EdgelessComponentToolbar.prototype, \"slots\", void 0);\nEdgelessComponentToolbar = __decorate([\n    customElement('edgeless-component-toolbar')\n], EdgelessComponentToolbar);\nexport { EdgelessComponentToolbar };\n//# sourceMappingURL=component-toolbar.js.map","import { html, nothing } from 'lit';\nexport var HandleDirection;\n(function (HandleDirection) {\n    HandleDirection[\"Left\"] = \"left\";\n    HandleDirection[\"Right\"] = \"right\";\n    HandleDirection[\"TopLeft\"] = \"top-left\";\n    HandleDirection[\"BottomLeft\"] = \"bottom-left\";\n    HandleDirection[\"TopRight\"] = \"top-right\";\n    HandleDirection[\"BottomRight\"] = \"bottom-right\";\n})(HandleDirection || (HandleDirection = {}));\nfunction ResizeHandle(handleDirection, onPointerDown) {\n    const handlerPointerDown = (e) => {\n        e.stopPropagation();\n        onPointerDown && onPointerDown(e, handleDirection);\n    };\n    return html `<div\n    aria-label=${`handle-${handleDirection}`}\n    @pointerdown=${handlerPointerDown}\n  ></div>`;\n}\nexport function ResizeHandles(resizeMode, onPointerDown) {\n    switch (resizeMode) {\n        case 'corner': {\n            const handleTopLeft = ResizeHandle(HandleDirection.TopLeft, onPointerDown);\n            const handleTopRight = ResizeHandle(HandleDirection.TopRight, onPointerDown);\n            const handleBottomLeft = ResizeHandle(HandleDirection.BottomLeft, onPointerDown);\n            const handleBottomRight = ResizeHandle(HandleDirection.BottomRight, onPointerDown);\n            // prettier-ignore\n            return html `\n        ${handleTopLeft}\n        ${handleTopRight}\n        ${handleBottomLeft}\n        ${handleBottomRight}\n      `;\n        }\n        case 'edge': {\n            const handleLeft = ResizeHandle(HandleDirection.Left, onPointerDown);\n            const handleRight = ResizeHandle(HandleDirection.Right, onPointerDown);\n            return html `${handleLeft} ${handleRight}`;\n        }\n        case 'none': {\n            return nothing;\n        }\n    }\n}\n//# sourceMappingURL=resize-handles.js.map","import { Bound } from '@blocksuite/phasor';\nimport { getCommonBound } from '@blocksuite/phasor';\nimport { HandleDirection } from './resize-handles.js';\nexport class HandleResizeManager {\n    constructor(onResizeMove, onResizeEnd) {\n        this._dragDirection = HandleDirection.Left;\n        this._dragPos = {\n            start: { x: 0, y: 0 },\n            end: { x: 0, y: 0 },\n        };\n        this._bounds = new Map();\n        /** Use [minX, minY, maxX, maxY] for convenience */\n        this._commonBound = [0, 0, 0, 0];\n        this._aspectRatio = 1;\n        this._resizeMode = 'none';\n        this._zoom = 1;\n        this._shiftKey = false;\n        this.onPointerDown = (e, direction, bounds, resizeMode, zoom) => {\n            // Prevent selection action from being triggered\n            e.stopPropagation();\n            this._bounds = bounds;\n            const { x, y, w, h } = getCommonBound([...bounds.values()]);\n            this._commonBound = [x, y, x + w, y + h];\n            this._dragDirection = direction;\n            this._dragPos.start = { x: e.x, y: e.y };\n            this._dragPos.end = { x: e.x, y: e.y };\n            this._aspectRatio = w / h;\n            this._resizeMode = resizeMode;\n            this._zoom = zoom;\n            const _onPointerMove = (e) => {\n                if (resizeMode === 'none')\n                    return;\n                this._shiftKey || (this._shiftKey = e.shiftKey);\n                this._dragPos.end = { x: e.x, y: e.y };\n                this._resize(this._shiftKey);\n            };\n            const _onPointerUp = (_) => {\n                this._onResizeEnd();\n                this._bounds.clear();\n                this._dragPos = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\n                this._commonBound = [0, 0, 0, 0];\n                document.removeEventListener('pointermove', _onPointerMove);\n                document.removeEventListener('pointerup', _onPointerUp);\n            };\n            document.addEventListener('pointermove', _onPointerMove);\n            document.addEventListener('pointerup', _onPointerUp);\n        };\n        this._onResizeMove = onResizeMove;\n        this._onResizeEnd = onResizeEnd;\n    }\n    // TODO: move to vec2\n    _resize(shift = false) {\n        const { _aspectRatio: aspectRatio, _dragDirection: direction, _dragPos: dragPos, _resizeMode: resizeMode, _zoom: zoom, _commonBound, } = this;\n        const isCorner = resizeMode === 'corner';\n        const { x: startX, y: startY } = dragPos.start;\n        const { x: endX, y: endY } = dragPos.end;\n        const deltaX = (endX - startX) / zoom;\n        const [oldMinX, oldMinY, oldMaxX, oldMaxY] = _commonBound;\n        const oldCommonW = oldMaxX - oldMinX;\n        const oldCommonH = oldMaxY - oldMinY;\n        let [minX, minY, maxX, maxY] = _commonBound;\n        let width = 0;\n        let height = 0;\n        let flipX = false;\n        let flipY = false;\n        if (isCorner) {\n            const deltaY = (endY - startY) / zoom;\n            switch (direction) {\n                // TODO\n                // case HandleDirection.Top: {\n                //   minY += deltaY;\n                //   break;\n                // }\n                // case HandleDirection.Right: {\n                //   maxX += deltaX;\n                //   break;\n                // }\n                // case HandleDirection.Bottom: {\n                //   maxY += deltaY;\n                //   break;\n                // }\n                // case HandleDirection.Left: {\n                //   minX += deltaX;\n                //   break;\n                // }\n                case HandleDirection.TopLeft: {\n                    minX += deltaX;\n                    minY += deltaY;\n                    break;\n                }\n                case HandleDirection.BottomRight: {\n                    maxX += deltaX;\n                    maxY += deltaY;\n                    break;\n                }\n                case HandleDirection.TopRight:\n                    maxX += deltaX;\n                    minY += deltaY;\n                    break;\n                case HandleDirection.BottomLeft: {\n                    minX += deltaX;\n                    maxY += deltaY;\n                    break;\n                }\n            }\n            const dw = maxX - minX;\n            const dh = maxY - minY;\n            const scaleX = dw / oldCommonW;\n            const scaleY = dh / oldCommonH;\n            flipX = scaleX < 0;\n            flipY = scaleY < 0;\n            if (shift && isCorner) {\n                const bw = Math.abs(dw);\n                const bh = Math.abs(dh);\n                const isTall = aspectRatio < bw / bh;\n                const th = (bw / aspectRatio) * (flipY ? 1 : -1);\n                const tw = bh * aspectRatio * (flipX ? 1 : -1);\n                switch (direction) {\n                    // TODO\n                    // case HandleDirection.Top: {\n                    //   break;\n                    // }\n                    // case HandleDirection.Right: {\n                    //   break;\n                    // }\n                    // case HandleDirection.Bottom: {\n                    //   break;\n                    // }\n                    // case HandleDirection.Left: {\n                    //   break;\n                    // }\n                    case HandleDirection.TopLeft: {\n                        if (isTall)\n                            minY = maxY + th;\n                        else\n                            minX = maxX + tw;\n                        break;\n                    }\n                    case HandleDirection.BottomRight: {\n                        if (isTall)\n                            maxY = minY - th;\n                        else\n                            maxX = minX - tw;\n                        break;\n                    }\n                    case HandleDirection.TopRight:\n                        if (isTall)\n                            minY = maxY + th;\n                        else\n                            maxX = minX - tw;\n                        break;\n                    case HandleDirection.BottomLeft: {\n                        if (isTall)\n                            maxY = minY - th;\n                        else\n                            minX = maxX + tw;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            switch (direction) {\n                case HandleDirection.Left:\n                    minX += deltaX;\n                    break;\n                case HandleDirection.Right:\n                    maxX += deltaX;\n                    break;\n            }\n            flipX = maxX < minX;\n        }\n        if (flipX) {\n            const t = maxX;\n            maxX = minX;\n            minX = t;\n        }\n        if (flipY) {\n            const t = maxY;\n            maxY = minY;\n            minY = t;\n        }\n        width = Math.abs(maxX - minX);\n        height = Math.abs(maxY - minY);\n        const newCommonBound = {\n            x: minX,\n            y: minY,\n            w: width,\n            h: height,\n        };\n        const newBounds = new Map();\n        this._bounds.forEach((bound, id) => {\n            const { x: oldX, y: oldY, w: oldW, h: oldH } = bound;\n            const nx = (flipX ? oldMaxX - oldX - oldW : oldX - oldMinX) / oldCommonW;\n            const ny = (flipY ? oldMaxY - oldY - oldH : oldY - oldMinY) / oldCommonH;\n            const shapeX = newCommonBound.w * nx + newCommonBound.x;\n            const shapeY = newCommonBound.h * ny + newCommonBound.y;\n            const shapeW = newCommonBound.w * (oldW / oldCommonW);\n            const shapeH = newCommonBound.h * (oldH / oldCommonH);\n            newBounds.set(id, new Bound(shapeX, shapeY, shapeW, shapeH));\n        });\n        this._onResizeMove(newBounds);\n    }\n    onPressShiftKey(pressed) {\n        if (this._shiftKey === pressed)\n            return;\n        this._shiftKey = pressed;\n        this._resize(pressed);\n    }\n}\n//# sourceMappingURL=resize-manager.js.map","import { Rectangle, simplifyPath } from '@blocksuite/connector';\nimport { ConnectorMode } from '@blocksuite/phasor';\nimport { deserializeXYWH } from '@blocksuite/phasor';\nimport { html } from 'lit';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { generateConnectorPath, getAttachedPoint, getConnectorAttachedInfo, getXYWH, pickBy, } from '../utils.js';\nfunction capPointerdown(event, surface, page, element, position, connectorMode, requestUpdate) {\n    const startX = event.clientX;\n    const startY = event.clientY;\n    const originControllers = element.controllers.map(c => ({\n        ...c,\n        x: c.x + element.x,\n        y: c.y + element.y,\n    }));\n    const anchorPoint = position === 'start'\n        ? originControllers[0]\n        : originControllers[originControllers.length - 1];\n    const elementX = anchorPoint.x;\n    const elementY = anchorPoint.y;\n    const pointermove = (mousePointerEvent) => {\n        const { clientX, clientY } = mousePointerEvent;\n        const deltaX = clientX - startX;\n        const deltaY = clientY - startY;\n        const { zoom } = surface.viewport;\n        const modelX = elementX + deltaX / zoom;\n        const modelY = elementY + deltaY / zoom;\n        const [x, y] = surface.toViewCoord(modelX, modelY);\n        const { start, end } = getConnectorAttachedInfo(element, surface, page);\n        const picked = pickBy(surface, page, x, y, ele => ele.id !== element.id && ele.type !== 'connector');\n        const newRect = picked\n            ? new Rectangle(...deserializeXYWH(getXYWH(picked)))\n            : null;\n        const { point: newPoint, position: attachedPointPosition } = getAttachedPoint(modelX, modelY, newRect);\n        let routes;\n        if (position === 'start') {\n            routes = generateConnectorPath(newRect, end.rect, newPoint, end.point, originControllers, connectorMode, 'end');\n        }\n        else {\n            routes = generateConnectorPath(start.rect, newRect, start.point, newPoint, originControllers, connectorMode, 'start');\n        }\n        if (position === 'start') {\n            surface.updateElement(element.id, {\n                controllers: routes,\n                startElement: picked && attachedPointPosition\n                    ? { id: picked.id, position: attachedPointPosition }\n                    : undefined,\n            });\n        }\n        else {\n            surface.updateElement(element.id, {\n                controllers: routes,\n                endElement: picked && attachedPointPosition\n                    ? { id: picked.id, position: attachedPointPosition }\n                    : undefined,\n            });\n        }\n        requestUpdate();\n    };\n    const pointerup = () => {\n        document.removeEventListener('pointermove', pointermove);\n        document.removeEventListener('pointerup', pointerup);\n    };\n    document.addEventListener('pointermove', pointermove);\n    document.addEventListener('pointerup', pointerup);\n}\nfunction getControllerHandles(controllers) {\n    const handles = [];\n    for (let i = 0; i < controllers.length - 1; i++) {\n        const current = controllers[i];\n        const next = controllers[i + 1];\n        const isVertical = current.x === next.x;\n        const handle = isVertical\n            ? {\n                x: current.x,\n                y: (current.y + next.y) / 2,\n                position: i,\n                isVertical,\n            }\n            : {\n                x: (current.x + next.x) / 2,\n                y: current.y,\n                position: i,\n                isVertical,\n            };\n        handles.push(handle);\n    }\n    return handles;\n}\nfunction centerControllerPointerdown(event, surface, page, element, handle, requestUpdate) {\n    const startX = event.clientX;\n    const startY = event.clientY;\n    const { controllers, x, y } = element;\n    const pointermove = (pointerMoveEvent) => {\n        const { isVertical, position } = handle;\n        const { zoom } = surface.viewport;\n        const absoluteControllers = controllers.map(c => ({\n            ...c,\n            x: c.x + x,\n            y: c.y + y,\n        }));\n        const deltaX = isVertical ? pointerMoveEvent.clientX - startX : 0;\n        const deltaY = isVertical ? 0 : pointerMoveEvent.clientY - startY;\n        const point0 = absoluteControllers[position];\n        const newPoint0 = {\n            x: point0.x + deltaX / zoom,\n            y: point0.y + deltaY / zoom,\n            customized: true,\n        };\n        const point1 = absoluteControllers[position + 1];\n        const newPoint1 = {\n            x: point1.x + deltaX / zoom,\n            y: point1.y + deltaY / zoom,\n            customized: true,\n        };\n        if (position === 0) {\n            // start\n            absoluteControllers.splice(position + 1, 0, newPoint0);\n            absoluteControllers[position + 2] = newPoint1;\n        }\n        else if (position === absoluteControllers.length - 2) {\n            // end\n            absoluteControllers[position] = newPoint0;\n            absoluteControllers.splice(position + 1, 0, newPoint1);\n        }\n        else {\n            absoluteControllers[position] = newPoint0;\n            absoluteControllers[position + 1] = newPoint1;\n        }\n        surface.updateElement(element.id, {\n            controllers: simplifyPath(absoluteControllers),\n        });\n        requestUpdate();\n    };\n    const pointerup = (pointerUpEvent) => {\n        document.removeEventListener('pointermove', pointermove);\n        document.removeEventListener('pointerup', pointerup);\n    };\n    document.addEventListener('pointermove', pointermove);\n    document.addEventListener('pointerup', pointerup);\n}\nexport function SingleConnectorHandles(element, surface, page, requestUpdate) {\n    const { controllers, mode } = element;\n    const controllerHandles = mode === ConnectorMode.Orthogonal ? getControllerHandles(controllers) : [];\n    const zoom = surface.viewport.zoom;\n    const start = {\n        position: 'absolute',\n        left: `${controllers[0].x * zoom}px`,\n        top: `${controllers[0].y * zoom}px`,\n    };\n    const end = {\n        position: 'absolute',\n        left: `${controllers[controllers.length - 1].x * zoom}px`,\n        top: `${controllers[controllers.length - 1].y * zoom}px`,\n    };\n    return html `\n    <style>\n      .line-controller {\n        position: absolute;\n        width: 9px;\n        height: 9px;\n        box-sizing: border-box;\n        border-radius: 50%;\n        border: 2px solid var(--affine-text-emphasis-color);\n        background-color: var(--affine-background-primary-color);\n        transform: translate(-50%, -50%);\n        cursor: pointer;\n        z-index: 10;\n        pointer-events: all;\n        /**\n         * Fix: pointerEvent stops firing after a short time.\n         * When a gesture is started, the browser intersects the touch-action values of the touched element and its ancestors,\n         * up to the one that implements the gesture (in other words, the first containing scrolling element)\n         * https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\n         */\n        touch-action: none;\n      }\n    </style>\n    <div\n      class=\"line-controller line-start\"\n      style=${styleMap(start)}\n      @pointerdown=${(e) => {\n        e.stopPropagation();\n        capPointerdown(e, surface, page, element, 'start', mode, requestUpdate);\n    }}\n    ></div>\n    <div\n      class=\"line-controller line-end\"\n      style=${styleMap(end)}\n      @pointerdown=${(e) => {\n        e.stopPropagation();\n        capPointerdown(e, surface, page, element, 'end', mode, requestUpdate);\n    }}\n    ></div>\n    ${repeat(controllerHandles, c => Math.random(), c => {\n        const style = {\n            left: `${c.x * zoom}px`,\n            top: `${c.y * zoom}px`,\n            cursor: c.isVertical ? 'col-resize' : 'row-resize',\n        };\n        return html `<div\n          class=\"line-controller\"\n          style=${styleMap(style)}\n          @pointerdown=${(e) => {\n            e.stopPropagation();\n            centerControllerPointerdown(e, surface, page, element, c, requestUpdate);\n        }}\n        ></div>`;\n    })}\n  `;\n}\n//# sourceMappingURL=single-connector-handles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport './component-toolbar/component-toolbar.js';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { serializeXYWH, TextElement, } from '@blocksuite/phasor';\nimport { deserializeXYWH, SurfaceManager } from '@blocksuite/phasor';\nimport { Page } from '@blocksuite/store';\nimport { createPopper } from '@popperjs/core';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { FRAME_MIN_HEIGHT, FRAME_MIN_WIDTH, handleElementChangedEffectForConnector, isTopLevelBlock, stopPropagation, } from '../utils.js';\nimport { ResizeHandles } from './resize-handles.js';\nimport { HandleResizeManager } from './resize-manager.js';\nimport { SingleConnectorHandles } from './single-connector-handles.js';\nimport { getCommonRectStyle, getSelectableBounds, getSelectedRect, } from './utils.js';\nlet EdgelessSelectedRect = class EdgelessSelectedRect extends WithDisposable(LitElement) {\n    constructor() {\n        super();\n        this._componentToolbarPopper = null;\n        this._lock = false;\n        this._onDragMove = (newBounds) => {\n            const { page, state, surface } = this;\n            const selectedMap = new Map(state.selected.map(element => [element.id, element]));\n            newBounds.forEach((bound, id) => {\n                const element = selectedMap.get(id);\n                if (!element)\n                    return;\n                if (isTopLevelBlock(element)) {\n                    let frameX = bound.x;\n                    let frameY = bound.y;\n                    let frameW = bound.w;\n                    let frameH = deserializeXYWH(element.xywh)[3];\n                    // Limit the width of the selected frame\n                    if (frameW < FRAME_MIN_WIDTH) {\n                        frameW = FRAME_MIN_WIDTH;\n                        frameX = bound.x;\n                    }\n                    // Limit the height of the selected frame\n                    if (frameH < FRAME_MIN_HEIGHT) {\n                        frameH = FRAME_MIN_HEIGHT;\n                        frameY = bound.y;\n                    }\n                    page.updateBlock(element, {\n                        xywh: JSON.stringify([frameX, frameY, frameW, frameH]),\n                    });\n                }\n                else {\n                    if (element instanceof TextElement) {\n                        const p = bound.h / element.h;\n                        bound.w = element.w * p;\n                        surface.updateElement(id, {\n                            xywh: serializeXYWH(bound.x, bound.y, bound.w, bound.h),\n                            fontSize: element.fontSize * p,\n                        });\n                    }\n                    else {\n                        surface.setElementBound(element.id, bound);\n                    }\n                }\n                handleElementChangedEffectForConnector(element, [element], surface, page);\n            });\n            this.requestUpdate();\n        };\n        this._onDragEnd = () => {\n            if (this._lock) {\n                this.page.captureSync();\n            }\n            this._lock = false;\n        };\n        this._resizeManager = new HandleResizeManager(this._onDragMove, this._onDragEnd);\n        this.addEventListener('pointerdown', stopPropagation);\n    }\n    get zoom() {\n        return this.surface.viewport.zoom;\n    }\n    get resizeMode() {\n        if (this.state.selected.length === 1 &&\n            this.state.selected[0].type === 'connector') {\n            return 'none';\n        }\n        const hasBlockElement = this.state.selected.find(elem => isTopLevelBlock(elem));\n        return hasBlockElement ? 'edge' : 'corner';\n    }\n    firstUpdated() {\n        const { _disposables, slots } = this;\n        _disposables.add(slots.viewportUpdated.on(() => this.requestUpdate()));\n        _disposables.add(slots.pressShiftKeyUpdated.on(pressed => this._resizeManager.onPressShiftKey(pressed)));\n        this._componentToolbarPopper = this._componentToolbar\n            ? createPopper(this._selectedRect, this._componentToolbar, {\n                placement: 'top',\n                modifiers: [\n                    {\n                        name: 'offset',\n                        options: {\n                            offset: [0, 12],\n                        },\n                    },\n                    {\n                        name: 'flip',\n                        options: {\n                            fallbackPlacements: ['bottom'],\n                        },\n                    },\n                ],\n            })\n            : null;\n        _disposables.add(() => this._componentToolbarPopper?.destroy());\n        if (this._componentToolbar) {\n            // This hook is not waiting all children updated.\n            // But children effect popper position. So we use ResizeObserver watching sizing change.\n            const resizeObserver = new ResizeObserver(() => this._componentToolbarPopper?.update());\n            resizeObserver.observe(this._componentToolbar);\n            _disposables.add(() => resizeObserver.disconnect());\n        }\n    }\n    updated(changedProperties) {\n        // when viewport updates, popper should update too.\n        this._componentToolbarPopper?.update();\n        super.updated(changedProperties);\n    }\n    render() {\n        const { state } = this;\n        const { active, selected } = state;\n        if (selected.length === 0 ||\n            (active && selected[0] instanceof TextElement)) {\n            return nothing;\n        }\n        const { page, surface, resizeMode, _resizeManager } = this;\n        const selectedRect = getSelectedRect(selected, surface.viewport);\n        const style = getCommonRectStyle(selectedRect, active, true);\n        const hasResizeHandles = !active && !page.readonly;\n        const resizeHandles = hasResizeHandles\n            ? ResizeHandles(resizeMode, (e, direction) => {\n                const bounds = getSelectableBounds(selected);\n                _resizeManager.onPointerDown(e, direction, bounds, resizeMode, this.zoom);\n            })\n            : nothing;\n        const connectorHandles = selected.length === 1 && selected[0].type === 'connector'\n            ? SingleConnectorHandles(selected[0], this.surface, this.page, () => {\n                this.slots.selectionUpdated.emit({ ...state });\n            })\n            : nothing;\n        const componentToolbar = active\n            ? nothing\n            : html `<edgeless-component-toolbar\n          .selected=${selected}\n          .page=${this.page}\n          .surface=${this.surface}\n          .slots=${this.slots}\n          .selectionState=${state}\n        >\n        </edgeless-component-toolbar>`;\n        return html `\n      <div class=\"affine-edgeless-selected-rect\" style=${styleMap(style)}>\n        ${resizeHandles} ${connectorHandles}\n      </div>\n      ${componentToolbar}\n    `;\n    }\n};\nEdgelessSelectedRect.styles = css `\n    :host {\n      display: block;\n      user-select: none;\n    }\n\n    .affine-edgeless-selected-rect {\n      position: absolute;\n      border-radius: 0;\n      pointer-events: none;\n      box-sizing: border-box;\n      z-index: 1;\n      border: var(--affine-border-width) solid var(--affine-blue);\n    }\n\n    .affine-edgeless-selected-rect > [aria-label^='handle'] {\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      box-sizing: border-box;\n      border-radius: 6px;\n      z-index: 10;\n      border: 2px var(--affine-blue) solid;\n      background: white;\n      pointer-events: auto;\n      user-select: none;\n      outline: none;\n\n      /**\n       * Fix: pointerEvent stops firing after a short time.\n       * When a gesture is started, the browser intersects the touch-action values of the touched element and its ancestors,\n       * up to the one that implements the gesture (in other words, the first containing scrolling element)\n       * https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\n       */\n      touchaction: none;\n    }\n\n    :host([disabled='true'])\n      .affine-edgeless-selected-rect\n      > [aria-label^='handle'] {\n      pointer-events: none;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-top-left'] {\n      cursor: nwse-resize;\n      left: -6px;\n      top: -6px;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-top-right'] {\n      cursor: nesw-resize;\n      top: -6px;\n      right: -6px;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-bottom-right'] {\n      cursor: nwse-resize;\n      right: -6px;\n      bottom: -6px;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-bottom-left'] {\n      cursor: nesw-resize;\n      bottom: -6px;\n      left: -6px;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-left'],\n    .affine-edgeless-selected-rect > [aria-label='handle-right'] {\n      cursor: ew-resize;\n      top: 0;\n      bottom: 0;\n      height: 100%;\n      width: 6px;\n      border: 0;\n      background: transparent;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-left'] {\n      left: -3.5px;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-right'] {\n      right: -3.5px;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-left']:after,\n    .affine-edgeless-selected-rect > [aria-label='handle-right']:after {\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      box-sizing: border-box;\n      border-radius: 6px;\n      z-index: 10;\n      border: 2px var(--affine-blue) solid;\n      content: '';\n      top: calc(50% - 6px);\n      background: white;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-left']:after {\n      left: -3px;\n    }\n\n    .affine-edgeless-selected-rect > [aria-label='handle-right']:after {\n      right: -3px;\n    }\n\n    edgeless-component-toolbar {\n      /* greater than handle */\n      z-index: 11;\n    }\n  `;\n__decorate([\n    property({ type: Page })\n], EdgelessSelectedRect.prototype, \"page\", void 0);\n__decorate([\n    property({ type: SurfaceManager })\n], EdgelessSelectedRect.prototype, \"surface\", void 0);\n__decorate([\n    property({ type: Object })\n], EdgelessSelectedRect.prototype, \"state\", void 0);\n__decorate([\n    property()\n], EdgelessSelectedRect.prototype, \"slots\", void 0);\n__decorate([\n    query('.affine-edgeless-selected-rect')\n], EdgelessSelectedRect.prototype, \"_selectedRect\", void 0);\n__decorate([\n    query('edgeless-component-toolbar')\n], EdgelessSelectedRect.prototype, \"_componentToolbar\", void 0);\nEdgelessSelectedRect = __decorate([\n    customElement('edgeless-selected-rect')\n], EdgelessSelectedRect);\nexport { EdgelessSelectedRect };\n//# sourceMappingURL=edgeless-selected-rect.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/tool-icon-button.js';\nimport './shape-menu.js';\nimport { ShapeIcon } from '@blocksuite/global/config';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { DEFAULT_SHAPE_FILL_COLOR, DEFAULT_SHAPE_STROKE_COLOR, } from '../../components/component-toolbar/change-shape-button.js';\nimport { createButtonPopper } from '../../components/utils.js';\nimport { getTooltipWithShortcut } from '../../components/utils.js';\nlet EdgelessShapeToolButton = class EdgelessShapeToolButton extends WithDisposable(LitElement) {\n    constructor() {\n        super(...arguments);\n        this._popperShow = false;\n        this._shapeMenuPopper = null;\n    }\n    _toggleShapeMenu() {\n        this._shapeMenuPopper?.toggle();\n    }\n    firstUpdated(changedProperties) {\n        const _disposables = this._disposables;\n        this._shapeMenuPopper = createButtonPopper(this, this._shapeMenu, ({ display }) => {\n            this._popperShow = display === 'show';\n        });\n        _disposables.add(this._shapeMenuPopper);\n        _disposables.add(this._shapeMenu.slots.select.on(shape => {\n            this.setMouseMode({\n                type: 'shape',\n                shape,\n                fillColor: DEFAULT_SHAPE_FILL_COLOR,\n                strokeColor: DEFAULT_SHAPE_STROKE_COLOR,\n            });\n        }));\n        super.firstUpdated(changedProperties);\n    }\n    disconnectedCallback() {\n        this._disposables?.dispose();\n        super.disconnectedCallback();\n    }\n    render() {\n        const type = this.mouseMode?.type;\n        const selectedShape = type === 'shape' ? this.mouseMode.shape : undefined;\n        return html `\n      <edgeless-tool-icon-button\n        .tooltip=${this._popperShow ? '' : getTooltipWithShortcut('Shape', 'S')}\n        .active=${type === 'shape'}\n        @click=${() => {\n            this.setMouseMode({\n                type: 'shape',\n                shape: 'rect',\n                fillColor: DEFAULT_SHAPE_FILL_COLOR,\n                strokeColor: DEFAULT_SHAPE_STROKE_COLOR,\n            });\n            this._toggleShapeMenu();\n        }}\n      >\n        ${ShapeIcon}\n      </edgeless-tool-icon-button>\n      <edgeless-shape-menu .selectedShape=${selectedShape}>\n      </edgeless-shape-menu>\n    `;\n    }\n};\nEdgelessShapeToolButton.styles = css `\n    :host {\n      display: flex;\n    }\n\n    edgeless-shape-menu {\n      display: none;\n    }\n\n    edgeless-shape-menu[data-show] {\n      display: block;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessShapeToolButton.prototype, \"mouseMode\", void 0);\n__decorate([\n    property()\n], EdgelessShapeToolButton.prototype, \"edgeless\", void 0);\n__decorate([\n    property()\n], EdgelessShapeToolButton.prototype, \"setMouseMode\", void 0);\n__decorate([\n    state()\n], EdgelessShapeToolButton.prototype, \"_popperShow\", void 0);\n__decorate([\n    query('edgeless-shape-menu')\n], EdgelessShapeToolButton.prototype, \"_shapeMenu\", void 0);\nEdgelessShapeToolButton = __decorate([\n    customElement('edgeless-shape-tool-button')\n], EdgelessShapeToolButton);\nexport { EdgelessShapeToolButton };\n//# sourceMappingURL=shape-tool-button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/color-panel.js';\nimport '../../components/tool-icon-button.js';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { BrushSize } from '../../../../__internal__/index.js';\nimport { tooltipStyle } from '../../../../components/tooltip/tooltip.js';\nfunction BrushSizeButtonGroup(mouseMode, setBrushWidth) {\n    if (mouseMode.type !== 'brush')\n        return nothing;\n    const { lineWidth } = mouseMode;\n    /**\n     * There is little hacky on rendering tooltip.\n     * We don't want either tooltip overlap the top button or tooltip on left.\n     * So we put the lower button's tooltip as the first element of the button group container\n     */\n    return html `\n    <div class=\"brush-size-button-group has-tool-tip\">\n      <!-- This tooltip is for the last button(Thick) -->\n      <tool-tip inert role=\"tooltip\" tip-position=\"top\" arrow>Thick</tool-tip>\n\n      <div\n        class=\"brush-size-button has-tool-tip\"\n        ?active=${lineWidth === BrushSize.Thin}\n        @click=${() => setBrushWidth(BrushSize.Thin)}\n      >\n        <div class=\"thin\"></div>\n        <tool-tip inert role=\"tooltip\" tip-position=\"top\" arrow>\n          Thin\n        </tool-tip>\n      </div>\n\n      <div\n        class=\"brush-size-button\"\n        ?active=${lineWidth === BrushSize.Thick}\n        @click=${() => setBrushWidth(BrushSize.Thick)}\n      >\n        <div class=\"thick\"></div>\n      </div>\n    </div>\n  `;\n}\nlet EdgelessBrushMenu = class EdgelessBrushMenu extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._setBrushColor = (color) => {\n            if (this.mouseMode.type !== 'brush')\n                return;\n            const { lineWidth } = this.mouseMode;\n            this.edgeless.slots.mouseModeUpdated.emit({\n                type: 'brush',\n                color,\n                lineWidth,\n            });\n        };\n        this._setBrushWidth = (lineWidth) => {\n            if (this.mouseMode.type !== 'brush')\n                return;\n            const { color } = this.mouseMode;\n            this.edgeless.slots.mouseModeUpdated.emit({\n                type: 'brush',\n                color,\n                lineWidth,\n            });\n        };\n    }\n    render() {\n        if (this.mouseMode.type !== 'brush')\n            return nothing;\n        const { color } = this.mouseMode;\n        const brushSizeButtonGroup = BrushSizeButtonGroup(this.mouseMode, this._setBrushWidth);\n        return html `\n      <div class=\"container\">\n        ${brushSizeButtonGroup}\n        <menu-divider .vertical=${true}></menu-divider>\n        <edgeless-color-panel\n          .value=${color}\n          @select=${(e) => this._setBrushColor(e.detail)}\n        ></edgeless-color-panel>\n      </div>\n    `;\n    }\n};\nEdgelessBrushMenu.styles = css `\n    :host {\n      width: 260px;\n      z-index: 1;\n    }\n    .container {\n      display: flex;\n      padding: 4px;\n      justify-content: center;\n      align-items: center;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n    }\n\n    .brush-size-button-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .brush-size-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 32px;\n      height: 32px;\n      box-sizing: border-box;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n\n    .brush-size-button[active],\n    .brush-size-button:hover {\n      background-color: var(--affine-hover-color);\n    }\n\n    .brush-size-button div {\n      border-radius: 50%;\n      background-color: var(--affine-icon-color);\n    }\n\n    .brush-size-button .thin {\n      width: 4px;\n      height: 4px;\n    }\n\n    .brush-size-button .thick {\n      width: 10px;\n      height: 10px;\n    }\n\n    menu-divider {\n      height: 62px;\n    }\n\n    ${tooltipStyle}\n  `;\n__decorate([\n    property()\n], EdgelessBrushMenu.prototype, \"mouseMode\", void 0);\n__decorate([\n    property()\n], EdgelessBrushMenu.prototype, \"edgeless\", void 0);\nEdgelessBrushMenu = __decorate([\n    customElement('edgeless-brush-menu')\n], EdgelessBrushMenu);\nexport { EdgelessBrushMenu };\n//# sourceMappingURL=brush-menu.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/tool-icon-button.js';\nimport './brush-menu.js';\nimport { PenIcon } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/store';\nimport { createPopper } from '@popperjs/core';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { DEFAULT_SELECTED_COLOR } from '../../components/color-panel.js';\nimport { getTooltipWithShortcut } from '../../components/utils.js';\nfunction createBrushMenuPopper(reference) {\n    const brushMenu = document.createElement('edgeless-brush-menu');\n    assertExists(reference.shadowRoot);\n    reference.shadowRoot.appendChild(brushMenu);\n    const popper = createPopper(reference, brushMenu, {\n        placement: 'top',\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset: [0, 12],\n                },\n            },\n        ],\n    });\n    return {\n        element: brushMenu,\n        dispose: () => {\n            brushMenu.remove();\n            popper.destroy();\n        },\n    };\n}\nlet EdgelessBrushToolButton = class EdgelessBrushToolButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._popperShow = false;\n        this._brushMenu = null;\n    }\n    _toggleBrushMenu() {\n        if (this._brushMenu) {\n            this._brushMenu.dispose();\n            this._brushMenu = null;\n            this._popperShow = false;\n        }\n        else {\n            this._brushMenu = createBrushMenuPopper(this);\n            this._brushMenu.element.mouseMode = this.mouseMode;\n            this._brushMenu.element.edgeless = this.edgeless;\n            this._popperShow = true;\n        }\n    }\n    updated(changedProperties) {\n        if (changedProperties.has('mouseMode')) {\n            if (this.mouseMode.type !== 'brush') {\n                this._brushMenu?.dispose();\n                this._brushMenu = null;\n            }\n            if (this._brushMenu) {\n                this._brushMenu.element.mouseMode = this.mouseMode;\n                this._brushMenu.element.edgeless = this.edgeless;\n            }\n        }\n    }\n    disconnectedCallback() {\n        this._brushMenu?.dispose();\n        this._brushMenu = null;\n        super.disconnectedCallback();\n    }\n    render() {\n        const type = this.mouseMode?.type;\n        return html `\n      <edgeless-tool-icon-button\n        .tooltip=${this._popperShow ? '' : getTooltipWithShortcut('Pen', 'P')}\n        .active=${type === 'brush'}\n        @click=${() => {\n            this.setMouseMode({\n                type: 'brush',\n                lineWidth: 4,\n                color: DEFAULT_SELECTED_COLOR,\n            });\n            this._toggleBrushMenu();\n        }}\n      >\n        ${PenIcon}\n      </edgeless-tool-icon-button>\n    `;\n    }\n};\nEdgelessBrushToolButton.styles = css `\n    :host {\n      display: flex;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessBrushToolButton.prototype, \"mouseMode\", void 0);\n__decorate([\n    property()\n], EdgelessBrushToolButton.prototype, \"edgeless\", void 0);\n__decorate([\n    property()\n], EdgelessBrushToolButton.prototype, \"setMouseMode\", void 0);\n__decorate([\n    state()\n], EdgelessBrushToolButton.prototype, \"_popperShow\", void 0);\nEdgelessBrushToolButton = __decorate([\n    customElement('edgeless-brush-tool-button')\n], EdgelessBrushToolButton);\nexport { EdgelessBrushToolButton };\n//# sourceMappingURL=brush-tool-button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/color-panel.js';\nimport '../../components/tool-icon-button.js';\nimport { ConnectorLIcon, ConnectorXIcon } from '@blocksuite/global/config';\nimport { ConnectorMode } from '@blocksuite/phasor';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { tooltipStyle } from '../../../../components/tooltip/tooltip.js';\nimport { getTooltipWithShortcut } from '../../components/utils.js';\nfunction ConnectorModeButtonGroup(mouseMode, setConnectorMode) {\n    if (mouseMode.type !== 'connector')\n        return nothing;\n    const { mode } = mouseMode;\n    const straightLineTooltip = getTooltipWithShortcut('Straight line', 'L');\n    const orthogonalTooltip = getTooltipWithShortcut('Connector', 'X');\n    /**\n     * There is little hacky on rendering tooltip.\n     * We don't want either tooltip overlap the top button or tooltip on left.\n     * So we put the lower button's tooltip as the first element of the button group container\n     */\n    return html `\n    <div class=\"connector-mode-button-group has-tool-tip\">\n      <!-- This tooltip is for the last button(Thick) -->\n      <tool-tip inert role=\"tooltip\" tip-position=\"top\" arrow>\n        ${orthogonalTooltip}\n      </tool-tip>\n\n      <div\n        class=\"connector-mode-button has-tool-tip\"\n        ?active=${mode === ConnectorMode.Straight}\n        @click=${() => setConnectorMode(ConnectorMode.Straight)}\n      >\n        ${ConnectorLIcon}\n        <tool-tip inert role=\"tooltip\" tip-position=\"top\" arrow>\n          ${straightLineTooltip}\n        </tool-tip>\n      </div>\n\n      <div\n        class=\"connector-mode-button\"\n        ?active=${mode === ConnectorMode.Orthogonal}\n        @click=${() => setConnectorMode(ConnectorMode.Orthogonal)}\n      >\n        ${ConnectorXIcon}\n      </div>\n    </div>\n  `;\n}\nlet EdgelessConnectorMenu = class EdgelessConnectorMenu extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._setConnectorColor = (color) => {\n            if (this.mouseMode.type !== 'connector')\n                return;\n            const { mode } = this.mouseMode;\n            this.edgeless.slots.mouseModeUpdated.emit({\n                type: 'connector',\n                color,\n                mode,\n            });\n        };\n        this._setConnectorMode = (mode) => {\n            if (this.mouseMode.type !== 'connector')\n                return;\n            const { color } = this.mouseMode;\n            this.edgeless.slots.mouseModeUpdated.emit({\n                type: 'connector',\n                color,\n                mode,\n            });\n        };\n    }\n    render() {\n        if (this.mouseMode.type !== 'connector')\n            return nothing;\n        const { color } = this.mouseMode;\n        const brushSizeButtonGroup = ConnectorModeButtonGroup(this.mouseMode, this._setConnectorMode);\n        return html `\n      <div class=\"container\">\n        ${brushSizeButtonGroup}\n        <menu-divider .vertical=${true}></menu-divider>\n        <edgeless-color-panel\n          .value=${color}\n          @select=${(e) => this._setConnectorColor(e.detail)}\n        ></edgeless-color-panel>\n      </div>\n    `;\n    }\n};\nEdgelessConnectorMenu.styles = css `\n    :host {\n      width: 260px;\n      z-index: 1;\n    }\n    .container {\n      display: flex;\n      padding: 4px;\n      justify-content: center;\n      align-items: center;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n    }\n\n    .connector-mode-button-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .connector-mode-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 32px;\n      height: 32px;\n      box-sizing: border-box;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n\n    .connector-mode-button[active],\n    .connector-mode-button:hover {\n      background-color: var(--affine-hover-color);\n    }\n\n    .connector-mode-button div {\n      border-radius: 50%;\n      background-color: var(--affine-icon-color);\n    }\n\n    menu-divider {\n      height: 62px;\n    }\n\n    ${tooltipStyle}\n  `;\n__decorate([\n    property()\n], EdgelessConnectorMenu.prototype, \"mouseMode\", void 0);\n__decorate([\n    property()\n], EdgelessConnectorMenu.prototype, \"edgeless\", void 0);\nEdgelessConnectorMenu = __decorate([\n    customElement('edgeless-connector-menu')\n], EdgelessConnectorMenu);\nexport { EdgelessConnectorMenu };\n//# sourceMappingURL=connector-menu.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../../components/tool-icon-button.js';\nimport './connector-menu.js';\nimport { ConnectorIcon } from '@blocksuite/global/config';\nimport { ConnectorMode } from '@blocksuite/phasor';\nimport { assertExists } from '@blocksuite/store';\nimport { createPopper } from '@popperjs/core';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { DEFAULT_SELECTED_COLOR } from '../../components/color-panel.js';\nfunction createConnectorMenuPopper(reference) {\n    const menu = document.createElement('edgeless-connector-menu');\n    assertExists(reference.shadowRoot);\n    reference.shadowRoot.appendChild(menu);\n    const popper = createPopper(reference, menu, {\n        placement: 'top',\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset: [0, 12],\n                },\n            },\n        ],\n    });\n    return {\n        element: menu,\n        dispose: () => {\n            menu.remove();\n            popper.destroy();\n        },\n    };\n}\nlet EdgelessConnectorToolButton = class EdgelessConnectorToolButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._menu = null;\n    }\n    _toggleMenu() {\n        if (this._menu) {\n            this._menu.dispose();\n            this._menu = null;\n        }\n        else {\n            this._menu = createConnectorMenuPopper(this);\n            this._menu.element.mouseMode = this.mouseMode;\n            this._menu.element.edgeless = this.edgeless;\n        }\n    }\n    updated(changedProperties) {\n        if (changedProperties.has('mouseMode')) {\n            if (this.mouseMode.type !== 'connector') {\n                this._menu?.dispose();\n                this._menu = null;\n            }\n            if (this._menu) {\n                this._menu.element.mouseMode = this.mouseMode;\n                this._menu.element.edgeless = this.edgeless;\n            }\n        }\n    }\n    disconnectedCallback() {\n        this._menu?.dispose();\n        this._menu = null;\n        super.disconnectedCallback();\n    }\n    render() {\n        const type = this.mouseMode?.type;\n        return html `\n      <edgeless-tool-icon-button\n        .tooltip=${'Connector'}\n        .active=${type === 'connector'}\n        @click=${() => {\n            this.setMouseMode({\n                type: 'connector',\n                mode: ConnectorMode.Orthogonal,\n                color: DEFAULT_SELECTED_COLOR,\n            });\n            this._toggleMenu();\n        }}\n      >\n        ${ConnectorIcon}\n      </edgeless-tool-icon-button>\n    `;\n    }\n};\nEdgelessConnectorToolButton.styles = css `\n    :host {\n      display: flex;\n    }\n  `;\n__decorate([\n    property()\n], EdgelessConnectorToolButton.prototype, \"mouseMode\", void 0);\n__decorate([\n    property()\n], EdgelessConnectorToolButton.prototype, \"edgeless\", void 0);\n__decorate([\n    property()\n], EdgelessConnectorToolButton.prototype, \"setMouseMode\", void 0);\nEdgelessConnectorToolButton = __decorate([\n    customElement('edgeless-connector-tool-button')\n], EdgelessConnectorToolButton);\nexport { EdgelessConnectorToolButton };\n//# sourceMappingURL=connector-tool-button.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../components/tool-icon-button.js';\nimport './shape-tool/shape-tool-button.js';\nimport './brush-tool/brush-tool-button.js';\nimport './connector-tool/connector-tool-button.js';\nimport { FRAME_BACKGROUND_COLORS, HandIcon, ImageIcon, MinusIcon, NoteIcon, PlusIcon, SelectIcon, TextIconLarge, ViewBarIcon, } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { WithDisposable } from '@blocksuite/lit';\nimport { Bound, deserializeXYWH, getCommonBound, ZOOM_MAX, ZOOM_MIN, ZOOM_STEP, } from '@blocksuite/phasor';\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { clamp, Point, uploadImageFromLocal, } from '../../../__internal__/index.js';\nimport { getTooltipWithShortcut } from '../components/utils.js';\nimport { stopPropagation } from '../utils.js';\nconst FIT_TO_SCREEN_PADDING = 200;\nlet EdgelessToolbar = class EdgelessToolbar extends WithDisposable(LitElement) {\n    constructor(edgeless) {\n        super();\n        this._imageLoading = false;\n        this._rafId = null;\n        this.setMouseMode = (mouseMode) => {\n            this.edgeless.selection.setMouseMode(mouseMode);\n        };\n        this.edgeless = edgeless;\n    }\n    get mouseMode() {\n        return this.edgeless.mouseMode;\n    }\n    get zoom() {\n        return this.edgeless.surface.viewport.zoom;\n    }\n    _setCenter(x, y) {\n        this.edgeless.surface.viewport.setCenter(x, y);\n        this.edgeless.slots.viewportUpdated.emit();\n    }\n    _setZoom(zoom, focusPoint) {\n        this.edgeless.surface.viewport.setZoom(zoom, focusPoint);\n        this.edgeless.slots.viewportUpdated.emit();\n    }\n    _setZoomByStep(step) {\n        this._smoothZoom(clamp(this.zoom + step, ZOOM_MIN, ZOOM_MAX));\n    }\n    _smoothZoom(zoom, focusPoint) {\n        const delta = zoom - this.zoom;\n        const innerSmoothZoom = () => {\n            if (this._rafId)\n                cancelAnimationFrame(this._rafId);\n            this._rafId = requestAnimationFrame(() => {\n                const sign = delta > 0 ? 1 : -1;\n                const total = 10;\n                const step = delta / total;\n                const nextZoom = this._cutoff(this.zoom + step, zoom, sign);\n                this._setZoom(nextZoom, focusPoint);\n                if (nextZoom != zoom)\n                    innerSmoothZoom();\n            });\n        };\n        innerSmoothZoom();\n    }\n    _cutoff(value, ref, sign) {\n        if (sign > 0 && value > ref)\n            return ref;\n        if (sign < 0 && value < ref)\n            return ref;\n        return value;\n    }\n    _zoomToFit() {\n        const bounds = [];\n        const frame = this.edgeless.frames[0];\n        if (frame) {\n            const frameXYWH = deserializeXYWH(frame.xywh);\n            const frameBound = new Bound(...frameXYWH);\n            bounds.push(frameBound);\n        }\n        const surfaceElementsBound = this.edgeless.surface.getElementsBound();\n        if (surfaceElementsBound) {\n            bounds.push(surfaceElementsBound);\n        }\n        const { viewport } = this.edgeless.surface;\n        let { centerX, centerY, zoom } = viewport;\n        if (bounds.length) {\n            const { width, height } = viewport;\n            const bound = getCommonBound(bounds);\n            assertExists(bound);\n            zoom = Math.min((width - FIT_TO_SCREEN_PADDING) / bound.w, (height - FIT_TO_SCREEN_PADDING) / bound.h);\n            centerX = bound.x + bound.w / 2;\n            centerY = bound.y + bound.h / 2;\n        }\n        else {\n            zoom = 1;\n        }\n        const preZoom = this.zoom;\n        const newZoom = zoom;\n        const cofficient = preZoom / newZoom;\n        if (cofficient === 1) {\n            this._smoothTranslate(centerX, centerY);\n        }\n        else {\n            const center = viewport.center;\n            const newCenter = new Point(centerX, centerY);\n            const focusPoint = newCenter\n                .subtract(center.scale(cofficient))\n                .scale(1 / (1 - cofficient));\n            this._smoothZoom(zoom, focusPoint);\n        }\n    }\n    _smoothTranslate(x, y) {\n        const { viewport } = this.edgeless.surface;\n        const delta = { x: x - viewport.centerX, y: y - viewport.centerY };\n        const innerSmoothTranslate = () => {\n            if (this._rafId)\n                cancelAnimationFrame(this._rafId);\n            this._rafId = requestAnimationFrame(() => {\n                const rate = 10;\n                const step = { x: delta.x / rate, y: delta.y / rate };\n                const nextCenter = {\n                    x: viewport.centerX + step.x,\n                    y: viewport.centerY + step.y,\n                };\n                const signX = delta.x > 0 ? 1 : -1;\n                const signY = delta.y > 0 ? 1 : -1;\n                nextCenter.x = this._cutoff(nextCenter.x, x, signX);\n                nextCenter.y = this._cutoff(nextCenter.y, y, signY);\n                this._setCenter(nextCenter.x, nextCenter.y);\n                if (nextCenter.x != x || nextCenter.y != y)\n                    innerSmoothTranslate();\n            });\n        };\n        innerSmoothTranslate();\n    }\n    async _addImage() {\n        this._imageLoading = true;\n        const options = {\n            width: 0,\n            height: 0,\n            offsetX: 0,\n            offsetY: 0,\n        };\n        const models = await uploadImageFromLocal(this.edgeless.page, realSize => Object.assign(options, realSize));\n        const { left, width, top, height } = this.edgeless.pageBlockContainer.getBoundingClientRect();\n        if (options.width && options.height) {\n            const s = width / height;\n            const sh = height > 100 ? height - 100 : height;\n            const p = options.width / options.height;\n            if (s >= 1) {\n                options.height =\n                    options.height > sh ? sh : Math.min(options.height, sh);\n                options.width = p * options.height;\n            }\n            else {\n                const sw = sh * s;\n                options.width = options.width > sw ? sw : Math.min(options.width, sw);\n                options.height = options.width / p;\n            }\n        }\n        const { zoom } = this.edgeless.surface.viewport;\n        const centerX = left + width / 2;\n        const centerY = top + height / 2;\n        let x = 0;\n        let y = 0;\n        if (zoom > 1) {\n            x = centerX - options.width / 2;\n            y = centerY - options.height / 2;\n            options.width /= zoom;\n            options.height /= zoom;\n        }\n        else {\n            x = centerX - (options.width * zoom) / 2;\n            y = centerY - (options.height * zoom) / 2;\n        }\n        const { frameId } = this.edgeless.addNewFrame(models, new Point(x, y), options);\n        const frame = this.edgeless.frames.find(frame => frame.id === frameId);\n        assertExists(frame);\n        this.edgeless.selection.switchToDefaultMode({\n            selected: [frame],\n            active: false,\n        });\n        this._imageLoading = false;\n    }\n    setZoomByAction(action) {\n        switch (action) {\n            case 'fit':\n                this._zoomToFit();\n                break;\n            case 'reset':\n                this._smoothZoom(1.0);\n                break;\n            case 'in':\n            case 'out':\n                this._setZoomByStep(ZOOM_STEP * (action === 'in' ? 1 : -1));\n        }\n    }\n    firstUpdated() {\n        const { _disposables, edgeless: { slots }, } = this;\n        _disposables.add(slots.mouseModeUpdated.on(() => this.requestUpdate()));\n        _disposables.add(slots.viewportUpdated.on(() => this.requestUpdate()));\n    }\n    render() {\n        const { type } = this.mouseMode;\n        const formattedZoom = `${Math.round(this.zoom * 100)}%`;\n        return html `\n      <div\n        class=\"edgeless-toolbar-container\"\n        @dblclick=${stopPropagation}\n        @mousedown=${stopPropagation}\n        @mouseup=${stopPropagation}\n        @pointerdown=${stopPropagation}\n      >\n        <edgeless-tool-icon-button\n          .tooltip=${getTooltipWithShortcut('Select', 'V')}\n          .active=${type === 'default'}\n          @click=${() => this.setMouseMode({ type: 'default' })}\n        >\n          ${SelectIcon}\n        </edgeless-tool-icon-button>\n        <edgeless-tool-icon-button\n          .tooltip=${getTooltipWithShortcut('Text', 'T')}\n          .active=${type === 'text'}\n          @click=${() => this.setMouseMode({ type: 'text' })}\n        >\n          ${TextIconLarge}\n        </edgeless-tool-icon-button>\n        <edgeless-shape-tool-button\n          .mouseMode=${this.mouseMode}\n          .edgeless=${this.edgeless}\n          .setMouseMode=${this.setMouseMode}\n        ></edgeless-shape-tool-button>\n        <edgeless-tool-icon-button\n          .disabled=${this._imageLoading}\n          .tooltip=${'Image'}\n          @click=${() => this._addImage()}\n        >\n          ${ImageIcon}\n        </edgeless-tool-icon-button>\n        <edgeless-connector-tool-button\n          .mouseMode=${this.mouseMode}\n          .edgeless=${this.edgeless}\n          .setMouseMode=${this.setMouseMode}\n        ></edgeless-connector-tool-button>\n        <edgeless-brush-tool-button\n          .mouseMode=${this.mouseMode}\n          .edgeless=${this.edgeless}\n          .setMouseMode=${this.setMouseMode}\n        ></edgeless-brush-tool-button>\n        <edgeless-tool-icon-button\n          .tooltip=${getTooltipWithShortcut('Hand', 'H')}\n          .active=${type === 'pan'}\n          @click=${() => this.setMouseMode({ type: 'pan', panning: false })}\n        >\n          ${HandIcon}\n        </edgeless-tool-icon-button>\n        <edgeless-tool-icon-button\n          .tooltip=${getTooltipWithShortcut('Note', 'N')}\n          .active=${type === 'note'}\n          @click=${() => this.setMouseMode({\n            type: 'note',\n            background: FRAME_BACKGROUND_COLORS[0],\n        })}\n        >\n          ${NoteIcon}\n        </edgeless-tool-icon-button>\n        <div class=\"divider\"></div>\n        <edgeless-tool-icon-button\n          .tooltip=${'Fit to screen'}\n          @click=${() => this._zoomToFit()}\n        >\n          ${ViewBarIcon}\n        </edgeless-tool-icon-button>\n        <edgeless-tool-icon-button\n          .tooltip=${'Zoom out'}\n          @click=${() => this._setZoomByStep(-ZOOM_STEP)}\n        >\n          ${MinusIcon}\n        </edgeless-tool-icon-button>\n        <span class=\"zoom-percent\" @click=${() => this._smoothZoom(1)}>\n          ${formattedZoom}\n        </span>\n        <edgeless-tool-icon-button\n          .tooltip=${'Zoom in'}\n          @click=${() => this._setZoomByStep(ZOOM_STEP)}\n        >\n          ${PlusIcon}\n        </edgeless-tool-icon-button>\n      </div>\n    `;\n    }\n};\nEdgelessToolbar.styles = css `\n    :host {\n      position: absolute;\n      z-index: 2;\n      bottom: 28px;\n      left: calc(50%);\n      display: flex;\n      justify-content: center;\n      transform: translateX(-50%);\n      user-select: none;\n    }\n\n    .edgeless-toolbar-container {\n      display: flex;\n      align-items: center;\n      height: 48px;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      border-radius: 8px;\n      fill: currentcolor;\n    }\n\n    .edgeless-toolbar-container[level='second'] {\n      position: absolute;\n      bottom: 8px;\n      transform: translateY(-100%);\n    }\n\n    .edgeless-toolbar-container[hidden] {\n      display: none;\n    }\n\n    .divider {\n      width: 1px;\n      height: 24px;\n      margin: 0 7px;\n      background-color: var(--affine-border-color);\n    }\n\n    .zoom-percent {\n      display: block;\n      box-sizing: border-box;\n      width: 48px;\n      height: 32px;\n      line-height: 22px;\n      padding: 5px;\n      border-radius: 5px;\n      font-size: 14px;\n      font-weight: 500;\n      text-align: center;\n      cursor: pointer;\n      color: var(--affine-icon-color);\n    }\n\n    .zoom-percent:hover {\n      color: var(--affine-primary-color);\n      background-color: var(--affine-hover-color);\n    }\n  `;\nEdgelessToolbar = __decorate([\n    customElement('edgeless-toolbar')\n], EdgelessToolbar);\nexport { EdgelessToolbar };\n//# sourceMappingURL=edgeless-toolbar.js.map","import { EDGELESS_BLOCK_CHILD_PADDING, FRAME_BACKGROUND_COLORS, } from '@blocksuite/global/config';\nimport { deserializeXYWH } from '@blocksuite/phasor';\nimport { html, nothing } from 'lit';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nfunction EdgelessMask() {\n    const style = {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        bottom: '0',\n        right: '0',\n        zIndex: '1',\n    };\n    return html `\n    <div class=\"affine-edgeless-mask\" style=${styleMap(style)}></div>\n  `;\n}\nfunction EdgelessBlockChild(index, model, active, renderer) {\n    const { xywh, background } = model;\n    const [modelX, modelY, modelW, modelH] = deserializeXYWH(xywh);\n    const style = {\n        position: 'absolute',\n        transform: `translate(${modelX}px, ${modelY}px)`,\n        transformOrigin: '0 0',\n        width: modelW + 'px',\n        height: modelH + 'px',\n        padding: `${EDGELESS_BLOCK_CHILD_PADDING}px`,\n        background: `var(${background || FRAME_BACKGROUND_COLORS[0]})`,\n        pointerEvents: 'all',\n        zIndex: `${index}`,\n        boxSizing: 'border-box',\n        borderRadius: '8px',\n        border: '2px solid var(--affine-white-10)',\n        boxShadow: 'var(--affine-shadow-3)',\n    };\n    const mask = active ? nothing : EdgelessMask();\n    return html `\n    <div class=\"affine-edgeless-block-child\" style=${styleMap(style)}>\n      ${renderer(model)} ${mask}\n    </div>\n  `;\n}\nexport function EdgelessBlockChildrenContainer(frames, active, renderer) {\n    return html `\n    ${repeat(frames, child => child.id, (child, index) => EdgelessBlockChild(index, child, active, renderer))}\n  `;\n}\n//# sourceMappingURL=block-children-container.js.map","import { html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nexport function EdgelessDraggingArea(rect) {\n    if (rect === null)\n        return html ``;\n    const style = {\n        left: rect.left + 'px',\n        top: rect.top + 'px',\n        width: rect.width + 'px',\n        height: rect.height + 'px',\n    };\n    return html `\n    <style>\n      .affine-edgeless-dragging-area {\n        position: absolute;\n        background: var(--affine-hover-color);\n        z-index: 1;\n        pointer-events: none;\n      }\n    </style>\n    <div class=\"affine-edgeless-dragging-area\" style=${styleMap(style)}></div>\n  `;\n}\n//# sourceMappingURL=dragging-area.js.map","import { html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { getCommonRectStyle } from './utils.js';\nexport function EdgelessHoverRect(hoverState, zoom) {\n    if (!hoverState)\n        return null;\n    const rect = hoverState.rect;\n    const style = getCommonRectStyle(rect);\n    return html `\n    <div class=\"affine-edgeless-hover-rect\" style=${styleMap(style)}></div>\n  `;\n}\n//# sourceMappingURL=hover-rect.js.map","export class MouseModeController {\n    constructor(edgeless) {\n        this._draggingArea = null;\n        this.enableHover = false;\n        this._edgeless = edgeless;\n    }\n    get draggingArea() {\n        return this._draggingArea;\n    }\n    get _surface() {\n        return this._edgeless.surface;\n    }\n    get _page() {\n        return this._edgeless.page;\n    }\n    get _blocks() {\n        return this._edgeless.sortedFrames;\n    }\n}\n//# sourceMappingURL=index.js.map","import { assertExists, caretRangeFromPoint } from '@blocksuite/global/utils';\nimport { ConnectorElement, deserializeXYWH, getCommonBound, isPointIn, TextElement, } from '@blocksuite/phasor';\nimport { getBlockElementByModel, getClosestBlockElementByPoint, getModelByBlockElement, getRectByBlockElement, handleNativeRangeAtPoint, handleNativeRangeDragMove, isEmpty, noop, Point, Rect, resetNativeSelection, } from '../../../__internal__/index.js';\nimport { showFormatQuickBar } from '../../../components/format-quick-bar/index.js';\nimport { showFormatQuickBarByClicks } from '../../index.js';\nimport { calcCurrentSelectionPosition, getNativeSelectionMouseDragInfo, } from '../../utils/position.js';\nimport { addText, getXYWH, handleElementChangedEffectForConnector, isConnectorAndBindingsAllSelected, isPhasorElement, isTopLevelBlock, mountTextEditor, pickBlocksByBound, pickTopBlock, } from '../utils.js';\nimport { MouseModeController } from './index.js';\nexport var DefaultModeDragType;\n(function (DefaultModeDragType) {\n    /** Moving selected contents */\n    DefaultModeDragType[\"ContentMoving\"] = \"content-moving\";\n    /** Expanding the dragging area, select the content covered inside */\n    DefaultModeDragType[\"Selecting\"] = \"selecting\";\n    /** Native range dragging inside active frame block */\n    DefaultModeDragType[\"NativeEditing\"] = \"native-editing\";\n    /** Default void state */\n    DefaultModeDragType[\"None\"] = \"none\";\n    /** Dragging preview */\n    DefaultModeDragType[\"PreviewDragging\"] = \"preview-dragging\";\n    /** press alt/option key to clone selected  */\n    DefaultModeDragType[\"AltCloning\"] = \"alt-cloning\";\n})(DefaultModeDragType || (DefaultModeDragType = {}));\nexport class DefaultModeController extends MouseModeController {\n    constructor() {\n        super(...arguments);\n        this.mouseMode = {\n            type: 'default',\n        };\n        this.enableHover = true;\n        this.dragType = DefaultModeDragType.None;\n        this._startRange = null;\n        this._dragStartPos = { x: 0, y: 0 };\n        this._dragLastPos = { x: 0, y: 0 };\n        this._lock = false;\n        // Do not select the text, when click again after activating the frame.\n        this._isDoubleClickedOnMask = false;\n    }\n    get draggingArea() {\n        if (this.dragType === DefaultModeDragType.Selecting) {\n            return {\n                start: new DOMPoint(this._dragStartPos.x, this._dragStartPos.y),\n                end: new DOMPoint(this._dragLastPos.x, this._dragLastPos.y),\n            };\n        }\n        return null;\n    }\n    get selectedBlocks() {\n        return this._edgeless.selection.selectedBlocks;\n    }\n    get state() {\n        return this._edgeless.selection.state;\n    }\n    get isActive() {\n        return this._edgeless.selection.state.active;\n    }\n    _pick(x, y) {\n        const { surface } = this._edgeless;\n        const [modelX, modelY] = surface.viewport.toModelCoord(x, y);\n        const selectedShape = surface.pickTop(modelX, modelY);\n        return selectedShape\n            ? selectedShape\n            : pickTopBlock(this._blocks, modelX, modelY);\n    }\n    _setNoneSelectionState() {\n        this._edgeless.slots.selectionUpdated.emit({ selected: [], active: false });\n        resetNativeSelection(null);\n    }\n    _setSelectionState(selected, active) {\n        this._edgeless.slots.selectionUpdated.emit({\n            selected,\n            active,\n        });\n    }\n    _handleClickOnSelected(element, e) {\n        const { selected, active } = this.state;\n        this._edgeless.clearSelectedBlocks();\n        // click the inner area of active text and note element\n        if (active && selected.length === 1 && selected[0] === element) {\n            handleNativeRangeAtPoint(e.raw.clientX, e.raw.clientY);\n            return;\n        }\n        // handle single frame block click\n        if (!e.keys.shift && selected.length === 1 && isTopLevelBlock(element)) {\n            if ((selected[0] === element && !active) ||\n                (active && selected[0] !== element)) {\n                // issue #1809\n                // If the previously selected element is a frameBlock and is in an active state,\n                // then the currently clicked frameBlock should also be in an active state when selected.\n                this._setSelectionState([element], true);\n                this._edgeless.slots.selectedBlocksUpdated.emit([]);\n                return;\n            }\n        }\n        // hold shift key to multi select or de-select element\n        if (e.keys.shift) {\n            const selections = [...selected];\n            if (selected.includes(element)) {\n                this._setSelectionState(selections.filter(item => item !== element), false);\n            }\n            else {\n                this._setSelectionState([...selections, element], false);\n            }\n        }\n        else {\n            this._setSelectionState([element], false);\n        }\n    }\n    _handleDragMoveEffect(element) {\n        handleElementChangedEffectForConnector(element, this.state.selected, this._edgeless.surface, this._page);\n    }\n    _handleSurfaceDragMove(selected, e) {\n        if (!this._lock) {\n            this._lock = true;\n            this._page.captureSync();\n        }\n        const { surface } = this._edgeless;\n        const { zoom } = surface.viewport;\n        const deltaX = this._dragLastPos.x - e.x;\n        const deltaY = this._dragLastPos.y - e.y;\n        const boundX = selected.x - deltaX / zoom;\n        const boundY = selected.y - deltaY / zoom;\n        const boundW = selected.w;\n        const boundH = selected.h;\n        if (selected.type !== 'connector' ||\n            (selected instanceof ConnectorElement &&\n                isConnectorAndBindingsAllSelected(selected, this.state.selected))) {\n            surface.setElementBound(selected.id, {\n                x: boundX,\n                y: boundY,\n                w: boundW,\n                h: boundH,\n            });\n        }\n        this._handleDragMoveEffect(selected);\n    }\n    _handleBlockDragMove(block, e) {\n        const [modelX, modelY, modelW, modelH] = JSON.parse(block.xywh);\n        const { zoom } = this._edgeless.surface.viewport;\n        const xywh = JSON.stringify([\n            modelX + e.delta.x / zoom,\n            modelY + e.delta.y / zoom,\n            modelW,\n            modelH,\n        ]);\n        this._page.updateBlock(block, { xywh });\n        this._handleDragMoveEffect(block);\n        // TODO: refactor\n        if (this.selectedBlocks.length) {\n            this._edgeless.slots.selectedBlocksUpdated.emit(this.selectedBlocks);\n        }\n    }\n    _isInSelectedRect(viewX, viewY) {\n        const { selected } = this.state;\n        if (!selected.length)\n            return false;\n        const commonBound = getCommonBound(selected.map(element => {\n            if (isTopLevelBlock(element)) {\n                const [x, y, w, h] = deserializeXYWH(getXYWH(element));\n                return {\n                    x,\n                    y,\n                    w,\n                    h,\n                };\n            }\n            return element;\n        }));\n        const [modelX, modelY] = this._surface.toModelCoord(viewX, viewY);\n        if (commonBound && isPointIn(commonBound, modelX, modelY)) {\n            return true;\n        }\n        return false;\n    }\n    _forceUpdateSelection() {\n        // FIXME: force triggering selection change to re-render selection rect\n        this._edgeless.slots.selectionUpdated.emit({\n            ...this.state,\n        });\n    }\n    _tryDeleteEmptyBlocks() {\n        const emptyBlocks = this._blocks.filter(b => isEmpty(b));\n        // always keep at least one frame block\n        if (emptyBlocks.length === this._blocks.length) {\n            emptyBlocks.shift();\n        }\n        if (emptyBlocks.length) {\n            this._page.captureSync();\n            emptyBlocks.forEach(b => this._page.deleteBlock(b));\n        }\n    }\n    /** Update drag handle by closest block elements */\n    _updateDragHandle(e) {\n        const block = this.state.selected[0];\n        if (!block || !isTopLevelBlock(block))\n            return;\n        const frameBlockElement = getBlockElementByModel(block);\n        assertExists(frameBlockElement);\n        const { raw: { clientX, clientY }, } = e;\n        const point = new Point(clientX, clientY);\n        const element = getClosestBlockElementByPoint(point, {\n            container: frameBlockElement,\n            rect: Rect.fromDOM(frameBlockElement),\n        }, this._edgeless.surface.viewport.zoom);\n        let hoverEditingState = null;\n        if (element) {\n            hoverEditingState = {\n                element: element,\n                model: getModelByBlockElement(element),\n                rect: getRectByBlockElement(element),\n            };\n            this._edgeless.components.dragHandle?.onContainerMouseMove(e, hoverEditingState);\n        }\n    }\n    onContainerClick(e) {\n        this._tryDeleteEmptyBlocks();\n        const selected = this._pick(e.x, e.y);\n        if (selected) {\n            this._handleClickOnSelected(selected, e);\n        }\n        else {\n            this._setNoneSelectionState();\n        }\n        this._isDoubleClickedOnMask = false;\n    }\n    onContainerContextMenu(e) {\n        // repairContextMenuRange(e);\n        noop();\n    }\n    onContainerDblClick(e) {\n        const selected = this._pick(e.x, e.y);\n        if (!selected) {\n            addText(this._edgeless, e);\n            return;\n        }\n        else {\n            if (selected instanceof TextElement) {\n                mountTextEditor(selected, this._edgeless);\n                return;\n            }\n        }\n        if (e.raw.target &&\n            e.raw.target instanceof HTMLElement &&\n            e.raw.target.classList.contains('affine-edgeless-mask')) {\n            this.onContainerClick(e);\n            this._isDoubleClickedOnMask = true;\n            return;\n        }\n        showFormatQuickBarByClicks('double', e, this._page, this._edgeless);\n    }\n    onContainerTripleClick(e) {\n        if (this._isDoubleClickedOnMask)\n            return;\n        showFormatQuickBarByClicks('triple', e, this._page, this._edgeless);\n    }\n    _determineDragType(e) {\n        // Is dragging started from current selected rect\n        if (this._isInSelectedRect(e.x, e.y)) {\n            return this.state.active\n                ? DefaultModeDragType.NativeEditing\n                : DefaultModeDragType.ContentMoving;\n        }\n        else {\n            const selected = this._pick(e.x, e.y);\n            if (selected) {\n                this._setSelectionState([selected], false);\n                return DefaultModeDragType.ContentMoving;\n            }\n            else {\n                return DefaultModeDragType.Selecting;\n            }\n        }\n    }\n    async _cloneContent(e) {\n        this._lock = true;\n        const { surface } = this._edgeless;\n        const elements = (await Promise.all(this.state.selected.map(async (selected) => {\n            return await this._cloneSelected(selected, surface);\n        })));\n        this._setSelectionState(elements, false);\n    }\n    async _cloneSelected(selected, surface) {\n        if (isTopLevelBlock(selected)) {\n            const frameService = this._edgeless.getService('affine:frame');\n            const id = this._page.addBlock('affine:frame', { xywh: selected.xywh }, this._page.root?.id);\n            const frame = this._page.getBlockById(id);\n            assertExists(frame);\n            await frameService.json2Block(frame, frameService.block2Json(selected).children);\n            return this._page.getBlockById(id);\n        }\n        else {\n            const id = surface.addElement(selected.type, selected.serialize());\n            return surface.pickById(id);\n        }\n    }\n    async onContainerDragStart(e) {\n        // Determine the drag type based on the current state and event\n        let dragType = this._determineDragType(e);\n        // If alt key is pressed and content is moving, clone the content\n        if (e.keys.alt && dragType === DefaultModeDragType.ContentMoving) {\n            dragType = DefaultModeDragType.AltCloning;\n            await this._cloneContent(e);\n        }\n        // Set up drag state\n        this.initializeDragState(e, dragType);\n    }\n    initializeDragState(e, dragType) {\n        this.dragType = dragType;\n        this._startRange = caretRangeFromPoint(e.x, e.y);\n        this._dragStartPos = { x: e.x, y: e.y };\n        this._dragLastPos = { x: e.x, y: e.y };\n    }\n    onContainerDragMove(e) {\n        switch (this.dragType) {\n            case DefaultModeDragType.Selecting: {\n                const startX = this._dragStartPos.x;\n                const startY = this._dragStartPos.y;\n                const viewX = Math.min(startX, e.x);\n                const viewY = Math.min(startY, e.y);\n                const [x, y] = this._surface.toModelCoord(viewX, viewY);\n                const w = Math.abs(startX - e.x);\n                const h = Math.abs(startY - e.y);\n                const { zoom } = this._surface.viewport;\n                const bound = { x, y, w: w / zoom, h: h / zoom };\n                const blocks = pickBlocksByBound(this._blocks, bound);\n                const elements = this._surface.pickByBound(bound);\n                this._setSelectionState([...blocks, ...elements], false);\n                break;\n            }\n            case DefaultModeDragType.AltCloning:\n            case DefaultModeDragType.ContentMoving: {\n                this.state.selected.forEach(element => {\n                    if (isPhasorElement(element)) {\n                        this._handleSurfaceDragMove(element, e);\n                    }\n                    else {\n                        this._handleBlockDragMove(element, e);\n                    }\n                });\n                this._forceUpdateSelection();\n                break;\n            }\n            case DefaultModeDragType.NativeEditing: {\n                // TODO reset if drag out of frame\n                handleNativeRangeDragMove(this._startRange, e);\n                break;\n            }\n        }\n        this._dragLastPos = {\n            x: e.x,\n            y: e.y,\n        };\n    }\n    onContainerDragEnd(e) {\n        if (this._lock) {\n            this._page.captureSync();\n            this._lock = false;\n        }\n        if (this.isActive) {\n            const { direction, selectedType } = getNativeSelectionMouseDragInfo(e);\n            if (selectedType === 'Caret') {\n                // If nothing is selected, then we should not show the format bar\n                return;\n            }\n            showFormatQuickBar({\n                page: this._page,\n                container: this._edgeless,\n                direction,\n                anchorEl: {\n                    getBoundingClientRect: () => {\n                        return calcCurrentSelectionPosition(direction);\n                    },\n                },\n            });\n        }\n        this.dragType = DefaultModeDragType.None;\n        this._dragStartPos = { x: 0, y: 0 };\n        this._dragLastPos = { x: 0, y: 0 };\n        this._forceUpdateSelection();\n    }\n    onContainerMouseMove(e) {\n        if (this.dragType === DefaultModeDragType.PreviewDragging)\n            return;\n        this._updateDragHandle(e);\n    }\n    onContainerMouseOut(_) {\n        noop();\n    }\n    onPressShiftKey(_) {\n        noop();\n    }\n}\n//# sourceMappingURL=default-mode.js.map","import { assertExists } from '@blocksuite/store';\nimport { getBlockElementByModel, getBlockElementsExcludeSubtrees, getClosestBlockElementByPoint, getClosestFrameBlockElementById, getHoveringFrame, getModelByBlockElement, getRectByBlockElement, isInSamePath, Point, Rect, } from '../../__internal__/index.js';\nimport { DragHandle } from '../../components/index.js';\nimport { DefaultModeDragType, } from './mode-controllers/default-mode.js';\nexport function createDragHandle(pageBlock) {\n    return new DragHandle({\n        // Drag handle should be at the same level with EditorContainer\n        container: pageBlock.mouseRoot,\n        onDropCallback(point, blockElements, editingState, type) {\n            const blockElementsExcludeSubtrees = getBlockElementsExcludeSubtrees(blockElements);\n            if (!blockElementsExcludeSubtrees.length)\n                return;\n            const models = blockElementsExcludeSubtrees.map(getModelByBlockElement);\n            if (!models.length)\n                return;\n            const page = pageBlock.page;\n            if (editingState && type !== 'none') {\n                const { model } = editingState;\n                if (models.length === 1 && isInSamePath(page, model, models[0]))\n                    return;\n                const focusId = models[0].id;\n                const targetFrameBlock = getClosestFrameBlockElementById(model.id, pageBlock);\n                assertExists(targetFrameBlock);\n                const frameBlock = getClosestFrameBlockElementById(focusId, pageBlock);\n                assertExists(frameBlock);\n                page.captureSync();\n                if (type === 'database') {\n                    page.moveBlocks(models, model);\n                }\n                else {\n                    const parent = page.getParent(model);\n                    assertExists(parent);\n                    page.moveBlocks(models, parent, model, type === 'before');\n                }\n                pageBlock.setSelection(targetFrameBlock.model.id, true, focusId, point);\n                return;\n            }\n            // blank area\n            page.captureSync();\n            const parent = page.getParent(models[0]);\n            assertExists(parent);\n            const firstModelIndex = parent.children.findIndex(m => m.id === models[0].id);\n            const lastModelIndex = parent.children.findIndex(m => m.id === models[models.length - 1].id);\n            pageBlock.moveBlocksWithNewFrame(models, point, {\n                rect: getRectByBlockElement(blockElementsExcludeSubtrees[0]),\n                focus: true,\n                frameIndex: firstModelIndex === 0 ? 0 : undefined,\n            });\n            if (firstModelIndex !== 0 &&\n                lastModelIndex !== parent.children.length - 1) {\n                const nextFirstBlockElement = getBlockElementByModel(parent?.children[lastModelIndex]);\n                assertExists(nextFirstBlockElement);\n                const nextFirstBlockRect = getRectByBlockElement(nextFirstBlockElement);\n                pageBlock.moveBlocksWithNewFrame(parent?.children.slice(lastModelIndex), new Point(nextFirstBlockRect.x, nextFirstBlockRect.y), { rect: nextFirstBlockRect });\n            }\n        },\n        setDragType(dragging) {\n            const { selection } = pageBlock;\n            if (selection.mouseMode.type === 'default') {\n                const currentController = selection.currentController;\n                currentController.dragType = dragging\n                    ? DefaultModeDragType.PreviewDragging\n                    : DefaultModeDragType.None;\n            }\n        },\n        setSelectedBlock(modelState) {\n            const selectedBlocks = [];\n            if (modelState) {\n                selectedBlocks.push(modelState.element);\n            }\n            pageBlock.slots.selectedBlocksUpdated.emit(selectedBlocks);\n        },\n        getSelectedBlocks() {\n            return pageBlock.selection.selectedBlocks;\n        },\n        getClosestBlockElement(point) {\n            if (pageBlock.mouseMode.type !== 'default')\n                return null;\n            const hoveringFrame = getHoveringFrame(point);\n            if (!hoveringFrame)\n                return null;\n            return getClosestBlockElementByPoint(point, { container: hoveringFrame, rect: Rect.fromDOM(hoveringFrame) }, pageBlock.surface.viewport.zoom);\n        },\n    });\n}\n//# sourceMappingURL=create-drag-handle.js.map","import { BLOCK_ID_ATTR } from '@blocksuite/global/config';\nimport { Slot } from '@blocksuite/store';\nimport { getBlockElementByModel } from '../../__internal__/utils/query.js';\nimport { almostEqual, throttle } from '../../__internal__/utils/std.js';\nexport class FrameResizeObserver {\n    constructor() {\n        /**\n         * Observation will fire when observation starts if Element is being rendered, and Element’s size is not 0,0.\n         * https://w3c.github.io/csswg-drafts/resize-observer/#resize-observer-interface\n         *\n         * So we need to cache observed element.\n         */\n        this._cachedElements = new Map();\n        this._lastRects = new Map();\n        this.slots = {\n            resize: new Slot(),\n        };\n        this._onResize = (entries) => {\n            const resizedFrames = new Map();\n            entries.forEach(entry => {\n                const blockElement = entry.target.closest(`[${BLOCK_ID_ATTR}]`);\n                const id = blockElement?.getAttribute(BLOCK_ID_ATTR);\n                if (!id)\n                    return;\n                if (this._lastRects.has(id)) {\n                    const rect = this._lastRects.get(id);\n                    if (rect &&\n                        almostEqual(rect.x, entry.contentRect.x) &&\n                        almostEqual(rect.y, entry.contentRect.y) &&\n                        almostEqual(rect.width, entry.contentRect.width) &&\n                        almostEqual(rect.height, entry.contentRect.height)) {\n                        return;\n                    }\n                }\n                this._lastRects.set(id, entry.contentRect);\n                resizedFrames.set(id, entry.contentRect);\n            });\n            if (resizedFrames.size) {\n                this.slots.resize.emit(resizedFrames);\n            }\n        };\n        this._observer = new ResizeObserver(throttle(this._onResize, 1000 / 60));\n    }\n    resetListener(page) {\n        const unCachedKeys = new Set(this._cachedElements.keys());\n        page.root?.children.forEach(model => {\n            const blockId = model.id;\n            unCachedKeys.delete(blockId);\n            const blockElement = getBlockElementByModel(model);\n            const container = blockElement?.querySelector('.affine-frame-block-container');\n            const cachedElement = this._cachedElements.get(blockId);\n            if (cachedElement) {\n                if (container === cachedElement) {\n                    return;\n                }\n                this._observer.unobserve(cachedElement);\n                this._cachedElements.delete(blockId);\n            }\n            if (!container)\n                return;\n            this._observer.observe(container);\n            this._cachedElements.set(blockId, container);\n        });\n        unCachedKeys.forEach(k => {\n            const element = this._cachedElements.get(k);\n            if (!element)\n                return;\n            this._observer.unobserve(element);\n        });\n    }\n    dispose() {\n        this._observer.disconnect();\n        this.slots.resize.dispose();\n        this._cachedElements.clear();\n        this._lastRects.clear();\n    }\n}\n//# sourceMappingURL=frame-resize-observer.js.map","import { FRAME_BACKGROUND_COLORS, HOTKEYS, SHORT_KEY, } from '@blocksuite/global/config';\nimport { activeEditorManager } from '../../__internal__/utils/active-editor-manager.js';\nimport { hotkey, HOTKEY_SCOPE_TYPE } from '../../__internal__/utils/hotkey.js';\nimport { BrushSize } from '../../__internal__/utils/types.js';\nimport { bindCommonHotkey, deleteModelsByRange, handleDown, handleUp, } from '../utils/index.js';\nimport { DEFAULT_SELECTED_COLOR } from './components/color-panel.js';\nimport { DEFAULT_SHAPE_FILL_COLOR, DEFAULT_SHAPE_STROKE_COLOR, } from './components/component-toolbar/change-shape-button.js';\nimport { isTopLevelBlock } from './utils.js';\nfunction setMouseMode(edgeless, mouseMode, ignoreActiveState = false) {\n    // when editing, should not update mouse mode by shortcut\n    if (!ignoreActiveState && edgeless.selection.isActive) {\n        return;\n    }\n    edgeless.selection.setMouseMode(mouseMode);\n}\nfunction bindSpace(edgeless) {\n    // When user enters pan mode by pressing space,\n    // we should revert to the last mouse mode once user releases the key.\n    let shouldRevertMode = false;\n    let lastMode = null;\n    hotkey.addListener(HOTKEYS.SPACE, (event) => {\n        const { mouseMode, state } = edgeless.selection;\n        if (event.type === 'keydown') {\n            if (mouseMode.type === 'pan') {\n                return;\n            }\n            // when user is editing, shouldn't enter pan mode\n            if (mouseMode.type === 'default' && state.active) {\n                return;\n            }\n            shouldRevertMode = true;\n            lastMode = mouseMode;\n            setMouseMode(edgeless, { type: 'pan', panning: false });\n            return;\n        }\n        if (event.type === 'keyup') {\n            if (mouseMode.type === 'pan' && shouldRevertMode && lastMode) {\n                setMouseMode(edgeless, lastMode);\n            }\n            shouldRevertMode = false;\n        }\n    }, {\n        keydown: true,\n        keyup: true,\n    });\n}\nfunction bindDelete(edgeless) {\n    function backspace(e) {\n        // TODO: add `selection-state` to handle `block`, `native`, `frame`, `shape`, etc.\n        deleteModelsByRange(edgeless.page);\n        const { selected } = edgeless.selection.state;\n        selected.forEach(element => {\n            if (isTopLevelBlock(element)) {\n                const children = edgeless.page.root?.children ?? [];\n                // FIXME: should always keep at least 1 frame\n                if (children.length > 1) {\n                    edgeless.page.deleteBlock(element);\n                }\n            }\n            else {\n                edgeless.surface.removeElement(element.id);\n            }\n        });\n        edgeless.selection.clear();\n        edgeless.slots.selectionUpdated.emit(edgeless.selection.state);\n    }\n    hotkey.addListener(HOTKEYS.BACKSPACE, backspace);\n    hotkey.addListener(HOTKEYS.DELETE, backspace);\n}\nfunction bindShift(edgeless, key = 'shift', pressed = false) {\n    hotkey.addListener(HOTKEYS.ANY_KEY, e => {\n        if (e.key.toLowerCase() === key && pressed !== e.shiftKey) {\n            pressed = e.shiftKey;\n            edgeless.slots.pressShiftKeyUpdated.emit(pressed);\n        }\n    }, {\n        keydown: true,\n        keyup: true,\n    });\n}\nexport function bindEdgelessHotkeys(edgeless) {\n    const scope = hotkey.newScope(HOTKEY_SCOPE_TYPE.AFFINE_EDGELESS);\n    if (activeEditorManager.isActive(edgeless)) {\n        hotkey.setScope(scope);\n    }\n    const activeDispose = activeEditorManager.activeSlot.on(() => {\n        if (activeEditorManager.isActive(edgeless)) {\n            hotkey.setScope(scope);\n        }\n    });\n    hotkey.withScope(scope, () => {\n        hotkey.addListener(HOTKEYS.UP, e => handleUp(e, edgeless.page, { zoom: edgeless.surface.viewport.zoom }));\n        hotkey.addListener(HOTKEYS.DOWN, e => handleDown(e, edgeless.page, { zoom: edgeless.surface.viewport.zoom }));\n        hotkey.addListener('v', () => setMouseMode(edgeless, { type: 'default' }));\n        hotkey.addListener('t', () => setMouseMode(edgeless, { type: 'text' }));\n        hotkey.addListener('h', () => setMouseMode(edgeless, { type: 'pan', panning: false }));\n        hotkey.addListener('n', () => setMouseMode(edgeless, {\n            type: 'note',\n            background: FRAME_BACKGROUND_COLORS[0],\n        }));\n        hotkey.addListener('p', () => setMouseMode(edgeless, {\n            type: 'brush',\n            color: DEFAULT_SELECTED_COLOR,\n            lineWidth: BrushSize.Thin,\n        }));\n        hotkey.addListener('s', () => setMouseMode(edgeless, {\n            type: 'shape',\n            shape: 'rect',\n            fillColor: DEFAULT_SHAPE_FILL_COLOR,\n            strokeColor: DEFAULT_SHAPE_STROKE_COLOR,\n        }));\n        // issue #1814\n        hotkey.addListener(HOTKEYS.ESC, () => {\n            edgeless.slots.selectionUpdated.emit({ selected: [], active: false });\n            setMouseMode(edgeless, { type: 'default' }, true);\n        });\n        hotkey.addListener(HOTKEYS.SELECT_ALL, keyboardEvent => {\n            keyboardEvent.preventDefault();\n            edgeless.slots.selectionUpdated.emit({\n                selected: [...edgeless.frames, ...edgeless.surface.getElements()],\n                active: false,\n            });\n        });\n        hotkey.addListener(`${SHORT_KEY}+1`, e => {\n            e.preventDefault();\n            edgeless.slots.zoomUpdated.emit('fit');\n        });\n        hotkey.addListener(`${SHORT_KEY}+-`, e => {\n            e.preventDefault();\n            edgeless.slots.zoomUpdated.emit('out');\n        });\n        hotkey.addListener(`${SHORT_KEY}+0`, e => {\n            e.preventDefault();\n            edgeless.slots.zoomUpdated.emit('reset');\n        });\n        hotkey.addListener(`${SHORT_KEY}+=`, e => {\n            e.preventDefault();\n            edgeless.slots.zoomUpdated.emit('in');\n        });\n        bindSpace(edgeless);\n        bindDelete(edgeless);\n        bindShift(edgeless);\n        bindCommonHotkey(edgeless.page);\n    });\n    return () => {\n        hotkey.deleteScope(scope);\n        activeDispose.dispose();\n    };\n}\n//# sourceMappingURL=hotkey.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { noop } from '../../../__internal__/index.js';\nimport { DEFAULT_SELECTED_COLOR } from '../components/color-panel.js';\nimport { MouseModeController } from './index.js';\nexport class BrushModeController extends MouseModeController {\n    constructor() {\n        super(...arguments);\n        this.mouseMode = {\n            type: 'brush',\n            color: DEFAULT_SELECTED_COLOR,\n            lineWidth: 4,\n        };\n        this._draggingElementId = null;\n        this._draggingPathPoints = null;\n    }\n    onContainerClick(e) {\n        noop();\n    }\n    onContainerContextMenu(e) {\n        noop();\n    }\n    onContainerDblClick(e) {\n        noop();\n    }\n    onContainerTripleClick(e) {\n        noop();\n    }\n    onContainerDragStart(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        this._page.captureSync();\n        const { viewport } = this._edgeless.surface;\n        // create a shape block when drag start\n        const [modelX, modelY] = viewport.toModelCoord(e.point.x, e.point.y);\n        const { color, lineWidth } = this.mouseMode;\n        const points = [[modelX, modelY]];\n        const id = this._surface.addElement('brush', {\n            points,\n            color,\n            lineWidth,\n        });\n        this._draggingElementId = id;\n        this._draggingPathPoints = points;\n        this._edgeless.slots.surfaceUpdated.emit();\n    }\n    onContainerDragMove(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        if (!this._draggingElementId)\n            return;\n        assertExists(this._draggingElementId);\n        assertExists(this._draggingPathPoints);\n        const { lineWidth } = this.mouseMode;\n        const [modelX, modelY] = this._edgeless.surface.toModelCoord(e.point.x, e.point.y);\n        const points = [...this._draggingPathPoints, [modelX, modelY]];\n        this._draggingPathPoints = points;\n        this._surface.updateElement(this._draggingElementId, {\n            points,\n            lineWidth,\n        });\n        this._edgeless.slots.surfaceUpdated.emit();\n    }\n    onContainerDragEnd(e) {\n        this._draggingElementId = null;\n        this._draggingPathPoints = null;\n        this._page.captureSync();\n        this._edgeless.slots.surfaceUpdated.emit();\n    }\n    onContainerMouseMove(e) {\n        noop();\n    }\n    onContainerMouseOut(e) {\n        noop();\n    }\n    onPressShiftKey(_) {\n        noop();\n    }\n}\n//# sourceMappingURL=brush-mode.js.map","import { Rectangle } from '@blocksuite/connector';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { deserializeXYWH, StrokeStyle } from '@blocksuite/phasor';\nimport { noop } from '../../../__internal__/index.js';\nimport { generateConnectorPath, getAttachedPoint, getXYWH, pickBy, } from '../utils.js';\nimport { MouseModeController } from './index.js';\nexport class ConnectorModeController extends MouseModeController {\n    constructor() {\n        super(...arguments);\n        this.mouseMode = {\n            type: 'connector',\n        };\n        this._draggingElementId = null;\n        this._draggingArea = null;\n        this._draggingStartElement = null;\n        this._draggingStartRect = null;\n    }\n    _pickBy(x, y, filter) {\n        const { surface } = this._edgeless;\n        return pickBy(surface, this._page, x, y, filter);\n    }\n    onContainerClick(e) {\n        noop();\n    }\n    onContainerContextMenu(e) {\n        noop();\n    }\n    onContainerDblClick(e) {\n        noop();\n    }\n    onContainerTripleClick(e) {\n        noop();\n    }\n    onContainerDragStart(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        this._page.captureSync();\n        const { viewport } = this._edgeless.surface;\n        const { mode, color } = this.mouseMode;\n        // create a block when drag start\n        const [modelX, modelY] = viewport.toModelCoord(e.x, e.y);\n        this._draggingStartElement = this._pickBy(e.x, e.y, ele => ele.type !== 'connector');\n        this._draggingStartRect = this._draggingStartElement\n            ? new Rectangle(...deserializeXYWH(getXYWH(this._draggingStartElement)))\n            : null;\n        const { point: startPoint, position: startPosition } = getAttachedPoint(modelX, modelY, this._draggingStartRect);\n        this._draggingStartPoint = startPoint;\n        const id = this._surface.addElement('connector', {\n            color,\n            mode,\n            controllers: [\n                { x: modelX, y: modelY },\n                { x: modelX + 1, y: modelY + 1 },\n            ],\n            lineWidth: 4,\n            strokeStyle: StrokeStyle.Solid,\n            startElement: this._draggingStartElement && startPosition\n                ? {\n                    id: this._draggingStartElement.id,\n                    position: startPosition,\n                }\n                : undefined,\n        });\n        this._draggingElementId = id;\n        this._draggingArea = {\n            start: new DOMPoint(e.x, e.y),\n            end: new DOMPoint(e.x, e.y),\n        };\n        this._edgeless.slots.surfaceUpdated.emit();\n    }\n    onContainerDragMove(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        assertExists(this._draggingElementId);\n        assertExists(this._draggingArea);\n        const { viewport } = this._edgeless.surface;\n        const { mode } = this.mouseMode;\n        this._draggingArea.end = new DOMPoint(e.x, e.y);\n        const id = this._draggingElementId;\n        const startX = this._draggingStartPoint.x;\n        const startY = this._draggingStartPoint.y;\n        const [endModelX, endModelY] = viewport.toModelCoord(e.x, e.y);\n        const end = this._pickBy(e.x, e.y, ele => ele.id !== id && ele.type !== 'connector');\n        const endRect = end && end.id !== id\n            ? new Rectangle(...deserializeXYWH(getXYWH(end)))\n            : null;\n        const { point: { x: endX, y: endY }, position: endPosition, } = getAttachedPoint(endModelX, endModelY, endRect);\n        const routes = generateConnectorPath(this._draggingStartRect, endRect, { x: startX, y: startY }, { x: endX, y: endY }, [], mode);\n        this._surface.updateElement(id, {\n            controllers: routes,\n            endElement: end && endPosition ? { id: end.id, position: endPosition } : undefined,\n        });\n        this._edgeless.slots.surfaceUpdated.emit();\n    }\n    onContainerDragEnd(e) {\n        const id = this._draggingElementId;\n        assertExists(id);\n        this._draggingElementId = null;\n        this._draggingArea = null;\n        this._page.captureSync();\n        const element = this._surface.pickById(id);\n        assertExists(element);\n        this._edgeless.selection.switchToDefaultMode({\n            selected: [element],\n            active: false,\n        });\n    }\n    onContainerMouseMove(e) {\n        noop();\n    }\n    onContainerMouseOut(e) {\n        noop();\n    }\n    onPressShiftKey(_) {\n        noop();\n    }\n}\n//# sourceMappingURL=connector-mode.js.map","import {} from '../../../__internal__/index.js';\nimport { noop } from '../../../__internal__/index.js';\nimport { addNote, DEFAULT_FRAME_WIDTH } from '../utils.js';\nimport { MouseModeController } from './index.js';\nexport class NoteModeController extends MouseModeController {\n    constructor() {\n        super(...arguments);\n        this.mouseMode = {\n            type: 'note',\n        };\n        this._dragStartEvent = null;\n    }\n    _addNote(e, width = DEFAULT_FRAME_WIDTH) {\n        addNote(this._edgeless, this._page, e, width);\n    }\n    onContainerClick(e) {\n        this._addNote(e);\n    }\n    onContainerContextMenu(e) {\n        noop();\n    }\n    onContainerDblClick(e) {\n        noop();\n    }\n    onContainerTripleClick(e) {\n        noop();\n    }\n    onContainerDragStart(e) {\n        this._dragStartEvent = e;\n        this._draggingArea = {\n            start: new DOMPoint(e.x, e.y),\n            end: new DOMPoint(e.x, e.y),\n        };\n    }\n    onContainerDragMove(e) {\n        if (this._draggingArea) {\n            this._draggingArea.end = new DOMPoint(e.x, e.y);\n            this._edgeless.slots.hoverUpdated.emit();\n        }\n    }\n    onContainerDragEnd(e) {\n        if (this._dragStartEvent) {\n            const startEvent = e.x > this._dragStartEvent.x ? this._dragStartEvent : e;\n            const width = Math.max(Math.abs(e.x - this._dragStartEvent.x), DEFAULT_FRAME_WIDTH);\n            this._addNote(startEvent, width);\n        }\n        this._dragStartEvent = null;\n        this._draggingArea = null;\n    }\n    onContainerMouseMove(e) {\n        noop();\n    }\n    onContainerMouseOut(e) {\n        noop();\n    }\n    onPressShiftKey(_) {\n        noop();\n    }\n}\n//# sourceMappingURL=note-mode.js.map","import { noop } from '../../../__internal__/index.js';\nimport { MouseModeController } from './index.js';\nexport class PanModeController extends MouseModeController {\n    constructor() {\n        super(...arguments);\n        this.mouseMode = {\n            type: 'pan',\n        };\n        this._lastPoint = null;\n    }\n    onContainerClick(e) {\n        noop();\n    }\n    onContainerContextMenu(e) {\n        noop();\n    }\n    onContainerDblClick(e) {\n        noop();\n    }\n    onContainerTripleClick(e) {\n        noop();\n    }\n    onContainerDragStart(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        this._lastPoint = [e.x, e.y];\n        this._edgeless.slots.mouseModeUpdated.emit({ type: 'pan', panning: true });\n    }\n    onContainerDragMove(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        if (!this._lastPoint)\n            return;\n        const { viewport } = this._edgeless.surface;\n        const { zoom } = viewport;\n        const [lastX, lastY] = this._lastPoint;\n        const deltaX = lastX - e.x;\n        const deltaY = lastY - e.y;\n        this._lastPoint = [e.x, e.y];\n        viewport.applyDeltaCenter(deltaX / zoom, deltaY / zoom);\n        this._edgeless.slots.viewportUpdated.emit();\n    }\n    onContainerDragEnd() {\n        this._lastPoint = null;\n        this._edgeless.slots.mouseModeUpdated.emit({ type: 'pan', panning: false });\n    }\n    onContainerMouseMove(e) {\n        noop();\n    }\n    onContainerMouseOut(e) {\n        noop();\n    }\n    onPressShiftKey(_) {\n        noop();\n    }\n}\n//# sourceMappingURL=pan-mode.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { Bound, StrokeStyle } from '@blocksuite/phasor';\nimport { noop } from '../../../__internal__/index.js';\nimport { isTransparent } from '../components/color-panel.js';\nimport { DEFAULT_SHAPE_FILL_COLOR, DEFAULT_SHAPE_STROKE_COLOR, } from '../components/component-toolbar/change-shape-button.js';\nimport { MouseModeController } from './index.js';\nexport class ShapeModeController extends MouseModeController {\n    constructor() {\n        super(...arguments);\n        this.mouseMode = {\n            type: 'shape',\n            shape: 'rect',\n            fillColor: DEFAULT_SHAPE_FILL_COLOR,\n            strokeColor: DEFAULT_SHAPE_STROKE_COLOR,\n        };\n        this._draggingElementId = null;\n        this._draggingArea = null;\n    }\n    onContainerClick(e) {\n        noop();\n    }\n    onContainerContextMenu(e) {\n        noop();\n    }\n    onContainerDblClick(e) {\n        noop();\n    }\n    onContainerTripleClick(e) {\n        noop();\n    }\n    onContainerDragStart(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        this._page.captureSync();\n        const { viewport } = this._edgeless.surface;\n        // create a shape block when drag start\n        const [modelX, modelY] = viewport.toModelCoord(e.point.x, e.point.y);\n        const bound = new Bound(modelX, modelY, 0, 0);\n        const { shape, fillColor, strokeColor } = this.mouseMode;\n        const shapeType = shape === 'roundedRect' ? 'rect' : shape;\n        const id = this._surface.addElement('shape', {\n            shapeType,\n            xywh: bound.serialize(),\n            strokeColor,\n            fillColor,\n            filled: !isTransparent(fillColor),\n            radius: shape === 'roundedRect' ? 0.1 : 0,\n            strokeWidth: 4,\n            strokeStyle: StrokeStyle.Solid,\n        });\n        this._draggingElementId = id;\n        this._draggingArea = {\n            start: new DOMPoint(e.x, e.y),\n            end: new DOMPoint(e.x, e.y),\n        };\n        this._edgeless.slots.surfaceUpdated.emit();\n    }\n    onContainerDragMove(e) {\n        if (!this._page.awarenessStore.getFlag('enable_surface'))\n            return;\n        assertExists(this._draggingElementId);\n        assertExists(this._draggingArea);\n        this._draggingArea.end = new DOMPoint(e.x, e.y);\n        this._resize(e.keys.shift || this._edgeless.selection.shiftKey);\n    }\n    onContainerDragEnd(e) {\n        const id = this._draggingElementId;\n        assertExists(id);\n        this._draggingElementId = null;\n        this._draggingArea = null;\n        this._page.captureSync();\n        const element = this._surface.pickById(id);\n        assertExists(element);\n        this._edgeless.selection.switchToDefaultMode({\n            selected: [element],\n            active: false,\n        });\n    }\n    onPressShiftKey(pressed) {\n        const id = this._draggingElementId;\n        if (!id)\n            return;\n        this._resize(pressed);\n    }\n    _resize(shift = false) {\n        const { _draggingElementId: id, _draggingArea, _edgeless } = this;\n        assertExists(id);\n        assertExists(_draggingArea);\n        const { slots, surface } = _edgeless;\n        const { viewport } = surface;\n        const { zoom } = viewport;\n        const { start: { x: startX, y: startY }, end, } = _draggingArea;\n        let { x: endX, y: endY } = end;\n        if (shift) {\n            const w = Math.abs(endX - startX);\n            const h = Math.abs(endY - startY);\n            const m = Math.max(w, h);\n            endX = startX + (endX > startX ? m : -m);\n            endY = startY + (endY > startY ? m : -m);\n        }\n        const [x, y] = viewport.toModelCoord(Math.min(startX, endX), Math.min(startY, endY));\n        const w = Math.abs(startX - endX) / zoom;\n        const h = Math.abs(startY - endY) / zoom;\n        const bound = new Bound(x, y, w, h);\n        surface.setElementBound(id, bound);\n        slots.surfaceUpdated.emit();\n    }\n    onContainerMouseMove(e) {\n        noop();\n    }\n    onContainerMouseOut(e) {\n        noop();\n    }\n}\n//# sourceMappingURL=shape-mode.js.map","import { noop } from '../../../__internal__/index.js';\nimport { addText } from '../utils.js';\nimport { MouseModeController } from './index.js';\nexport class TextModeController extends MouseModeController {\n    constructor() {\n        super(...arguments);\n        this.mouseMode = {\n            type: 'text',\n        };\n    }\n    onContainerClick(e) {\n        addText(this._edgeless, e);\n    }\n    onContainerContextMenu(e) {\n        noop();\n    }\n    onContainerDblClick(e) {\n        noop();\n    }\n    onContainerTripleClick(e) {\n        noop();\n    }\n    onContainerDragStart(e) {\n        noop();\n    }\n    onContainerDragMove(e) {\n        noop();\n    }\n    onContainerDragEnd(e) {\n        noop();\n    }\n    onContainerMouseMove(e) {\n        noop();\n    }\n    onContainerMouseOut(e) {\n        noop();\n    }\n    onPressShiftKey(_) {\n        noop();\n    }\n}\n//# sourceMappingURL=text-mode.js.map","import { normalizeWheelDeltaY } from '@blocksuite/phasor';\nimport { AbstractSelectionManager, getEditorContainerByElement, isDatabaseInput, isInsideEdgelessTextEditor, isInsidePageTitle, isPinchEvent, Point, } from '../../__internal__/index.js';\nimport { activeEditorManager } from '../../__internal__/utils/active-editor-manager.js';\nimport { updateLocalSelectionRange } from '../default/selection-manager/utils.js';\nimport { BrushModeController } from './mode-controllers/brush-mode.js';\nimport { ConnectorModeController } from './mode-controllers/connector-mode.js';\nimport { DefaultModeController } from './mode-controllers/default-mode.js';\nimport { NoteModeController } from './mode-controllers/note-mode.js';\nimport { PanModeController } from './mode-controllers/pan-mode.js';\nimport { ShapeModeController } from './mode-controllers/shape-mode.js';\nimport { TextModeController } from './mode-controllers/text-mode.js';\nimport { getSelectionBoxBound, getXYWH, isTopLevelBlock, pickTopBlock, } from './utils.js';\nfunction shouldFilterMouseEvent(event) {\n    const target = event.target;\n    if (!target || !(target instanceof HTMLElement)) {\n        return false;\n    }\n    if (target.tagName === 'INPUT') {\n        return true;\n    }\n    if (target.tagName === 'FORMAT-QUICK-BAR') {\n        return true;\n    }\n    if (target.tagName === 'AFFINE-DRAG-HANDLE') {\n        return true;\n    }\n    return false;\n}\nexport class EdgelessSelectionManager extends AbstractSelectionManager {\n    get isActive() {\n        return this.state.active;\n    }\n    get lastMousePos() {\n        return this._lastMousePos;\n    }\n    get mouseMode() {\n        return this._mouseMode;\n    }\n    set mouseMode(mode) {\n        this._mouseMode = mode;\n        // sync mouse mode\n        this._controllers[this._mouseMode.type].mouseMode = this._mouseMode;\n    }\n    get currentController() {\n        return this._controllers[this.mouseMode.type];\n    }\n    get draggingArea() {\n        if (!this.currentController.draggingArea)\n            return null;\n        const { start, end } = this.currentController.draggingArea;\n        const minX = Math.min(start.x, end.x);\n        const minY = Math.min(start.y, end.y);\n        const maxX = Math.max(start.x, end.x);\n        const maxY = Math.max(start.y, end.y);\n        return new DOMRect(minX, minY, maxX - minX, maxY - minY);\n    }\n    get shiftKey() {\n        return this._shiftKey;\n    }\n    set shiftKey(pressed) {\n        this._shiftKey = pressed;\n        this.currentController.onPressShiftKey(pressed);\n    }\n    constructor(container, dispacher) {\n        super(container, dispacher);\n        this._mouseMode = {\n            type: 'default',\n        };\n        /** Latest mouse position in view coords */\n        this._lastMousePos = { x: 0, y: 0 };\n        this._rightClickTimer = null;\n        // pressed shift key\n        this._shiftKey = false;\n        // selected blocks\n        this.selectedBlocks = [];\n        // Cache the last edited elements.\n        this.lastState = null;\n        // Holds the state of the current selected elements.\n        this.state = {\n            selected: [],\n            active: false,\n        };\n        this._add = (name, fn) => {\n            this._disposables.add(this._dispatcher.add(name, fn));\n        };\n        this._onContainerDragStart = (e) => {\n            if (this.page.readonly)\n                return;\n            // do nothing when holding right-key and not in pan mode\n            if (e.button === 2 && this.mouseMode.type !== 'pan')\n                return;\n            return this.currentController.onContainerDragStart(e);\n        };\n        this._onContainerDragMove = (e) => {\n            if (this.page.readonly)\n                return;\n            // do nothing when holding right-key and not in pan mode\n            if (e.button === 2 && this.mouseMode.type !== 'pan')\n                return;\n            return this.currentController.onContainerDragMove(e);\n        };\n        this._onContainerDragEnd = (e) => {\n            if (this.page.readonly)\n                return;\n            // do nothing when holding right-key and not in pan mode\n            if (e.button === 2 && this.mouseMode.type !== 'pan')\n                return;\n            return this.currentController.onContainerDragEnd(e);\n        };\n        this._onContainerClick = (e) => {\n            const container = getEditorContainerByElement(this.container);\n            activeEditorManager.setActive(container);\n            return this.currentController.onContainerClick(e);\n        };\n        this._onContainerDblClick = (e) => {\n            return this.currentController.onContainerDblClick(e);\n        };\n        this._onContainerTripleClick = (e) => {\n            return this.currentController.onContainerTripleClick(e);\n        };\n        this._onContainerPointerMove = (e) => {\n            this._updateLastMousePos(e);\n            this.container.slots.hoverUpdated.emit();\n            return this._controllers[this.mouseMode.type].onContainerMouseMove(e);\n        };\n        this._onContainerPointerOut = (e) => {\n            return this._controllers[this.mouseMode.type].onContainerMouseOut(e);\n        };\n        this._onContainerContextMenu = (e) => {\n            e.raw.preventDefault();\n            const mouseMode = this.mouseMode;\n            if (mouseMode.type !== 'pan' && !this._rightClickTimer) {\n                this._rightClickTimer = {\n                    mouseMode,\n                    timeStamp: e.raw.timeStamp,\n                    timer: window.setTimeout(() => {\n                        this._controllers['pan'].onContainerDragStart(e);\n                    }, 233),\n                };\n            }\n        };\n        this._onContainerPointerUp = (e) => {\n            if (e.button === 2 && this._rightClickTimer) {\n                const { timer, timeStamp, mouseMode } = this._rightClickTimer;\n                if (e.raw.timeStamp - timeStamp > 233) {\n                    this.container.slots.mouseModeUpdated.emit(mouseMode);\n                }\n                else {\n                    clearTimeout(timer);\n                }\n                this._rightClickTimer = null;\n            }\n        };\n        this._onSelectionChangeWithoutDebounce = () => {\n            updateLocalSelectionRange(this.page);\n        };\n        this.setMouseMode = (mouseMode, state = {\n            selected: [],\n            active: false,\n        }) => {\n            if (this.mouseMode === mouseMode)\n                return;\n            if (mouseMode.type === 'default') {\n                if (!state.selected.length && this.lastState) {\n                    state = this.lastState;\n                    this.lastState = null;\n                }\n                else {\n                    this.lastState = state;\n                }\n            }\n            else if (this.state.selected.length) {\n                this.lastState = this.state;\n            }\n            this.container.slots.mouseModeUpdated.emit(mouseMode);\n            this.container.slots.selectionUpdated.emit(state);\n        };\n        this._controllers = {\n            default: new DefaultModeController(this.container),\n            text: new TextModeController(this.container),\n            shape: new ShapeModeController(this.container),\n            brush: new BrushModeController(this.container),\n            pan: new PanModeController(this.container),\n            note: new NoteModeController(this.container),\n            connector: new ConnectorModeController(this.container),\n        };\n        this._initMouseAndWheelEvents();\n    }\n    _updateLastMousePos(e) {\n        this._lastMousePos = {\n            x: e.x,\n            y: e.y,\n        };\n    }\n    async _initMouseAndWheelEvents() {\n        // due to surface initializing after one frame, the events handler should register after that.\n        if (!this.container.surface) {\n            await new Promise(resolve => requestAnimationFrame(resolve));\n        }\n        this._add('dragStart', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target) &&\n                !isInsideEdgelessTextEditor(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            this._onContainerDragStart(event);\n        });\n        this._add('dragMove', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target) &&\n                !isInsideEdgelessTextEditor(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            this._onContainerDragMove(event);\n        });\n        this._add('dragEnd', ctx => {\n            const event = ctx.get('pointerState');\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target) &&\n                !isInsideEdgelessTextEditor(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            this._onContainerDragEnd(event);\n        });\n        this._add('click', ctx => {\n            const event = ctx.get('pointerState');\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target) &&\n                !isInsideEdgelessTextEditor(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            this._onContainerClick(event);\n        });\n        this._add('doubleClick', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            this._onContainerDblClick(event);\n        });\n        this._add('tripleClick', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            this._onContainerTripleClick(event);\n        });\n        this._add('pointerMove', ctx => {\n            const event = ctx.get('pointerState');\n            if (shouldFilterMouseEvent(event.raw))\n                return;\n            if (!isInsidePageTitle(event.raw.target) &&\n                !isDatabaseInput(event.raw.target) &&\n                !isInsideEdgelessTextEditor(event.raw.target)) {\n                event.raw.preventDefault();\n            }\n            this._onContainerPointerMove(event);\n        });\n        this._add('pointerUp', ctx => {\n            const event = ctx.get('pointerState');\n            this._onContainerPointerUp(event);\n        });\n        this._add('pointerOut', ctx => {\n            const event = ctx.get('pointerState');\n            this._onContainerPointerOut(event);\n        });\n        this._add('contextMenu', ctx => {\n            const event = ctx.get('pointerState');\n            this._onContainerContextMenu(event);\n        });\n        this._add('selectionChange', () => {\n            this._onSelectionChangeWithoutDebounce();\n        });\n        this._add('wheel', ctx => {\n            const state = ctx.get('defaultState');\n            const e = state.event;\n            if (!(e instanceof WheelEvent))\n                return;\n            e.preventDefault();\n            const container = this.container;\n            const { viewport } = container.surface;\n            // pan\n            if (!isPinchEvent(e)) {\n                const dx = e.deltaX / viewport.zoom;\n                const dy = e.deltaY / viewport.zoom;\n                viewport.applyDeltaCenter(dx, dy);\n                container.slots.viewportUpdated.emit();\n            }\n            // zoom\n            else {\n                const rect = container.getBoundingClientRect();\n                // Perform zooming relative to the mouse position\n                const [baseX, baseY] = container.surface.toModelCoord(e.clientX - rect.x, e.clientY - rect.y);\n                const zoom = normalizeWheelDeltaY(e.deltaY, viewport.zoom);\n                viewport.setZoom(zoom, new Point(baseX, baseY));\n                container.slots.viewportUpdated.emit();\n            }\n        });\n    }\n    refreshRemoteSelection() {\n        const element = document.querySelector('remote-selection');\n        if (element) {\n            element.requestUpdate();\n        }\n    }\n    getHoverState() {\n        if (!this.currentController.enableHover) {\n            return null;\n        }\n        const { surface } = this.container;\n        const frames = (this.page.root?.children ?? []).filter(child => child.flavour === 'affine:frame');\n        const { x, y } = this._lastMousePos;\n        const [modelX, modelY] = surface.toModelCoord(x, y);\n        const hovered = surface.pickTop(modelX, modelY) || pickTopBlock(frames, modelX, modelY);\n        // See https://github.com/toeverything/blocksuite/issues/1812\n        if (\n        // if not frame block\n        !isTopLevelBlock(hovered) ||\n            // if in other mouse mode\n            this.mouseMode.type !== 'default' ||\n            // if current selection is not active\n            !this.state.active ||\n            // if current selected block is not the hovered block\n            this.state.selected[0].id !== hovered.id) {\n            this.container.components.dragHandle?.hide();\n        }\n        if (!hovered || this.state.active) {\n            return null;\n        }\n        const xywh = getXYWH(hovered);\n        return {\n            rect: getSelectionBoxBound(surface.viewport, xywh),\n            content: hovered,\n        };\n    }\n    switchToDefaultMode(state) {\n        this.setMouseMode({ type: 'default' }, state);\n    }\n    clear() {\n        this.selectedBlocks = [];\n        this.lastState = null;\n        this.state = {\n            selected: [],\n            active: false,\n        };\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n}\n//# sourceMappingURL=selection-manager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference types=\"vite/client\" />\nimport './components/edgeless-selected-rect.js';\nimport './toolbar/edgeless-toolbar.js';\nimport { BLOCK_ID_ATTR, EDGELESS_BLOCK_CHILD_PADDING, } from '@blocksuite/global/config';\nimport { BlockElement } from '@blocksuite/lit';\nimport { compare, deserializeXYWH, generateKeyBetween, generateNKeysBetween, intersects, serializeXYWH, SurfaceManager, } from '@blocksuite/phasor';\nimport { assertExists, Slot, } from '@blocksuite/store';\nimport { css, html, nothing } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { EdgelessClipboard } from '../../__internal__/clipboard/index.js';\nimport { almostEqual, asyncFocusRichText, bringForward, getRectByBlockElement, handleNativeRangeAtPoint, reorder, reorderTo, resetNativeSelection, sendBackward, } from '../../__internal__/index.js';\nimport { getService, registerService } from '../../__internal__/service.js';\nimport { isCssVariable } from '../../__internal__/theme/css-variables.js';\nimport { getThemePropertyValue, listenToThemeChange, } from '../../__internal__/theme/utils.js';\nimport { PageBlockService } from '../../index.js';\nimport { tryUpdateFrameSize } from '../utils/index.js';\nimport { EdgelessBlockChildrenContainer } from './components/block-children-container.js';\nimport { EdgelessDraggingArea } from './components/dragging-area.js';\nimport { EdgelessHoverRect } from './components/hover-rect.js';\nimport { createDragHandle } from './create-drag-handle.js';\nimport { FrameResizeObserver } from './frame-resize-observer.js';\nimport { bindEdgelessHotkeys } from './hotkey.js';\nimport { EdgelessSelectionManager, } from './selection-manager.js';\nimport { EdgelessToolbar, } from './toolbar/edgeless-toolbar.js';\nimport { DEFAULT_FRAME_HEIGHT, DEFAULT_FRAME_OFFSET_X, DEFAULT_FRAME_OFFSET_Y, DEFAULT_FRAME_WIDTH, getBackgroundGrid, getCursorMode, xywhArrayToObject, } from './utils.js';\nlet EdgelessPageBlockComponent = class EdgelessPageBlockComponent extends BlockElement {\n    constructor() {\n        super(...arguments);\n        this.flavour = 'edgeless';\n        /**\n         * Shared components\n         */\n        this.components = {\n            dragHandle: null,\n            toolbar: null,\n        };\n        this.showGrid = true;\n        this.mouseMode = {\n            type: 'default',\n        };\n        this._rectsOfSelectedBlocks = [];\n        this.clipboard = new EdgelessClipboard(this.page, this);\n        this.slots = {\n            viewportUpdated: new Slot(),\n            selectedBlocksUpdated: new Slot(),\n            selectionUpdated: new Slot(),\n            hoverUpdated: new Slot(),\n            surfaceUpdated: new Slot(),\n            mouseModeUpdated: new Slot(),\n            reorderingFramesUpdated: new Slot(),\n            reorderingShapesUpdated: new Slot(),\n            zoomUpdated: new Slot(),\n            pressShiftKeyUpdated: new Slot(),\n            subpageLinked: new Slot(),\n            subpageUnlinked: new Slot(),\n            pageLinkClicked: new Slot(),\n        };\n        this.indexes = { max: 'a0', min: 'a0' };\n        this.getService = getService;\n        this._resizeObserver = null;\n        this._frameResizeObserver = new FrameResizeObserver();\n        this._initDragHandle = () => {\n            const createHandle = () => {\n                this.components.dragHandle = createDragHandle(this);\n            };\n            if (this.page.awarenessStore.getFlag('enable_drag_handle') &&\n                !this.components.dragHandle) {\n                createHandle();\n            }\n            this._disposables.add(this.page.awarenessStore.slots.update.subscribe(msg => msg.state?.flags.enable_drag_handle, enable => {\n                if (enable) {\n                    if (this.components.dragHandle)\n                        return;\n                    createHandle();\n                    return;\n                }\n                this.components.dragHandle?.remove();\n                this.components.dragHandle = null;\n            }, {\n                filter: msg => msg.id === this.page.doc.clientID,\n            }));\n        };\n        // Just update `index`, we don't change the order of the frames in the children.\n        this.reorderFrames = ({ elements, type }) => {\n            const updateIndexes = (keys, elements) => {\n                this.updateIndexes(keys, elements, keys => {\n                    const min = keys[0];\n                    if (min < this.indexes.min) {\n                        this.indexes.min = min;\n                    }\n                    const max = keys[keys.length - 1];\n                    if (max > this.indexes.max) {\n                        this.indexes.max = max;\n                    }\n                });\n            };\n            switch (type) {\n                case 'front':\n                    this._reorderTo(elements, () => ({\n                        start: this.indexes.max,\n                        end: null,\n                    }), updateIndexes);\n                    break;\n                case 'forward':\n                    this._reorder(elements, (pickedElements) => ({\n                        start: generateKeyBetween(null, pickedElements[0].index),\n                        end: null,\n                    }), () => this.getSortedElementsWithViewportBounds(elements), bringForward, updateIndexes);\n                    break;\n                case 'backward':\n                    this._reorder(elements, (pickedElements) => ({\n                        start: null,\n                        end: pickedElements[pickedElements.length - 1].index,\n                    }), () => this.getSortedElementsWithViewportBounds(elements), sendBackward, updateIndexes);\n                    break;\n                case 'back':\n                    this._reorderTo(elements, () => ({\n                        start: null,\n                        end: this.indexes.min,\n                    }), updateIndexes);\n                    break;\n            }\n        };\n        // Just update `index`, we don't change the order of the shapes in the children.\n        this.reorderShapes = ({ elements, type }) => {\n            const updateIndexes = (keys, elements) => {\n                this.surface.updateIndexes(keys, elements, keys => {\n                    const min = keys[0];\n                    if (min < this.surface.indexes.min) {\n                        this.surface.indexes.min = min;\n                    }\n                    const max = keys[keys.length - 1];\n                    if (max > this.surface.indexes.max) {\n                        this.surface.indexes.max = max;\n                    }\n                });\n            };\n            switch (type) {\n                case 'front':\n                    this._reorderTo(elements, () => ({\n                        start: this.surface.indexes.max,\n                        end: null,\n                    }), updateIndexes);\n                    break;\n                case 'forward':\n                    this._reorder(elements, (pickedElements) => ({\n                        start: generateKeyBetween(null, pickedElements[0].index),\n                        end: null,\n                    }), () => this.surface.getSortedElementsWithViewportBounds(), bringForward, updateIndexes);\n                    break;\n                case 'backward':\n                    this._reorder(elements, (pickedElements) => ({\n                        start: null,\n                        end: pickedElements[pickedElements.length - 1].index,\n                    }), () => this.surface.getSortedElementsWithViewportBounds(), sendBackward, updateIndexes);\n                    break;\n                case 'back':\n                    this._reorderTo(elements, () => ({\n                        start: null,\n                        end: this.surface.indexes.min,\n                    }), updateIndexes);\n                    break;\n            }\n        };\n    }\n    // Gets the top level frames.\n    get frames() {\n        return this.model.children.filter(child => child.flavour === 'affine:frame');\n    }\n    // Gets the sorted frames.\n    get sortedFrames() {\n        return this.frames.sort(compare);\n    }\n    _clearSelection() {\n        requestAnimationFrame(() => {\n            if (!this.selection.isActive) {\n                resetNativeSelection(null);\n            }\n        });\n    }\n    // just init surface, attach to dom later\n    _initSurface() {\n        const { page, parentElement } = this;\n        const surfaceBlock = this.model.children.find(child => child.flavour === 'affine:surface');\n        assertExists(parentElement);\n        assertExists(surfaceBlock);\n        const yBlock = page.getYBlockById(surfaceBlock.id);\n        assertExists(yBlock);\n        let yContainer = yBlock.get('elements');\n        if (!yContainer) {\n            yContainer = new page.YMap();\n            yBlock.set('elements', yContainer);\n        }\n        this.surface = new SurfaceManager(yContainer, value => {\n            if (isCssVariable(value)) {\n                const cssValue = getThemePropertyValue(parentElement, value);\n                if (cssValue === undefined) {\n                    console.error(new Error(`All variables should have a value. Please check for any dirty data or variable renaming.Variable: ${value}`));\n                }\n                return cssValue ?? value;\n            }\n            return value;\n        });\n        this._disposables.add(listenToThemeChange(this, () => {\n            this.surface.refresh();\n        }));\n    }\n    _handleToolbarFlag() {\n        const createToolbar = () => {\n            const toolbar = new EdgelessToolbar(this);\n            this.appendChild(toolbar);\n            this.components.toolbar = toolbar;\n        };\n        if (this.page.awarenessStore.getFlag('enable_edgeless_toolbar') &&\n            !this.components.toolbar) {\n            createToolbar();\n        }\n        this._disposables.add(this.page.awarenessStore.slots.update.subscribe(msg => msg.state?.flags.enable_edgeless_toolbar, enable => {\n            if (enable) {\n                if (this.components.toolbar)\n                    return;\n                createToolbar();\n                return;\n            }\n            this.components.toolbar?.remove();\n            this.components.toolbar = null;\n        }, {\n            filter: msg => msg.id === this.page.doc.clientID,\n        }));\n    }\n    _initSlotEffects() {\n        // TODO: listen to new children\n        // this.model.children.forEach(frame => {\n        //   frame.propsUpdated.on(() => this.selection.syncDraggingArea());\n        // });\n        const { _disposables, slots } = this;\n        _disposables.add(slots.viewportUpdated.on(() => {\n            const prevZoom = this.style.getPropertyValue('--affine-zoom');\n            const newZoom = this.surface.viewport.zoom;\n            if (!prevZoom || +prevZoom !== newZoom) {\n                this.style.setProperty('--affine-zoom', `${newZoom}`);\n                this.components.dragHandle?.setScale(newZoom);\n            }\n            this.components.dragHandle?.hide();\n            if (this.selection.selectedBlocks.length) {\n                slots.selectedBlocksUpdated.emit([...this.selection.selectedBlocks]);\n            }\n            this.requestUpdate();\n        }));\n        _disposables.add(slots.selectedBlocksUpdated.on(selectedBlocks => {\n            this.selection.selectedBlocks = selectedBlocks;\n            // TODO: remove `requestAnimationFrame`\n            requestAnimationFrame(() => {\n                this._rectsOfSelectedBlocks = selectedBlocks.map(getRectByBlockElement);\n            });\n            // this.requestUpdate();\n        }));\n        _disposables.add(slots.hoverUpdated.on(() => this.requestUpdate()));\n        _disposables.add(slots.selectionUpdated.on(state => {\n            this.selection.state = state;\n            this._clearSelection();\n            this.requestUpdate();\n        }));\n        _disposables.add(slots.surfaceUpdated.on(() => this.requestUpdate()));\n        _disposables.add(slots.mouseModeUpdated.on(mouseMode => {\n            if (mouseMode.type !== 'default') {\n                this.components.dragHandle?.hide();\n            }\n            this.mouseMode = mouseMode;\n        }));\n        _disposables.add(this.page.slots.historyUpdated.on(() => {\n            this._clearSelection();\n            this.requestUpdate();\n        }));\n        _disposables.add(this.selection);\n        _disposables.add(this.surface);\n        _disposables.add(bindEdgelessHotkeys(this));\n        _disposables.add(this._frameResizeObserver);\n        _disposables.add(this._frameResizeObserver.slots.resize.on(resizedFrames => {\n            const page = this.page;\n            resizedFrames.forEach((domRect, id) => {\n                const model = page.getBlockById(id);\n                const { index, xywh } = model;\n                const [x, y, w, h] = deserializeXYWH(xywh);\n                if (index < this.indexes.min) {\n                    this.indexes.min = index;\n                }\n                else if (index > this.indexes.max) {\n                    this.indexes.max = index;\n                }\n                // ResizeObserver is not effected by CSS transform, so don't deal with viewport zoom.\n                const newModelHeight = domRect.height + EDGELESS_BLOCK_CHILD_PADDING * 2;\n                if (!almostEqual(newModelHeight, h)) {\n                    page.updateBlock(model, {\n                        xywh: JSON.stringify([x, y, w, Math.round(newModelHeight)]),\n                    });\n                }\n            });\n            // FIXME: force updating selection for triggering re-render `selected-rect`\n            slots.selectionUpdated.emit({ ...this.selection.state });\n        }));\n        _disposables.add(slots.reorderingFramesUpdated.on(this.reorderFrames));\n        _disposables.add(slots.reorderingShapesUpdated.on(this.reorderShapes));\n        _disposables.add(slots.zoomUpdated.on((action) => this.components.toolbar?.setZoomByAction(action)));\n        _disposables.add(slots.pressShiftKeyUpdated.on(pressed => {\n            this.selection.shiftKey = pressed;\n            this.requestUpdate();\n        }));\n    }\n    /**\n     * Brings to front or sends to back.\n     */\n    _reorderTo(elements, getIndexes, updateIndexes) {\n        reorderTo(elements, compare, getIndexes, (start, end, len) => generateNKeysBetween(start, end, len), updateIndexes);\n    }\n    /**\n     * Brings forward or sends backward layer by layer.\n     */\n    _reorder(elements, getIndexes, pick, order, updateIndexes) {\n        reorder(elements, compare, pick, getIndexes, order, (start, end, len) => generateNKeysBetween(start, end, len), updateIndexes);\n    }\n    updateIndexes(keys, elements, callback) {\n        let index;\n        let i = 0;\n        let element;\n        const len = elements.length;\n        for (; i < len; i++) {\n            index = keys[i];\n            element = elements[i];\n            if (element.index === index)\n                continue;\n            this.page.updateBlock(element, {\n                index,\n            });\n        }\n        callback(keys);\n    }\n    getSortedElementsWithViewportBounds(elements) {\n        const bounds = this.surface.viewport.viewportBounds;\n        // TODO: opt filter\n        return this.sortedFrames.filter(element => {\n            if (elements.includes(element))\n                return true;\n            return intersects(bounds, xywhArrayToObject(element));\n        });\n    }\n    /**\n     * Adds a new frame with the given point on the editor-container.\n     *\n     * @param: point Point\n     * @returns: The id of new frame\n     */\n    addFrameWithPoint(point, options = {}) {\n        const { width = DEFAULT_FRAME_WIDTH, height = DEFAULT_FRAME_HEIGHT, offsetX = DEFAULT_FRAME_OFFSET_X, offsetY = DEFAULT_FRAME_OFFSET_Y, parentId = this.page.root?.id, frameIndex, } = options;\n        const [x, y] = this.surface.toModelCoord(point.x, point.y);\n        return this.page.addBlock('affine:frame', {\n            xywh: serializeXYWH(x - offsetX, y - offsetY, width, height),\n            index: this.indexes.max,\n        }, parentId, frameIndex);\n    }\n    /**\n     * Adds a new frame with the given blocks and point.\n     * @param blocks Array<Partial<BaseBlockModel>>\n     * @param point Point\n     */\n    addNewFrame(blocks, point, options) {\n        this.page.captureSync();\n        const { left, top } = this.surface.viewport;\n        point.x -= left;\n        point.y -= top;\n        const frameId = this.addFrameWithPoint(point, options);\n        const ids = this.page.addBlocks(blocks.map(({ flavour, ...blockProps }) => {\n            assertExists(flavour);\n            return {\n                flavour,\n                blockProps,\n            };\n        }), frameId);\n        return {\n            frameId,\n            ids,\n        };\n    }\n    /** Moves selected blocks into a new frame at the given point. */\n    moveBlocksWithNewFrame(blocks, point, { rect, focus, parentId, frameIndex, } = {}) {\n        const { left, top, zoom } = this.surface.viewport;\n        const width = rect?.width\n            ? rect.width / zoom + EDGELESS_BLOCK_CHILD_PADDING * 2\n            : DEFAULT_FRAME_WIDTH;\n        point.x -= left;\n        point.y -= top;\n        const frameId = this.addFrameWithPoint(point, {\n            width,\n            parentId,\n            frameIndex,\n        });\n        const frameModel = this.page.getBlockById(frameId);\n        this.page.moveBlocks(blocks, frameModel);\n        focus && this.setSelection(frameId, true, blocks[0].id, point);\n    }\n    /*\n     * Set selection state by giving frameId & blockId.\n     * Not supports surface elements.\n     */\n    setSelection(frameId, active = true, blockId, point) {\n        const frameBlock = this.frames.find(b => b.id === frameId);\n        assertExists(frameBlock);\n        requestAnimationFrame(() => {\n            this.slots.selectedBlocksUpdated.emit([]);\n            this.slots.selectionUpdated.emit({\n                selected: [frameBlock],\n                active,\n            });\n            // Waiting dom updated, `frame mask` is removed\n            this.updateComplete.then(() => {\n                if (blockId) {\n                    asyncFocusRichText(this.page, blockId);\n                }\n                else if (point) {\n                    // Cannot reuse `handleNativeRangeClick` directly here,\n                    // since `retargetClick` will re-target to pervious editor\n                    handleNativeRangeAtPoint(point.x, point.y);\n                }\n            });\n        });\n    }\n    /**\n     * Clear selected blocks.\n     */\n    clearSelectedBlocks() {\n        if (this.selection.selectedBlocks.length) {\n            this.slots.selectedBlocksUpdated.emit([]);\n        }\n    }\n    update(changedProperties) {\n        if (changedProperties.has('page')) {\n            this._initSurface();\n            this.selection = new EdgelessSelectionManager(this, this.root.uiEventDispatcher);\n        }\n        if (changedProperties.has('mouseMode')) {\n            this.selection.mouseMode = this.mouseMode;\n        }\n        super.update(changedProperties);\n    }\n    _initResizeEffect() {\n        const resizeObserver = new ResizeObserver((_) => {\n            this.surface.onResize();\n            this.slots.selectedBlocksUpdated.emit([...this.selection.selectedBlocks]);\n            this.slots.selectionUpdated.emit({ ...this.selection.state });\n        });\n        resizeObserver.observe(this.pageBlockContainer);\n        this._resizeObserver = resizeObserver;\n    }\n    firstUpdated() {\n        this._initSlotEffects();\n        this._initDragHandle();\n        this._initResizeEffect();\n        this.clipboard.init(this.page);\n        tryUpdateFrameSize(this.page, this.surface.viewport.zoom);\n        requestAnimationFrame(() => {\n            // Should be called in requestAnimationFrame,\n            // so as to avoid DOM mutation in SurfaceManager constructor\n            this.surface.attach(this._surfaceContainer);\n            const frame = this.frames.find(child => child.flavour === 'affine:frame');\n            if (frame) {\n                const [modelX, modelY, modelW, modelH] = deserializeXYWH(frame.xywh);\n                this.surface.viewport.setCenter(modelX + modelW / 2, modelY + modelH / 2);\n            }\n            this._handleToolbarFlag();\n            this._frameResizeObserver.resetListener(this.page);\n            this.requestUpdate();\n        });\n        // XXX: should be called after rich text components are mounted\n        this._clearSelection();\n        // should be updated on any frame add and delete\n        this.page.root?.childrenUpdated.on(() => {\n            requestAnimationFrame(() => {\n                this._frameResizeObserver.resetListener(this.page);\n            });\n        });\n    }\n    updated(changedProperties) {\n        super.updated(changedProperties);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        registerService('affine:page', PageBlockService);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.mouseRoot = this.parentElement;\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.clipboard.dispose();\n        this.components.dragHandle?.remove();\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n    }\n    render() {\n        requestAnimationFrame(() => {\n            this.selection.refreshRemoteSelection();\n        });\n        this.setAttribute(BLOCK_ID_ATTR, this.model.id);\n        const { mouseMode, page, selection, surface, _rectsOfSelectedBlocks } = this;\n        const { state, draggingArea } = selection;\n        const { viewport } = surface;\n        const childrenContainer = EdgelessBlockChildrenContainer(this.sortedFrames, state.active, this.root.renderModel);\n        const { zoom, viewportX, viewportY, left, top } = viewport;\n        const draggingAreaTpl = EdgelessDraggingArea(draggingArea);\n        const hoverState = selection.getHoverState();\n        const hoverRectTpl = EdgelessHoverRect(hoverState, zoom);\n        const { grid, gap, translateX, translateY } = getBackgroundGrid(viewportX, viewportY, zoom, this.showGrid);\n        const blockContainerStyle = {\n            cursor: getCursorMode(mouseMode),\n            '--affine-edgeless-gap': `${gap}px`,\n            '--affine-edgeless-grid': grid,\n            '--affine-edgeless-x': `${translateX}px`,\n            '--affine-edgeless-y': `${translateY}px`,\n        };\n        return html `\n      <div class=\"affine-edgeless-surface-block-container\">\n        <!-- attach canvas later in Phasor -->\n      </div>\n      <div\n        class=\"affine-edgeless-page-block-container\"\n        style=${styleMap(blockContainerStyle)}\n      >\n        <div class=\"affine-block-children-container edgeless\">\n          <div class=\"affine-edgeless-layer\">${childrenContainer}</div>\n        </div>\n        <affine-selected-blocks\n          .mouseRoot=${this.mouseRoot}\n          .state=${{\n            rects: _rectsOfSelectedBlocks,\n            grab: false,\n        }}\n          .offset=${{\n            x: -left,\n            y: -top,\n        }}\n        ></affine-selected-blocks>\n        ${hoverRectTpl} ${draggingAreaTpl}\n        ${state.selected.length\n            ? html `\n              <edgeless-selected-rect\n                disabled=${mouseMode.type === 'pan'}\n                .page=${page}\n                .state=${state}\n                .slots=${this.slots}\n                .surface=${surface}\n              ></edgeless-selected-rect>\n            `\n            : nothing}\n      </div>\n    `;\n    }\n};\nEdgelessPageBlockComponent.styles = css `\n    .affine-edgeless-page-block-container {\n      position: relative;\n      box-sizing: border-box;\n      overflow: hidden;\n      height: 100%;\n      font-family: var(--affine-font-family);\n      font-size: var(--affine-font-base);\n      line-height: var(--affine-line-height);\n      color: var(--affine-text-primary-color);\n      font-weight: 400;\n    }\n\n    .affine-edgeless-surface-block-container {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .affine-edgeless-surface-block-container canvas {\n      width: 100%;\n      height: 100%;\n      position: relative;\n      z-index: 1;\n      pointer-events: none;\n    }\n\n    .affine-block-children-container.edgeless {\n      padding-left: 0;\n      position: relative;\n      overflow: hidden;\n      height: 100%;\n      /**\n       * Fix: pointerEvent stops firing after a short time.\n       * When a gesture is started, the browser intersects the touch-action values of the touched element and its ancestors,\n       * up to the one that implements the gesture (in other words, the first containing scrolling element)\n       * https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\n       */\n      touch-action: none;\n\n      background-size: var(--affine-edgeless-gap) var(--affine-edgeless-gap);\n      background-position: var(--affine-edgeless-x) var(--affine-edgeless-y);\n      background-color: var(--affine-background-primary-color);\n      background-image: var(--affine-edgeless-grid);\n      z-index: 0;\n    }\n\n    .affine-edgeless-layer {\n      position: absolute;\n      contain: layout style size;\n      transform: translate(var(--affine-edgeless-x), var(--affine-edgeless-y))\n        scale(var(--affine-zoom));\n    }\n\n    .affine-edgeless-hover-rect {\n      position: absolute;\n      border-radius: 0;\n      pointer-events: none;\n      box-sizing: border-box;\n      z-index: 1;\n      border: var(--affine-border-width) solid var(--affine-blue);\n    }\n  `;\n__decorate([\n    state()\n], EdgelessPageBlockComponent.prototype, \"mouseMode\", void 0);\n__decorate([\n    state()\n], EdgelessPageBlockComponent.prototype, \"_rectsOfSelectedBlocks\", void 0);\n__decorate([\n    query('.affine-edgeless-surface-block-container')\n], EdgelessPageBlockComponent.prototype, \"_surfaceContainer\", void 0);\n__decorate([\n    query('.affine-edgeless-page-block-container')\n], EdgelessPageBlockComponent.prototype, \"pageBlockContainer\", void 0);\nEdgelessPageBlockComponent = __decorate([\n    customElement('affine-edgeless-page')\n], EdgelessPageBlockComponent);\nexport { EdgelessPageBlockComponent };\n//# sourceMappingURL=edgeless-page-block.js.map","import { assertExists } from '@blocksuite/store';\nimport { getService } from '../__internal__/service.js';\nimport { BaseService } from '../__internal__/service/index.js';\nexport class PageBlockService extends BaseService {\n    block2html(block, { childText = '', begin, end } = {}) {\n        return `<div>${block.title.toString()}${childText}</div>`;\n    }\n    block2Text(block, { childText = '', begin, end } = {}) {\n        const text = (block.title.toString() || '').slice(begin || 0, end);\n        return `${text}${childText}`;\n    }\n    // todo we don't support link and database in page block title\n    _getAllSubTexts(block) {\n        if (block.flavour === 'affine:database') {\n            return [];\n        }\n        const texts = (block.text || []).filter(text => !text.attributes?.link);\n        if (block.children) {\n            block.children.forEach(child => {\n                texts.push(...this._getAllSubTexts(child));\n            });\n        }\n        return texts;\n    }\n    async json2Block(focusedBlockModel, pastedBlocks) {\n        if (pastedBlocks.length > 0 &&\n            (pastedBlocks[0].children.length === 0 ||\n                pastedBlocks[0].flavour === 'affine:page')) {\n            const titles = this._getAllSubTexts(pastedBlocks[0]);\n            focusedBlockModel.title.applyDelta(titles);\n            pastedBlocks = pastedBlocks.slice(1);\n        }\n        // this is page block empty case\n        const frameId = focusedBlockModel.page.addBlock('affine:frame', {}, focusedBlockModel.id);\n        const frameModel = focusedBlockModel.page.getBlockById(frameId);\n        assertExists(frameModel);\n        const service = getService('affine:frame');\n        return service.json2Block(frameModel, pastedBlocks);\n        // TODO: if page is not empty\n    }\n}\n//# sourceMappingURL=page-service.js.map","import './default/backlink-popover.js';\nexport * from './default/default-page-block.js';\nexport { getAllowSelectedBlocks } from './default/utils.js';\nexport { DEFAULT_SHAPE_FILL_COLOR, DEFAULT_SHAPE_STROKE_COLOR, } from './edgeless/components/component-toolbar/change-shape-button.js';\nexport * from './edgeless/edgeless-page-block.js';\nexport { PageBlockSchema } from './page-model.js';\nexport * from './page-service.js';\nexport * from './utils/index.js';\n//# sourceMappingURL=index.js.map","import { HOTKEYS, paragraphConfig } from '@blocksuite/global/config';\nimport { assertEquals, assertExists, matchFlavours, } from '@blocksuite/global/utils';\nimport { blockRangeToNativeRange, focusBlockByModel, getDefaultPage, hotkey, isMultiBlockRange, isPageMode, isPrintableKeyEvent, } from '../../__internal__/index.js';\nimport { handleMultiBlockIndent } from '../../__internal__/rich-text/rich-text-operations.js';\nimport { getService } from '../../__internal__/service.js';\nimport { getCurrentBlockRange } from '../../__internal__/utils/block-range.js';\nimport { isAtLineEdge } from '../../__internal__/utils/check-line.js';\nimport { asyncFocusRichText, clearSelection, focusNextBlock, focusPreviousBlock, focusTitle, getCurrentNativeRange, getModelByElement, getPreviousBlock, getRichTextByModel, getVirgoByModel, Point, } from '../../__internal__/utils/index.js';\nimport { handleKeydownAfterSelectBlocks, handleSelectAll, } from '../utils/index.js';\nimport { actionConfig } from './const.js';\nimport { deleteModelsByRange, updateBlockType, } from './container-operations.js';\nimport { formatConfig } from './format-config.js';\nexport function bindCommonHotkey(page) {\n    if (page.readonly)\n        return;\n    formatConfig.forEach(({ hotkey: hotkeyStr, action }) => {\n        hotkey.addListener(hotkeyStr, e => {\n            // Prevent default behavior\n            e.preventDefault();\n            if (page.awarenessStore.isReadonly(page))\n                return;\n            action({ page });\n        });\n    });\n    actionConfig.forEach(({ hotkey: hotkeyStr, action, enabledWhen }) => {\n        // if (!isPrintableKeyEvent(e) || page.readonly) return;\n        if (!hotkeyStr)\n            return;\n        hotkey.addListener(hotkeyStr, e => {\n            // Prevent default behavior\n            e.preventDefault();\n            if (!enabledWhen(page))\n                return;\n            if (page.awarenessStore.isReadonly(page))\n                return;\n            action({ page });\n        });\n    });\n    paragraphConfig.forEach(({ flavour, type, hotkey: hotkeyStr }) => {\n        if (!hotkeyStr)\n            return;\n        hotkey.addListener(hotkeyStr, () => {\n            const blockRange = getCurrentBlockRange(page);\n            if (!blockRange)\n                return;\n            updateBlockType(blockRange.models, flavour, type);\n        });\n    });\n    hotkey.addListener(HOTKEYS.UNDO, e => {\n        e.preventDefault();\n        if (page.canUndo)\n            clearSelection(page);\n        page.undo();\n    });\n    hotkey.addListener(HOTKEYS.REDO, e => {\n        e.preventDefault();\n        if (page.canRedo)\n            clearSelection(page);\n        page.redo();\n    });\n    // Fixes: https://github.com/toeverything/blocksuite/issues/200\n    // We shouldn't prevent user input, because there could have CN/JP/KR... input,\n    // that have pop-up for selecting local characters.\n    // So we could just hook on the keydown event and detect whether user input a new character.\n    hotkey.addListener(HOTKEYS.ANY_KEY, e => {\n        if (!isPrintableKeyEvent(e) || page.readonly)\n            return;\n        const blockRange = getCurrentBlockRange(page);\n        if (!blockRange)\n            return;\n        if (blockRange.type === 'Block') {\n            handleKeydownAfterSelectBlocks({\n                page,\n                keyboardEvent: e,\n                selectedBlocks: blockRange.models,\n            });\n            return;\n        }\n        const range = blockRangeToNativeRange(blockRange);\n        if (!range || !isMultiBlockRange(range))\n            return;\n        deleteModelsByRange(page);\n    });\n    // !!!\n    // Don't forget to remove hotkeys at `removeCommonHotKey`\n}\nexport function removeCommonHotKey() {\n    hotkey.removeListener([\n        ...formatConfig.map(({ hotkey: hotkeyStr }) => hotkeyStr),\n        ...paragraphConfig\n            .map(({ hotkey: hotkeyStr }) => hotkeyStr)\n            .filter((i) => !!i),\n        HOTKEYS.UNDO,\n        HOTKEYS.REDO,\n        HOTKEYS.ANY_KEY,\n    ]);\n}\nexport function handleUp(e, page, { selection, zoom, } = {\n    zoom: 1,\n}) {\n    const blockRange = getCurrentBlockRange(page);\n    if (!blockRange)\n        return;\n    if (blockRange.type === 'Block') {\n        if (!selection) {\n            console.error('Failed to handle up: selection is not provided', blockRange);\n            return;\n        }\n        const selectedModel = getModelByElement(selection.state.selectedBlocks[0]);\n        selection.clear();\n        const pageBlock = getDefaultPage(page);\n        assertExists(pageBlock);\n        focusPreviousBlock(selectedModel, pageBlock.lastSelectionPosition instanceof Point\n            ? pageBlock.lastSelectionPosition\n            : 'end');\n        e.preventDefault();\n        return;\n    }\n    // Assume the native selection is collapsed\n    if (blockRange.type === 'Native') {\n        assertEquals(blockRange.models.length, 1, 'Failed to handle up! range is not collapsed');\n        const model = blockRange.models[0];\n        const previousBlock = getPreviousBlock(model);\n        const range = getCurrentNativeRange();\n        const { left, top } = range.getBoundingClientRect();\n        if (!previousBlock && isPageMode(page)) {\n            focusTitle(page);\n            return;\n        }\n        // Workaround: focus to empty line will get empty range rect\n        //\n        // See the following example:\n        // - long text\n        //   wrap line\n        // - |    <- caret at empty line,\n        //           if you press ArrowUp,\n        //           the cursor should jump to the start of `wrap line`,\n        //           instead of the start of `long text`!\n        //\n        // If at empty line range.getBoundingClientRect will return 0\n        // You can see the spec here:\n        // The `getBoundingClientRect()` method, when invoked, must return the result of the following algorithm:\n        //   - Let list be the result of invoking getClientRects() on the same range this method was invoked on.\n        //   - If list is empty return a DOMRect object whose x, y, width and height members are zero.\n        // https://w3c.github.io/csswg-drafts/cssom-view/#dom-range-getboundingclientrect\n        if (left === 0 && top === 0) {\n            if (!(range.startContainer instanceof HTMLElement)) {\n                console.warn(\"Failed to calculate caret position! range.getBoundingClientRect() is zero and it's startContainer not an HTMLElement.\", range);\n                focusPreviousBlock(model);\n                return;\n            }\n            const rect = range.startContainer.getBoundingClientRect();\n            focusPreviousBlock(model, new Point(rect.left, rect.top), zoom);\n            return;\n        }\n        focusPreviousBlock(model, new Point(left, top), zoom);\n    }\n}\nexport function handleDown(e, page, { selection, zoom, } = {\n    zoom: 1,\n}) {\n    const blockRange = getCurrentBlockRange(page);\n    if (!blockRange)\n        return;\n    if (blockRange.type === 'Block') {\n        if (!selection) {\n            console.error('Failed to handle down: selection is not provided', blockRange);\n            return;\n        }\n        const lastEle = selection.state.selectedBlocks.at(-1);\n        if (!lastEle) {\n            throw new Error(\"Failed to handleDown! Can't find last selected element!\");\n        }\n        const selectedModel = getModelByElement(lastEle);\n        selection.clear();\n        const pageBlock = getDefaultPage(page);\n        assertExists(pageBlock);\n        focusNextBlock(selectedModel, pageBlock.lastSelectionPosition instanceof Point\n            ? pageBlock.lastSelectionPosition\n            : 'start');\n        e.preventDefault();\n    }\n    // Assume the native selection is collapsed\n    if (blockRange.type === 'Native') {\n        assertEquals(blockRange.models.length, 1, 'Failed to handle down! range is not collapsed');\n        const model = blockRange.models[0];\n        if (matchFlavours(model, ['affine:code']) ||\n            matchFlavours(model, ['affine:page'])) {\n            return;\n        }\n        const range = getCurrentNativeRange();\n        const atLineEdge = isAtLineEdge(range);\n        const { left, bottom } = range.getBoundingClientRect();\n        const isAtEmptyLine = left === 0 && bottom === 0;\n        // Workaround: at line edge will return wrong rect\n        // See the following example:\n        // - long text\n        //   |wrap line    <- caret at empty line,\n        //                    if you press ArrowDown,\n        //                    the cursor should jump to the start of `next line`,\n        //                    instead of the end of `next line`!\n        // - next line\n        //\n        // Workaround: focus to empty line will get empty range,\n        // we can not focus 'start' directly,\n        // because pressing ArrowDown in multi-level indent line will cause the cursor to jump to wrong position\n        // If at empty line `range.getBoundingClientRect()` will return 0\n        // https://w3c.github.io/csswg-drafts/cssom-view/#dom-range-getboundingclientrect\n        //\n        // See the following example:\n        // - text\n        //   - child\n        //     - |   <- caret at empty line,\n        //              if you press ArrowDown,\n        //              the cursor should jump to the end of `next`,\n        //              instead of the start of `next`!\n        // - next\n        if (atLineEdge || isAtEmptyLine) {\n            const richText = getRichTextByModel(model);\n            assertExists(richText);\n            const richTextRect = richText.getBoundingClientRect();\n            focusNextBlock(model, new Point(richTextRect.left, richTextRect.top), zoom);\n            return;\n        }\n        focusNextBlock(model, new Point(left, bottom), zoom);\n    }\n}\nfunction handleTab(e, page, selection) {\n    const blockRange = getCurrentBlockRange(page);\n    if (!blockRange)\n        return;\n    e.preventDefault();\n    const models = blockRange.models;\n    handleMultiBlockIndent(page, models);\n    if (blockRange.type === 'Block') {\n        requestAnimationFrame(() => {\n            // TODO update model is not elegant\n            selection.refreshSelectedBlocksRectsByModels(models);\n        });\n    }\n}\nexport function bindHotkeys(page, selection) {\n    const { BACKSPACE, SELECT_ALL, SHIFT_UP, SHIFT_DOWN, UP, DOWN, LEFT, RIGHT, ENTER, TAB, SPACE, } = HOTKEYS;\n    bindCommonHotkey(page);\n    hotkey.addListener(SELECT_ALL, e => {\n        e.preventDefault();\n        handleSelectAll(selection);\n        selection.state.type = 'block';\n    });\n    if (page.readonly)\n        return;\n    hotkey.addListener(ENTER, e => {\n        const blockRange = getCurrentBlockRange(page);\n        if (!blockRange)\n            return;\n        if (blockRange.type === 'Block') {\n            e.preventDefault();\n            const endModel = blockRange.models[blockRange.models.length - 1];\n            const parentModel = page.getParent(endModel);\n            const index = parentModel?.children.indexOf(endModel);\n            assertExists(index);\n            assertExists(parentModel);\n            const id = page.addBlock('affine:paragraph', { type: 'text' }, parentModel, index + 1);\n            asyncFocusRichText(page, id);\n            selection.clear();\n            return;\n        }\n        // Native selection\n        // Avoid print extra enter\n        e.preventDefault();\n        const startModel = blockRange.models[0];\n        startModel.text?.delete(blockRange.startOffset, startModel.text.length - blockRange.startOffset);\n        const endModel = blockRange.models[blockRange.models.length - 1];\n        endModel.text?.delete(0, blockRange.endOffset);\n        blockRange.models.slice(1, -1).forEach(model => {\n            page.deleteBlock(model);\n        });\n        // Virgo will addRange after update finished so we need to wait for it.\n        const vEditor = getVirgoByModel(endModel);\n        vEditor?.slots.updated.once(() => {\n            focusBlockByModel(endModel, 'start');\n        });\n    });\n    hotkey.addListener(BACKSPACE, e => {\n        // delete blocks\n        deleteModelsByRange(page);\n        e.preventDefault();\n    });\n    hotkey.addListener(UP, e => {\n        const blockRange = getCurrentBlockRange(page);\n        if (!blockRange)\n            return;\n        const parent = page.getParent(blockRange.models[0]);\n        if (parent && matchFlavours(parent, ['affine:database'])) {\n            const service = getService('affine:database');\n            if (service.getLastCellSelection())\n                return;\n        }\n        handleUp(e, page, { selection });\n    });\n    hotkey.addListener(DOWN, e => {\n        const blockRange = getCurrentBlockRange(page);\n        if (!blockRange)\n            return;\n        const parent = page.getParent(blockRange.models[0]);\n        if (parent && matchFlavours(parent, ['affine:database'])) {\n            const service = getService('affine:database');\n            if (service.getLastCellSelection())\n                return;\n        }\n        handleDown(e, page, { selection });\n    });\n    hotkey.addListener(LEFT, e => {\n        const blockRange = getCurrentBlockRange(page);\n        if (!blockRange)\n            return;\n        // Do nothing\n        if (blockRange.type === 'Block')\n            return;\n        // See https://github.com/toeverything/blocksuite/issues/2260\n        if (blockRange.models.length > 1) {\n            e.preventDefault();\n            const selection = getSelection();\n            if (selection) {\n                const range = blockRange.nativeRange.cloneRange();\n                range.collapse(true);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            return;\n        }\n        focusPreviousBlock(blockRange.models[0], 'end');\n    });\n    hotkey.addListener(RIGHT, e => {\n        const blockRange = getCurrentBlockRange(page);\n        if (!blockRange)\n            return;\n        if (matchFlavours(blockRange.models[0], ['affine:database'])) {\n            const service = getService('affine:database');\n            if (service.getLastCellSelection())\n                return;\n        }\n        // Do nothing\n        if (blockRange.type === 'Block')\n            return;\n        // See https://github.com/toeverything/blocksuite/issues/2260\n        if (blockRange.models.length > 1) {\n            e.preventDefault();\n            const selection = getSelection();\n            if (selection) {\n                const range = blockRange.nativeRange.cloneRange();\n                range.collapse(false);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            return;\n        }\n        focusNextBlock(blockRange.models[0], 'start');\n    });\n    hotkey.addListener(TAB, e => handleTab(e, page, selection));\n    hotkey.addListener(SHIFT_UP, e => {\n        // TODO expand selection up\n    });\n    hotkey.addListener(SHIFT_DOWN, e => {\n        // TODO expand selection down\n    });\n    // disable it on block selection\n    hotkey.addListener(SPACE, e => {\n        if (selection.state.type === 'block') {\n            e.preventDefault();\n        }\n    });\n    // !!!\n    // Don't forget to remove hotkeys at `removeHotkeys`\n}\nexport function removeHotkeys() {\n    removeCommonHotKey();\n    hotkey.removeListener([\n        HOTKEYS.BACKSPACE,\n        HOTKEYS.SELECT_ALL,\n        HOTKEYS.SHIFT_UP,\n        HOTKEYS.SHIFT_DOWN,\n        HOTKEYS.UP,\n        HOTKEYS.DOWN,\n        HOTKEYS.LEFT,\n        HOTKEYS.RIGHT,\n        HOTKEYS.ENTER,\n        HOTKEYS.TAB,\n        HOTKEYS.SPACE,\n    ]);\n}\n//# sourceMappingURL=bind-hotkey.js.map","import { css } from 'lit';\nexport const styles = css `\n  :host {\n    font-family: var(--affine-font-family);\n  }\n  :host * {\n    box-sizing: border-box;\n  }\n  .overlay-mask {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.6);\n    z-index: var(--affine-z-index-modal);\n  }\n  .modal-container {\n    position: absolute;\n    z-index: var(--affine-z-index-modal);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 720px;\n    padding: 24px 40px;\n    border-radius: 24px;\n    background: var(--affine-background-overlay-panel-color);\n  }\n  .modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .modal-header-title {\n    color: var(--affine-text-primary-color);\n    font-size: 20px;\n    font-weight: 600;\n  }\n  .modal-header-close-icon {\n    display: flex;\n    align-items: center;\n    color: var(--affine-icon-color);\n    cursor: pointer;\n  }\n  .modal-header-close-icon svg {\n    width: 24px;\n    height: 24px;\n  }\n  .modal-footer {\n    color: var(--affine-text-secondary-color);\n    font-size: 14px;\n    text-align: center;\n  }\n  .modal-body {\n    padding: 24px 0;\n  }\n  .modal-desc {\n    margin-bottom: 38px;\n    color: var(--affine-text-primary-color);\n    font-size: 14px;\n  }\n  .modal-view-container {\n    display: flex;\n    justify-content: center;\n    gap: 18px;\n  }\n  .modal-view-item {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n    cursor: pointer;\n  }\n  .modal-view-item.coming-soon {\n    cursor: not-allowed;\n  }\n  .modal-view-item.coming-soon .modal-view-item-content {\n    pointer-events: none;\n  }\n  .modal-view-item-content:hover {\n    background: var(--affine-hover-color);\n  }\n  .modal-view-item-content:hover .modal-view-item-text,\n  .modal-view-item-content:hover svg {\n    fill: var(--affine-primary-color);\n    color: var(--affine-primary-color);\n  }\n  .modal-view-item-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 18px 0;\n    gap: 6px;\n    width: 108px;\n    height: 108px;\n    border: 2px solid var(--affine-border-color);\n    border-radius: 8px;\n  }\n  .modal-view-item-icon {\n    width: 42px;\n    height: 42px;\n  }\n  .modal-view-item-icon svg {\n    width: 42px;\n    height: 42px;\n    fill: var(--affine-black-50);\n  }\n  .modal-view-item-text {\n    font-size: 14px;\n    color: var(--affine-black-50);\n  }\n  .modal-view-item-description {\n    font-size: 12px;\n    color: var(--affine-text-secondary-color);\n    text-align: center;\n  }\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DatabaseKanbanViewIcon, DatabaseSearchClose, DatabaseTableViewIcon, } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { getCurrentBlockRange, getDefaultPage, } from '../../__internal__/index.js';\nimport { styles } from './styles.js';\nconst databaseViews = [\n    {\n        type: 'table',\n        text: 'Table view',\n        icon: DatabaseTableViewIcon,\n    },\n    {\n        type: 'kanban',\n        text: 'Kanban view',\n        icon: DatabaseKanbanViewIcon,\n        description: 'Coming soon',\n        isComingSoon: true,\n    },\n];\nlet DatabaseModal = class DatabaseModal extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._selectedView = 'table';\n    }\n    _convertToDatabase(viewType) {\n        if (viewType !== 'table')\n            return;\n        this._hide();\n        this.page.captureSync();\n        const range = getCurrentBlockRange(this.page);\n        assertExists(range);\n        const models = range.models;\n        const parentModel = this.page.getParent(models[0]);\n        assertExists(parentModel);\n        const id = this.page.addBlock('affine:database', {\n            columns: [],\n            titleColumnName: 'Title',\n        }, parentModel, parentModel.children.indexOf(models[0]));\n        const databaseModel = this.page.getBlockById(id);\n        assertExists(databaseModel);\n        // default column\n        databaseModel.updateColumn({\n            name: 'Tag',\n            type: 'multi-select',\n            width: 200,\n            hide: false,\n            selection: [],\n        });\n        databaseModel.applyColumnUpdate();\n        this.page.moveBlocks(models, databaseModel);\n        // Try clean block selection\n        const defaultPageBlock = getDefaultPage(this.page);\n        assertExists(defaultPageBlock);\n        if (!defaultPageBlock.selection) {\n            // In the edgeless mode\n            return;\n        }\n        defaultPageBlock.selection.clear();\n    }\n    _hide() {\n        this.abortController.abort();\n    }\n    render() {\n        return html `<div class=\"overlay-root\">\n      <div class=\"overlay-mask\" @click=${this._hide}></div>\n      <div class=\"modal-container\">\n        <div class=\"modal-header\">\n          <div class=\"modal-header-title\">Select Database View</div>\n          <div class=\"modal-header-close-icon\" @click=${this._hide}>\n            ${DatabaseSearchClose}\n          </div>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"modal-desc\">\n            Group as Database can quickly convert selected blocks into Database\n            for easy structuring of data.\n          </div>\n          <div class=\"modal-view-container\">\n            ${databaseViews.map(view => {\n            const isSelected = view.type === this._selectedView;\n            return html `\n                <div\n                  class=\"modal-view-item ${view.type} ${view.isComingSoon\n                ? 'coming-soon'\n                : ''}\"\n                  @click=${() => this._convertToDatabase(view.type)}\n                >\n                  <div\n                    class=\"modal-view-item-content ${isSelected\n                ? 'selected'\n                : ''}\"\n                  >\n                    <div class=\"modal-view-item-icon\">${view.icon}</div>\n                    <div class=\"modal-view-item-text\">${view.text}</div>\n                  </div>\n                  <div class=\"modal-view-item-description\">\n                    ${view.description}\n                  </div>\n                </div>\n              `;\n        })}\n          </div>\n        </div>\n        <div class=\"modal-footer\">More views are on the way.</div>\n      </div>\n    </div>`;\n    }\n};\nDatabaseModal.styles = styles;\n__decorate([\n    property()\n], DatabaseModal.prototype, \"page\", void 0);\n__decorate([\n    state()\n], DatabaseModal.prototype, \"_selectedView\", void 0);\n__decorate([\n    property()\n], DatabaseModal.prototype, \"abortController\", void 0);\nDatabaseModal = __decorate([\n    customElement('affine-database-modal')\n], DatabaseModal);\nexport { DatabaseModal };\n//# sourceMappingURL=database-modal.js.map","import { DisposableGroup } from '@blocksuite/store';\nimport { DatabaseModal } from './database-modal.js';\nexport function showDatabaseModal({ page, container = document.body, abortController = new AbortController(), }) {\n    const disposables = new DisposableGroup();\n    abortController.signal.addEventListener('abort', () => disposables.dispose());\n    const databaseModal = new DatabaseModal();\n    databaseModal.page = page;\n    databaseModal.abortController = abortController;\n    // Mount\n    container.appendChild(databaseModal);\n    disposables.add(() => databaseModal.remove());\n    return databaseModal;\n}\n//# sourceMappingURL=index.js.map","import { CopyIcon, DatabaseTableViewIcon, SHORT_KEY, } from '@blocksuite/global/config';\nimport { matchFlavours } from '@blocksuite/store';\nimport { assertExists } from '@blocksuite/store';\nimport { copyBlocks } from '../../__internal__/clipboard/utils/commons.js';\nimport { showDatabaseModal } from '../../components/database-modal/index.js';\nimport { toast } from '../../components/toast.js';\nimport { getCurrentBlockRange } from '../../std.js';\nconst DATABASE_WHITE_LIST = ['affine:list', 'affine:paragraph'];\nexport const actionConfig = [\n    {\n        id: 'copy',\n        name: 'Copy',\n        disabledToolTip: undefined,\n        icon: CopyIcon,\n        hotkey: undefined,\n        showWhen: () => true,\n        enabledWhen: () => true,\n        action: ({ page }) => {\n            const range = getCurrentBlockRange(page);\n            assertExists(range);\n            copyBlocks(range);\n            toast('Copied to clipboard');\n        },\n    },\n    {\n        id: 'convert-to-database',\n        name: 'Group as Database',\n        disabledToolTip: 'Contains Block types that cannot be converted to Database. Learn more',\n        icon: DatabaseTableViewIcon,\n        hotkey: `${SHORT_KEY}+g`,\n        showWhen: (page, models) => {\n            if (models.length === 1 &&\n                matchFlavours(models[0], ['affine:database'])) {\n                return false;\n            }\n            const range = getCurrentBlockRange(page);\n            const isShow = range?.type === 'Block';\n            return isShow;\n        },\n        enabledWhen: (page) => {\n            const range = getCurrentBlockRange(page);\n            if (!range)\n                return false;\n            return range.models.every(model => DATABASE_WHITE_LIST.includes(model.flavour));\n        },\n        action: ({ page }) => {\n            showDatabaseModal({\n                page,\n            });\n        },\n    },\n];\n//# sourceMappingURL=const.js.map","import { EDGELESS_BLOCK_CHILD_PADDING } from '@blocksuite/global/config';\nimport { assertExists, assertFlavours, matchFlavours, } from '@blocksuite/global/utils';\nimport { deserializeXYWH } from '@blocksuite/phasor';\nimport { Text } from '@blocksuite/store';\nimport { almostEqual, asyncGetBlockElementByModel, asyncGetRichTextByModel, focusBlockByModel, getBlockElementByModel, getClosestBlockElementByElement, getCurrentNativeRange, getDefaultPage, getVirgoByModel, handleNativeRangeDblClick, handleNativeRangeTripleClick, hasNativeSelection, isCollapsedNativeSelection, isMultiBlockRange, resetNativeSelection, } from '../../__internal__/index.js';\nimport { getCurrentBlockRange, restoreSelection, updateBlockRange, } from '../../__internal__/utils/block-range.js';\nimport { asyncFocusRichText } from '../../__internal__/utils/common-operations.js';\nimport { clearMarksOnDiscontinuousInput } from '../../__internal__/utils/virgo.js';\nimport { showFormatQuickBar } from '../../components/format-quick-bar/index.js';\nimport { showSlashMenu } from '../../components/slash-menu/index.js';\nimport { calcCurrentSelectionPosition } from './position.js';\nexport function handleBlockSelectionBatchDelete(page, models) {\n    const parentModel = page.getParent(models[0]);\n    assertExists(parentModel);\n    const index = parentModel.children.indexOf(models[0]);\n    page.captureSync();\n    models.forEach(model => page.deleteBlock(model));\n    const id = page.addBlock('affine:paragraph', { type: 'text' }, parentModel, index);\n    const newBlock = page.getBlockById(id);\n    // Try clean block selection\n    const defaultPageBlock = getDefaultPage(models[0].page);\n    if (!defaultPageBlock) {\n        // In the edgeless mode\n        return null;\n    }\n    defaultPageBlock.selection.clear();\n    asyncFocusRichText(page, id);\n    return newBlock;\n}\nexport function deleteModelsByRange(page, blockRange = getCurrentBlockRange(page)) {\n    if (!blockRange) {\n        return null;\n    }\n    if (blockRange.type === 'Block') {\n        const newBlock = handleBlockSelectionBatchDelete(page, blockRange.models);\n        return newBlock;\n    }\n    const startModel = blockRange.models[0];\n    const endModel = blockRange.models[blockRange.models.length - 1];\n    // TODO handle database\n    if (!startModel.text || !endModel.text) {\n        throw new Error('startModel or endModel does not have text');\n    }\n    const vEditor = getVirgoByModel(startModel);\n    assertExists(vEditor);\n    // Only select one block\n    if (startModel === endModel) {\n        page.captureSync();\n        if (blockRange.startOffset === blockRange.endOffset &&\n            blockRange.startOffset > 0) {\n            // startModel.text.delete(blockRange.startOffset - 1, 1);\n            // vEditor.setVRange({\n            //   index: blockRange.startOffset - 1,\n            //   length: 0,\n            // });\n            return startModel;\n        }\n        startModel.text.delete(blockRange.startOffset, blockRange.endOffset - blockRange.startOffset);\n        vEditor.setVRange({\n            index: blockRange.startOffset,\n            length: 0,\n        });\n        return startModel;\n    }\n    page.captureSync();\n    startModel.text.delete(blockRange.startOffset, startModel.text.length - blockRange.startOffset);\n    endModel.text.delete(0, blockRange.endOffset);\n    startModel.text.join(endModel.text);\n    blockRange.models.slice(1).forEach(model => {\n        page.deleteBlock(model);\n    });\n    vEditor.setVRange({\n        index: blockRange.startOffset,\n        length: 0,\n    });\n    return startModel;\n}\n/**\n * Do nothing when selection is collapsed or not multi block selected\n */\nexport function handleMultiBlockBackspace(page, e) {\n    if (!hasNativeSelection())\n        return;\n    if (isCollapsedNativeSelection())\n        return;\n    if (!isMultiBlockRange())\n        return;\n    e.preventDefault();\n    deleteModelsByRange(page);\n}\nfunction mergeToCodeBlocks(page, models) {\n    const parent = page.getParent(models[0]);\n    assertExists(parent);\n    const index = parent.children.indexOf(models[0]);\n    const text = models\n        .map(model => {\n        if (model.text instanceof Text) {\n            return model.text.toString();\n        }\n        return null;\n    })\n        .filter(Boolean)\n        .join('\\n');\n    models.map(model => page.deleteBlock(model));\n    const id = page.addBlock('affine:code', { text: new Text(text) }, parent, index);\n    return id;\n}\nexport function updateBlockType(models, flavour, type) {\n    if (!models.length) {\n        return [];\n    }\n    const page = models[0].page;\n    const hasSamePage = models.every(model => model.page === page);\n    if (!hasSamePage) {\n        // page check\n        console.error('Not all models have the same page instanceof, the result for update text type may not be correct', models);\n    }\n    page.captureSync();\n    const savedBlockRange = getCurrentBlockRange(page);\n    if (flavour === 'affine:code') {\n        const id = mergeToCodeBlocks(page, models);\n        const model = page.getBlockById(id);\n        if (!model) {\n            throw new Error('Failed to get model after merge code block!');\n        }\n        return [model];\n    }\n    if (flavour === 'affine:divider') {\n        const model = models.at(-1);\n        if (!model) {\n            return [];\n        }\n        const parent = page.getParent(model);\n        if (!parent) {\n            return [];\n        }\n        const index = parent.children.indexOf(model);\n        const nextSibling = page.getNextSibling(model);\n        let nextSiblingId = nextSibling?.id;\n        const id = page.addBlock('affine:divider', {}, parent, index + 1);\n        if (!nextSibling) {\n            nextSiblingId = page.addBlock('affine:paragraph', {}, parent);\n        }\n        asyncFocusRichText(page, nextSiblingId);\n        const newModel = page.getBlockById(id);\n        if (!newModel) {\n            throw new Error('Failed to get model after add divider block!');\n        }\n        return [newModel];\n    }\n    // The lastNewId will not be null since we have checked models.length > 0\n    const newModels = [];\n    models.forEach(model => {\n        assertFlavours(model, ['affine:paragraph', 'affine:list', 'affine:code']);\n        if (model.flavour === flavour) {\n            page.updateBlock(model, { type });\n            newModels.push(model);\n            return;\n        }\n        const newId = transformBlock(model, flavour, type);\n        const newModel = page.getBlockById(newId);\n        if (!newModel) {\n            throw new Error('Failed to get new model after transform block!');\n        }\n        savedBlockRange && updateBlockRange(savedBlockRange, model, newModel);\n        newModels.push(newModel);\n    });\n    const allTextUpdated = savedBlockRange?.models.map(model => new Promise(resolve => onModelTextUpdated(model, resolve)));\n    if (allTextUpdated && savedBlockRange) {\n        Promise.all(allTextUpdated).then(() => {\n            restoreSelection(savedBlockRange);\n        });\n    }\n    return newModels;\n}\nfunction transformBlock(model, flavour, type) {\n    const page = model.page;\n    const parent = page.getParent(model);\n    assertExists(parent);\n    const blockProps = {\n        type,\n        text: model?.text?.clone(),\n        children: model.children,\n    };\n    const index = parent.children.indexOf(model);\n    page.deleteBlock(model);\n    return page.addBlock(flavour, blockProps, parent, index);\n}\n/**\n * Merge format of multiple blocks. Format will be active only when all blocks have the same format.\n *\n * Used for format quick bar.\n */\nfunction mergeFormat(formatArr, loose) {\n    if (!formatArr.length) {\n        return {};\n    }\n    if (loose) {\n        return formatArr.reduce((acc, cur) => ({ ...acc, ...cur }));\n    }\n    return formatArr.reduce((acc, cur) => {\n        const newFormat = {};\n        for (const key in acc) {\n            const typedKey = key;\n            if (acc[typedKey] === cur[typedKey]) {\n                // This cast is secure because we have checked that the value of the key is the same.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newFormat[typedKey] = acc[typedKey];\n            }\n        }\n        return newFormat;\n    });\n}\n/**\n * By default, it is in `strict` mode, which only returns the formats that all the text in the range share.\n * formats with different values, such as different links, are considered different formats.\n *\n * If the `loose` mode is enabled, any format that exists in the range will be returned.\n * formats with different values will only return the last one.\n */\nexport function getCombinedFormat(blockRange, loose = false) {\n    if (blockRange.models.length === 1) {\n        const vEditor = getVirgoByModel(blockRange.models[0]);\n        assertExists(vEditor);\n        const format = vEditor.getFormat({\n            index: blockRange.startOffset,\n            length: blockRange.endOffset - blockRange.startOffset,\n        }, loose);\n        return format;\n    }\n    const formatArr = [];\n    // Start block\n    // Skip code block or empty block\n    const startModel = blockRange.models[0];\n    if (!matchFlavours(startModel, ['affine:code']) &&\n        startModel.text &&\n        startModel.text.length) {\n        const vEditor = getVirgoByModel(startModel);\n        assertExists(vEditor);\n        const startFormat = vEditor.getFormat({\n            index: blockRange.startOffset,\n            length: vEditor.yText.length - blockRange.startOffset,\n        }, loose);\n        formatArr.push(startFormat);\n    }\n    // End block\n    const endModel = blockRange.models[blockRange.models.length - 1];\n    if (!matchFlavours(endModel, ['affine:code']) &&\n        endModel.text &&\n        endModel.text.length) {\n        const vEditor = getVirgoByModel(endModel);\n        assertExists(vEditor);\n        const endFormat = vEditor.getFormat({\n            index: 0,\n            length: blockRange.endOffset,\n        }, loose);\n        formatArr.push(endFormat);\n    }\n    // Between blocks\n    blockRange.models\n        .slice(1, -1)\n        .filter(model => !matchFlavours(model, ['affine:code']))\n        .filter(model => model.text && model.text.length)\n        .forEach(model => {\n        const vEditor = getVirgoByModel(model);\n        assertExists(vEditor);\n        const format = vEditor.getFormat({\n            index: 0,\n            length: vEditor.yText.length - 1,\n        });\n        formatArr.push(format);\n    }, loose);\n    return mergeFormat(formatArr, loose);\n}\nexport function getCurrentCombinedFormat(page, loose = false) {\n    const blockRange = getCurrentBlockRange(page);\n    if (!blockRange || blockRange.models.every(model => !model.text)) {\n        return {};\n    }\n    return getCombinedFormat(blockRange, loose);\n}\nfunction formatBlockRange(blockRange, key) {\n    const { startOffset, endOffset } = blockRange;\n    const startModel = blockRange.models[0];\n    const endModel = blockRange.models[blockRange.models.length - 1];\n    // edge case 1: collapsed range\n    if (blockRange.models.length === 1 && startOffset === endOffset) {\n        // Collapsed range\n        const vEditor = getVirgoByModel(startModel);\n        const delta = vEditor?.getDeltaByRangeIndex(startOffset);\n        if (!vEditor || !delta)\n            return;\n        vEditor.setMarks({\n            ...vEditor.marks,\n            [key]: (vEditor.marks && vEditor.marks[key]) ||\n                (delta.attributes && delta.attributes[key])\n                ? null\n                : true,\n        });\n        clearMarksOnDiscontinuousInput(vEditor);\n        return;\n    }\n    const format = getCombinedFormat(blockRange);\n    // edge case 2: same model\n    if (blockRange.models.length === 1) {\n        if (matchFlavours(startModel, ['affine:code']))\n            return;\n        const vEditor = getVirgoByModel(startModel);\n        vEditor?.slots.updated.once(() => {\n            restoreSelection(blockRange);\n        });\n        startModel.text?.format(startOffset, endOffset - startOffset, {\n            [key]: format[key] ? null : true,\n        });\n        return;\n    }\n    // common case\n    // format start model\n    if (!matchFlavours(startModel, ['affine:code'])) {\n        startModel.text?.format(startOffset, startModel.text.length - startOffset, {\n            [key]: format[key] ? null : true,\n        });\n    }\n    // format end model\n    if (!matchFlavours(endModel, ['affine:code'])) {\n        endModel.text?.format(0, endOffset, { [key]: format[key] ? null : true });\n    }\n    // format between models\n    blockRange.models\n        .slice(1, -1)\n        .filter(model => !matchFlavours(model, ['affine:code']))\n        .forEach(model => {\n        model.text?.format(0, model.text.length, {\n            [key]: format[key] ? null : true,\n        });\n    });\n    // Native selection maybe shifted after format\n    // We need to restore it manually\n    if (blockRange.type === 'Native') {\n        const allTextUpdated = blockRange.models\n            .filter(model => !matchFlavours(model, ['affine:code']))\n            .map(model => \n        // We can not use `onModelTextUpdated` here because it is asynchronous, which\n        // will make updated event emit before we observe it.\n        new Promise(resolve => {\n            const vEditor = getVirgoByModel(model);\n            vEditor?.slots.updated.once(() => {\n                resolve(vEditor);\n            });\n        }));\n        Promise.all(allTextUpdated).then(() => {\n            restoreSelection(blockRange);\n        });\n    }\n}\nexport function handleFormat(page, key) {\n    const blockRange = getCurrentBlockRange(page);\n    if (!blockRange)\n        return;\n    page.captureSync();\n    formatBlockRange(blockRange, key);\n}\nexport function handleSelectAll(selection) {\n    const currentSelection = window.getSelection();\n    if (selection.state.selectedBlocks.length === 0 &&\n        currentSelection?.focusNode?.nodeName === '#text') {\n        selection.selectOneBlock(getClosestBlockElementByElement(currentSelection.focusNode.parentElement));\n    }\n    else {\n        selection.selectAllBlocks();\n    }\n    resetNativeSelection(null);\n}\nexport function handleKeydownAfterSelectBlocks({ page, keyboardEvent, selectedBlocks, }) {\n    const { key } = keyboardEvent;\n    const parent = page.getParent(selectedBlocks[0]);\n    const index = parent?.children.indexOf(selectedBlocks[0]);\n    selectedBlocks.forEach(block => {\n        page.deleteBlock(block);\n    });\n    // TODO:\n    //  1. should add block which has same flavour as the parent?\n    //  2. If use Chinese input method, the input method state cannot be retained\n    const id = page.addBlock('affine:paragraph', {\n        text: new page.Text(key),\n    }, parent, index);\n    // Wait block inserted to dom\n    requestAnimationFrame(() => {\n        const defaultPage = getDefaultPage(page);\n        const newBlock = page.getBlockById(id);\n        defaultPage?.selection.clear();\n        focusBlockByModel(newBlock, 'end');\n        // XXX: slash menu trigger probably shouldn't be here\n        if (key === '/') {\n            const curRange = getCurrentNativeRange();\n            const model = page.getBlockById(id);\n            assertExists(model);\n            showSlashMenu({ model, range: curRange });\n        }\n    });\n}\nexport async function onModelTextUpdated(model, callback) {\n    const richText = await asyncGetRichTextByModel(model);\n    richText?.vEditor?.slots.updated.once(() => {\n        callback(richText);\n    });\n}\n// Run the callback until a model's element updated.\n// Please notice that the callback will be called **once the element itself is ready**.\n// The children may be not updated.\n// If you want to wait for the text elements,\n// please use `onModelTextUpdated`.\nexport async function onModelElementUpdated(model, callback) {\n    const element = await asyncGetBlockElementByModel(model);\n    if (element) {\n        callback(element);\n    }\n}\nexport function tryUpdateFrameSize(page, zoom) {\n    requestAnimationFrame(() => {\n        if (!page.root)\n            return;\n        const frames = page.root.children.filter(child => child.flavour === 'affine:frame');\n        frames.forEach(model => {\n            // DO NOT resize shape block\n            // FIXME: we don't have shape block for now.\n            // if (matchFlavours(model, ['affine:shape'])) return;\n            const blockElement = getBlockElementByModel(model);\n            if (!blockElement)\n                return;\n            const bound = blockElement.getBoundingClientRect();\n            const [x, y, w, h] = deserializeXYWH(model.xywh);\n            const newModelHeight = bound.height / zoom + EDGELESS_BLOCK_CHILD_PADDING * 2;\n            if (!almostEqual(newModelHeight, h)) {\n                page.updateBlock(model, {\n                    xywh: JSON.stringify([x, y, w, Math.round(newModelHeight)]),\n                });\n            }\n        });\n    });\n}\n// Show format quick bar when double/triple clicking on text\nexport function showFormatQuickBarByClicks(type, e, page, container, state) {\n    const range = type === 'double'\n        ? handleNativeRangeDblClick()\n        : handleNativeRangeTripleClick(e);\n    if (e.raw.target instanceof HTMLTextAreaElement)\n        return;\n    if (!range || range.collapsed)\n        return;\n    if (page.readonly)\n        return;\n    const direction = 'center-bottom';\n    showFormatQuickBar({\n        page,\n        container,\n        direction,\n        anchorEl: {\n            getBoundingClientRect: () => {\n                return calcCurrentSelectionPosition(direction, state);\n            },\n        },\n    });\n}\n//# sourceMappingURL=container-operations.js.map","import { BoldIcon, InlineCodeIcon, ItalicIcon, LinkIcon, SHORT_KEY, StrikethroughIcon, UnderlineIcon, } from '@blocksuite/global/config';\nimport { createLink } from '../../__internal__/rich-text/link-node/index.js';\nimport { getCurrentCombinedFormat, handleFormat, } from './container-operations.js';\nexport const formatConfig = [\n    {\n        id: 'bold',\n        name: 'Bold',\n        icon: BoldIcon,\n        hotkey: `${SHORT_KEY}+b`,\n        activeWhen: (format) => 'bold' in format,\n        showWhen: (models) => noneCodeBlockSelected(models),\n        action: ({ page }) => {\n            handleFormat(page, 'bold');\n        },\n    },\n    {\n        id: 'italic',\n        name: 'Italic',\n        icon: ItalicIcon,\n        hotkey: `${SHORT_KEY}+i`,\n        activeWhen: (format) => 'italic' in format,\n        showWhen: (models) => noneCodeBlockSelected(models),\n        action: ({ page }) => {\n            handleFormat(page, 'italic');\n        },\n    },\n    {\n        id: 'underline',\n        name: 'Underline',\n        icon: UnderlineIcon,\n        hotkey: `${SHORT_KEY}+u`,\n        activeWhen: (format) => 'underline' in format,\n        showWhen: (models) => noneCodeBlockSelected(models),\n        action: ({ page }) => {\n            handleFormat(page, 'underline');\n        },\n    },\n    {\n        id: 'strike',\n        name: 'Strikethrough',\n        icon: StrikethroughIcon,\n        hotkey: `${SHORT_KEY}+shift+s`,\n        activeWhen: (format) => 'strike' in format,\n        showWhen: (models) => noneCodeBlockSelected(models),\n        action: ({ page }) => {\n            handleFormat(page, 'strike');\n        },\n    },\n    {\n        id: 'code',\n        name: 'Code',\n        icon: InlineCodeIcon,\n        hotkey: `${SHORT_KEY}+e`,\n        activeWhen: (format) => 'code' in format,\n        showWhen: (models) => noneCodeBlockSelected(models),\n        action: ({ page }) => {\n            handleFormat(page, 'code');\n        },\n    },\n    {\n        id: 'link',\n        name: 'Link',\n        icon: LinkIcon,\n        hotkey: `${SHORT_KEY}+k`,\n        activeWhen: (format) => 'link' in format,\n        // Only can show link button when selection is in one line paragraph\n        showWhen: (models) => models.length === 1 &&\n            noneCodeBlockSelected(models) &&\n            // can't create link when selection includes reference node\n            // XXX get loose format at here is not a good practice\n            !getCurrentCombinedFormat(models[0].page, true).reference,\n        action: ({ page, abortController, format }) => {\n            createLink(page);\n            if (format && abortController && !('link' in format)) {\n                abortController.abort();\n            }\n        },\n    },\n];\nfunction noneCodeBlockSelected(models) {\n    return !models.every(model => model.flavour === 'affine:code');\n}\n//# sourceMappingURL=format-config.js.map","export * from './bind-hotkey.js';\nexport * from './container-operations.js';\nexport { getDragDirection } from './position.js';\n//# sourceMappingURL=index.js.map","import { caretRangeFromPoint } from '@blocksuite/global/utils';\nimport { clamp, getCurrentNativeRange, hasNativeSelection, isMultiLineRange, resetNativeSelection, } from '../../__internal__/index.js';\nimport { isAtLineEdge } from '../../__internal__/utils/check-line.js';\nexport function repairContextMenuRange(e) {\n    const selection = window.getSelection();\n    const currentRange = selection && selection.rangeCount && selection.getRangeAt(0);\n    const pointRange = caretRangeFromPoint(e.x, e.y);\n    // repair browser context menu change selection can not go through blocks\n    if (currentRange &&\n        pointRange &&\n        currentRange.isPointInRange(pointRange.startContainer, pointRange.startOffset) &&\n        currentRange.isPointInRange(pointRange.endContainer, pointRange.endOffset)) {\n        requestAnimationFrame(() => {\n            resetNativeSelection(currentRange);\n        });\n    }\n    else {\n        e.preventDefault();\n    }\n}\nexport function getDragDirection(e) {\n    const startX = e.start.x;\n    const startY = e.start.y;\n    const endX = e.point.x;\n    const endY = e.point.y;\n    // selection direction\n    const isForwards = endX > startX;\n    const range = getCurrentNativeRange();\n    const selectedOneLine = !isMultiLineRange(range);\n    if (isForwards) {\n        if (selectedOneLine || endY >= startY) {\n            return 'right-bottom';\n        }\n        else {\n            return 'right-top';\n        }\n    }\n    else {\n        // backwards\n        if (selectedOneLine || endY <= startY) {\n            return 'left-top';\n        }\n        else {\n            return 'left-bottom';\n        }\n    }\n}\n/**\n * Return a base range for element positioning based on the current selection and selection info\n *\n * @example\n * ```ts\n * const { selectedType, direction } = getNativeSelectionMouseDragInfo(e);\n * if (selectedType === 'Caret') {\n *   return;\n * }\n * ```\n */\nexport function getNativeSelectionMouseDragInfo(e) {\n    const curRange = getCurrentNativeRange();\n    const direction = getDragDirection(e);\n    const isSelectedNothing = curRange.collapsed ||\n        // If you try to drag from back to front on an empty line,\n        // you will get a empty range, but the `range.collapsed` is false,\n        // and the range has different startContainer and endContainer.\n        // So we need to check the length of the range\n        curRange.toString().length === 0;\n    const selectedType = isSelectedNothing ? 'Caret' : 'Text';\n    return { selectedType, direction };\n}\nexport function calcPositionPointByRange(range, direction) {\n    const { startContainer, startOffset, endContainer, endOffset } = range;\n    const isStartAnchor = direction.includes('top');\n    const [targetNode, offset] = isStartAnchor\n        ? [startContainer, startOffset]\n        : [endContainer, endOffset];\n    const lineRange = new Range();\n    if (direction.includes('center')) {\n        // Use whole range\n        lineRange.setStart(startContainer, startOffset);\n        lineRange.setEnd(endContainer, endOffset);\n    }\n    else {\n        // Use target node\n        lineRange.setStart(targetNode, offset);\n        // Workaround select to empty line will get empty range\n        // If range is empty, range.getBoundingClientRect of range will return the empty value({ x: 0, y: 0 ...})\n        const isTextLikeNode = targetNode.nodeType === Node.TEXT_NODE ||\n            targetNode.nodeType === Node.COMMENT_NODE ||\n            targetNode.nodeType === Node.CDATA_SECTION_NODE;\n        if (!isTextLikeNode) {\n            // Fallback to use whole range\n            lineRange.setStart(startContainer, startOffset);\n            lineRange.setEnd(endContainer, endOffset);\n        }\n        // Workaround line edge range\n        // When selecting from left to the end of right, the edge rect is expected\n        // But when selecting from right to the start of left, the edge rect is not expected\n        if (direction.includes('left')) {\n            // Shift the range when the selection is selected to the left edge of the line\n            const maybeShiftRange = isAtLineEdge(lineRange);\n            if (maybeShiftRange) {\n                lineRange.setStart(maybeShiftRange.startContainer, maybeShiftRange.startOffset);\n                lineRange.setEnd(maybeShiftRange.endContainer, maybeShiftRange.endOffset);\n            }\n        }\n    }\n    // resetNativeSelection(lineRange);\n    const lineRect = lineRange.getBoundingClientRect();\n    const isBottom = direction.includes('bottom');\n    const positioningPoint = {\n        // Use the center of the position rect\n        x: lineRect.x + lineRect.width / 2,\n        // if the direction is bottom, use the bottom of the position rect\n        y: lineRect.y + (isBottom ? lineRect.height : 0),\n    };\n    return positioningPoint;\n}\n/**\n * This function is used to calculate the position of the format bar.\n *\n * After update block type, the native selection may be change to block selection,\n * for example, update block to code block.\n * So we need to get the targe block's rect dynamic.\n */\nexport function calcCurrentSelectionPosition(direction, \n// Edgeless mode not have pageSelectionState\npageSelectionState) {\n    if (!pageSelectionState || !pageSelectionState.selectedBlocks.length) {\n        if (!hasNativeSelection()) {\n            throw new Error(\"Failed to get anchor element! There's no block selection or native selection.\");\n        }\n        // Native selection\n        const range = getCurrentNativeRange();\n        const positioningPoint = calcPositionPointByRange(range, direction);\n        return positioningPoint;\n    }\n    // Block selection\n    const blocks = pageSelectionState.selectedBlocks;\n    const firstBlock = blocks[0];\n    const lastBlock = blocks[blocks.length - 1];\n    const targetBlock = direction.includes('bottom') ? lastBlock : firstBlock;\n    // Block selection always use the center of the block\n    const rect = targetBlock.getBoundingClientRect();\n    const x = rect.x + rect.width / 2;\n    const y = direction.includes('bottom') ? rect.bottom : rect.top;\n    return { x, y };\n}\nexport function calcSafeCoordinate({ positioningPoint, objRect = { width: 0, height: 0 }, boundaryRect = document.body.getBoundingClientRect(), offsetX = 0, offsetY = 0, edgeGap = 20, }) {\n    const safeX = clamp(positioningPoint.x + offsetX, edgeGap, boundaryRect.width - objRect.width - edgeGap);\n    const y = positioningPoint.y + offsetY;\n    // Not use clamp for y coordinate to avoid the quick bar always showing after scrolling\n    // const safeY = clamp(\n    //   positioningPoint.y + offsetY,\n    //   edgeGap,\n    //   boundaryRect.height - objRect.height - edgeGap\n    // );\n    return {\n        x: safeX,\n        y,\n    };\n}\n/**\n * Used to compare the space available\n * at the top and bottom of an element within a container.\n *\n * Please give preference to {@link getPopperPosition}\n */\nexport function compareTopAndBottomSpace(obj, container = document.body, gap = 20) {\n    const objRect = obj.getBoundingClientRect();\n    const spaceRect = container.getBoundingClientRect();\n    const topSpace = objRect.top - spaceRect.top;\n    const bottomSpace = spaceRect.bottom - objRect.bottom;\n    const topOrBottom = topSpace > bottomSpace ? 'top' : 'bottom';\n    return {\n        placement: topOrBottom,\n        // the height is the available space.\n        height: (topOrBottom === 'top' ? topSpace : bottomSpace) - gap,\n    };\n}\n/**\n * Get the position of the popper element with flip.\n */\nexport function getPopperPosition(popper, reference, { gap = 12, offsetY = 5 } = {}) {\n    if (!popper) {\n        // foolproof, someone may use element with non-null assertion\n        console.warn('The popper element is not exist. Popper position maybe incorrect');\n    }\n    const { placement, height } = compareTopAndBottomSpace(reference, document.body, gap + offsetY);\n    const referenceRect = reference.getBoundingClientRect();\n    const positioningPoint = {\n        x: referenceRect.x,\n        y: referenceRect.y + (placement === 'bottom' ? referenceRect.height : 0),\n    };\n    // TODO maybe use the editor container as the boundary rect to avoid the format bar being covered by other elements\n    const boundaryRect = document.body.getBoundingClientRect();\n    // Note: the popperRect.height maybe incorrect\n    // because we are calculated its correct height\n    const popperRect = popper?.getBoundingClientRect();\n    const safeCoordinate = calcSafeCoordinate({\n        positioningPoint,\n        objRect: popperRect,\n        boundaryRect,\n        offsetY: placement === 'bottom' ? offsetY : -offsetY,\n    });\n    return {\n        placement,\n        /**\n         * The height is the available space height.\n         *\n         * Note: it's a max height, not the real height,\n         * because sometimes the popper's height is smaller than the available space.\n         */\n        height,\n        x: `${safeCoordinate.x}px`,\n        y: placement === 'bottom'\n            ? `${safeCoordinate.y}px`\n            : // We need to use `calc(-100%)` since the height of popper maybe incorrect\n                `calc(${safeCoordinate.y}px - 100%)`,\n    };\n}\n//# sourceMappingURL=position.js.map","import { BaseService } from '../__internal__/service/index.js';\nimport { json2block } from '../__internal__/service/json2block.js';\nexport class ParagraphBlockService extends BaseService {\n    block2html(model, { childText = '', begin, end } = {}) {\n        const text = super.block2html(model, {\n            childText,\n            begin,\n            end,\n        });\n        switch (model.type) {\n            case 'text':\n                return `<p>${text}</p>`;\n            case 'h1':\n            case 'h2':\n            case 'h3':\n            case 'h4':\n            case 'h5':\n            case 'h6':\n                return `<${model.type}>${text}</${model.type}>`;\n            case 'quote':\n                return `<blockquote>${text}</blockquote>`;\n            default:\n                return text;\n        }\n    }\n    async json2Block(focusedBlockModel, pastedBlocks, range) {\n        const convertToPastedIfEmpty = focusedBlockModel.type !== 'text';\n        return json2block(focusedBlockModel, pastedBlocks, {\n            range,\n            convertToPastedIfEmpty,\n        });\n    }\n}\nexport default ParagraphBlockService;\n//# sourceMappingURL=paragraph-service.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport '../__internal__/rich-text/rich-text.js';\nimport { BLOCK_CHILDREN_CONTAINER_PADDING_LEFT, BlockHubIcon20, } from '@blocksuite/global/config';\nimport { DisposableGroup, matchFlavours } from '@blocksuite/global/utils';\nimport { BlockElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { isPageMode } from '../__internal__/index.js';\nimport { attributeRenderer } from '../__internal__/rich-text/virgo/attribute-renderer.js';\nimport { affineTextAttributes, } from '../__internal__/rich-text/virgo/types.js';\nimport { registerService } from '../__internal__/service.js';\nimport paragraphService from './paragraph-service.js';\nfunction tipsPlaceholderPreventDefault(event) {\n    // Call event.preventDefault() to keep the mouse event from being sent as well.\n    // https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent\n    event.preventDefault();\n}\nfunction TipsPlaceholder(model, tipsPos) {\n    if (!matchFlavours(model, ['affine:paragraph'])) {\n        throw new Error(\"TipsPlaceholder can't be used for this model\");\n    }\n    if (model.type === 'text') {\n        if (!isPageMode(model.page)) {\n            return html `<div class=\"tips-placeholder\" style=${styleMap(tipsPos)}>\n        Type '/' for commands\n      </div> `;\n        }\n        const blockHub = document.querySelector('affine-block-hub');\n        if (!blockHub) {\n            // Fall back\n            return html `<div class=\"tips-placeholder\" style=${styleMap(tipsPos)}>\n        Type '/' for commands\n      </div>`;\n        }\n        const onClick = () => {\n            if (!blockHub) {\n                throw new Error('Failed to find blockHub!');\n            }\n            blockHub.toggleMenu();\n        };\n        return html `\n      <div\n        class=\"tips-placeholder\"\n        @click=${onClick}\n        @pointerdown=${tipsPlaceholderPreventDefault}\n        style=${styleMap(tipsPos)}\n      >\n        Click ${BlockHubIcon20} to insert blocks, type '/' for commands\n      </div>\n    `;\n    }\n    const placeholders = {\n        h1: 'Heading 1',\n        h2: 'Heading 2',\n        h3: 'Heading 3',\n        h4: 'Heading 4',\n        h5: 'Heading 5',\n        h6: 'Heading 6',\n        quote: '',\n    };\n    return html `<div class=\"tips-placeholder\">${placeholders[model.type]}</div> `;\n}\nlet ParagraphBlockComponent = class ParagraphBlockComponent extends BlockElement {\n    constructor() {\n        super(...arguments);\n        this.tipsPos = { top: '50%', transform: 'translateY(-50%)', left: '2px' };\n        this._tipsPlaceholderTemplate = html ``;\n        this._isComposing = false;\n        this._isFocus = false;\n        this.textSchema = {\n            attributesSchema: affineTextAttributes,\n            textRenderer: attributeRenderer,\n        };\n        this._placeholderDisposables = new DisposableGroup();\n        this._updatePlaceholder = () => {\n            if (this.model.text.length !== 0 || this._isComposing) {\n                this._tipsPlaceholderTemplate = html ``;\n                return;\n            }\n            if (this.model.type === 'text' && !this._isFocus) {\n                // Text block placeholder only show when focus and empty\n                this._tipsPlaceholderTemplate = html ``;\n                return;\n            }\n            if (this._richTextElement) {\n                const parentRect = this._richTextElement.parentElement?.getBoundingClientRect();\n                const rect = this._richTextElement.getBoundingClientRect();\n                const relativeTop = rect.top - parentRect.top;\n                const relativeLeft = rect.left - parentRect.left;\n                this.tipsPos = {\n                    top: `${relativeTop}px`,\n                    transform: '',\n                    left: `${relativeLeft + 2}px`,\n                };\n            }\n            this._tipsPlaceholderTemplate = TipsPlaceholder(this.model, this.tipsPos);\n        };\n        this._onFocusIn = (e) => {\n            this._isFocus = true;\n            this._updatePlaceholder();\n            this.model.text.yText.observe(this._updatePlaceholder);\n            this._placeholderDisposables.add(() => this.model.text.yText.unobserve(this._updatePlaceholder));\n            // Workaround for virgo skips composition event\n            this._placeholderDisposables.addFromEvent(this, 'compositionstart', () => {\n                this._isComposing = true;\n                this._updatePlaceholder();\n            });\n            this._placeholderDisposables.addFromEvent(this, 'compositionend', () => {\n                this._isComposing = false;\n                this._updatePlaceholder();\n            });\n        };\n        this._onFocusOut = (e) => {\n            this._isFocus = false;\n            this._updatePlaceholder();\n            // We should not observe text change when focus out\n            this._placeholderDisposables.dispose();\n            this._placeholderDisposables = new DisposableGroup();\n        };\n        this.isInDatabase = () => {\n            let parent = this.parentElement;\n            while (parent && parent !== document.body) {\n                if (parent.tagName.toLowerCase() === 'affine-database') {\n                    return true;\n                }\n                parent = parent.parentElement;\n            }\n            return false;\n        };\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Initial placeholder state\n        this._updatePlaceholder();\n        registerService('affine:paragraph', paragraphService);\n    }\n    firstUpdated() {\n        this.model.propsUpdated.on(() => {\n            this._updatePlaceholder();\n            this.requestUpdate();\n        });\n        this.model.childrenUpdated.on(() => this.requestUpdate());\n    }\n    render() {\n        const { type } = this.model;\n        // hide placeholder in database\n        const tipsPlaceholderTemplate = this.isInDatabase()\n            ? ''\n            : this._tipsPlaceholderTemplate;\n        const children = html `<div\n      class=\"affine-block-children-container\"\n      style=\"padding-left: ${BLOCK_CHILDREN_CONTAINER_PADDING_LEFT}px\"\n    >\n      ${this.content}\n    </div>`;\n        return html `\n      <div class=\"affine-paragraph-block-container ${type}\">\n        ${tipsPlaceholderTemplate}\n        <rich-text\n          .model=${this.model}\n          .textSchema=${this.textSchema}\n          @focusin=${this._onFocusIn}\n          @focusout=${this._onFocusOut}\n          style=${styleMap({\n            fontWeight: /^h[1-6]$/.test(type) ? '600' : undefined,\n        })}\n        ></rich-text>\n        ${children}\n      </div>\n    `;\n    }\n};\nParagraphBlockComponent.styles = css `\n    .affine-paragraph-block-container {\n      position: relative;\n      border-radius: 5px;\n    }\n    .affine-paragraph-block-container.selected {\n      background-color: var(--affine-hover-color);\n    }\n    .h1 {\n      font-size: var(--affine-font-h-1);\n      line-height: calc(1em + 12px);\n      margin-top: calc(var(--affine-paragraph-space) + 24px);\n    }\n    .h1 code {\n      font-size: calc(var(--affine-font-base) + 8px);\n    }\n    .h2 {\n      font-size: var(--affine-font-h-2);\n      line-height: calc(1em + 10px);\n      margin-top: calc(var(--affine-paragraph-space) + 20px);\n    }\n    .h2 code {\n      font-size: calc(var(--affine-font-base) + 6px);\n    }\n    .h3 {\n      font-size: var(--affine-font-h-3);\n      line-height: calc(1em + 8px);\n      margin-top: calc(var(--affine-paragraph-space) + 16px);\n    }\n    .h3 code {\n      font-size: calc(var(--affine-font-base) + 4px);\n    }\n    .h4 {\n      font-size: var(--affine-font-h-4);\n      line-height: calc(1em + 10px);\n      margin-top: calc(var(--affine-paragraph-space) + 12px);\n    }\n    .h4 code {\n      font-size: calc(var(--affine-font-base) + 2px);\n    }\n    .h5 {\n      font-size: var(--affine-font-h-5);\n      line-height: calc(1em + 8px);\n      margin-top: calc(var(--affine-paragraph-space) + 8px);\n    }\n    .h5 code {\n      font-size: calc(var(--affine-font-base));\n    }\n    .h6 {\n      font-size: var(--affine-font-h-6);\n      line-height: calc(1em + 8px);\n      margin-top: calc(var(--affine-paragraph-space) + 4px);\n    }\n    .h6 code {\n      font-size: calc(var(--affine-font-base) - 2px);\n    }\n    .quote {\n      line-height: 26px;\n      padding-left: 12px;\n      margin-top: var(--affine-paragraph-space);\n      position: relative;\n    }\n    .quote::after {\n      content: '';\n      width: 4px;\n      height: 100%;\n      position: absolute;\n      left: 0;\n      top: 0;\n      background: var(--affine-quote-color);\n      border-radius: 4px;\n    }\n    .text {\n      margin-top: var(--affine-paragraph-space);\n      font-size: var(--affine-font-base);\n    }\n\n    .tips-placeholder {\n      position: absolute;\n      display: flex;\n      align-items: center;\n      gap: 4px;\n      pointer-events: none;\n      color: var(--affine-placeholder-color);\n      fill: var(--affine-placeholder-color);\n    }\n\n    .tips-placeholder > svg {\n      cursor: pointer;\n      pointer-events: all;\n    }\n    .tips-placeholder > svg:hover {\n      fill: var(--affine-primary-color);\n    }\n  `;\n__decorate([\n    state()\n], ParagraphBlockComponent.prototype, \"tipsPos\", void 0);\n__decorate([\n    state()\n], ParagraphBlockComponent.prototype, \"_tipsPlaceholderTemplate\", void 0);\n__decorate([\n    state()\n], ParagraphBlockComponent.prototype, \"_isComposing\", void 0);\n__decorate([\n    state()\n], ParagraphBlockComponent.prototype, \"_isFocus\", void 0);\n__decorate([\n    query('rich-text')\n], ParagraphBlockComponent.prototype, \"_richTextElement\", void 0);\nParagraphBlockComponent = __decorate([\n    customElement('affine-paragraph')\n], ParagraphBlockComponent);\nexport { ParagraphBlockComponent };\n//# sourceMappingURL=paragraph-block.js.map","export * from './paragraph-block.js';\nexport * from './paragraph-model.js';\nexport * from './paragraph-service.js';\n//# sourceMappingURL=index.js.map","/// <reference types=\"@blocksuite/global\" />\nimport * as std from './__internal__/utils/index.js';\nexport * from './__internal__/utils/index.js';\nexport default std;\n//# sourceMappingURL=std.js.map","export class Rectangle {\n    constructor(x, y, w, h) {\n        this.id = Math.random().toString(16).slice(2);\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    get minX() {\n        return this.x;\n    }\n    get maxX() {\n        return this.x + this.w;\n    }\n    get minY() {\n        return this.y;\n    }\n    get maxY() {\n        return this.y + this.h;\n    }\n    inflate(horizontal, vertical) {\n        return new Rectangle(this.x - horizontal, this.y - vertical, this.w + horizontal * 2, this.h + vertical * 2);\n    }\n    contains(x, y) {\n        return x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\n    }\n    relativeDirection(x, y) {\n        const directionValues = {\n            left: Math.abs(x - this.x),\n            right: Math.abs(x - this.x - this.w),\n            top: Math.abs(y - this.y),\n            bottom: Math.abs(y - this.y - this.h),\n        };\n        let min;\n        let d = 'top';\n        Object.entries(directionValues).forEach(([k, v]) => {\n            if (min === undefined) {\n                min = v;\n                d = k;\n            }\n            else {\n                if (v < min) {\n                    min = v;\n                    d = k;\n                }\n            }\n        });\n        return d;\n    }\n}\n//# sourceMappingURL=rectangle.js.map","/**\n * From https://github.com/mourner/simplify-js/blob/master/simplify.js\n */\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n    const dx = p1.x - p2.x, dy = p1.y - p2.y;\n    return dx * dx + dy * dy;\n}\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n    let x = p1.x, y = p1.y, dx = p2.x - x, dy = p2.y - y;\n    if (dx !== 0 || dy !== 0) {\n        const t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x = p2.x;\n            y = p2.y;\n        }\n        else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n    dx = p.x - x;\n    dy = p.y - y;\n    return dx * dx + dy * dy;\n}\n// basic distance-based simplification\nfunction simplifyRadialDist(points, sqTolerance) {\n    let prevPoint = points[0];\n    const newPoints = [prevPoint];\n    let point;\n    for (let i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n        if (getSqDist(point, prevPoint) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n        }\n    }\n    if (prevPoint !== point)\n        newPoints.push(point);\n    return newPoints;\n}\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n    let maxSqDist = sqTolerance;\n    let index = -1;\n    for (let i = first + 1; i < last; i++) {\n        const sqDist = getSqSegDist(points[i], points[first], points[last]);\n        if (sqDist > maxSqDist) {\n            index = i;\n            maxSqDist = sqDist;\n        }\n    }\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 1)\n            simplifyDPStep(points, first, index, sqTolerance, simplified);\n        simplified.push(points[index]);\n        if (last - index > 1)\n            simplifyDPStep(points, index, last, sqTolerance, simplified);\n    }\n}\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n    const last = points.length - 1;\n    const simplified = [points[0]];\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\n    simplified.push(points[last]);\n    return simplified;\n}\n// both algorithms combined for awesome performance\nexport function simplifyPath(points, tolerance = 0, highestQuality) {\n    if (points.length <= 2)\n        return points;\n    const sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n    points = simplifyDouglasPeucker(points, sqTolerance);\n    return points;\n}\n//# sourceMappingURL=simplify-path.js.map","import { BookmarkIcon, BulletedListIcon, CodeBlockIcon, DividerIcon, H1Icon, H2Icon, H3Icon, H4Icon, H5Icon, H6Icon, ImageIcon, NumberedListIcon, QuoteIcon, TextIcon, TodoIcon, } from '../icons/index.js';\nimport { SHORT_KEY } from './platform.js';\nexport const paragraphConfig = [\n    {\n        flavour: 'affine:paragraph',\n        type: 'text',\n        name: 'Text',\n        hotkey: `${SHORT_KEY}+option+0,${SHORT_KEY}+shift+0`,\n        icon: TextIcon,\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h1',\n        name: 'Heading 1',\n        hotkey: `${SHORT_KEY}+option+1,${SHORT_KEY}+shift+1`,\n        icon: H1Icon,\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h2',\n        name: 'Heading 2',\n        hotkey: `${SHORT_KEY}+option+2,${SHORT_KEY}+shift+2`,\n        icon: H2Icon,\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h3',\n        name: 'Heading 3',\n        hotkey: `${SHORT_KEY}+option+3,${SHORT_KEY}+shift+3`,\n        icon: H3Icon,\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h4',\n        name: 'Heading 4',\n        hotkey: `${SHORT_KEY}+option+4,${SHORT_KEY}+shift+4`,\n        icon: H4Icon,\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h5',\n        name: 'Heading 5',\n        hotkey: `${SHORT_KEY}+option+5,${SHORT_KEY}+shift+5`,\n        icon: H5Icon,\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h6',\n        name: 'Heading 6',\n        hotkey: `${SHORT_KEY}+option+6,${SHORT_KEY}+shift+6`,\n        icon: H6Icon,\n    },\n    {\n        flavour: 'affine:list',\n        type: 'bulleted',\n        name: 'Bulleted List',\n        hotkey: `${SHORT_KEY}+option+8,${SHORT_KEY}+shift+8`,\n        icon: BulletedListIcon,\n    },\n    {\n        flavour: 'affine:list',\n        type: 'numbered',\n        name: 'Numbered List',\n        hotkey: `${SHORT_KEY}+option+9,${SHORT_KEY}+shift+9`,\n        icon: NumberedListIcon,\n    },\n    {\n        flavour: 'affine:list',\n        type: 'todo',\n        name: 'To-do List',\n        hotkey: null,\n        icon: TodoIcon,\n    },\n    {\n        flavour: 'affine:code',\n        type: undefined,\n        name: 'Code Block',\n        // Use `alt` instead of `shift` because `ctrl+shift+c` will open chrome devtools on Windows.\n        // Use `command` / `ctrl` instead of `${SHORT_KEY}` because `option` and `alt` are the same key on Mac, they will trigger twice.\n        hotkey: `command+option+c,ctrl+alt+c`,\n        icon: CodeBlockIcon,\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'quote',\n        name: 'Quote',\n        hotkey: null,\n        icon: QuoteIcon,\n    },\n    {\n        flavour: 'affine:divider',\n        type: 'divider',\n        name: 'Divider',\n        hotkey: `${SHORT_KEY}+option+d,${SHORT_KEY}+shift+d`,\n        icon: DividerIcon,\n    },\n    // {\n    //   flavour: 'affine:',\n    //   type: 'callout',\n    //   name: 'Callout',\n    //   icon: CalloutIcon,\n    // },\n];\nexport const BLOCKHUB_TEXT_ITEMS = [\n    {\n        flavour: 'affine:paragraph',\n        type: 'text',\n        name: 'Text',\n        description: 'Start typing with plain text.',\n        icon: TextIcon,\n        tooltip: 'Drag/Click to insert Text block',\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h1',\n        name: 'Heading 1',\n        description: 'Headings in the largest font.',\n        icon: H1Icon,\n        tooltip: 'Drag/Click to insert Heading 1',\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h2',\n        name: 'Heading 2',\n        description: 'Headings in the 2nd font size.',\n        icon: H2Icon,\n        tooltip: 'Drag/Click to insert Heading 2',\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h3',\n        name: 'Heading 3',\n        description: 'Headings in the 3rd font size.',\n        icon: H3Icon,\n        tooltip: 'Drag/Click to insert Heading 3',\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h4',\n        name: 'Heading 4',\n        description: 'Heading in the 4th font size.',\n        icon: H4Icon,\n        tooltip: 'Drag/Click to insert Heading 4',\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h5',\n        name: 'Heading 5',\n        description: 'Heading in the 5th font size.',\n        icon: H5Icon,\n        tooltip: 'Drag/Click to insert Heading 5',\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'h6',\n        name: 'Heading 6',\n        description: 'Heading in the 6th font size.',\n        icon: H6Icon,\n        tooltip: 'Drag/Click to insert Heading 6',\n    },\n    {\n        flavour: 'affine:code',\n        type: null,\n        name: 'Code Block',\n        description: 'Capture a code snippet.',\n        icon: CodeBlockIcon,\n        tooltip: 'Drag/Click to insert Code Block',\n    },\n    {\n        flavour: 'affine:paragraph',\n        type: 'quote',\n        name: 'Quote',\n        description: 'Capture a quote.',\n        icon: QuoteIcon,\n        tooltip: 'Drag/Click to insert Quote',\n    },\n    {\n        flavour: 'affine:divider',\n        type: null,\n        name: 'Divider',\n        description: 'A visual divider.',\n        icon: DividerIcon,\n        tooltip: 'A visual divider',\n    },\n];\nexport const BLOCKHUB_LIST_ITEMS = [\n    {\n        flavour: 'affine:list',\n        type: 'bulleted',\n        name: 'Bulleted List',\n        description: 'A simple bulleted list.',\n        icon: BulletedListIcon,\n        tooltip: 'Drag/Click to insert Bulleted List',\n    },\n    {\n        flavour: 'affine:list',\n        type: 'numbered',\n        name: 'Numbered List',\n        description: 'A list with numbering.',\n        icon: NumberedListIcon,\n        tooltip: 'Drag/Click to insert Numbered List',\n    },\n    {\n        flavour: 'affine:list',\n        type: 'todo',\n        name: 'To-do List',\n        description: 'Track tasks with a to-do list.',\n        icon: TodoIcon,\n        tooltip: 'Drag/Click to insert To-do List',\n    },\n];\nexport const BLOCKHUB_FILE_ITEMS = [\n    {\n        flavour: 'affine:embed',\n        type: 'image',\n        name: 'Image',\n        description: 'Upload images.',\n        icon: ImageIcon,\n        tooltip: 'Drag/Click to insert Image',\n    },\n    {\n        flavour: 'affine:bookmark',\n        type: 'bookmark',\n        name: 'Bookmark',\n        description: 'Insert a link in card view.',\n        icon: BookmarkIcon,\n        tooltip: 'Drag/Click to insert Bookmark',\n    },\n];\n//# sourceMappingURL=block-hub.js.map","import { html } from 'lit';\n// database icon\nexport const DatabaseSearchIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M11 3.75C6.99594 3.75 3.75 6.99594 3.75 11C3.75 15.0041 6.99594 18.25 11 18.25C13.0026 18.25 14.8156 17.4381 16.1276 16.1254L16.1287 16.1243C17.4393 14.8125 18.25 13.0008 18.25 11C18.25 6.99594 15.0041 3.75 11 3.75ZM17.6965 16.6324C18.9779 15.1104 19.75 13.1453 19.75 11C19.75 6.16751 15.8325 2.25 11 2.25C6.16751 2.25 2.25 6.16751 2.25 11C2.25 15.8325 6.16751 19.75 11 19.75C13.1471 19.75 15.1136 18.9767 16.6361 17.6933L20.4694 21.5301C20.7622 21.8231 21.2371 21.8233 21.5301 21.5306C21.8231 21.2378 21.8233 20.7629 21.5306 20.4699L17.6965 16.6324Z\"\n  />\n</svg>`;\nexport const DatabasePen = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M14 6.20314L5.5 15L4 20L9 18.5L17.7969 10M14 6.20314L15.3595 4.79619C16.4211 3.73461 18.1422 3.7346 19.2038 4.79619C20.2654 5.85777 20.2654 7.57894 19.2038 8.64052L17.7969 10M14 6.20314L17.7969 10\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>`;\nexport const DatabaseDelete = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M4 6H20M16 6L15.7294 5.18807C15.4671 4.40125 15.3359 4.00784 15.0927 3.71698C14.8779 3.46013 14.6021 3.26132 14.2905 3.13878C13.9376 3 13.523 3 12.6936 3H11.3064C10.477 3 10.0624 3 9.70951 3.13878C9.39792 3.26132 9.12208 3.46013 8.90729 3.71698C8.66405 4.00784 8.53292 4.40125 8.27064 5.18807L8 6M18 6V16.2C18 17.8802 18 18.7202 17.673 19.362C17.3854 19.9265 16.9265 20.3854 16.362 20.673C15.7202 21 14.8802 21 13.2 21H10.8C9.11984 21 8.27976 21 7.63803 20.673C7.07354 20.3854 6.6146 19.9265 6.32698 19.362C6 18.7202 6 17.8802 6 16.2V6M14 10V17M10 10V17\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>`;\nexport const DatabaseDuplicate = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M11.25 9C11.25 9.41421 11.5858 9.75 12 9.75H13.1893L7.46967 15.4697C7.17678 15.7626 7.17678 16.2374 7.46967 16.5303C7.76256 16.8232 8.23744 16.8232 8.53033 16.5303L14.25 10.8107V12C14.25 12.4142 14.5858 12.75 15 12.75C15.4142 12.75 15.75 12.4142 15.75 12V9.1C15.75 9.08264 15.7495 9.0654 15.7485 9.04829C15.7618 8.84059 15.6891 8.62841 15.5303 8.46967C15.3716 8.31093 15.1594 8.23823 14.9517 8.25155C14.9346 8.25052 14.9174 8.25 14.9 8.25H12C11.5858 8.25 11.25 8.58579 11.25 9Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M16.8304 3.25H11.1696C10.6354 3.24999 10.1896 3.24998 9.82533 3.27974C9.44545 3.31078 9.08879 3.37789 8.75153 3.54973C8.23408 3.81338 7.81339 4.23408 7.54973 4.75153C7.37789 5.08879 7.31078 5.44545 7.27974 5.82533C7.24998 6.18956 7.24999 6.63541 7.25 7.16956L7.25 7.25L7.16957 7.25C6.63542 7.24999 6.18956 7.24998 5.82533 7.27974C5.44545 7.31078 5.08879 7.37789 4.75153 7.54973C4.23408 7.81339 3.81338 8.23408 3.54973 8.75153C3.37789 9.08879 3.31078 9.44545 3.27974 9.82533C3.24998 10.1896 3.24999 10.6354 3.25 11.1696V16.8304C3.24999 17.3646 3.24998 17.8104 3.27974 18.1747C3.31078 18.5546 3.37789 18.9112 3.54973 19.2485C3.81338 19.7659 4.23408 20.1866 4.75153 20.4503C5.08879 20.6221 5.44545 20.6892 5.82533 20.7203C6.18956 20.75 6.6354 20.75 7.16955 20.75H12.8305C13.3646 20.75 13.8104 20.75 14.1747 20.7203C14.5546 20.6892 14.9112 20.6221 15.2485 20.4503C15.7659 20.1866 16.1866 19.7659 16.4503 19.2485C16.6221 18.9112 16.6892 18.5546 16.7203 18.1747C16.75 17.8105 16.75 17.3646 16.75 16.8305V16.75H16.8305C17.3646 16.75 17.8105 16.75 18.1747 16.7203C18.5546 16.6892 18.9112 16.6221 19.2485 16.4503C19.7659 16.1866 20.1866 15.7659 20.4503 15.2485C20.6221 14.9112 20.6892 14.5546 20.7203 14.1747C20.75 13.8104 20.75 13.3646 20.75 12.8305V7.16955C20.75 6.6354 20.75 6.18956 20.7203 5.82533C20.6892 5.44545 20.6221 5.08879 20.4503 4.75153C20.1866 4.23408 19.7659 3.81338 19.2485 3.54973C18.9112 3.37789 18.5546 3.31078 18.1747 3.27974C17.8104 3.24998 17.3646 3.24999 16.8304 3.25ZM7.25 11V8.75H7.2C6.62757 8.75 6.24336 8.75058 5.94748 8.77476C5.66036 8.79822 5.52307 8.8401 5.43251 8.88624C5.19731 9.00608 5.00608 9.19731 4.88624 9.43251C4.8401 9.52307 4.79822 9.66036 4.77476 9.94748C4.75058 10.2434 4.75 10.6276 4.75 11.2V16.8C4.75 17.3724 4.75058 17.7566 4.77476 18.0525C4.79822 18.3396 4.8401 18.4769 4.88624 18.5675C5.00608 18.8027 5.19731 18.9939 5.43251 19.1138C5.52307 19.1599 5.66036 19.2018 5.94748 19.2252C6.24336 19.2494 6.62757 19.25 7.2 19.25H12.8C13.3724 19.25 13.7566 19.2494 14.0525 19.2252C14.3396 19.2018 14.4769 19.1599 14.5675 19.1138C14.8027 18.9939 14.9939 18.8027 15.1138 18.5675C15.1599 18.4769 15.2018 18.3396 15.2252 18.0525C15.2494 17.7566 15.25 17.3724 15.25 16.8V16.75H13C12.5858 16.75 12.25 16.4142 12.25 16C12.25 15.5858 12.5858 15.25 13 15.25H16.8C17.3724 15.25 17.7566 15.2494 18.0525 15.2252C18.3396 15.2018 18.4769 15.1599 18.5675 15.1138C18.8027 14.9939 18.9939 14.8027 19.1138 14.5675C19.1599 14.4769 19.2018 14.3396 19.2252 14.0525C19.2494 13.7566 19.25 13.3724 19.25 12.8V7.2C19.25 6.62757 19.2494 6.24336 19.2252 5.94748C19.2018 5.66036 19.1599 5.52307 19.1138 5.43251C18.9939 5.19731 18.8027 5.00608 18.5675 4.88624C18.4769 4.8401 18.3396 4.79822 18.0525 4.77476C17.7566 4.75058 17.3724 4.75 16.8 4.75H11.2C10.6276 4.75 10.2434 4.75058 9.94748 4.77476C9.66036 4.79822 9.52307 4.8401 9.43251 4.88624C9.19731 5.00608 9.00608 5.19731 8.88624 5.43251C8.8401 5.52307 8.79822 5.66036 8.77476 5.94748C8.75058 6.24336 8.75 6.62757 8.75 7.2V11C8.75 11.4142 8.41422 11.75 8 11.75C7.58579 11.75 7.25 11.4142 7.25 11Z\"\n  />\n</svg>`;\nexport const DatabaseInsertLeft = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12.25 6C12.25 4.48122 13.4812 3.25 15 3.25H18C19.5188 3.25 20.75 4.48122 20.75 6V18C20.75 19.5188 19.5188 20.75 18 20.75H15C13.4812 20.75 12.25 19.5188 12.25 18V6ZM15 4.75C14.3096 4.75 13.75 5.30964 13.75 6V18C13.75 18.6904 14.3096 19.25 15 19.25H18C18.6904 19.25 19.25 18.6904 19.25 18V6C19.25 5.30964 18.6904 4.75 18 4.75H15Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.25 12C3.25 11.5858 3.58579 11.25 4 11.25L10 11.25C10.4142 11.25 10.75 11.5858 10.75 12C10.75 12.4142 10.4142 12.75 10 12.75L4 12.75C3.58579 12.75 3.25 12.4142 3.25 12Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M7 15.75C6.58579 15.75 6.25 15.4142 6.25 15L6.25 9C6.25 8.58579 6.58579 8.25 7 8.25C7.41421 8.25 7.75 8.58579 7.75 9L7.75 15C7.75 15.4142 7.41421 15.75 7 15.75Z\"\n  />\n</svg>`;\nexport const DatabaseInsertRight = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M11.75 6C11.75 4.48122 10.5188 3.25 9 3.25H6C4.48122 3.25 3.25 4.48122 3.25 6V18C3.25 19.5188 4.48122 20.75 6 20.75H9C10.5188 20.75 11.75 19.5188 11.75 18V6ZM9 4.75C9.69036 4.75 10.25 5.30964 10.25 6V18C10.25 18.6904 9.69036 19.25 9 19.25H6C5.30964 19.25 4.75 18.6904 4.75 18V6C4.75 5.30964 5.30964 4.75 6 4.75H9Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20.75 12C20.75 11.5858 20.4142 11.25 20 11.25L14 11.25C13.5858 11.25 13.25 11.5858 13.25 12C13.25 12.4142 13.5858 12.75 14 12.75L20 12.75C20.4142 12.75 20.75 12.4142 20.75 12Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M17 15.75C17.4142 15.75 17.75 15.4142 17.75 15V9C17.75 8.58579 17.4142 8.25 17 8.25C16.5858 8.25 16.25 8.58579 16.25 9V15C16.25 15.4142 16.5858 15.75 17 15.75Z\"\n  />\n</svg>`;\nexport const DatabaseMoveLeft = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M4 4V20M8 12H20M8 12L12 8M8 12L12 16\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>`;\nexport const DatabaseMoveRight = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M20 4V20M4 12H16M16 12L12 8M16 12L12 16\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>`;\nexport const DatabaseMultiSelect = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M4 5L6.42929 7.42929C6.46834 7.46834 6.53166 7.46834 6.57071 7.42929L9 5\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M4 11L6.42929 13.4293C6.46834 13.4683 6.53166 13.4683 6.57071 13.4293L9 11\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M4 17L6.42929 19.4293C6.46834 19.4683 6.53166 19.4683 6.57071 19.4293L9 17\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M12 6L20 6\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M12 12L20 12\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M12 18L20 18\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n</svg>`;\nexport const DatabaseNumber = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M18.5 4L12.5 20\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M12 4L6 20\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M20 8.5H5.5\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n  <path\n    d=\"M19 15L4 15\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n  />\n</svg>`;\nexport const DatabaseSelect = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12 3.75C7.44365 3.75 3.75 7.44365 3.75 12C3.75 16.5563 7.44365 20.25 12 20.25C16.5563 20.25 20.25 16.5563 20.25 12C20.25 7.44365 16.5563 3.75 12 3.75ZM2.25 12C2.25 6.61522 6.61522 2.25 12 2.25C17.3848 2.25 21.75 6.61522 21.75 12C21.75 17.3848 17.3848 21.75 12 21.75C6.61522 21.75 2.25 17.3848 2.25 12Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M7.46967 10.4697C7.76256 10.1768 8.23744 10.1768 8.53033 10.4697L12 13.9393L15.4697 10.4697C15.7626 10.1768 16.2374 10.1768 16.5303 10.4697C16.8232 10.7626 16.8232 11.2374 16.5303 11.5303L12.601 15.4596C12.2691 15.7916 11.7309 15.7916 11.399 15.4596L7.46967 11.5303C7.17678 11.2374 7.17678 10.7626 7.46967 10.4697Z\"\n  />\n</svg>`;\nexport const DatabaseProgress = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M15 4.25C15.4142 4.25 15.75 4.58579 15.75 5V6.25H18C20.0711 6.25 21.75 7.92893 21.75 10V14C21.75 16.0711 20.0711 17.75 18 17.75H15.75V19C15.75 19.4142 15.4142 19.75 15 19.75C14.5858 19.75 14.25 19.4142 14.25 19V17.75H6C3.92893 17.75 2.25 16.0711 2.25 14V10C2.25 7.92893 3.92893 6.25 6 6.25H14.25V5C14.25 4.58579 14.5858 4.25 15 4.25ZM14.25 7.75H6C4.75736 7.75 3.75 8.75736 3.75 10V14C3.75 15.2426 4.75736 16.25 6 16.25H14.25V7.75ZM15.75 16.25H18C19.2426 16.25 20.25 15.2426 20.25 14V10C20.25 8.75736 19.2426 7.75 18 7.75H15.75V16.25ZM6 9.25C6.41421 9.25 6.75 9.58579 6.75 10V14C6.75 14.4142 6.41421 14.75 6 14.75C5.58579 14.75 5.25 14.4142 5.25 14L5.25 10C5.25 9.58579 5.58579 9.25 6 9.25ZM9 9.25C9.41421 9.25 9.75 9.58579 9.75 10L9.75 14C9.75 14.4142 9.41421 14.75 9 14.75C8.58579 14.75 8.25 14.4142 8.25 14L8.25 10C8.25 9.58579 8.58579 9.25 9 9.25ZM12 9.25C12.4142 9.25 12.75 9.58579 12.75 10V14C12.75 14.4142 12.4142 14.75 12 14.75C11.5858 14.75 11.25 14.4142 11.25 14V10C11.25 9.58579 11.5858 9.25 12 9.25Z\"\n  />\n</svg>`;\nexport const DatabaseSearchClose = html `<svg\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  fill=\"none\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M4.22872 4.22878C4.42398 4.03352 4.74057 4.03352 4.93583 4.22878L7.99996 7.29291L11.0641 4.22878C11.2593 4.03352 11.5759 4.03352 11.7712 4.22878C11.9665 4.42405 11.9665 4.74063 11.7712 4.93589L8.70707 8.00002L11.7712 11.0641C11.9665 11.2594 11.9665 11.576 11.7712 11.7713C11.5759 11.9665 11.2593 11.9665 11.0641 11.7713L7.99996 8.70713L4.93583 11.7713C4.74057 11.9665 4.42398 11.9665 4.22872 11.7713C4.03346 11.576 4.03346 11.2594 4.22872 11.0641L7.29285 8.00002L4.22872 4.93589C4.03346 4.74063 4.03346 4.42405 4.22872 4.22878Z\"\n  />\n</svg>`;\nexport const DatabaseDone = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20.5322 5.97152C20.824 6.26543 20.8224 6.7403 20.5285 7.03217L9.45156 18.0322C9.15909 18.3226 8.68706 18.3226 8.3946 18.0322L3.47152 13.1433C3.17761 12.8514 3.17595 12.3765 3.46783 12.0826C3.7597 11.7887 4.23457 11.7871 4.52848 12.0789L8.92308 16.443L19.4715 5.96783C19.7654 5.67595 20.2403 5.67761 20.5322 5.97152Z\"\n  />\n</svg>`;\nconst addColumnStyle = `\n  width: 12px;\n  height: 12px;\n  fill: var(--affine-text-primary-color);\n`;\nexport const DatabaseAddColumn = html `<svg\n  viewBox=\"0 0 16 16\"\n  style=${addColumnStyle}\n>\n  <path\n    d=\"M7.977 14.963c.407 0 .747-.324.747-.723V8.72h5.362c.399 0 .74-.34.74-.747a.746.746 0 00-.74-.738H8.724V1.706c0-.398-.34-.722-.747-.722a.732.732 0 00-.739.722v5.529h-5.37a.746.746 0 00-.74.738c0 .407.341.747.74.747h5.37v5.52c0 .399.332.723.739.723z\"\n  ></path>\n</svg>`;\nexport const DatabaseDragIcon = html `<svg\n  width=\"10\"\n  height=\"14\"\n  viewBox=\"0 0 10 14\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <rect width=\"10\" height=\"14\" rx=\"2\" />\n  <rect width=\"10\" height=\"14\" rx=\"2\" fill-opacity=\"0.08\" />\n  <g clip-path=\"url(#clip0_179_9218)\">\n    <circle cx=\"3\" cy=\"3\" r=\"1\" fill=\"var(--affine-icon-color)\" />\n    <circle cx=\"3\" cy=\"6.79163\" r=\"1\" fill=\"var(--affine-icon-color)\" />\n    <circle cx=\"3\" cy=\"10.5833\" r=\"1\" fill=\"var(--affine-icon-color)\" />\n    <circle cx=\"7\" cy=\"3\" r=\"1\" fill=\"var(--affine-icon-color)\" />\n    <circle cx=\"7\" cy=\"6.79163\" r=\"1\" fill=\"var(--affine-icon-color)\" />\n    <circle cx=\"7\" cy=\"10.5833\" r=\"1\" fill=\"var(--affine-icon-color)\" />\n  </g>\n  <defs>\n    <clipPath id=\"clip0_179_9218\">\n      <rect width=\"6\" height=\"10\" transform=\"translate(2 2)\" />\n    </clipPath>\n  </defs>\n</svg>`;\n//# sourceMappingURL=database.js.map","import { html, svg } from 'lit';\n// Edgeless toolbar\nexport const SelectIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M10.3383 3.88231L18.071 8.69778C19.0571 9.31182 19.8404 9.79964 20.4017 10.2216C20.9493 10.6333 21.4318 11.0842 21.62 11.6695C21.8868 12.4988 21.7381 13.4034 21.2188 14.1027C20.852 14.5967 20.2493 14.8668 19.599 15.0782C18.9323 15.2949 18.0344 15.5017 16.9044 15.7619L14.4307 16.3314C14.0188 16.4263 13.91 16.4546 13.8157 16.4966C13.7187 16.5398 13.6281 16.5952 13.546 16.6612C13.4669 16.7248 13.3935 16.807 13.1235 17.1285L11.9305 18.5487C11.162 19.4637 10.552 20.1898 10.0419 20.6983C9.54488 21.1937 9.0177 21.6165 8.39807 21.7155C7.52714 21.8546 6.63964 21.5686 6.0146 20.9464C5.56965 20.5035 5.39026 19.852 5.27806 19.16C5.1629 18.4498 5.09457 17.5048 5.00849 16.3143L4.36527 7.41939C4.2957 6.4575 4.23967 5.68281 4.25165 5.08075C4.26359 4.48099 4.34126 3.90703 4.65756 3.44031C5.11363 2.76734 5.84836 2.33594 6.65832 2.25865C7.21739 2.2053 7.76104 2.406 8.30191 2.67862C8.84485 2.95229 9.51023 3.36666 10.3383 3.88231ZM7.62675 4.01809C7.14246 3.77397 6.9194 3.74055 6.80081 3.75187C6.43097 3.78716 6.10155 3.98334 5.89928 4.28182C5.83742 4.37309 5.762 4.57571 5.75136 5.11059C5.74092 5.635 5.79114 6.34017 5.8642 7.35039L6.50172 16.1665C6.59131 17.4054 6.65553 18.2835 6.75873 18.92C6.86617 19.5826 6.99326 19.8041 7.07279 19.8833C7.35743 20.1666 7.76348 20.2978 8.16142 20.2342C8.27334 20.2164 8.507 20.1103 8.98299 19.6359C9.44028 19.1801 10.0077 18.5057 10.8074 17.5536L11.975 16.1637C11.9876 16.1487 12 16.1338 12.0123 16.1192C12.2275 15.8628 12.3982 15.6594 12.606 15.4923C12.7891 15.345 12.9907 15.222 13.2055 15.1264C13.4489 15.018 13.7084 14.9583 14.0374 14.8828C14.0561 14.8785 14.075 14.8741 14.0941 14.8697L16.5295 14.3089C17.7063 14.038 18.5392 13.8455 19.1353 13.6517C19.7553 13.4501 19.9497 13.2958 20.0146 13.2084C20.2446 12.8987 20.3109 12.4982 20.1921 12.1288C20.1582 12.0234 20.0225 11.8131 19.5003 11.4206C18.9982 11.0431 18.2715 10.5897 17.2448 9.95034L9.57801 5.17595C8.70973 4.63525 8.10185 4.25756 7.62675 4.01809Z\"\n  />\n</svg>`;\nexport const ShapeIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12 3.25C12.2691 3.25 12.5177 3.39421 12.6512 3.6279L16.2067 9.85012C16.3394 10.0822 16.3384 10.3674 16.2042 10.5987C16.07 10.8299 15.8229 10.9722 15.5556 10.9722H8.44444C8.17709 10.9722 7.92995 10.8299 7.79576 10.5987C7.66157 10.3674 7.66062 10.0822 7.79326 9.85012L11.3488 3.6279C11.4823 3.39421 11.7309 3.25 12 3.25ZM9.73683 9.47222H14.2632L12 5.51167L9.73683 9.47222ZM7.11111 14.5278C5.80711 14.5278 4.75 15.5849 4.75 16.8889C4.75 18.1929 5.80711 19.25 7.11111 19.25C8.41512 19.25 9.47222 18.1929 9.47222 16.8889C9.47222 15.5849 8.41512 14.5278 7.11111 14.5278ZM3.25 16.8889C3.25 14.7565 4.97868 13.0278 7.11111 13.0278C9.24354 13.0278 10.9722 14.7565 10.9722 16.8889C10.9722 19.0213 9.24354 20.75 7.11111 20.75C4.97868 20.75 3.25 19.0213 3.25 16.8889ZM13.0278 13.7778C13.0278 13.3636 13.3636 13.0278 13.7778 13.0278H20C20.4142 13.0278 20.75 13.3636 20.75 13.7778V20C20.75 20.4142 20.4142 20.75 20 20.75H13.7778C13.3636 20.75 13.0278 20.4142 13.0278 20V13.7778ZM14.5278 14.5278V19.25H19.25V14.5278H14.5278Z\"\n  />\n</svg>`;\nconst ImageSVG = svg `<path\nfill-rule=\"evenodd\"\nclip-rule=\"evenodd\"\nd=\"M15 6.25C13.4812 6.25 12.25 7.48122 12.25 9C12.25 10.5188 13.4812 11.75 15 11.75C16.5188 11.75 17.75 10.5188 17.75 9C17.75 7.48122 16.5188 6.25 15 6.25ZM13.75 9C13.75 8.30964 14.3096 7.75 15 7.75C15.6904 7.75 16.25 8.30964 16.25 9C16.25 9.69036 15.6904 10.25 15 10.25C14.3096 10.25 13.75 9.69036 13.75 9Z\"\n/>\n<path\nfill-rule=\"evenodd\"\nclip-rule=\"evenodd\"\nd=\"M5 4.25C3.48122 4.25 2.25 5.48122 2.25 7V17C2.25 18.5188 3.48122 19.75 5 19.75H16.9863C16.9956 19.7502 17.0049 19.7502 17.0142 19.75H19C20.5188 19.75 21.75 18.5188 21.75 17V7C21.75 5.48122 20.5188 4.25 19 4.25H5ZM17.3356 18.25H19C19.4585 18.25 19.8593 18.0031 20.0769 17.6351L18.6231 16.1718C18.2208 15.7541 17.9502 15.4738 17.7245 15.275C17.5054 15.0819 17.3784 15.0117 17.2815 14.9786C17.0293 14.8926 16.7562 14.8895 16.5021 14.9697C16.4045 15.0005 16.276 15.0678 16.0524 15.2558C15.8542 15.4224 15.6213 15.6486 15.2976 15.9689L17.3356 18.25ZM20.25 15.681V7C20.25 6.30964 19.6904 5.75 19 5.75H5C4.30964 5.75 3.75 6.30964 3.75 7V17C3.75 17.1543 3.77795 17.302 3.82907 17.4385L7.50733 13.8054L7.52247 13.7897C7.89807 13.4008 8.21139 13.0763 8.48886 12.8325C8.7781 12.5783 9.07737 12.3666 9.43913 12.2436C9.99371 12.0551 10.594 12.0486 11.1525 12.2251C11.5168 12.3402 11.8206 12.5454 12.1153 12.7932C12.398 13.031 12.7182 13.3486 13.1022 13.7293L14.2639 14.8814C14.5765 14.5722 14.8455 14.3108 15.087 14.1077C15.382 13.8597 15.6861 13.6542 16.0508 13.5392C16.6099 13.3628 17.2107 13.3697 17.7656 13.5589C18.1276 13.6823 18.4269 13.8947 18.7161 14.1495C18.9936 14.3939 19.3068 14.7192 19.6824 15.1091L19.6996 15.127L20.25 15.681ZM5.142 18.25H15.3241L13.7197 16.4542L12.0677 14.816C11.6564 14.4081 11.3797 14.1346 11.1498 13.9412C10.9266 13.7535 10.7982 13.6862 10.7006 13.6554C10.4468 13.5752 10.1739 13.5781 9.92184 13.6638C9.825 13.6967 9.6981 13.7667 9.47895 13.9593C9.25327 14.1576 8.98257 14.4371 8.58019 14.8537L8.56773 14.8663L5.142 18.25Z\"\n/>`;\nexport const ImageIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  ${ImageSVG}\n</svg>`;\nexport const ImageIcon20 = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  ${ImageSVG}\n</svg>`;\nexport const EmbedIcon = html `\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3334_82005)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M5.144 3.54166H14.856C15.3035 3.54166 15.6722 3.54165 15.9726 3.56312C16.2832 3.58533 16.5712 3.63292 16.8445 3.75478C17.2675 3.94339 17.6272 4.25139 17.8584 4.64842C18.0131 4.91401 18.0726 5.19494 18.0996 5.48406C18.125 5.75652 18.125 6.08757 18.125 6.47237V13.5276C18.125 13.9124 18.125 14.2435 18.0996 14.5159C18.0726 14.8051 18.0131 15.086 17.8584 15.3516C17.6272 15.7486 17.2675 16.0566 16.8445 16.2452C16.5712 16.3671 16.2832 16.4147 15.9726 16.4369C15.6722 16.4583 15.3034 16.4583 14.856 16.4583H5.144C4.69656 16.4583 4.32777 16.4583 4.02744 16.4369C3.71685 16.4147 3.42883 16.3671 3.15552 16.2452C2.73246 16.0566 2.37275 15.7486 2.14156 15.3516C1.9869 15.086 1.92741 14.8051 1.90042 14.5159C1.87497 14.2435 1.87499 13.9124 1.875 13.5276V6.4724C1.87499 6.08759 1.87497 5.75652 1.90042 5.48406C1.92741 5.19494 1.9869 4.91401 2.14156 4.64842C2.37275 4.25139 2.73247 3.94339 3.15552 3.75478C3.42883 3.63292 3.71685 3.58533 4.02744 3.56312C4.32777 3.54165 4.69655 3.54166 5.144 3.54166ZM3.125 8.4375V13.5C3.125 13.9201 3.12563 14.1923 3.145 14.3997C3.16342 14.597 3.19476 14.6762 3.22176 14.7226C3.31014 14.8743 3.46036 15.0125 3.66452 15.1035C3.74772 15.1406 3.87132 15.1725 4.11657 15.1901C4.36702 15.208 4.69092 15.2083 5.16667 15.2083H14.8333C15.3091 15.2083 15.633 15.208 15.8834 15.1901C16.1287 15.1725 16.2523 15.1406 16.3355 15.1035C16.5396 15.0125 16.6899 14.8743 16.7782 14.7226C16.8052 14.6762 16.8366 14.597 16.855 14.3997C16.8744 14.1923 16.875 13.9201 16.875 13.5V8.4375H3.125ZM16.875 7.1875H3.125V6.5C3.125 6.07986 3.12563 5.80768 3.145 5.60027C3.16342 5.40303 3.19476 5.3238 3.22176 5.27744C3.31014 5.12566 3.46036 4.98747 3.66452 4.89645C3.74772 4.85935 3.87132 4.82748 4.11657 4.80994C4.36702 4.79204 4.69092 4.79166 5.16667 4.79166H14.8333C15.3091 4.79166 15.633 4.79204 15.8834 4.80994C16.1287 4.82748 16.2523 4.85935 16.3355 4.89645C16.5396 4.98747 16.6899 5.12566 16.7782 5.27744C16.8052 5.3238 16.8366 5.40303 16.855 5.60027C16.8744 5.80768 16.875 6.07986 16.875 6.5V7.1875Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M8.86926 9.56896C9.10731 9.81892 9.09766 10.2145 8.8477 10.4526L7.57292 11.6667L8.8477 12.8807C9.09766 13.1188 9.10731 13.5144 8.86926 13.7644C8.6312 14.0143 8.23559 14.024 7.98563 13.7859L6.23563 12.1193C6.11177 12.0013 6.04167 11.8377 6.04167 11.6667C6.04167 11.4956 6.11177 11.332 6.23563 11.2141L7.98563 9.54741C8.23559 9.30936 8.6312 9.31901 8.86926 9.56896ZM11.1307 9.56896C11.3688 9.31901 11.7644 9.30936 12.0144 9.54741L13.7644 11.2141C13.8882 11.332 13.9583 11.4956 13.9583 11.6667C13.9583 11.8377 13.8882 12.0013 13.7644 12.1193L12.0144 13.7859C11.7644 14.024 11.3688 14.0143 11.1307 13.7644C10.8927 13.5144 10.9023 13.1188 11.1523 12.8807L12.4271 11.6667L11.1523 10.4526C10.9023 10.2145 10.8927 9.81892 11.1307 9.56896Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M5.08333 6.04166C5.08333 6.38684 4.80351 6.66666 4.45833 6.66666C4.11316 6.66666 3.83333 6.38684 3.83333 6.04166C3.83333 5.69649 4.11316 5.41666 4.45833 5.41666C4.80351 5.41666 5.08333 5.69649 5.08333 6.04166Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M6.75008 6.04166C6.75008 6.38684 6.47026 6.66666 6.12508 6.66666C5.77991 6.66666 5.50008 6.38684 5.50008 6.04166C5.50008 5.69649 5.77991 5.41666 6.12508 5.41666C6.47026 5.41666 6.75008 5.69649 6.75008 6.04166Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M8.41675 6.04166C8.41675 6.38684 8.13693 6.66666 7.79175 6.66666C7.44657 6.66666 7.16675 6.38684 7.16675 6.04166C7.16675 5.69649 7.44657 5.41666 7.79175 5.41666C8.13693 5.41666 8.41675 5.69649 8.41675 6.04166Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3334_82005\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const BookmarkIcon = html `\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3433_78963)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        fill=\"currentColor\"\n        d=\"M4.16667 4.79167C3.59137 4.79167 3.125 5.25804 3.125 5.83334V14.1667C3.125 14.742 3.59137 15.2083 4.16667 15.2083H15.8333C16.4086 15.2083 16.875 14.742 16.875 14.1667V10C16.875 9.65483 17.1548 9.375 17.5 9.375C17.8452 9.375 18.125 9.65483 18.125 10V14.1667C18.125 15.4323 17.099 16.4583 15.8333 16.4583H4.16667C2.90101 16.4583 1.875 15.4323 1.875 14.1667V5.83334C1.875 4.56768 2.90101 3.54167 4.16667 3.54167H10C10.3452 3.54167 10.625 3.82149 10.625 4.16667C10.625 4.51185 10.3452 4.79167 10 4.79167H4.16667Z\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        fill=\"currentColor\"\n        d=\"M13.6063 3.48363C14.64 2.44991 16.316 2.44991 17.3497 3.48363C18.3834 4.51735 18.3834 6.19334 17.3497 7.22706L16.2774 8.29939C16.0333 8.54347 15.6376 8.54347 15.3935 8.29939C15.3371 8.24297 15.2937 8.17845 15.2634 8.10958C15.2915 8.82166 15.0338 9.54296 14.4902 10.0866L13.0604 11.5164C12.0267 12.5501 10.3507 12.5501 9.31696 11.5164C8.28324 10.4827 8.28324 8.80667 9.31696 7.77295L10.3893 6.70062C10.6334 6.45654 11.0291 6.45654 11.2732 6.70062C11.3296 6.75703 11.373 6.82155 11.4033 6.89043C11.3751 6.17834 11.6329 5.45705 12.1765 4.9134L13.6063 3.48363ZM11.4445 7.26331C11.4215 7.38099 11.3643 7.49333 11.2732 7.5845L10.2008 8.65683C9.65528 9.2024 9.65528 10.0869 10.2008 10.6325C10.7464 11.1781 11.6309 11.1781 12.1765 10.6325L13.6063 9.20272C14.1518 8.65716 14.1518 7.77262 13.6063 7.22706C13.5203 7.1411 13.4267 7.06921 13.3279 7.01087C13.0307 6.83533 12.932 6.45209 13.1076 6.15488C13.2831 5.85767 13.6664 5.75903 13.9636 5.93457C14.1521 6.04591 14.3293 6.18228 14.4902 6.34317C14.8849 6.73788 15.1289 7.22622 15.2221 7.7367C15.2452 7.61901 15.3023 7.50668 15.3935 7.4155L16.4658 6.34317C17.0114 5.79761 17.0114 4.91307 16.4658 4.36751C15.9203 3.82194 15.0357 3.82194 14.4902 4.36751L13.0604 5.79728C12.5148 6.34285 12.5148 7.22738 13.0604 7.77295C13.1463 7.8589 13.24 7.9308 13.3388 7.98914C13.636 8.16467 13.7346 8.54791 13.5591 8.84512C13.3835 9.14234 13.0003 9.24097 12.7031 9.06544C12.5146 8.9541 12.3374 8.81773 12.1765 8.65683C11.7818 8.26213 11.5378 7.77378 11.4445 7.26331Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3433_78963\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\nexport const ConnectorIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M17.5 4.75C16.5335 4.75 15.75 5.5335 15.75 6.5C15.75 7.4665 16.5335 8.25 17.5 8.25C18.4665 8.25 19.25 7.4665 19.25 6.5C19.25 5.5335 18.4665 4.75 17.5 4.75ZM14.25 6.5C14.25 4.70507 15.7051 3.25 17.5 3.25C19.2949 3.25 20.75 4.70507 20.75 6.5C20.75 8.29493 19.2949 9.75 17.5 9.75C16.8901 9.75 16.3194 9.58197 15.8317 9.28968L9.28968 15.8317C9.58197 16.3194 9.75 16.8901 9.75 17.5C9.75 19.2949 8.29493 20.75 6.5 20.75C4.70507 20.75 3.25 19.2949 3.25 17.5C3.25 15.7051 4.70507 14.25 6.5 14.25C7.1415 14.25 7.73958 14.4359 8.24335 14.7567L14.7567 8.24335C14.4359 7.73958 14.25 7.1415 14.25 6.5ZM6.5 15.75C5.5335 15.75 4.75 16.5335 4.75 17.5C4.75 18.4665 5.5335 19.25 6.5 19.25C7.4665 19.25 8.25 18.4665 8.25 17.5C8.25 16.5335 7.4665 15.75 6.5 15.75Z\"\n  />\n</svg>`;\nexport const PenIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M15.894 5.32233L15.0516 6.19412L17.8059 8.94836L18.6776 8.106C19.4422 7.33698 19.4408 6.09381 18.6735 5.32652C17.9062 4.55923 16.663 4.55783 15.894 5.32233ZM16.727 9.99082L14.0092 7.27298L6.16599 15.3901L5.11859 18.8814L8.60991 17.834L16.727 9.99082ZM14.8291 4.26586C16.1836 2.91138 18.3797 2.91138 19.7341 4.26586C21.0886 5.62033 21.0886 7.81637 19.7341 9.17085L19.725 9.17995L9.52114 19.0394C9.43501 19.1226 9.33021 19.184 9.2155 19.2184L4.2155 20.7184C3.95122 20.7977 3.66476 20.7254 3.46966 20.5303C3.27456 20.3352 3.20234 20.0488 3.28162 19.7845L4.78162 14.7845C4.81603 14.6698 4.87742 14.565 4.96064 14.4788L14.8291 4.26586Z\"\n  />\n</svg>`;\nexport const HandIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M14.8114 20.999C13.2447 20.9679 11.7002 20.6209 10.2699 19.9787L4.67482 17.3458C4.12742 17.0853 3.70531 16.6178 3.501 16.0458C3.29668 15.4737 3.32684 14.8437 3.58486 14.2938C3.84271 13.7454 4.30714 13.3222 4.87604 13.1172C5.44494 12.9122 6.07173 12.9422 6.61858 13.2006L7.66312 13.6926C7.17264 12.0254 6.19168 9.26496 4.72024 7.65243L3.81194 6.9145C3.37099 6.55513 3.08591 6.03846 3.01648 5.47286C2.94705 4.90727 3.09867 4.33669 3.43953 3.88077C3.78344 3.42341 4.29072 3.11757 4.85476 3.02753C5.4188 2.93748 5.99569 3.07025 6.46417 3.39792C7.56208 4.18419 8.52532 5.14417 9.31623 6.24033C9.58326 5.83988 9.97184 5.53639 10.4244 5.37486C10.7041 5.27066 11.002 5.22422 11.3001 5.23831C11.5982 5.2524 11.8904 5.32672 12.1592 5.45685C12.4015 5.57016 12.6227 5.72422 12.8132 5.91236C13.058 5.63326 13.371 5.42289 13.7215 5.30197C13.9828 5.20656 14.2604 5.16466 14.5381 5.17874C14.8158 5.19282 15.0879 5.2626 15.3383 5.38396C15.6253 5.51414 15.8775 5.71086 16.074 5.95792C16.1756 5.89185 16.2856 5.83976 16.401 5.80304C16.7997 5.65961 17.2388 5.68073 17.622 5.86179C18.0052 6.04285 18.301 6.36905 18.4446 6.76873L20.6155 12.818C21.1282 14.2647 21.1282 15.8444 20.6155 17.2911C20.3444 18.0579 19.9061 18.7544 19.3326 19.3296C18.759 19.9049 18.0647 20.3445 17.3002 20.6164C16.4979 20.8833 15.6566 21.0127 14.8114 20.999ZM5.75747 14.4032C5.62583 14.3751 5.4278 14.3671 5.32879 14.4032C5.21385 14.4428 5.108 14.5051 5.01751 14.5865C4.92702 14.6678 4.85373 14.7666 4.80198 14.8769C4.74874 14.9866 4.71803 15.106 4.71166 15.2278C4.7053 15.3497 4.72341 15.4716 4.76492 15.5863C4.80643 15.7011 4.8705 15.8062 4.95332 15.8957C5.03614 15.9851 5.13602 16.0569 5.24704 16.1068L10.8058 18.7943C10.8058 18.7943 14.0939 20.3249 16.8006 19.3501C17.3787 19.1551 17.9049 18.8307 18.3392 18.4013C18.7736 17.9719 19.1048 17.449 19.3075 16.8721C19.7157 15.7262 19.7157 14.474 19.3075 13.3282L17.1276 7.27891C17.1185 7.2489 17.1033 7.22112 17.083 7.19728C17.0626 7.17344 17.0376 7.15407 17.0095 7.14038C16.9813 7.1267 16.9507 7.119 16.9194 7.11775C16.8882 7.11651 16.857 7.12174 16.8279 7.13314C16.7706 7.1556 16.7243 7.19958 16.6989 7.25572C16.6734 7.31186 16.6708 7.37574 16.6916 7.43378L17.0004 8.34481C17.0366 8.43122 17.0546 8.52416 17.0534 8.61785C17.0522 8.71153 17.0318 8.80397 16.9934 8.88941C16.9551 8.97485 16.8997 9.05147 16.8305 9.11451C16.7614 9.17755 16.6801 9.22565 16.5917 9.25584C16.5056 9.29207 16.4129 9.31014 16.3195 9.30893C16.2261 9.30772 16.1339 9.28726 16.0487 9.24881C15.9636 9.21036 15.8872 9.15474 15.8243 9.08543C15.7615 9.01611 15.7135 8.93458 15.6834 8.84588L15.0839 7.16959C15.0101 6.98388 14.8712 6.8316 14.6934 6.7414C14.6028 6.70307 14.5055 6.68331 14.4072 6.68331C14.309 6.68331 14.2117 6.70307 14.1211 6.7414C13.9396 6.80212 13.7882 6.93063 13.6986 7.10026C13.609 7.2699 13.5879 7.46763 13.6397 7.65243L13.8941 8.60902C13.9389 8.7793 13.9156 8.96042 13.829 9.11365C13.7424 9.26688 13.5995 9.38005 13.4308 9.42894C13.2645 9.4814 13.0845 9.46702 12.9285 9.38884C12.7726 9.31065 12.6531 9.17476 12.5952 9.00986L11.9957 7.35179C11.9119 7.12856 11.7441 6.94721 11.5284 6.84671C11.3127 6.7462 11.0663 6.73457 10.8422 6.81429C10.6196 6.89838 10.4388 7.06666 10.3386 7.283C10.2384 7.49933 10.2268 7.74646 10.3063 7.97129L10.7423 9.19208C10.7784 9.27848 10.7964 9.37141 10.7952 9.4651C10.794 9.55878 10.7736 9.65122 10.7352 9.73666C10.6969 9.8221 10.6415 9.89872 10.5724 9.96176C10.5033 10.0248 10.422 10.0729 10.3335 10.1031C10.2474 10.1393 10.1547 10.1574 10.0613 10.1562C9.96791 10.155 9.87575 10.1345 9.79056 10.0961C9.70538 10.0576 9.62899 10.002 9.56614 9.93269C9.50329 9.86338 9.45533 9.78183 9.42523 9.69313C8.68278 7.68202 7.3454 5.94647 5.5922 4.71891C5.41716 4.59322 5.19975 4.54185 4.98718 4.57597C4.7746 4.61008 4.58403 4.72692 4.45683 4.90112C4.32552 5.07405 4.33703 5.23645 4.36245 5.45231C4.38787 5.66818 4.49591 5.8657 4.66377 6.00319L5.57207 6.76845L5.63565 6.83222C8.11531 9.50154 9.26884 14.7126 9.31426 14.9313C9.34154 15.0568 9.33301 15.1875 9.28963 15.3083C9.24625 15.4292 9.1698 15.5353 9.06902 15.6146C8.96956 15.6916 8.85101 15.74 8.72616 15.7544C8.60131 15.7689 8.47489 15.7489 8.36055 15.6966L6.77594 14.8769C6.38102 14.6614 6.29788 14.5865 5.75747 14.4032Z\"\n  />\n</svg>`;\nexport const SquareIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" stroke-width=\"1.5\" />\n</svg>`;\nexport const EllipseIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <circle cx=\"12\" cy=\"12\" r=\"9\" stroke-width=\"1.5\" />\n</svg>`;\nexport const DiamondIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path d=\"M3 12L12 3L21 12L12 21L3 12Z\" stroke-width=\"1.5\" />\n</svg>`;\nexport const TriangleIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path d=\"M12 4L20.6603 19H3.33975L12 4Z\" stroke-width=\"1.5\" />\n</svg>`;\nexport const RoundedRectangleIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke-width=\"1.5\" />\n</svg>`;\nexport const CollapseDownIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12 3.25C12.4142 3.25 12.75 3.58579 12.75 4V14.1893L15.4697 11.4697C15.7626 11.1768 16.2374 11.1768 16.5303 11.4697C16.8232 11.7626 16.8232 12.2374 16.5303 12.5303L12.5303 16.5303C12.2374 16.8232 11.7626 16.8232 11.4697 16.5303L7.46967 12.5303C7.17678 12.2374 7.17678 11.7626 7.46967 11.4697C7.76256 11.1768 8.23744 11.1768 8.53033 11.4697L11.25 14.1893V4C11.25 3.58579 11.5858 3.25 12 3.25ZM3.25 20C3.25 19.5858 3.58579 19.25 4 19.25H20C20.4142 19.25 20.75 19.5858 20.75 20C20.75 20.4142 20.4142 20.75 20 20.75H4C3.58579 20.75 3.25 20.4142 3.25 20Z\"\n  />\n</svg>`;\nexport const MinusIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M5.25 12C5.25 11.5858 5.58579 11.25 6 11.25H18C18.4142 11.25 18.75 11.5858 18.75 12C18.75 12.4142 18.4142 12.75 18 12.75H6C5.58579 12.75 5.25 12.4142 5.25 12Z\"\n  />\n</svg>`;\nexport const PlusIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12 5.25C12.4142 5.25 12.75 5.58579 12.75 6V11.25H18C18.4142 11.25 18.75 11.5858 18.75 12C18.75 12.4142 18.4142 12.75 18 12.75H12.75V18C12.75 18.4142 12.4142 18.75 12 18.75C11.5858 18.75 11.25 18.4142 11.25 18V12.75H6C5.58579 12.75 5.25 12.4142 5.25 12C5.25 11.5858 5.58579 11.25 6 11.25H11.25V6C11.25 5.58579 11.5858 5.25 12 5.25Z\"\n  />\n</svg>`;\nexport const ViewBarIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M3.25 20C2.83579 20 2.5 19.6642 2.5 19.25V4.75C2.5 4.33579 2.83579 4 3.25 4C3.66421 4 4 4.33579 4 4.75L4 19.25C4 19.6642 3.66421 20 3.25 20Z\"\n  />\n  <path\n    d=\"M9.16494 8.43945C9.47453 8.71464 9.50241 9.18869 9.22722 9.49828L7.67013 11.25H16.3299L14.7728 9.49828C14.4976 9.18869 14.5255 8.71464 14.8351 8.43945C15.1446 8.16426 15.6187 8.19215 15.8939 8.50174L18.5606 11.5017C18.8131 11.7859 18.8131 12.2141 18.5606 12.4983L15.8939 15.4983C15.6187 15.8079 15.1446 15.8358 14.8351 15.5606C14.5255 15.2854 14.4976 14.8113 14.7728 14.5017L16.3299 12.75H7.67013L9.22722 14.5017C9.50241 14.8113 9.47453 15.2854 9.16494 15.5606C8.85535 15.8358 8.3813 15.8079 8.10611 15.4983L5.43944 12.4983C5.18685 12.2141 5.18685 11.7859 5.43944 11.5017L8.10611 8.50174C8.3813 8.19215 8.85535 8.16426 9.16494 8.43945Z\"\n  />\n  <path\n    d=\"M21.5 4.75C21.5 4.33579 21.1642 4 20.75 4C20.3358 4 20 4.33579 20 4.75V19.25C20 19.6642 20.3358 20 20.75 20C21.1642 20 21.5 19.6642 21.5 19.25V4.75Z\"\n  />\n</svg>`;\nexport const TransparentIcon = html `<svg\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M-0.939238 4.14286C-0.979281 4.4228 -1 4.70898 -1 5V6.71429H1.57143V9.28571H-1V11C-1 11.291 -0.979281 11.5772 -0.939238 11.8571H1.57143V14.4286H0.0754482C0.481795 15.0111 0.988871 15.5182 1.57143 15.9246V14.4286L4.14286 14.4286V16.9392C4.4228 16.9793 4.70898 17 5 17H6.71429V14.4286H9.28571V17H11C11.291 17 11.5772 16.9793 11.8571 16.9392V14.4286H14.4286L14.4286 15.9246C15.0111 15.5182 15.5182 15.0111 15.9246 14.4286L14.4286 14.4286V11.8571H16.9392C16.9793 11.5772 17 11.291 17 11V9.28571H14.4286V6.71429H17V5C17 4.70898 16.9793 4.4228 16.9392 4.14286H14.4286V1.57143H15.9246C15.5182 0.988871 15.0111 0.481795 14.4286 0.075448L14.4286 1.57143H11.8571V-0.939238C11.5772 -0.979281 11.291 -1 11 -1H9.28571V1.57143H6.71429V-1H5C4.70898 -1 4.4228 -0.979281 4.14286 -0.939238V1.57143H1.57143V0.0754479C0.988871 0.481795 0.481795 0.988871 0.0754479 1.57143H1.57143V4.14286H-0.939238ZM4.14286 4.14286V1.57143H6.71429V4.14286H4.14286ZM4.14286 6.71429H1.57143V4.14286H4.14286V6.71429ZM6.71429 6.71429V4.14286H9.28571V6.71429H6.71429ZM6.71429 9.28571V6.71429H4.14286V9.28571H1.57143V11.8571H4.14286V14.4286H6.71429V11.8571H9.28571V14.4286H11.8571V11.8571H14.4286V9.28571H11.8571V6.71429H14.4286V4.14286H11.8571V1.57143H9.28571V4.14286H11.8571V6.71429H9.28571V9.28571H6.71429ZM6.71429 9.28571V11.8571H4.14286V9.28571H6.71429ZM9.28571 9.28571H11.8571V11.8571H9.28571V9.28571Z\"\n    fill=\"#D9D9D9\"\n  />\n</svg>`;\nexport const MoreHorizontalIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 20 20\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M10 5.00004C9.53978 5.00004 9.16669 4.62694 9.16669 4.16671C9.16669 3.70647 9.53978 3.33337 10 3.33337C10.4603 3.33337 10.8334 3.70647 10.8334 4.16671C10.8334 4.62694 10.4603 5.00004 10 5.00004Z\"\n  />\n  <path\n    d=\"M10 10.8334C9.53978 10.8334 9.16669 10.4603 9.16669 10C9.16669 9.5398 9.53978 9.16671 10 9.16671C10.4603 9.16671 10.8334 9.5398 10.8334 10C10.8334 10.4603 10.4603 10.8334 10 10.8334Z\"\n  />\n  <path\n    d=\"M10 16.6667C9.53978 16.6667 9.16669 16.2936 9.16669 15.8334C9.16669 15.3731 9.53978 15 10 15C10.4603 15 10.8334 15.3731 10.8334 15.8334C10.8334 16.2936 10.4603 16.6667 10 16.6667Z\"\n  />\n  <path\n    d=\"M10 5.00004C9.53978 5.00004 9.16669 4.62694 9.16669 4.16671C9.16669 3.70647 9.53978 3.33337 10 3.33337C10.4603 3.33337 10.8334 3.70647 10.8334 4.16671C10.8334 4.62694 10.4603 5.00004 10 5.00004Z\"\n  />\n  <path\n    d=\"M10 10.8334C9.53978 10.8334 9.16669 10.4603 9.16669 10C9.16669 9.5398 9.53978 9.16671 10 9.16671C10.4603 9.16671 10.8334 9.5398 10.8334 10C10.8334 10.4603 10.4603 10.8334 10 10.8334Z\"\n  />\n  <path\n    d=\"M10 16.6667C9.53978 16.6667 9.16669 16.2936 9.16669 15.8334C9.16669 15.3731 9.53978 15 10 15C10.4603 15 10.8334 15.3731 10.8334 15.8334C10.8334 16.2936 10.4603 16.6667 10 16.6667Z\"\n  />\n</svg>`;\nexport const LineStyleIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 20 20\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M2.70825 3.33325C2.70825 2.98807 2.98807 2.70825 3.33325 2.70825H5.83325C6.17843 2.70825 6.45825 2.98807 6.45825 3.33325C6.45825 3.67843 6.17843 3.95825 5.83325 3.95825H3.33325C2.98807 3.95825 2.70825 3.67843 2.70825 3.33325Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.12492 3.33325C8.12492 2.98807 8.40474 2.70825 8.74992 2.70825L11.2499 2.70825C11.5951 2.70825 11.8749 2.98807 11.8749 3.33325C11.8749 3.67843 11.5951 3.95825 11.2499 3.95825L8.74992 3.95825C8.40474 3.95825 8.12492 3.67843 8.12492 3.33325Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M16.6666 3.95825L14.1666 3.95825C13.8214 3.95825 13.5416 3.67843 13.5416 3.33325C13.5416 2.98807 13.8214 2.70825 14.1666 2.70825L16.6666 2.70825C17.0118 2.70825 17.2916 2.98807 17.2916 3.33325C17.2916 3.67843 17.0118 3.95825 16.6666 3.95825Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M2.70825 9.99992C2.70825 9.65474 2.98807 9.37492 3.33325 9.37492H16.6666C17.0118 9.37492 17.2916 9.65474 17.2916 9.99992C17.2916 10.3451 17.0118 10.6249 16.6666 10.6249H3.33325C2.98807 10.6249 2.70825 10.3451 2.70825 9.99992Z\"\n    fill=\"#77757D\"\n  />\n  <path\n    d=\"M2.70825 16.2499C2.70825 15.6746 3.17462 15.2083 3.74992 15.2083H16.2499C16.8252 15.2083 17.2916 15.6746 17.2916 16.2499C17.2916 16.8252 16.8252 17.2916 16.2499 17.2916H3.74992C3.17462 17.2916 2.70825 16.8252 2.70825 16.2499Z\"\n    fill=\"#77757D\"\n  />\n</svg>`;\nexport const ConnectorXIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M11.25 7C11.25 5.48122 12.4812 4.25 14 4.25H21C21.4142 4.25 21.75 4.58579 21.75 5C21.75 5.41421 21.4142 5.75 21 5.75H14C13.3096 5.75 12.75 6.30964 12.75 7V17C12.75 18.5188 11.5188 19.75 10 19.75H3C2.58579 19.75 2.25 19.4142 2.25 19C2.25 18.5858 2.58579 18.25 3 18.25H10C10.6904 18.25 11.25 17.6904 11.25 17V7Z\"\n  />\n</svg>`;\nexport const ConnectorLIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20.5303 3.53034C20.8232 3.82323 20.8232 4.29811 20.5303 4.591L4.591 20.5303C4.29811 20.8232 3.82323 20.8232 3.53034 20.5303C3.23745 20.2374 3.23745 19.7626 3.53034 19.4697L19.4697 3.53034C19.7626 3.23745 20.2374 3.23745 20.5303 3.53034Z\"\n  />\n</svg>`;\nexport const DashLineIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20.5303 3.53034C20.8232 3.82323 20.8232 4.29811 20.5303 4.591L17.341 7.78034C17.0481 8.07323 16.5732 8.07323 16.2803 7.78034C15.9874 7.48745 15.9874 7.01257 16.2803 6.71968L19.4697 3.53034C19.7626 3.23745 20.2374 3.23745 20.5303 3.53034Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M14.1553 9.90534C14.4482 10.1982 14.4482 10.6731 14.1553 10.966L10.966 14.1553C10.6731 14.4482 10.1982 14.4482 9.90534 14.1553C9.61245 13.8624 9.61245 13.3876 9.90534 13.0947L13.0947 9.90534C13.3876 9.61245 13.8624 9.61245 14.1553 9.90534Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M7.78034 16.2803C8.07323 16.5732 8.07323 17.0481 7.78034 17.341L4.591 20.5303C4.29811 20.8232 3.82323 20.8232 3.53034 20.5303C3.23745 20.2374 3.23745 19.7626 3.53034 19.4697L6.71968 16.2803C7.01257 15.9874 7.48745 15.9874 7.78034 16.2803Z\"\n  />\n</svg>`;\nexport const BanIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M6.72068 18.34L18.34 6.72068C19.5331 8.15171 20.25 9.99158 20.25 12C20.25 16.5563 16.5563 20.25 12 20.25C9.99158 20.25 8.15171 19.5331 6.72068 18.34ZM17.2793 5.66002L5.66002 17.2793C4.46691 15.8483 3.75 14.0084 3.75 12C3.75 7.44365 7.44365 3.75 12 3.75C14.0084 3.75 15.8483 4.46691 17.2793 5.66002ZM5.10571 18.8943C6.86929 20.6579 9.30782 21.75 12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 9.30782 20.6579 6.86929 18.8943 5.10571C17.1307 3.34213 14.6922 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 14.6922 3.34213 17.1307 5.10571 18.8943Z\"\n  />\n</svg>`;\nexport const NoteIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.25 6C3.25 4.48122 4.48122 3.25 6 3.25H14C14.4142 3.25 14.75 3.58579 14.75 4C14.75 4.41421 14.4142 4.75 14 4.75H6C5.30964 4.75 4.75 5.30964 4.75 6V20C4.75 20.4142 4.41421 20.75 4 20.75C3.58579 20.75 3.25 20.4142 3.25 20V6Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20.75 18C20.75 19.5188 19.5188 20.75 18 20.75H10C9.58579 20.75 9.25 20.4142 9.25 20C9.25 19.5858 9.58579 19.25 10 19.25L18 19.25C18.6904 19.25 19.25 18.6904 19.25 18L19.25 4C19.25 3.58579 19.5858 3.25 20 3.25C20.4142 3.25 20.75 3.58579 20.75 4L20.75 18Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.25 9C8.25 8.0335 9.0335 7.25 10 7.25H14C14.9665 7.25 15.75 8.0335 15.75 9V11C15.75 11.9665 14.9665 12.75 14 12.75H10C9.0335 12.75 8.25 11.9665 8.25 11V9ZM10 8.75C9.86193 8.75 9.75 8.86193 9.75 9V11C9.75 11.1381 9.86193 11.25 10 11.25H14C14.1381 11.25 14.25 11.1381 14.25 11V9C14.25 8.86193 14.1381 8.75 14 8.75H10Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.25 16C8.25 15.5858 8.58579 15.25 9 15.25H15C15.4142 15.25 15.75 15.5858 15.75 16C15.75 16.4142 15.4142 16.75 15 16.75H9C8.58579 16.75 8.25 16.4142 8.25 16Z\"\n  />\n</svg>`;\nexport const ImportIcon = html `<svg\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.00004 0.708313C8.34522 0.708313 8.62504 0.988135 8.62504 1.33331V8.71332L9.78032 7.55804C10.0244 7.31396 10.4201 7.31396 10.6642 7.55804C10.9083 7.80211 10.9083 8.19784 10.6642 8.44192L8.44198 10.6641C8.32477 10.7814 8.1658 10.8472 8.00004 10.8472C7.83428 10.8472 7.67531 10.7814 7.5581 10.6641L5.33588 8.44192C5.0918 8.19784 5.0918 7.80211 5.33588 7.55804C5.57996 7.31396 5.97568 7.31396 6.21976 7.55804L7.37504 8.71332V1.33331C7.37504 0.988135 7.65486 0.708313 8.00004 0.708313ZM3.67888 5.15276L4.29634 5.15276C4.64152 5.15276 4.92134 5.43258 4.92134 5.77776C4.92134 6.12294 4.64152 6.40276 4.29634 6.40276H3.70375C3.27858 6.40276 2.99729 6.40324 2.78161 6.42087C2.57322 6.43789 2.48168 6.46775 2.42602 6.49611C2.26486 6.57822 2.13384 6.70925 2.05173 6.8704C2.02337 6.92606 1.99351 7.0176 1.97648 7.22599C1.95886 7.44167 1.95837 7.72296 1.95837 8.14813V12.2963C1.95837 12.7214 1.95886 13.0027 1.97648 13.2184C1.99351 13.4268 2.02337 13.5183 2.05173 13.574C2.13384 13.7352 2.26486 13.8662 2.42602 13.9483C2.48168 13.9767 2.57322 14.0065 2.78161 14.0235C2.99729 14.0412 3.27858 14.0416 3.70375 14.0416H12.2963C12.7215 14.0416 13.0028 14.0412 13.2185 14.0235C13.4269 14.0065 13.5184 13.9767 13.5741 13.9483C13.7352 13.8662 13.8662 13.7352 13.9484 13.574C13.9767 13.5183 14.0066 13.4268 14.0236 13.2184C14.0412 13.0027 14.0417 12.7214 14.0417 12.2963V8.14813C14.0417 7.72296 14.0412 7.44167 14.0236 7.22599C14.0066 7.0176 13.9767 6.92607 13.9484 6.87041C13.8662 6.70925 13.7352 6.57822 13.5741 6.49611C13.5184 6.46775 13.4269 6.43789 13.2185 6.42087C13.0028 6.40324 12.7215 6.40276 12.2963 6.40276H11.7037C11.3586 6.40276 11.0787 6.12294 11.0787 5.77776C11.0787 5.43258 11.3586 5.15276 11.7037 5.15276L12.3212 5.15276C12.7149 5.15275 13.0476 5.15274 13.3203 5.17502C13.606 5.19836 13.8803 5.24924 14.1416 5.38235C14.5379 5.58431 14.8602 5.90656 15.0621 6.30292C15.1952 6.56416 15.2461 6.83851 15.2694 7.1242C15.2917 7.39687 15.2917 7.72958 15.2917 8.12324V12.3212C15.2917 12.7148 15.2917 13.0475 15.2694 13.3202C15.2461 13.6059 15.1952 13.8802 15.0621 14.1415C14.8602 14.5378 14.5379 14.8601 14.1416 15.0621C13.8803 15.1952 13.606 15.246 13.3203 15.2694C13.0476 15.2917 12.7149 15.2917 12.3212 15.2916H3.67886C3.2852 15.2917 2.95248 15.2917 2.67982 15.2694C2.39413 15.246 2.11978 15.1952 1.85853 15.0621C1.46217 14.8601 1.13992 14.5378 0.937968 14.1415C0.804856 13.8802 0.753976 13.6059 0.730635 13.3202C0.708356 13.0475 0.708365 12.7148 0.708374 12.3211V8.12326C0.708365 7.72959 0.708356 7.39687 0.730635 7.1242C0.753976 6.83851 0.804856 6.56416 0.937968 6.30292C1.13992 5.90656 1.46217 5.58431 1.85853 5.38235C2.11978 5.24924 2.39413 5.19836 2.67982 5.17502C2.95249 5.15274 3.28521 5.15275 3.67888 5.15276Z\"\n    fill=\"#77757D\"\n  />\n</svg>`;\nexport const AlighLeftIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g clip-path=\"url(#clip0_2131_19971)\">\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M4.7085 6.16675C4.7085 5.82157 4.98832 5.54175 5.3335 5.54175H18.6668C19.012 5.54175 19.2918 5.82157 19.2918 6.16675C19.2918 6.51193 19.012 6.79175 18.6668 6.79175H5.3335C4.98832 6.79175 4.7085 6.51193 4.7085 6.16675Z\"\n      fill=\"#77757D\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M4.7085 12.0001C4.7085 11.6549 4.98832 11.3751 5.3335 11.3751H13.6668C14.012 11.3751 14.2918 11.6549 14.2918 12.0001C14.2918 12.3453 14.012 12.6251 13.6668 12.6251H5.3335C4.98832 12.6251 4.7085 12.3453 4.7085 12.0001Z\"\n      fill=\"#77757D\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M4.7085 17.8334C4.7085 17.4882 4.98832 17.2084 5.3335 17.2084H15.3335C15.6787 17.2084 15.9585 17.4882 15.9585 17.8334C15.9585 18.1786 15.6787 18.4584 15.3335 18.4584H5.3335C4.98832 18.4584 4.7085 18.1786 4.7085 17.8334Z\"\n      fill=\"#77757D\"\n    />\n  </g>\n  <defs>\n    <clipPath id=\"clip0_2131_19971\">\n      <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n    </clipPath>\n  </defs>\n</svg>`;\nexport const AlignCenterIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g clip-path=\"url(#clip0_2131_19972)\">\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M4.7085 6.16675C4.7085 5.82157 4.98832 5.54175 5.3335 5.54175H18.6668C19.012 5.54175 19.2918 5.82157 19.2918 6.16675C19.2918 6.51193 19.012 6.79175 18.6668 6.79175H5.3335C4.98832 6.79175 4.7085 6.51193 4.7085 6.16675Z\"\n      fill=\"#77757D\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M7.2085 12.0001C7.2085 11.6549 7.48832 11.3751 7.8335 11.3751H16.1668C16.512 11.3751 16.7918 11.6549 16.7918 12.0001C16.7918 12.3453 16.512 12.6251 16.1668 12.6251H7.8335C7.48832 12.6251 7.2085 12.3453 7.2085 12.0001Z\"\n      fill=\"#77757D\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M6.37516 17.8334C6.37516 17.4882 6.65498 17.2084 7.00016 17.2084H17.0002C17.3453 17.2084 17.6252 17.4882 17.6252 17.8334C17.6252 18.1786 17.3453 18.4584 17.0002 18.4584H7.00016C6.65498 18.4584 6.37516 18.1786 6.37516 17.8334Z\"\n      fill=\"#77757D\"\n    />\n  </g>\n  <defs>\n    <clipPath id=\"clip0_2131_19972\">\n      <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n    </clipPath>\n  </defs>\n</svg>`;\nexport const AlignRightIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g clip-path=\"url(#clip0_2131_19973)\">\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M4.7085 6.16675C4.7085 5.82157 4.98832 5.54175 5.3335 5.54175H18.6668C19.012 5.54175 19.2918 5.82157 19.2918 6.16675C19.2918 6.51193 19.012 6.79175 18.6668 6.79175H5.3335C4.98832 6.79175 4.7085 6.51193 4.7085 6.16675Z\"\n      fill=\"#77757D\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M9.7085 12.0001C9.7085 11.6549 9.98832 11.3751 10.3335 11.3751H18.6668C19.012 11.3751 19.2918 11.6549 19.2918 12.0001C19.2918 12.3453 19.012 12.6251 18.6668 12.6251H10.3335C9.98832 12.6251 9.7085 12.3453 9.7085 12.0001Z\"\n      fill=\"#77757D\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M8.04183 17.8334C8.04183 17.4882 8.32165 17.2084 8.66683 17.2084H18.6668C19.012 17.2084 19.2918 17.4882 19.2918 17.8334C19.2918 18.1786 19.012 18.4584 18.6668 18.4584H8.66683C8.32165 18.4584 8.04183 18.1786 8.04183 17.8334Z\"\n      fill=\"#77757D\"\n    />\n  </g>\n  <defs>\n    <clipPath id=\"clip0_2131_19973\">\n      <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n    </clipPath>\n  </defs>\n</svg>`;\n//# sourceMappingURL=edgeless.js.map","import { html } from 'lit';\nexport function fontIcon(svg, baseSize = 20) {\n    // assume 1em = 16px\n    const size = baseSize / 16;\n    // Control Icons with Font Size\n    // Set the width and height to be 1em, which will be the font-size of its parent element\n    // See https://css-tricks.com/control-icons-with-font-size/\n    const fontIconStyle = `\n    width: ${size}em;\n    height: ${size}em;\n    vertical-align: middle;\n    font-size: inherit;\n    margin-bottom: 0.1em;\n  `;\n    return html `<svg\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    style=${fontIconStyle}\n  >\n    ${svg}\n  </svg>`;\n}\nexport function icon(svg, size = 24) {\n    return html `<svg\n    width=\"${size}\"\n    height=\"${size}\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    ${svg}\n  </svg>`;\n}\n//# sourceMappingURL=utils.js.map","import { html, svg } from 'lit';\nimport { fontIcon, icon } from './utils.js';\n// Paragraph icons\nconst TextSVG = svg `<path\n  fill-rule=\"evenodd\"\n  clip-rule=\"evenodd\"\n  d=\"M3.25 4C3.25 3.58579 3.58579 3.25 4 3.25H20C20.4142 3.25 20.75 3.58579 20.75 4V6.66667C20.75 7.08088 20.4142 7.41667 20 7.41667C19.5858 7.41667 19.25 7.08088 19.25 6.66667V4.75H12.75V19.25H16C16.4142 19.25 16.75 19.5858 16.75 20C16.75 20.4142 16.4142 20.75 16 20.75H8C7.58579 20.75 7.25 20.4142 7.25 20C7.25 19.5858 7.58579 19.25 8 19.25H11.25V4.75H4.75V6.66667C4.75 7.08088 4.41421 7.41667 4 7.41667C3.58579 7.41667 3.25 7.08088 3.25 6.66667V4Z\"\n/>`;\nexport const TextIcon = icon(TextSVG, 20);\n/**\n * When icons with same shape with have multiple sizes, mark them as Small, _, Large size\n * For example: TextIconSmall, TextIcon, TextIconLarge\n */\nexport const TextIconLarge = icon(TextSVG);\nexport const H1Icon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3 4.25C3.41421 4.25 3.75 4.58579 3.75 5V11.25H10.25V5C10.25 4.58579 10.5858 4.25 11 4.25C11.4142 4.25 11.75 4.58579 11.75 5V19C11.75 19.4142 11.4142 19.75 11 19.75C10.5858 19.75 10.25 19.4142 10.25 19V12.75H3.75V19C3.75 19.4142 3.41421 19.75 3 19.75C2.58579 19.75 2.25 19.4142 2.25 19V5C2.25 4.58579 2.58579 4.25 3 4.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M16.7499 6.81081C16.7231 6.83762 16.6947 6.86599 16.6646 6.89602L14.5303 9.03033C14.2374 9.32322 13.7626 9.32322 13.4697 9.03033C13.1768 8.73744 13.1768 8.26256 13.4697 7.96967L15.604 5.83536C15.6113 5.82808 15.6185 5.82081 15.6258 5.81357C15.8211 5.61819 16.0018 5.43743 16.1578 5.30688C16.3005 5.18739 16.5575 4.98807 16.9019 4.96096C17.3008 4.92957 17.6906 5.09103 17.9505 5.3953C18.1749 5.65804 18.2157 5.98068 18.2321 6.16609C18.25 6.36867 18.25 6.62428 18.25 6.90057C18.25 6.91081 18.25 6.92108 18.25 6.93137V18.25H21C21.4142 18.25 21.75 18.5858 21.75 19C21.75 19.4142 21.4142 19.75 21 19.75H14C13.5858 19.75 13.25 19.4142 13.25 19C13.25 18.5858 13.5858 18.25 14 18.25H16.75V6.93137C16.75 6.88891 16.75 6.84878 16.7499 6.81081Z\"\n  />\n</svg>`;\nexport const H2Icon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3 4.25C3.41421 4.25 3.75 4.58579 3.75 5V11.25H10.25V5C10.25 4.58579 10.5858 4.25 11 4.25C11.4142 4.25 11.75 4.58579 11.75 5V19C11.75 19.4142 11.4142 19.75 11 19.75C10.5858 19.75 10.25 19.4142 10.25 19V12.75H3.75V19C3.75 19.4142 3.41421 19.75 3 19.75C2.58579 19.75 2.25 19.4142 2.25 19V5C2.25 4.58579 2.58579 4.25 3 4.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M16.9057 6.75035C16.3267 6.802 15.7718 7.01946 15.3049 7.3801C14.8318 7.74548 14.4682 8.24309 14.2591 8.81605C14.1172 9.20517 13.6866 9.40552 13.2975 9.26355C12.9084 9.12157 12.708 8.69103 12.85 8.30191C13.155 7.46589 13.6877 6.73376 14.388 6.19294C15.0884 5.65199 15.927 5.32534 16.8055 5.25346L16.8277 5.25164L16.8499 5.25115C17.8967 5.22771 18.9191 5.56392 19.7537 6.20306C20.5868 6.84102 21.1843 7.74329 21.4548 8.76409C21.7891 9.97619 21.5425 11.1146 21.1354 12.0147C20.7302 12.9106 20.1448 13.6215 19.7055 14.0279L19.6986 14.0343L19.6916 14.0405C18.9491 14.6937 18.1744 15.3076 17.3705 15.88C16.4743 16.5815 15.6527 17.3759 14.9186 18.25H21.2C21.6142 18.25 21.95 18.5858 21.95 19C21.95 19.4142 21.6142 19.75 21.2 19.75H13.5917C12.9084 19.75 12.4943 18.9759 12.9002 18.4076C13.9053 16.9999 15.1041 15.7469 16.4602 14.6877L16.4735 14.6773L16.4872 14.6675C17.2512 14.1242 17.9876 13.5412 18.6934 12.9208C19.0046 12.631 19.4584 12.0827 19.7687 11.3966C20.0787 10.7111 20.2239 9.93968 20.008 9.16007L20.0056 9.15134C19.8193 8.44582 19.4083 7.82782 18.8418 7.394C18.2815 6.965 17.6006 6.73982 16.9057 6.75035Z\"\n  />\n</svg>`;\nexport const H3Icon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3 4.25C3.41421 4.25 3.75 4.58579 3.75 5V11.25H10.25V5C10.25 4.58579 10.5858 4.25 11 4.25C11.4142 4.25 11.75 4.58579 11.75 5V19C11.75 19.4142 11.4142 19.75 11 19.75C10.5858 19.75 10.25 19.4142 10.25 19V12.75H3.75V19C3.75 19.4142 3.41421 19.75 3 19.75C2.58579 19.75 2.25 19.4142 2.25 19V5C2.25 4.58579 2.58579 4.25 3 4.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M17.3196 6.75154C16.8178 6.78189 16.3346 6.95347 15.926 7.24657C15.5153 7.54113 15.1968 7.94629 15.0075 8.41487C14.8523 8.79893 14.4152 8.98449 14.0312 8.82933C13.6471 8.67418 13.4616 8.23706 13.6167 7.853C13.9125 7.1209 14.4101 6.48789 15.0517 6.02769C15.6933 5.56749 16.4525 5.29903 17.2408 5.25359L17.2482 5.25316L17.2557 5.25288C18.2533 5.21525 19.2296 5.54803 19.9965 6.18714C20.7634 6.82626 21.2668 7.72652 21.4097 8.71457L21.4143 8.74618L21.4161 8.77807C21.4603 9.53257 21.2968 10.2847 20.9433 10.9528C20.6919 11.4279 20.3514 11.8475 19.9423 12.1898C20.4639 12.4619 20.9143 12.8568 21.2521 13.4177C21.8984 14.4739 21.8675 15.759 21.4573 16.838C21.0461 17.9197 20.2127 18.9107 19.0815 19.378L19.0786 19.3792C18.0333 19.8058 16.8745 19.8662 15.7905 19.5506C14.7065 19.2351 13.7612 18.5621 13.1082 17.6411C12.8686 17.3032 12.9483 16.8351 13.2862 16.5955C13.6241 16.3559 14.0923 16.4356 14.3318 16.7735C14.789 17.4183 15.4508 17.8895 16.2098 18.1104C16.9681 18.3312 17.7789 18.2891 18.5103 17.991C19.1943 17.7079 19.7645 17.0696 20.0552 16.305C20.3467 15.5381 20.3161 14.7606 19.9717 14.199L19.9682 14.1933C19.5426 13.4852 18.7016 13.1471 17.2275 13.1471C17.2201 13.1471 17.2121 13.1471 17.2038 13.1471C17.1523 13.1472 17.0876 13.1473 17.0508 13.1451C17.0439 13.1447 17.0076 13.1426 16.9647 13.1352L16.9637 13.135C16.9524 13.1332 16.865 13.1191 16.7673 13.0722L16.7655 13.0714C16.7295 13.0542 16.547 12.967 16.4309 12.7512C16.3831 12.6425 16.3413 12.3989 16.3519 12.2701C16.3793 12.1601 16.4656 11.9821 16.5164 11.914C16.6196 11.7908 16.7354 11.7347 16.7637 11.721C16.8085 11.6993 16.8465 11.6864 16.8651 11.6805C16.9035 11.6683 16.9346 11.662 16.9457 11.6597C16.9718 11.6545 16.993 11.6517 16.9996 11.6509C17.024 11.6477 17.0535 11.645 17.0677 11.6438L17.0706 11.6435C17.0761 11.643 17.082 11.6425 17.0882 11.6419C17.1709 11.6346 17.3161 11.6217 17.4965 11.597C17.9218 11.5387 18.3862 11.4336 18.6392 11.2811L18.6415 11.2798C19.0547 11.0326 19.3923 10.6769 19.6175 10.2513C19.8377 9.83509 19.9422 9.36767 19.9204 8.89772C19.8245 8.28862 19.5105 7.73468 19.0362 7.33947C18.5557 6.93905 17.9446 6.7298 17.3196 6.75154Z\"\n  />\n</svg>`;\nexport const H4Icon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3 4.25C3.41421 4.25 3.75 4.58579 3.75 5V11.25H10.25V5C10.25 4.58579 10.5858 4.25 11 4.25C11.4142 4.25 11.75 4.58579 11.75 5V19C11.75 19.4142 11.4142 19.75 11 19.75C10.5858 19.75 10.25 19.4142 10.25 19V12.75H3.75V19C3.75 19.4142 3.41421 19.75 3 19.75C2.58579 19.75 2.25 19.4142 2.25 19V5C2.25 4.58579 2.58579 4.25 3 4.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M18.1928 5.85878C18.6593 5.15904 19.75 5.48927 19.75 6.33028V14.25H21C21.4142 14.25 21.75 14.5858 21.75 15C21.75 15.4142 21.4142 15.75 21 15.75H19.75V19C19.75 19.4142 19.4142 19.75 19 19.75C18.5858 19.75 18.25 19.4142 18.25 19V15.75H13.1869C12.508 15.75 12.103 14.9934 12.4796 14.4285L18.1928 5.85878ZM18.25 14.25V8.47708L14.4014 14.25H18.25Z\"\n  />\n</svg>`;\nexport const H5Icon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3 4.25C3.41421 4.25 3.75 4.58579 3.75 5V11.25H10.25V5C10.25 4.58579 10.5858 4.25 11 4.25C11.4142 4.25 11.75 4.58579 11.75 5V19C11.75 19.4142 11.4142 19.75 11 19.75C10.5858 19.75 10.25 19.4142 10.25 19V12.75H3.75V19C3.75 19.4142 3.41421 19.75 3 19.75C2.58579 19.75 2.25 19.4142 2.25 19V5C2.25 4.58579 2.58579 4.25 3 4.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M13.9558 5.94948C14.0287 5.5446 14.381 5.25 14.7924 5.25H20.892C21.3062 5.25 21.642 5.58579 21.642 6C21.642 6.41421 21.3062 6.75 20.892 6.75H15.3359L14.677 10.4122C14.7083 10.3958 14.7397 10.3796 14.7713 10.3638C15.4506 10.0234 16.193 9.8296 16.9512 9.79502L16.9745 9.79396L16.9978 9.79435C18.0629 9.81203 19.0907 10.1881 19.9189 10.8615C20.743 11.5316 21.3224 12.4578 21.5681 13.4941C21.8521 14.5302 21.8025 15.6309 21.4262 16.6371C21.048 17.6482 20.3593 18.512 19.4591 19.1014L19.4463 19.1098L19.4332 19.1176C17.1285 20.4957 13.8824 19.5672 12.3514 16.9306C12.1434 16.5724 12.2652 16.1134 12.6234 15.9054C12.9816 15.6974 13.4406 15.8192 13.6486 16.1774C14.8123 18.1815 17.1546 18.7212 18.6504 17.838C19.2754 17.4248 19.756 16.8207 20.0213 16.1116C20.2883 15.3975 20.3225 14.6155 20.1186 13.8802L20.1145 13.8654L20.1111 13.8506C19.9425 13.1297 19.5413 12.4877 18.9726 12.0253C18.41 11.5679 17.7152 11.3117 16.996 11.2946C16.4565 11.3225 15.928 11.462 15.4433 11.7049C15.047 11.9035 14.6868 12.1677 14.3774 12.4863C14.075 12.7978 13.6591 12.7916 13.385 12.6587C13.1072 12.524 12.8336 12.1871 12.9141 11.7396L13.9558 5.94948Z\"\n  />\n</svg>`;\nexport const H6Icon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3 4.25C3.41421 4.25 3.75 4.58579 3.75 5V11.25H10.25V5C10.25 4.58579 10.5858 4.25 11 4.25C11.4142 4.25 11.75 4.58579 11.75 5V19C11.75 19.4142 11.4142 19.75 11 19.75C10.5858 19.75 10.25 19.4142 10.25 19V12.75H3.75V19C3.75 19.4142 3.41421 19.75 3 19.75C2.58579 19.75 2.25 19.4142 2.25 19V5C2.25 4.58579 2.58579 4.25 3 4.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M15.8428 6.08001C16.5038 5.78482 17.221 5.63827 17.9443 5.65076L17.9528 5.65091L17.9612 5.65124C18.6652 5.67922 19.3558 5.85344 19.9894 6.16278C20.6596 6.48991 21.0427 6.86843 21.4674 7.36832C21.7355 7.68402 21.697 8.15733 21.3813 8.42549C21.0656 8.69365 20.5923 8.65511 20.3241 8.33942C19.9679 7.92001 19.7421 7.71121 19.3314 7.51075C18.8869 7.29373 18.4031 7.17116 17.91 7.1504C17.4093 7.14298 16.9127 7.245 16.4544 7.44965C15.9982 7.65337 15.5906 7.95407 15.2596 8.3315C14.8157 8.89075 14.4914 9.53705 14.3076 10.2297C14.1125 10.9831 13.997 11.753 13.9617 12.5269C14.7663 11.5406 15.9873 10.9103 17.3576 10.9103C19.7888 10.9103 21.75 12.8945 21.75 15.3302C21.75 17.7659 19.7888 19.75 17.3576 19.75C15.6443 19.75 14.1643 18.7645 13.4398 17.3301C13.0351 16.5834 12.7496 15.7772 12.5937 14.9411L12.5912 14.9278L12.5892 14.9144C12.3372 13.226 12.428 11.5036 12.856 9.85144L12.8571 9.84743C13.0954 8.94816 13.5178 8.10867 14.0975 7.38296L14.1072 7.37079L14.1174 7.35903C14.5931 6.81178 15.1818 6.37518 15.8428 6.08001ZM14.821 16.7346C15.3136 17.6393 16.2672 18.25 17.3576 18.25C18.9497 18.25 20.25 16.9481 20.25 15.3302C20.25 13.7122 18.9497 12.4103 17.3576 12.4103C15.7655 12.4103 14.4652 13.7122 14.4652 15.3302C14.4652 15.7995 14.5747 16.2423 14.7689 16.6344C14.7763 16.6478 14.7836 16.6612 14.791 16.6746C14.802 16.6943 14.812 16.7143 14.821 16.7346Z\"\n  />\n</svg>`;\nconst BulletedListSVG = svg `<path\n  fill-rule=\"evenodd\"\n  clip-rule=\"evenodd\"\n  d=\"M3 6.5C3 5.83266 3.54099 5.29167 4.20833 5.29167C4.87568 5.29167 5.41667 5.83265 5.41667 6.5C5.41667 7.16734 4.87568 7.70833 4.20833 7.70833C3.54099 7.70833 3 7.16734 3 6.5ZM7.58333 6.50057C7.58336 6.08636 7.91916 5.75059 8.33337 5.75061L20.25 5.75127C20.6642 5.7513 21 6.0871 21 6.50131C21 6.91553 20.6641 7.2513 20.2499 7.25127L8.33329 7.25061C7.91908 7.25059 7.58331 6.91478 7.58333 6.50057ZM3 12C3 11.3327 3.54099 10.7917 4.20833 10.7917C4.87568 10.7917 5.41667 11.3327 5.41667 12C5.41667 12.6673 4.87568 13.2083 4.20833 13.2083C3.54099 13.2083 3 12.6673 3 12ZM7.58333 12.0006C7.58336 11.5864 7.91916 11.2506 8.33338 11.2507L20.2501 11.2514C20.6643 11.2514 21.0001 11.5872 21 12.0014C21 12.4156 20.6642 12.7514 20.25 12.7514L8.33329 12.7507C7.91907 12.7506 7.58331 12.4148 7.58333 12.0006ZM3 17.5C3 16.8327 3.54099 16.2917 4.20833 16.2917C4.87568 16.2917 5.41667 16.8327 5.41667 17.5C5.41667 18.1673 4.87568 18.7083 4.20833 18.7083C3.54099 18.7083 3 18.1673 3 17.5ZM7.58333 17.5006C7.58336 17.0864 7.91916 16.7506 8.33338 16.7507L20.2501 16.7514C20.6643 16.7514 21 17.0872 21 17.5014C21 17.9156 20.6642 18.2514 20.25 18.2514L8.33329 18.2507C7.91907 18.2506 7.58331 17.9148 7.58333 17.5006Z\"\n/>`;\nexport const BulletedListIcon = icon(BulletedListSVG, 20);\nexport const BulletedListIconLarge = icon(BulletedListSVG, 24);\nexport const NumberedListIconLarge = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M5.97755 4.02864C6.19866 4.16529 6.33325 4.40669 6.33325 4.66663V9.41663H7.41659C7.8308 9.41663 8.16659 9.75241 8.16659 10.1666C8.16659 10.5808 7.8308 10.9166 7.41659 10.9166H3.74992C3.33571 10.9166 2.99992 10.5808 2.99992 10.1666C2.99992 9.75241 3.33571 9.41663 3.74992 9.41663H4.83325V5.88015L4.08533 6.25411C3.71485 6.43936 3.26434 6.28919 3.0791 5.9187C2.89386 5.54822 3.04403 5.09772 3.41451 4.91247L5.24784 3.99581C5.48033 3.87956 5.75644 3.89198 5.97755 4.02864ZM9.41659 6.49991C9.41661 6.0857 9.75242 5.74994 10.1666 5.74996L20.25 5.75057C20.6642 5.75059 20.9999 6.0864 20.9999 6.50061C20.9999 6.91483 20.6641 7.25059 20.2499 7.25057L10.1665 7.24996C9.75233 7.24994 9.41656 6.91413 9.41659 6.49991ZM9.41659 11.9999C9.41661 11.5857 9.75242 11.2499 10.1666 11.25L20.25 11.2506C20.6642 11.2506 20.9999 11.5864 20.9999 12.0006C20.9999 12.4148 20.6641 12.7506 20.2499 12.7506L10.1665 12.75C9.75233 12.7499 9.41656 12.4141 9.41659 11.9999ZM5.58325 14.5833C5.07949 14.5833 4.65431 14.9278 4.53401 15.3952C4.43076 15.7964 4.02187 16.0379 3.62073 15.9346C3.21959 15.8314 2.9781 15.4225 3.08135 15.0213C3.36809 13.9073 4.3785 13.0833 5.58325 13.0833H5.84022C7.12504 13.0833 8.16659 14.1248 8.16659 15.4097C8.16659 16.0805 7.877 16.7187 7.37215 17.1604L5.74601 18.5833H7.41659C7.8308 18.5833 8.16659 18.9191 8.16659 19.3333C8.16659 19.7475 7.8308 20.0833 7.41659 20.0833H3.74992C3.43746 20.0833 3.15774 19.8896 3.04784 19.5971C2.93794 19.3046 3.02089 18.9746 3.25604 18.7689L6.38439 16.0316C6.56372 15.8746 6.66659 15.6479 6.66659 15.4097C6.66659 14.9533 6.29661 14.5833 5.84022 14.5833H5.58325ZM9.41659 17.4999C9.41661 17.0857 9.75242 16.7499 10.1666 16.75L20.25 16.7506C20.6642 16.7506 20.9999 17.0864 20.9999 17.5006C20.9999 17.9148 20.6641 18.2506 20.2499 18.2506L10.1665 18.25C9.75233 18.2499 9.41656 17.9141 9.41659 17.4999Z\"\n  />\n</svg>`;\nexport const NumberedListIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M5.97763 4.02868C6.19874 4.16533 6.33333 4.40673 6.33333 4.66667V9.41667H7.41666C7.83088 9.41667 8.16666 9.75245 8.16666 10.1667C8.16666 10.5809 7.83088 10.9167 7.41666 10.9167H3.75C3.33578 10.9167 3 10.5809 3 10.1667C3 9.75245 3.33578 9.41667 3.75 9.41667H4.83333V5.88019L4.08541 6.25415C3.71492 6.4394 3.26442 6.28923 3.07918 5.91874C2.89393 5.54826 3.0441 5.09776 3.41459 4.91251L5.24792 3.99585C5.48041 3.8796 5.75652 3.89202 5.97763 4.02868ZM9.41666 6.49995C9.41669 6.08574 9.7525 5.74998 10.1667 5.75L20.25 5.75061C20.6643 5.75063 21 6.08644 21 6.50065C21 6.91487 20.6642 7.25063 20.25 7.25061L10.1666 7.25C9.75241 7.24998 9.41664 6.91417 9.41666 6.49995ZM9.41666 12C9.41669 11.5857 9.7525 11.25 10.1667 11.25L20.25 11.2506C20.6643 11.2506 21 11.5864 21 12.0007C21 12.4149 20.6642 12.7506 20.25 12.7506L10.1666 12.75C9.75241 12.75 9.41664 12.4142 9.41666 12ZM5.58333 14.5833C5.07957 14.5833 4.65439 14.9279 4.53408 15.3953C4.43084 15.7964 4.02195 16.0379 3.62081 15.9347C3.21967 15.8314 2.97818 15.4225 3.08143 15.0214C3.36816 13.9073 4.37857 13.0833 5.58333 13.0833H5.8403C7.12512 13.0833 8.16666 14.1249 8.16666 15.4097C8.16666 16.0805 7.87708 16.7187 7.37222 17.1605L5.74608 18.5833H7.41666C7.83088 18.5833 8.16666 18.9191 8.16666 19.3333C8.16666 19.7475 7.83088 20.0833 7.41666 20.0833H3.75C3.43754 20.0833 3.15782 19.8896 3.04792 19.5971C2.93802 19.3046 3.02097 18.9747 3.25612 18.7689L6.38446 16.0316C6.5638 15.8747 6.66666 15.648 6.66666 15.4097C6.66666 14.9533 6.29669 14.5833 5.8403 14.5833H5.58333ZM9.41666 17.5C9.41669 17.0857 9.7525 16.75 10.1667 16.75L20.25 16.7506C20.6643 16.7506 21 17.0864 21 17.5007C21 17.9149 20.6642 18.2506 20.25 18.2506L10.1666 18.25C9.75241 18.25 9.41664 17.9142 9.41666 17.5Z\"\n  />\n</svg>`;\nexport const DatabaseTableViewIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M6.1728 4.25H17.8272C18.3641 4.24999 18.8067 4.24999 19.1671 4.27575C19.5398 4.3024 19.8854 4.35951 20.2134 4.50573C20.721 4.73207 21.1527 5.10167 21.4301 5.57811C21.6157 5.89681 21.6871 6.23393 21.7195 6.58088C21.75 6.90782 21.75 7.30509 21.75 7.76685V16.2331C21.75 16.6949 21.75 17.0922 21.7195 17.4191C21.6871 17.7661 21.6157 18.1032 21.4301 18.4219C21.1527 18.8983 20.721 19.2679 20.2134 19.4943C19.8854 19.6405 19.5398 19.6976 19.1671 19.7242C18.8067 19.75 18.3641 19.75 17.8272 19.75H6.1728C5.63587 19.75 5.19332 19.75 4.83292 19.7242C4.46022 19.6976 4.1146 19.6405 3.78662 19.4943C3.27896 19.2679 2.8473 18.8983 2.56987 18.4219C2.38428 18.1032 2.31289 17.7661 2.2805 17.4191C2.24997 17.0922 2.24998 16.6949 2.25 16.2331V7.76689C2.24998 7.30511 2.24997 6.90783 2.2805 6.58088C2.31289 6.23393 2.38428 5.89681 2.56987 5.57811C2.8473 5.10167 3.27896 4.73207 3.78662 4.50573C4.1146 4.35951 4.46022 4.3024 4.83292 4.27575C5.19332 4.24999 5.63586 4.24999 6.1728 4.25ZM3.75 10.125V16.2C3.75 16.7042 3.75076 17.0308 3.774 17.2797C3.7961 17.5164 3.83371 17.6114 3.86611 17.6671C3.97217 17.8492 4.15244 18.015 4.39742 18.1243C4.49727 18.1688 4.64558 18.207 4.93989 18.2281C5.24043 18.2496 5.62911 18.25 6.2 18.25H7.25V10.125H3.75ZM3.75 8.625V7.8C3.75 7.29583 3.75076 6.96922 3.774 6.72033C3.7961 6.48364 3.83371 6.38857 3.86611 6.33293C3.97217 6.1508 4.15243 5.98497 4.39742 5.87574C4.49727 5.83123 4.64558 5.79297 4.93989 5.77193C5.24043 5.75045 5.62911 5.75 6.2 5.75H17.8C18.3709 5.75 18.7596 5.75045 19.0601 5.77193C19.3544 5.79297 19.5027 5.83123 19.6026 5.87574C19.8476 5.98497 20.0278 6.1508 20.1339 6.33293C20.1663 6.38857 20.2039 6.48364 20.226 6.72033C20.2492 6.96922 20.25 7.29583 20.25 7.8V8.625H3.75ZM8.75 10.125V18.25H17.8C18.3709 18.25 18.7596 18.2496 19.0601 18.2281C19.3544 18.207 19.5027 18.1688 19.6026 18.1243C19.8476 18.015 20.0278 17.8492 20.1339 17.6671C20.1663 17.6114 20.2039 17.5164 20.226 17.2797C20.2492 17.0308 20.25 16.7042 20.25 16.2V10.125H8.75Z\"\n  />\n</svg>`;\nexport const DatabaseKanbanViewIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M5.25 8.4C5.25 7.76487 5.76487 7.25 6.4 7.25H10.1C10.7351 7.25 11.25 7.76487 11.25 8.4V15.6C11.25 16.2351 10.7351 16.75 10.1 16.75H6.4C5.76487 16.75 5.25 16.2351 5.25 15.6V8.4ZM6.75 8.75V15.25H9.75V8.75H6.75Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12.75 8.4C12.75 7.76487 13.2649 7.25 13.9 7.25H17.6C18.2351 7.25 18.75 7.76487 18.75 8.4V13.6C18.75 14.2351 18.2351 14.75 17.6 14.75H13.9C13.2649 14.75 12.75 14.2351 12.75 13.6V8.4ZM14.25 8.75V13.25H17.25V8.75H14.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M2.25 7C2.25 5.48122 3.48122 4.25 5 4.25H19C20.5188 4.25 21.75 5.48122 21.75 7V17C21.75 18.5188 20.5188 19.75 19 19.75H5C3.48122 19.75 2.25 18.5188 2.25 17V7ZM5 5.75C4.30964 5.75 3.75 6.30964 3.75 7V17C3.75 17.6904 4.30964 18.25 5 18.25H19C19.6904 18.25 20.25 17.6904 20.25 17V7C20.25 6.30964 19.6904 5.75 19 5.75H5Z\"\n  />\n</svg>`;\nexport const TodoIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.25 6.28571C3.25 4.60914 4.60914 3.25 6.28571 3.25H17.7143C19.3909 3.25 20.75 4.60914 20.75 6.28571V17.7143C20.75 19.3909 19.3909 20.75 17.7143 20.75H6.28571C4.60914 20.75 3.25 19.3909 3.25 17.7143V6.28571ZM6.28571 4.75C5.43756 4.75 4.75 5.43756 4.75 6.28571V17.7143C4.75 18.5624 5.43756 19.25 6.28571 19.25H17.7143C18.5624 19.25 19.25 18.5624 19.25 17.7143V6.28571C19.25 5.43756 18.5624 4.75 17.7143 4.75H6.28571Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M16.5068 8.44713C16.8121 8.72703 16.8328 9.20145 16.5529 9.50679L11.0529 15.5068C10.9146 15.6576 10.7208 15.7454 10.5163 15.7498C10.3118 15.7543 10.1143 15.675 9.96967 15.5303L7.46967 13.0303C7.17678 12.7374 7.17678 12.2626 7.46967 11.9697C7.76256 11.6768 8.23744 11.6768 8.53033 11.9697L10.4764 13.9158L15.4471 8.49321C15.727 8.18787 16.2015 8.16724 16.5068 8.44713Z\"\n  />\n</svg>`;\nexport const CodeBlockIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M6.16957 4.25H17.8304C18.3646 4.24999 18.8104 4.24998 19.1747 4.27974C19.5546 4.31078 19.9112 4.37789 20.2485 4.54973C20.7659 4.81339 21.1866 5.23408 21.4503 5.75153C21.6221 6.08879 21.6892 6.44545 21.7203 6.82533C21.75 7.18956 21.75 7.6354 21.75 8.16955V15.8305C21.75 16.3646 21.75 16.8104 21.7203 17.1747C21.6892 17.5546 21.6221 17.9112 21.4503 18.2485C21.1866 18.7659 20.7659 19.1866 20.2485 19.4503C19.9112 19.6221 19.5546 19.6892 19.1747 19.7203C18.8104 19.75 18.3646 19.75 17.8305 19.75H6.16955C5.6354 19.75 5.18956 19.75 4.82533 19.7203C4.44545 19.6892 4.08879 19.6221 3.75153 19.4503C3.23408 19.1866 2.81338 18.7659 2.54973 18.2485C2.37789 17.9112 2.31078 17.5546 2.27974 17.1747C2.24998 16.8104 2.24999 16.3646 2.25 15.8304V8.16957C2.24999 7.63541 2.24998 7.18956 2.27974 6.82533C2.31078 6.44545 2.37789 6.08879 2.54973 5.75153C2.81338 5.23408 3.23408 4.81338 3.75153 4.54973C4.08879 4.37789 4.44545 4.31078 4.82533 4.27974C5.18956 4.24998 5.63541 4.24999 6.16957 4.25ZM4.94748 5.77476C4.66036 5.79822 4.52307 5.8401 4.43251 5.88624C4.19731 6.00608 4.00608 6.19731 3.88624 6.43251C3.8401 6.52307 3.79822 6.66036 3.77476 6.94748C3.75058 7.24336 3.75 7.62757 3.75 8.2V15.8C3.75 16.3724 3.75058 16.7566 3.77476 17.0525C3.79822 17.3396 3.8401 17.4769 3.88624 17.5675C4.00608 17.8027 4.19731 17.9939 4.43251 18.1138C4.52307 18.1599 4.66036 18.2018 4.94748 18.2252C5.24336 18.2494 5.62757 18.25 6.2 18.25H17.8C18.3724 18.25 18.7566 18.2494 19.0525 18.2252C19.3396 18.2018 19.4769 18.1599 19.5675 18.1138C19.8027 17.9939 19.9939 17.8027 20.1138 17.5675C20.1599 17.4769 20.2018 17.3396 20.2252 17.0525C20.2494 16.7566 20.25 16.3724 20.25 15.8V8.2C20.25 7.62757 20.2494 7.24336 20.2252 6.94748C20.2018 6.66036 20.1599 6.52307 20.1138 6.43251C19.9939 6.19731 19.8027 6.00608 19.5675 5.88624C19.4769 5.8401 19.3396 5.79822 19.0525 5.77476C18.7566 5.75058 18.3724 5.75 17.8 5.75H6.2C5.62757 5.75 5.24336 5.75058 4.94748 5.77476Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M10.5303 8.46967C10.8232 8.76256 10.8232 9.23744 10.5303 9.53033L8.06066 12L10.5303 14.4697C10.8232 14.7626 10.8232 15.2374 10.5303 15.5303C10.2374 15.8232 9.76256 15.8232 9.46967 15.5303L6.46967 12.5303C6.17678 12.2374 6.17678 11.7626 6.46967 11.4697L9.46967 8.46967C9.76256 8.17678 10.2374 8.17678 10.5303 8.46967ZM13.4697 8.46967C13.7626 8.17678 14.2374 8.17678 14.5303 8.46967L17.5303 11.4697C17.8232 11.7626 17.8232 12.2374 17.5303 12.5303L14.5303 15.5303C14.2374 15.8232 13.7626 15.8232 13.4697 15.5303C13.1768 15.2374 13.1768 14.7626 13.4697 14.4697L15.9393 12L13.4697 9.53033C13.1768 9.23744 13.1768 8.76256 13.4697 8.46967Z\"\n  />\n</svg>`;\nexport const QuoteIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.75 4C4.16421 4 4.5 4.33579 4.5 4.75L4.5 19.25C4.5 19.6642 4.16421 20 3.75 20C3.33579 20 3 19.6642 3 19.25L3 4.75C3 4.33579 3.33579 4 3.75 4Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M19 6.75C19 7.16421 18.6642 7.5 18.25 7.5H7.75C7.33579 7.5 7 7.16421 7 6.75C7 6.33579 7.33579 6 7.75 6H18.25C18.6642 6 19 6.33579 19 6.75Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M17 11.75C17 12.1642 16.6642 12.5 16.25 12.5H7.75C7.33579 12.5 7 12.1642 7 11.75C7 11.3358 7.33579 11 7.75 11H16.25C16.6642 11 17 11.3358 17 11.75Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M21 16.75C21 17.1642 20.6642 17.5 20.25 17.5H7.75C7.33579 17.5 7 17.1642 7 16.75C7 16.3358 7.33579 16 7.75 16H20.25C20.6642 16 21 16.3358 21 16.75Z\"\n  />\n</svg>`;\nexport const DividerIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.25 12C3.25 11.5858 3.58579 11.25 4 11.25H4.94118C5.35539 11.25 5.69118 11.5858 5.69118 12C5.69118 12.4142 5.35539 12.75 4.94118 12.75H4C3.58579 12.75 3.25 12.4142 3.25 12ZM7.01471 12C7.01471 11.5858 7.35049 11.25 7.76471 11.25H8.70588C9.1201 11.25 9.45588 11.5858 9.45588 12C9.45588 12.4142 9.1201 12.75 8.70588 12.75H7.76471C7.35049 12.75 7.01471 12.4142 7.01471 12ZM10.7794 12C10.7794 11.5858 11.1152 11.25 11.5294 11.25H12.4706C12.8848 11.25 13.2206 11.5858 13.2206 12C13.2206 12.4142 12.8848 12.75 12.4706 12.75H11.5294C11.1152 12.75 10.7794 12.4142 10.7794 12ZM14.5441 12C14.5441 11.5858 14.8799 11.25 15.2941 11.25H16.2353C16.6495 11.25 16.9853 11.5858 16.9853 12C16.9853 12.4142 16.6495 12.75 16.2353 12.75H15.2941C14.8799 12.75 14.5441 12.4142 14.5441 12ZM18.3088 12C18.3088 11.5858 18.6446 11.25 19.0588 11.25H20C20.4142 11.25 20.75 11.5858 20.75 12C20.75 12.4142 20.4142 12.75 20 12.75H19.0588C18.6446 12.75 18.3088 12.4142 18.3088 12Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M4 4.25C4.41421 4.25 4.75 4.58579 4.75 5V6.59459C4.75 7.1261 5.1896 7.57432 5.75343 7.57432H18.2466C18.8104 7.57432 19.25 7.1261 19.25 6.59459V5C19.25 4.58579 19.5858 4.25 20 4.25C20.4142 4.25 20.75 4.58579 20.75 5V6.59459C20.75 7.9737 19.6195 9.07432 18.2466 9.07432H5.75343C4.38048 9.07432 3.25 7.9737 3.25 6.59459V5C3.25 4.58579 3.58579 4.25 4 4.25ZM5.75342 16.4257C5.1896 16.4257 4.75 16.8739 4.75 17.4054V19C4.75 19.4142 4.41421 19.75 4 19.75C3.58579 19.75 3.25 19.4142 3.25 19V17.4054C3.25 16.0263 4.38047 14.9257 5.75342 14.9257L18.2466 14.9257C19.6195 14.9257 20.75 16.0263 20.75 17.4054V19C20.75 19.4142 20.4142 19.75 20 19.75C19.5858 19.75 19.25 19.4142 19.25 19V17.4054C19.25 16.8739 18.8104 16.4257 18.2466 16.4257L5.75342 16.4257Z\"\n  />\n</svg>`;\n// Format icons\nexport const BoldIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M6.25 4C6.25 3.58579 6.58579 3.25 7 3.25H12.9583C15.6288 3.25 17.8333 5.35506 17.8333 8C17.8333 9.51519 17.1099 10.8532 15.9898 11.7198C17.6162 12.484 18.75 14.1032 18.75 16C18.75 18.6449 16.5455 20.75 13.875 20.75H7C6.58579 20.75 6.25 20.4142 6.25 20V4ZM7.75 12.75V19.25H13.875C15.7609 19.25 17.25 17.7733 17.25 16C17.25 14.2267 15.7609 12.75 13.875 12.75H7.75ZM7.75 11.25H12.9583C14.8442 11.25 16.3333 9.77334 16.3333 8C16.3333 6.22666 14.8442 4.75 12.9583 4.75H7.75V11.25Z\"\n  />\n</svg>`;\nexport const ItalicIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M14.6075 3.25H10.25C9.83579 3.25 9.5 3.58579 9.5 4C9.5 4.41421 9.83579 4.75 10.25 4.75H13.5896L8.83175 19.25H5C4.58579 19.25 4.25 19.5858 4.25 20C4.25 20.4142 4.58579 20.75 5 20.75H9.35778C9.36938 20.7503 9.38095 20.7503 9.39249 20.75H13.75C14.1642 20.75 14.5 20.4142 14.5 20C14.5 19.5858 14.1642 19.25 13.75 19.25H10.4104L15.1682 4.75H19C19.4142 4.75 19.75 4.41421 19.75 4C19.75 3.58579 19.4142 3.25 19 3.25H14.6422C14.6306 3.24973 14.619 3.24973 14.6075 3.25Z\"\n  />\n</svg>`;\nexport const UnderlineIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M4.25 4C4.25 3.58579 4.58579 3.25 5 3.25H8.5C8.91421 3.25 9.25 3.58579 9.25 4C9.25 4.41421 8.91421 4.75 8.5 4.75H7.48717C7.49559 4.79501 7.5 4.84143 7.5 4.88889V11.1111C7.5 13.6536 9.52581 15.6944 12 15.6944C14.4742 15.6944 16.5 13.6536 16.5 11.1111V4.88889C16.5 4.84143 16.5044 4.79501 16.5128 4.75H15.5C15.0858 4.75 14.75 4.41421 14.75 4C14.75 3.58579 15.0858 3.25 15.5 3.25H19C19.4142 3.25 19.75 3.58579 19.75 4C19.75 4.41421 19.4142 4.75 19 4.75H17.9872C17.9956 4.79501 18 4.84143 18 4.88889V11.1111C18 14.4597 15.3248 17.1944 12 17.1944C8.6752 17.1944 6 14.4597 6 11.1111V4.88889C6 4.84143 6.00441 4.79501 6.01283 4.75H5C4.58579 4.75 4.25 4.41421 4.25 4ZM4.25 20C4.25 19.5858 4.58579 19.25 5 19.25H19C19.4142 19.25 19.75 19.5858 19.75 20C19.75 20.4142 19.4142 20.75 19 20.75H5C4.58579 20.75 4.25 20.4142 4.25 20Z\"\n  />\n</svg>`;\nexport const StrikethroughIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M5.02778 8C5.02778 5.37665 7.15442 3.25 9.77778 3.25H14.3889C16.9202 3.25 18.9722 5.30203 18.9722 7.83333V8C18.9722 8.41421 18.6364 8.75 18.2222 8.75C17.808 8.75 17.4722 8.41421 17.4722 8V7.83333C17.4722 6.13046 16.0918 4.75 14.3889 4.75H9.77778C7.98285 4.75 6.52778 6.20507 6.52778 8C6.52778 9.79493 7.98285 11.25 9.77778 11.25H20C20.4142 11.25 20.75 11.5858 20.75 12C20.75 12.4142 20.4142 12.75 20 12.75H17.6863C18.4838 13.5997 18.9722 14.7428 18.9722 16C18.9722 18.6234 16.8456 20.75 14.2222 20.75H9.69444C7.11712 20.75 5.02778 18.6607 5.02778 16.0833V16C5.02778 15.5858 5.36356 15.25 5.77778 15.25C6.19199 15.25 6.52778 15.5858 6.52778 16V16.0833C6.52778 17.8322 7.94554 19.25 9.69444 19.25H14.2222C16.0171 19.25 17.4722 17.7949 17.4722 16C17.4722 14.2051 16.0171 12.75 14.2222 12.75H4C3.58579 12.75 3.25 12.4142 3.25 12C3.25 11.5858 3.58579 11.25 4 11.25H6.31366C5.5162 10.4003 5.02778 9.25721 5.02778 8Z\"\n  />\n</svg>`;\nexport const InlineCodeIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M14.1819 3.27239C14.5837 3.37285 14.8281 3.78006 14.7276 4.1819L10.7276 20.1819C10.6271 20.5837 10.2199 20.8281 9.8181 20.7276C9.41625 20.6271 9.17193 20.2199 9.27239 19.8181L13.2724 3.8181C13.3729 3.41625 13.7801 3.17193 14.1819 3.27239ZM7.5511 7.49129C7.83206 7.79566 7.81308 8.27015 7.50871 8.5511L4.06145 11.7332L7.5496 15.4897C7.83145 15.7932 7.81387 16.2677 7.51034 16.5496C7.20681 16.8314 6.73226 16.8139 6.45041 16.5103L2.45041 12.2026C2.31479 12.0566 2.24289 11.8626 2.25056 11.6634C2.25823 11.4643 2.34485 11.2764 2.49129 11.1412L6.49129 7.4489C6.79566 7.16794 7.27015 7.18692 7.5511 7.49129ZM16.4489 7.49129C16.7299 7.18692 17.2043 7.16794 17.5087 7.4489L21.5087 11.1412C21.6552 11.2764 21.7418 11.4643 21.7494 11.6634C21.7571 11.8626 21.6852 12.0566 21.5496 12.2026L17.5496 16.5103C17.2677 16.8139 16.7932 16.8314 16.4897 16.5496C16.1861 16.2677 16.1686 15.7932 16.4504 15.4897L19.9386 11.7332L16.4913 8.5511C16.1869 8.27015 16.1679 7.79566 16.4489 7.49129Z\"\n  />\n</svg>`;\nconst LinkSVG = svg `<path\n  fill-rule=\"evenodd\"\n  clip-rule=\"evenodd\"\n  d=\"M12.8423 4.60675C14.6513 2.79775 17.5842 2.79775 19.3932 4.60676C21.2023 6.41576 21.2023 9.34874 19.3932 11.1577L17.3344 13.2166C17.0415 13.5095 16.5666 13.5095 16.2737 13.2166C15.9808 12.9237 15.9808 12.4489 16.2737 12.156L18.3326 10.0971C19.5558 8.87387 19.5558 6.89064 18.3326 5.66742C17.1094 4.4442 15.1261 4.44419 13.9029 5.66741L11.1577 8.41258C9.93453 9.6358 9.93453 11.619 11.1577 12.8423C11.3498 13.0343 11.5596 13.1955 11.7816 13.3266C12.1382 13.5373 12.2566 13.9971 12.046 14.3538C11.8353 14.7104 11.3754 14.8288 11.0188 14.6182C10.6891 14.4235 10.379 14.1849 10.0971 13.9029C8.28808 12.0939 8.28808 9.16093 10.0971 7.35192L12.8423 4.60675ZM11.954 9.64621C12.1647 9.28955 12.6246 9.17119 12.9812 9.38183C13.3109 9.57652 13.621 9.81515 13.9029 10.0971C15.7119 11.9061 15.7119 14.8391 13.9029 16.6481L11.1577 19.3932C9.34874 21.2023 6.41576 21.2023 4.60675 19.3932C2.79775 17.5842 2.79775 14.6513 4.60675 12.8423L6.66563 10.7834C6.95852 10.4905 7.4334 10.4905 7.72629 10.7834C8.01918 11.0763 8.01918 11.5511 7.72629 11.844L5.66741 13.9029C4.4442 15.1261 4.4442 17.1094 5.66742 18.3326C6.89064 19.5558 8.87387 19.5558 10.0971 18.3326L12.8423 15.5874C14.0655 14.3642 14.0655 12.381 12.8423 11.1577C12.6502 10.9657 12.4404 10.8045 12.2184 10.6734C11.8618 10.4627 11.7434 10.0029 11.954 9.64621Z\"\n/>`;\nexport const LinkIcon = icon(LinkSVG, 20);\nexport const FontLinkIcon = fontIcon(LinkSVG);\n// Slash menu action icons\nexport const CopyIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M11.1696 3.25H16.8304C17.3646 3.24999 17.8104 3.24998 18.1747 3.27974C18.5546 3.31078 18.9112 3.37789 19.2485 3.54973C19.7659 3.81338 20.1866 4.23408 20.4503 4.75153C20.6221 5.08879 20.6892 5.44545 20.7203 5.82533C20.75 6.18956 20.75 6.6354 20.75 7.16955V12.8305C20.75 13.3646 20.75 13.8104 20.7203 14.1747C20.6892 14.5546 20.6221 14.9112 20.4503 15.2485C20.1866 15.7659 19.7659 16.1866 19.2485 16.4503C18.9112 16.6221 18.5546 16.6892 18.1747 16.7203C17.8104 16.75 17.3646 16.75 16.8305 16.75H16.75V16.8305C16.75 17.3646 16.75 17.8104 16.7203 18.1747C16.6892 18.5546 16.6221 18.9112 16.4503 19.2485C16.1866 19.7659 15.7659 20.1866 15.2485 20.4503C14.9112 20.6221 14.5546 20.6892 14.1747 20.7203C13.8104 20.75 13.3646 20.75 12.8305 20.75H7.16955C6.6354 20.75 6.18956 20.75 5.82533 20.7203C5.44545 20.6892 5.08879 20.6221 4.75153 20.4503C4.23408 20.1866 3.81338 19.7659 3.54973 19.2485C3.37789 18.9112 3.31078 18.5546 3.27974 18.1747C3.24998 17.8104 3.24999 17.3646 3.25 16.8304V11.1696C3.24999 10.6354 3.24998 10.1896 3.27974 9.82533C3.31078 9.44545 3.37789 9.08879 3.54973 8.75153C3.81338 8.23408 4.23408 7.81339 4.75153 7.54973C5.08879 7.37789 5.44545 7.31078 5.82533 7.27974C6.18957 7.24998 6.63542 7.24999 7.16957 7.25L7.25 7.25L7.25 7.16957C7.24999 6.63542 7.24998 6.18957 7.27974 5.82533C7.31078 5.44545 7.37789 5.08879 7.54973 4.75153C7.81339 4.23408 8.23408 3.81338 8.75153 3.54973C9.08879 3.37789 9.44545 3.31078 9.82533 3.27974C10.1896 3.24998 10.6354 3.24999 11.1696 3.25ZM7.25 8.75H7.2C6.62757 8.75 6.24336 8.75058 5.94748 8.77476C5.66036 8.79822 5.52307 8.8401 5.43251 8.88624C5.19731 9.00608 5.00608 9.19731 4.88624 9.43251C4.8401 9.52307 4.79822 9.66036 4.77476 9.94748C4.75058 10.2434 4.75 10.6276 4.75 11.2V16.8C4.75 17.3724 4.75058 17.7566 4.77476 18.0525C4.79822 18.3396 4.8401 18.4769 4.88624 18.5675C5.00608 18.8027 5.19731 18.9939 5.43251 19.1138C5.52307 19.1599 5.66036 19.2018 5.94748 19.2252C6.24336 19.2494 6.62757 19.25 7.2 19.25H12.8C13.3724 19.25 13.7566 19.2494 14.0525 19.2252C14.3396 19.2018 14.4769 19.1599 14.5675 19.1138C14.8027 18.9939 14.9939 18.8027 15.1138 18.5675C15.1599 18.4769 15.2018 18.3396 15.2252 18.0525C15.2494 17.7566 15.25 17.3724 15.25 16.8V16.75H11.1695C10.6354 16.75 10.1896 16.75 9.82533 16.7203C9.44545 16.6892 9.08879 16.6221 8.75153 16.4503C8.23408 16.1866 7.81339 15.7659 7.54973 15.2485C7.37789 14.9112 7.31078 14.5546 7.27974 14.1747C7.24998 13.8104 7.24999 13.3646 7.25 12.8304L7.25 8.75ZM11.2 15.25C10.6276 15.25 10.2434 15.2494 9.94748 15.2252C9.66036 15.2018 9.52307 15.1599 9.43251 15.1138C9.19731 14.9939 9.00608 14.8027 8.88624 14.5675C8.8401 14.4769 8.79822 14.3396 8.77476 14.0525C8.75058 13.7566 8.75 13.3724 8.75 12.8V7.2C8.75 6.62757 8.75058 6.24336 8.77476 5.94748C8.79822 5.66036 8.8401 5.52307 8.88624 5.43251C9.00608 5.19731 9.19731 5.00608 9.43251 4.88624C9.52307 4.8401 9.66036 4.79822 9.94748 4.77476C10.2434 4.75058 10.6276 4.75 11.2 4.75H16.8C17.3724 4.75 17.7566 4.75058 18.0525 4.77476C18.3396 4.79822 18.4769 4.8401 18.5675 4.88624C18.8027 5.00608 18.9939 5.19731 19.1138 5.43251C19.1599 5.52307 19.2018 5.66036 19.2252 5.94748C19.2494 6.24336 19.25 6.62757 19.25 7.2V12.8C19.25 13.3724 19.2494 13.7566 19.2252 14.0525C19.2018 14.3396 19.1599 14.4769 19.1138 14.5675C18.9939 14.8027 18.8027 14.9939 18.5675 15.1138C18.4769 15.1599 18.3396 15.2018 18.0525 15.2252C17.7566 15.2494 17.3724 15.25 16.8 15.25H11.2Z\"\n  />\n</svg>`;\nexport const PasteIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M7.96967 2.96967C8.43047 2.50887 9.05544 2.25 9.70711 2.25H14.2929C14.9446 2.25 15.5695 2.50887 16.0303 2.96967C16.3835 3.32285 16.6181 3.77248 16.7084 4.25665C16.9029 4.26164 17.0816 4.27042 17.245 4.28594C17.5984 4.31952 17.9317 4.38831 18.2485 4.54973C18.7659 4.81338 19.1866 5.23408 19.4503 5.75153C19.6221 6.08879 19.6892 6.44545 19.7203 6.82533C19.75 7.18956 19.75 7.6354 19.75 8.16955V17.8305C19.75 18.3646 19.75 18.8104 19.7203 19.1747C19.6892 19.5546 19.6221 19.9112 19.4503 20.2485C19.1866 20.7659 18.7659 21.1866 18.2485 21.4503C17.9112 21.6221 17.5546 21.6892 17.1747 21.7203C16.8104 21.75 16.3646 21.75 15.8305 21.75H8.16955C7.6354 21.75 7.18956 21.75 6.82533 21.7203C6.44545 21.6892 6.08879 21.6221 5.75153 21.4503C5.23408 21.1866 4.81339 20.7659 4.54973 20.2485C4.37789 19.9112 4.31078 19.5546 4.27974 19.1747C4.24998 18.8104 4.24999 18.3646 4.25 17.8304V8.16957C4.24999 7.63541 4.24998 7.18956 4.27974 6.82533C4.31078 6.44545 4.37789 6.08879 4.54973 5.75153C4.81338 5.23408 5.23408 4.81338 5.75153 4.54973C6.06834 4.38831 6.40164 4.31952 6.75503 4.28594C6.91838 4.27042 7.09706 4.26164 7.29163 4.25665C7.38193 3.77248 7.61649 3.32285 7.96967 2.96967ZM7.25 5.75845C7.11656 5.76281 7.00058 5.76937 6.8969 5.77922C6.64378 5.80327 6.51726 5.84306 6.43251 5.88624C6.19731 6.00608 6.00608 6.19731 5.88624 6.43251C5.8401 6.52307 5.79822 6.66035 5.77476 6.94748C5.75058 7.24336 5.75 7.62757 5.75 8.2V17.8C5.75 18.3724 5.75058 18.7566 5.77476 19.0525C5.79822 19.3396 5.8401 19.4769 5.88624 19.5675C6.00608 19.8027 6.19731 19.9939 6.43251 20.1138C6.52307 20.1599 6.66036 20.2018 6.94748 20.2252C7.24336 20.2494 7.62757 20.25 8.2 20.25H15.8C16.3724 20.25 16.7566 20.2494 17.0525 20.2252C17.3396 20.2018 17.4769 20.1599 17.5675 20.1138C17.8027 19.9939 17.9939 19.8027 18.1138 19.5675C18.1599 19.4769 18.2018 19.3396 18.2252 19.0525C18.2494 18.7566 18.25 18.3724 18.25 17.8V8.2C18.25 7.62757 18.2494 7.24336 18.2252 6.94748C18.2018 6.66035 18.1599 6.52307 18.1138 6.43251C17.9939 6.19731 17.8027 6.00608 17.5675 5.88624C17.4827 5.84306 17.3562 5.80327 17.1031 5.77922C16.9994 5.76937 16.8834 5.76281 16.75 5.75845V7C16.75 7.41421 16.4142 7.75 16 7.75H8C7.58579 7.75 7.25 7.41421 7.25 7V5.75845ZM9.70711 3.75C9.45327 3.75 9.20982 3.85084 9.03033 4.03033C8.85084 4.20982 8.75 4.45327 8.75 4.70711V6.25H15.25V4.70711C15.25 4.45327 15.1492 4.20982 14.9697 4.03033C14.7902 3.85084 14.5467 3.75 14.2929 3.75H9.70711Z\"\n  />\n</svg>`;\nexport const DuplicateIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M11.25 9C11.25 9.41421 11.5858 9.75 12 9.75H13.1893L7.46967 15.4697C7.17678 15.7626 7.17678 16.2374 7.46967 16.5303C7.76256 16.8232 8.23744 16.8232 8.53033 16.5303L14.25 10.8107V12C14.25 12.4142 14.5858 12.75 15 12.75C15.4142 12.75 15.75 12.4142 15.75 12V9.1C15.75 9.08264 15.7495 9.0654 15.7485 9.04829C15.7618 8.84059 15.6891 8.62841 15.5303 8.46967C15.3716 8.31093 15.1594 8.23823 14.9517 8.25155C14.9346 8.25052 14.9174 8.25 14.9 8.25H12C11.5858 8.25 11.25 8.58579 11.25 9Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M16.8304 3.25H11.1696C10.6354 3.24999 10.1896 3.24998 9.82533 3.27974C9.44545 3.31078 9.08879 3.37789 8.75153 3.54973C8.23408 3.81338 7.81339 4.23408 7.54973 4.75153C7.37789 5.08879 7.31078 5.44545 7.27974 5.82533C7.24998 6.18956 7.24999 6.63541 7.25 7.16956L7.25 7.25L7.16957 7.25C6.63542 7.24999 6.18956 7.24998 5.82533 7.27974C5.44545 7.31078 5.08879 7.37789 4.75153 7.54973C4.23408 7.81339 3.81338 8.23408 3.54973 8.75153C3.37789 9.08879 3.31078 9.44545 3.27974 9.82533C3.24998 10.1896 3.24999 10.6354 3.25 11.1696V16.8304C3.24999 17.3646 3.24998 17.8104 3.27974 18.1747C3.31078 18.5546 3.37789 18.9112 3.54973 19.2485C3.81338 19.7659 4.23408 20.1866 4.75153 20.4503C5.08879 20.6221 5.44545 20.6892 5.82533 20.7203C6.18956 20.75 6.6354 20.75 7.16955 20.75H12.8305C13.3646 20.75 13.8104 20.75 14.1747 20.7203C14.5546 20.6892 14.9112 20.6221 15.2485 20.4503C15.7659 20.1866 16.1866 19.7659 16.4503 19.2485C16.6221 18.9112 16.6892 18.5546 16.7203 18.1747C16.75 17.8105 16.75 17.3646 16.75 16.8305V16.75H16.8305C17.3646 16.75 17.8105 16.75 18.1747 16.7203C18.5546 16.6892 18.9112 16.6221 19.2485 16.4503C19.7659 16.1866 20.1866 15.7659 20.4503 15.2485C20.6221 14.9112 20.6892 14.5546 20.7203 14.1747C20.75 13.8104 20.75 13.3646 20.75 12.8305V7.16955C20.75 6.6354 20.75 6.18956 20.7203 5.82533C20.6892 5.44545 20.6221 5.08879 20.4503 4.75153C20.1866 4.23408 19.7659 3.81338 19.2485 3.54973C18.9112 3.37789 18.5546 3.31078 18.1747 3.27974C17.8104 3.24998 17.3646 3.24999 16.8304 3.25ZM7.25 11V8.75H7.2C6.62757 8.75 6.24336 8.75058 5.94748 8.77476C5.66036 8.79822 5.52307 8.8401 5.43251 8.88624C5.19731 9.00608 5.00608 9.19731 4.88624 9.43251C4.8401 9.52307 4.79822 9.66036 4.77476 9.94748C4.75058 10.2434 4.75 10.6276 4.75 11.2V16.8C4.75 17.3724 4.75058 17.7566 4.77476 18.0525C4.79822 18.3396 4.8401 18.4769 4.88624 18.5675C5.00608 18.8027 5.19731 18.9939 5.43251 19.1138C5.52307 19.1599 5.66036 19.2018 5.94748 19.2252C6.24336 19.2494 6.62757 19.25 7.2 19.25H12.8C13.3724 19.25 13.7566 19.2494 14.0525 19.2252C14.3396 19.2018 14.4769 19.1599 14.5675 19.1138C14.8027 18.9939 14.9939 18.8027 15.1138 18.5675C15.1599 18.4769 15.2018 18.3396 15.2252 18.0525C15.2494 17.7566 15.25 17.3724 15.25 16.8V16.75H13C12.5858 16.75 12.25 16.4142 12.25 16C12.25 15.5858 12.5858 15.25 13 15.25H16.8C17.3724 15.25 17.7566 15.2494 18.0525 15.2252C18.3396 15.2018 18.4769 15.1599 18.5675 15.1138C18.8027 14.9939 18.9939 14.8027 19.1138 14.5675C19.1599 14.4769 19.2018 14.3396 19.2252 14.0525C19.2494 13.7566 19.25 13.3724 19.25 12.8V7.2C19.25 6.62757 19.2494 6.24336 19.2252 5.94748C19.2018 5.66036 19.1599 5.52307 19.1138 5.43251C18.9939 5.19731 18.8027 5.00608 18.5675 4.88624C18.4769 4.8401 18.3396 4.79822 18.0525 4.77476C17.7566 4.75058 17.3724 4.75 16.8 4.75H11.2C10.6276 4.75 10.2434 4.75058 9.94748 4.77476C9.66036 4.79822 9.52307 4.8401 9.43251 4.88624C9.19731 5.00608 9.00608 5.19731 8.88624 5.43251C8.8401 5.52307 8.79822 5.66036 8.77476 5.94748C8.75058 6.24336 8.75 6.62757 8.75 7.2V11C8.75 11.4142 8.41422 11.75 8 11.75C7.58579 11.75 7.25 11.4142 7.25 11Z\"\n  />\n</svg>`;\nexport const DeleteIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M11.1799 2.24992C11.2215 2.24996 11.2637 2.25 11.3064 2.25H12.6936C12.7363 2.25 12.7785 2.24996 12.8201 2.24992C13.5245 2.24927 14.0767 2.24875 14.565 2.44082C14.9934 2.60932 15.3727 2.88268 15.668 3.23585C16.0047 3.6384 16.1788 4.1624 16.4009 4.83082C16.4141 4.87034 16.4274 4.91036 16.4409 4.9509L16.5406 5.25H20C20.4142 5.25 20.75 5.58579 20.75 6C20.75 6.41421 20.4142 6.75 20 6.75H18.75V16.2321C18.75 17.045 18.75 17.7006 18.7066 18.2315C18.662 18.7781 18.5676 19.2582 18.3413 19.7025C17.9817 20.4081 17.4081 20.9818 16.7025 21.3413C16.2582 21.5676 15.7781 21.662 15.2315 21.7066C14.7006 21.75 14.045 21.75 13.2321 21.75H10.7679C9.95505 21.75 9.29944 21.75 8.76853 21.7066C8.2219 21.662 7.74175 21.5676 7.29754 21.3413C6.59193 20.9818 6.01825 20.4081 5.65873 19.7025C5.43238 19.2582 5.33803 18.7781 5.29336 18.2315C5.24999 17.7006 5.24999 17.0449 5.25 16.2321L5.25 6.75H4C3.58579 6.75 3.25 6.41421 3.25 6C3.25 5.58579 3.58579 5.25 4 5.25H7.45943L7.55913 4.9509C7.57264 4.91036 7.58594 4.87034 7.59908 4.83081C7.82119 4.1624 7.99532 3.6384 8.33195 3.23585C8.62729 2.88269 9.00657 2.60932 9.435 2.44082C9.92335 2.24875 10.4755 2.24927 11.1799 2.24992ZM7.9827 6.75C7.99433 6.75027 8.00594 6.75027 8.01751 6.75H15.9825C15.9941 6.75027 16.0057 6.75027 16.0173 6.75H17.25V16.2C17.25 17.0525 17.2494 17.6467 17.2116 18.1093C17.1745 18.5632 17.1054 18.824 17.0048 19.0215C16.7891 19.4448 16.4448 19.789 16.0215 20.0048C15.824 20.1054 15.5632 20.1745 15.1093 20.2116C14.6467 20.2494 14.0525 20.25 13.2 20.25H10.8C9.94755 20.25 9.35331 20.2494 8.89068 20.2116C8.4368 20.1745 8.17604 20.1054 7.97852 20.0048C7.55516 19.789 7.21095 19.4448 6.99524 19.0215C6.8946 18.824 6.82546 18.5632 6.78838 18.1093C6.75058 17.6467 6.75 17.0525 6.75 16.2V6.75H7.9827ZM14.9592 5.25H9.0408C9.27769 4.54546 9.36214 4.34218 9.48262 4.19811C9.61687 4.03758 9.78927 3.91333 9.98401 3.83674C10.1725 3.76261 10.4131 3.75 11.3064 3.75H12.6936C13.5869 3.75 13.8275 3.76261 14.016 3.83674C14.2107 3.91333 14.3831 4.03759 14.5174 4.19811C14.6379 4.34218 14.7223 4.54546 14.9592 5.25ZM10 9.25C10.4142 9.25 10.75 9.58579 10.75 10V17C10.75 17.4142 10.4142 17.75 10 17.75C9.58579 17.75 9.25 17.4142 9.25 17V10C9.25 9.58579 9.58579 9.25 10 9.25ZM14 9.25C14.4142 9.25 14.75 9.58579 14.75 10V17C14.75 17.4142 14.4142 17.75 14 17.75C13.5858 17.75 13.25 17.4142 13.25 17V10C13.25 9.58579 13.5858 9.25 14 9.25Z\"\n  />\n</svg>`;\n// Date & Time icons\nexport const TodayIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M8.5 13.75C8.5 13.3358 8.16421 13 7.75 13C7.33579 13 7 13.3358 7 13.75L7 15.25C7 15.6642 7.33579 16 7.75 16C8.16421 16 8.5 15.6642 8.5 15.25V13.75Z\"\n  />\n  <path\n    d=\"M12 11C12.4142 11 12.75 11.3358 12.75 11.75V17.25C12.75 17.6642 12.4142 18 12 18C11.5858 18 11.25 17.6642 11.25 17.25V11.75C11.25 11.3358 11.5858 11 12 11Z\"\n  />\n  <path\n    d=\"M15.5 15.25C15.5 15.6642 15.8358 16 16.25 16C16.6642 16 17 15.6642 17 15.25V13.75C17 13.3358 16.6642 13 16.25 13C15.8358 13 15.5 13.3358 15.5 13.75V15.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.30556 4C8.30556 3.58579 7.96977 3.25 7.55556 3.25C7.14134 3.25 6.80556 3.58579 6.80556 4V5.02778C6.33711 5.02777 5.94085 5.02793 5.61573 5.05449C5.2729 5.0825 4.94369 5.14356 4.63019 5.30329C4.15456 5.54564 3.76786 5.93234 3.52551 6.40797C3.36578 6.72146 3.30472 7.05068 3.27671 7.39351C3.24998 7.72071 3.24999 8.11996 3.25 8.59235V17.1854C3.24999 17.6578 3.24998 18.0571 3.27671 18.3843C3.30472 18.7271 3.36578 19.0563 3.52551 19.3698C3.76786 19.8454 4.15456 20.2321 4.63019 20.4745C4.94369 20.6342 5.2729 20.6953 5.61573 20.7233C5.94291 20.75 6.34214 20.75 6.81449 20.75H17.1854C17.6578 20.75 18.0571 20.75 18.3843 20.7233C18.7271 20.6953 19.0563 20.6342 19.3698 20.4745C19.8454 20.2321 20.2321 19.8454 20.4745 19.3698C20.6342 19.0563 20.6953 18.7271 20.7233 18.3843C20.75 18.0571 20.75 17.6579 20.75 17.1855V8.59236C20.75 8.12001 20.75 7.72069 20.7233 7.39351C20.6953 7.05068 20.6342 6.72146 20.4745 6.40797C20.2321 5.93234 19.8454 5.54564 19.3698 5.30329C19.0563 5.14356 18.7271 5.0825 18.3843 5.05449C18.0592 5.02793 17.6629 5.02777 17.1944 5.02778V4C17.1944 3.58579 16.8587 3.25 16.4444 3.25C16.0302 3.25 15.6944 3.58579 15.6944 4V5.02778H8.30556V4ZM5.73788 6.54951C5.9967 6.52836 6.33425 6.52778 6.84445 6.52778H17.1556C17.6658 6.52778 18.0033 6.52836 18.2621 6.54951C18.5122 6.56994 18.622 6.60577 18.6888 6.6398C18.8822 6.73833 19.0394 6.89556 19.138 7.08895C19.172 7.15575 19.2078 7.26559 19.2283 7.51566C19.2489 7.76785 19.25 8.09477 19.25 8.58333H4.75C4.75004 8.09477 4.75113 7.76785 4.77173 7.51566C4.79216 7.26559 4.82799 7.15575 4.86202 7.08895C4.96056 6.89557 5.11779 6.73834 5.31118 6.6398C5.37797 6.60577 5.48781 6.56994 5.73788 6.54951ZM4.75 10.0833H19.25V17.1556C19.25 17.6658 19.2494 18.0033 19.2283 18.2621C19.2078 18.5122 19.172 18.622 19.138 18.6888C19.0394 18.8822 18.8822 19.0394 18.6888 19.138C18.622 19.172 18.5122 19.2078 18.2621 19.2283C18.0033 19.2494 17.6658 19.25 17.1556 19.25H6.84445C6.33425 19.25 5.9967 19.2494 5.73788 19.2283C5.48781 19.2078 5.37797 19.172 5.31118 19.138C5.11779 19.0394 4.96056 18.8822 4.86202 18.6888C4.82799 18.622 4.79216 18.5122 4.77173 18.2621C4.75058 18.0033 4.75 17.6658 4.75 17.1556V10.0833Z\"\n  />\n</svg>`;\nexport const TomorrowIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M8.5 13.75C8.5 13.3358 8.16421 13 7.75 13C7.33579 13 7 13.3358 7 13.75L7 15.25C7 15.6642 7.33579 16 7.75 16C8.16421 16 8.5 15.6642 8.5 15.25V13.75Z\"\n  />\n  <path\n    d=\"M12 13C12.4142 13 12.75 13.3358 12.75 13.75V15.25C12.75 15.6642 12.4142 16 12 16C11.5858 16 11.25 15.6642 11.25 15.25V13.75C11.25 13.3358 11.5858 13 12 13Z\"\n  />\n  <path\n    d=\"M15.5 17.25C15.5 17.6642 15.8358 18 16.25 18C16.6642 18 17 17.6642 17 17.25V11.75C17 11.3358 16.6642 11 16.25 11C15.8358 11 15.5 11.3358 15.5 11.75V17.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.30556 4C8.30556 3.58579 7.96977 3.25 7.55556 3.25C7.14134 3.25 6.80556 3.58579 6.80556 4V5.02778C6.33711 5.02777 5.94085 5.02793 5.61573 5.05449C5.2729 5.0825 4.94369 5.14356 4.63019 5.30329C4.15456 5.54564 3.76786 5.93234 3.52551 6.40797C3.36578 6.72146 3.30472 7.05068 3.27671 7.39351C3.24998 7.72071 3.24999 8.11996 3.25 8.59235V17.1854C3.24999 17.6578 3.24998 18.0571 3.27671 18.3843C3.30472 18.7271 3.36578 19.0563 3.52551 19.3698C3.76786 19.8454 4.15456 20.2321 4.63019 20.4745C4.94369 20.6342 5.2729 20.6953 5.61573 20.7233C5.94291 20.75 6.34214 20.75 6.81449 20.75H17.1854C17.6578 20.75 18.0571 20.75 18.3843 20.7233C18.7271 20.6953 19.0563 20.6342 19.3698 20.4745C19.8454 20.2321 20.2321 19.8454 20.4745 19.3698C20.6342 19.0563 20.6953 18.7271 20.7233 18.3843C20.75 18.0571 20.75 17.6579 20.75 17.1855V8.59236C20.75 8.12001 20.75 7.72069 20.7233 7.39351C20.6953 7.05068 20.6342 6.72146 20.4745 6.40797C20.2321 5.93234 19.8454 5.54564 19.3698 5.30329C19.0563 5.14356 18.7271 5.0825 18.3843 5.05449C18.0592 5.02793 17.6629 5.02777 17.1944 5.02778V4C17.1944 3.58579 16.8587 3.25 16.4444 3.25C16.0302 3.25 15.6944 3.58579 15.6944 4V5.02778H8.30556V4ZM5.73788 6.54951C5.9967 6.52836 6.33425 6.52778 6.84445 6.52778H17.1556C17.6658 6.52778 18.0033 6.52836 18.2621 6.54951C18.5122 6.56994 18.622 6.60577 18.6888 6.6398C18.8822 6.73833 19.0394 6.89556 19.138 7.08895C19.172 7.15575 19.2078 7.26559 19.2283 7.51566C19.2489 7.76785 19.25 8.09477 19.25 8.58333H4.75C4.75004 8.09477 4.75113 7.76785 4.77173 7.51566C4.79216 7.26559 4.82799 7.15575 4.86202 7.08895C4.96056 6.89557 5.11779 6.73834 5.31118 6.6398C5.37797 6.60577 5.48781 6.56994 5.73788 6.54951ZM4.75 10.0833H19.25V17.1556C19.25 17.6658 19.2494 18.0033 19.2283 18.2621C19.2078 18.5122 19.172 18.622 19.138 18.6888C19.0394 18.8822 18.8822 19.0394 18.6888 19.138C18.622 19.172 18.5122 19.2078 18.2621 19.2283C18.0033 19.2494 17.6658 19.25 17.1556 19.25H6.84445C6.33425 19.25 5.9967 19.2494 5.73788 19.2283C5.48781 19.2078 5.37797 19.172 5.31118 19.138C5.11779 19.0394 4.96056 18.8822 4.86202 18.6888C4.82799 18.622 4.79216 18.5122 4.77173 18.2621C4.75058 18.0033 4.75 17.6658 4.75 17.1556V10.0833Z\"\n  />\n</svg>`;\nexport const YesterdayIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M7.55556 3.25C7.96977 3.25 8.30556 3.58579 8.30556 4V5.02778H15.6944V4C15.6944 3.58579 16.0302 3.25 16.4444 3.25C16.8587 3.25 17.1944 3.58579 17.1944 4V5.02778C17.6629 5.02777 18.0592 5.02793 18.3843 5.05449C18.7271 5.0825 19.0563 5.14356 19.3698 5.30329C19.8454 5.54564 20.2321 5.93234 20.4745 6.40797C20.6342 6.72146 20.6953 7.05068 20.7233 7.39351C20.75 7.72071 20.75 8.11997 20.75 8.59236V17.1854C20.75 17.6578 20.75 18.0571 20.7233 18.3843C20.6953 18.7271 20.6342 19.0563 20.4745 19.3698C20.2321 19.8454 19.8454 20.2321 19.3698 20.4745C19.0563 20.6342 18.7271 20.6953 18.3843 20.7233C18.0571 20.75 17.6578 20.75 17.1854 20.75H6.81458C6.34219 20.75 5.94293 20.75 5.61573 20.7233C5.2729 20.6953 4.94369 20.6342 4.63019 20.4745C4.15456 20.2321 3.76786 19.8454 3.52551 19.3698C3.36578 19.0563 3.30472 18.7271 3.27671 18.3843C3.24998 18.0571 3.24999 17.6578 3.25 17.1854V8.59238C3.24999 8.11998 3.24998 7.72071 3.27671 7.39351C3.30472 7.05068 3.36578 6.72146 3.52551 6.40797C3.76786 5.93234 4.15456 5.54564 4.63019 5.30329C4.94369 5.14356 5.2729 5.0825 5.61573 5.05449C5.94085 5.02793 6.33711 5.02777 6.80556 5.02778V4C6.80556 3.58579 7.14134 3.25 7.55556 3.25ZM6.84445 6.52778C6.33425 6.52778 5.9967 6.52836 5.73788 6.54951C5.48781 6.56994 5.37797 6.60577 5.31118 6.6398C5.11779 6.73834 4.96056 6.89557 4.86202 7.08895C4.82799 7.15575 4.79216 7.26559 4.77173 7.51566C4.75113 7.76785 4.75004 8.09477 4.75 8.58333H19.25C19.25 8.09477 19.2489 7.76785 19.2283 7.51566C19.2078 7.26559 19.172 7.15575 19.138 7.08895C19.0394 6.89556 18.8822 6.73833 18.6888 6.6398C18.622 6.60577 18.5122 6.56994 18.2621 6.54951C18.0033 6.52836 17.6658 6.52778 17.1556 6.52778H6.84445ZM19.25 10.0833H4.75V17.1556C4.75 17.6658 4.75058 18.0033 4.77173 18.2621C4.79216 18.5122 4.82799 18.622 4.86202 18.6888C4.96056 18.8822 5.11779 19.0394 5.31118 19.138C5.37797 19.172 5.48781 19.2078 5.73788 19.2283C5.9967 19.2494 6.33425 19.25 6.84445 19.25H17.1556C17.6658 19.25 18.0033 19.2494 18.2621 19.2283C18.5122 19.2078 18.622 19.172 18.6888 19.138C18.8822 19.0394 19.0394 18.8822 19.138 18.6888C19.172 18.622 19.2078 18.5122 19.2283 18.2621C19.2494 18.0033 19.25 17.6658 19.25 17.1556V10.0833Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M16.25 13C15.8358 13 15.5 13.3358 15.5 13.75V15.25C15.5 15.6642 15.8358 16 16.25 16C16.6642 16 17 15.6642 17 15.25V13.75C17 13.3358 16.6642 13 16.25 13Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12 13C11.5858 13 11.25 13.3358 11.25 13.75V15.25C11.25 15.6642 11.5858 16 12 16C12.4142 16 12.75 15.6642 12.75 15.25V13.75C12.75 13.3358 12.4142 13 12 13Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M7.75 18C8.16421 18 8.5 17.6642 8.5 17.25L8.5 11.75C8.5 11.3358 8.16421 11 7.75 11C7.33579 11 7 11.3358 7 11.75L7 17.25C7 17.6642 7.33579 18 7.75 18Z\"\n  />\n</svg>`;\nexport const NowIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M6.11366 3.678C6.40656 3.9709 6.40656 4.44577 6.11366 4.73866L4.28033 6.572C3.98744 6.86489 3.51256 6.86489 3.21967 6.572C2.92678 6.2791 2.92678 5.80423 3.21967 5.51134L5.053 3.678C5.3459 3.38511 5.82077 3.38511 6.11366 3.678ZM17.8863 3.678C18.1792 3.38511 18.6541 3.38511 18.947 3.678L20.7803 5.51134C21.0732 5.80423 21.0732 6.2791 20.7803 6.572C20.4874 6.86489 20.0126 6.86489 19.7197 6.572L17.8863 4.73866C17.5934 4.44577 17.5934 3.9709 17.8863 3.678ZM12 5.875C8.36413 5.875 5.41667 8.82246 5.41667 12.4583C5.41667 16.0942 8.36413 19.0417 12 19.0417C15.6359 19.0417 18.5833 16.0942 18.5833 12.4583C18.5833 8.82246 15.6359 5.875 12 5.875ZM3.91667 12.4583C3.91667 7.99403 7.5357 4.375 12 4.375C16.4643 4.375 20.0833 7.99403 20.0833 12.4583C20.0833 16.9226 16.4643 20.5417 12 20.5417C7.5357 20.5417 3.91667 16.9226 3.91667 12.4583Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M15.197 10.3586C15.4899 10.6515 15.4899 11.1264 15.197 11.4192L11.6415 14.9748C11.3486 15.2677 10.8737 15.2677 10.5808 14.9748L8.80301 13.197C8.51012 12.9041 8.51012 12.4293 8.80301 12.1364C9.09591 11.8435 9.57078 11.8435 9.86367 12.1364L11.1111 13.3838L14.1363 10.3586C14.4292 10.0657 14.9041 10.0657 15.197 10.3586Z\"\n  />\n</svg>`;\n// Misc icons\nexport const CrossIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M6.34315 6.34314C6.63604 6.05025 7.11091 6.05025 7.40381 6.34314L12 10.9393L16.5962 6.34314C16.8891 6.05025 17.364 6.05025 17.6569 6.34314C17.9497 6.63604 17.9497 7.11091 17.6569 7.4038L13.0607 12L17.6569 16.5962C17.9497 16.8891 17.9497 17.364 17.6569 17.6569C17.364 17.9497 16.8891 17.9497 16.5962 17.6569L12 13.0607L7.40381 17.6569C7.11091 17.9497 6.63604 17.9497 6.34315 17.6569C6.05025 17.364 6.05025 16.8891 6.34315 16.5962L10.9393 12L6.34315 7.4038C6.05025 7.11091 6.05025 6.63604 6.34315 6.34314Z\"\n  />\n</svg>`;\nconst InsertBlocksIcon = svg `<path\n  fill-rule=\"evenodd\"\n  clip-rule=\"evenodd\"\n  d=\"M5.57378 3.25C5.5825 3.25 5.59124 3.25 5.6 3.25L8.42622 3.25C8.68371 3.24998 8.92019 3.24996 9.11787 3.26612C9.33101 3.28353 9.56418 3.32339 9.79449 3.44074C10.1238 3.60852 10.3915 3.87623 10.5593 4.20552C10.6766 4.43582 10.7165 4.669 10.7339 4.88213C10.75 5.07982 10.75 5.3163 10.75 5.57379V8.42621C10.75 8.6837 10.75 8.92019 10.7339 9.11787C10.7165 9.33101 10.6766 9.56418 10.5593 9.79448C10.3915 10.1238 10.1238 10.3915 9.79449 10.5593C9.56418 10.6766 9.33101 10.7165 9.11787 10.7339C8.92019 10.75 8.6837 10.75 8.42622 10.75H5.57379C5.3163 10.75 5.07982 10.75 4.88213 10.7339C4.669 10.7165 4.43583 10.6766 4.20552 10.5593C3.87624 10.3915 3.60852 10.1238 3.44074 9.79448C3.32339 9.56418 3.28353 9.33101 3.26612 9.11787C3.24997 8.92019 3.24998 8.6837 3.25 8.42622L3.25 5.6C3.25 5.59124 3.25 5.5825 3.25 5.57378C3.24998 5.3163 3.24997 5.07981 3.26612 4.88213C3.28353 4.669 3.32339 4.43582 3.44074 4.20552C3.60852 3.87623 3.87624 3.60852 4.20552 3.44074C4.43583 3.32339 4.669 3.28353 4.88213 3.26612C5.07982 3.24996 5.3163 3.24998 5.57378 3.25ZM4.88088 4.77973C4.88085 4.77972 4.88132 4.77952 4.88239 4.77917L4.88088 4.77973ZM4.88346 4.77882C4.89234 4.77607 4.92547 4.76757 5.00428 4.76113C5.13341 4.75058 5.3076 4.75 5.6 4.75H8.4C8.6924 4.75 8.8666 4.75058 8.99573 4.76113C9.07454 4.76757 9.10766 4.77607 9.11654 4.77882C9.16118 4.80234 9.19766 4.83882 9.22118 4.88346C9.22393 4.89234 9.23243 4.92547 9.23887 5.00428C9.24942 5.1334 9.25 5.3076 9.25 5.6V8.4C9.25 8.6924 9.24942 8.8666 9.23887 8.99572C9.23243 9.07453 9.22393 9.10766 9.22118 9.11654C9.19766 9.16118 9.16118 9.19766 9.11654 9.22118C9.10767 9.22393 9.07454 9.23243 8.99573 9.23887C8.8666 9.24942 8.6924 9.25 8.4 9.25H5.6C5.3076 9.25 5.13341 9.24942 5.00428 9.23887C4.92547 9.23243 4.89234 9.22393 4.88347 9.22118C4.83883 9.19766 4.80235 9.16118 4.77883 9.11654C4.77607 9.10766 4.76757 9.07453 4.76114 8.99572C4.75059 8.8666 4.75 8.6924 4.75 8.4V5.6C4.75 5.3076 4.75059 5.1334 4.76114 5.00428C4.76757 4.92547 4.77607 4.89234 4.77883 4.88346C4.80235 4.83882 4.83883 4.80234 4.88346 4.77882ZM4.77973 4.88088C4.77974 4.8809 4.77956 4.88144 4.77917 4.88239L4.77973 4.88088ZM4.77973 9.11913C4.77972 9.11915 4.77953 9.11869 4.77918 9.11764L4.77973 9.11913ZM4.88088 9.22027C4.88091 9.22026 4.88143 9.22044 4.88236 9.22082L4.88088 9.22027ZM9.11913 9.22027C9.11916 9.22028 9.11869 9.22048 9.11764 9.22082L9.11913 9.22027ZM9.22028 9.11913C9.22027 9.11909 9.22044 9.11856 9.22084 9.11761L9.22028 9.11913ZM9.22028 4.88088C9.22029 4.88085 9.22048 4.88132 9.22084 4.88239L9.22028 4.88088ZM9.11764 4.77918C9.11869 4.77952 9.11916 4.77972 9.11913 4.77973L9.11764 4.77918ZM15.5738 3.25H18.4262C18.6837 3.24998 18.9202 3.24996 19.1179 3.26612C19.331 3.28353 19.5642 3.32339 19.7945 3.44074C20.1238 3.60852 20.3915 3.87623 20.5593 4.20552C20.6766 4.43582 20.7165 4.669 20.7339 4.88213C20.75 5.07981 20.75 5.31629 20.75 5.57377V8.42623C20.75 8.68371 20.75 8.92019 20.7339 9.11787C20.7165 9.33101 20.6766 9.56418 20.5593 9.79448C20.3915 10.1238 20.1238 10.3915 19.7945 10.5593C19.5642 10.6766 19.331 10.7165 19.1179 10.7339C18.9202 10.75 18.6837 10.75 18.4262 10.75H15.5738C15.3163 10.75 15.0798 10.75 14.8821 10.7339C14.669 10.7165 14.4358 10.6766 14.2055 10.5593C13.8762 10.3915 13.6085 10.1238 13.4407 9.79448C13.3234 9.56418 13.2835 9.33101 13.2661 9.11787C13.25 8.92019 13.25 8.68371 13.25 8.42623V5.57377C13.25 5.31629 13.25 5.07981 13.2661 4.88213C13.2835 4.669 13.3234 4.43582 13.4407 4.20552C13.6085 3.87623 13.8762 3.60852 14.2055 3.44074C14.4358 3.32339 14.669 3.28353 14.8821 3.26612C15.0798 3.24996 15.3163 3.24998 15.5738 3.25ZM14.8809 4.77973C14.8808 4.77972 14.8813 4.77953 14.8824 4.77918L14.8809 4.77973ZM14.8835 4.77882C14.8923 4.77607 14.9255 4.76757 15.0043 4.76113C15.1334 4.75058 15.3076 4.75 15.6 4.75H18.4C18.6924 4.75 18.8666 4.75058 18.9957 4.76113C19.0745 4.76757 19.1077 4.77607 19.1165 4.77882C19.1612 4.80234 19.1977 4.83882 19.2212 4.88346C19.2239 4.89234 19.2324 4.92547 19.2389 5.00428C19.2494 5.1334 19.25 5.3076 19.25 5.6V8.4C19.25 8.6924 19.2494 8.8666 19.2389 8.99572C19.2324 9.07453 19.2239 9.10766 19.2212 9.11654C19.1977 9.16118 19.1612 9.19766 19.1165 9.22118C19.1077 9.22393 19.0745 9.23243 18.9957 9.23887C18.8666 9.24942 18.6924 9.25 18.4 9.25H15.6C15.3076 9.25 15.1334 9.24942 15.0043 9.23887C14.9255 9.23243 14.8923 9.22393 14.8835 9.22118C14.8388 9.19766 14.8023 9.16118 14.7788 9.11654C14.7761 9.10766 14.7676 9.07453 14.7611 8.99572C14.7506 8.8666 14.75 8.6924 14.75 8.4V5.6C14.75 5.3076 14.7506 5.1334 14.7611 5.00428C14.7676 4.92547 14.7761 4.89234 14.7788 4.88346C14.8023 4.83882 14.8388 4.80234 14.8835 4.77882ZM14.7797 4.88088C14.7797 4.8809 14.7796 4.88143 14.7792 4.88236L14.7797 4.88088ZM14.7797 9.11913C14.7797 9.11915 14.7795 9.11867 14.7792 9.11761L14.7797 9.11913ZM14.8809 9.22027C14.8809 9.22026 14.8814 9.22044 14.8824 9.22082L14.8809 9.22027ZM19.1191 9.22027C19.1192 9.22028 19.1187 9.22048 19.1176 9.22082L19.1191 9.22027ZM19.2203 9.11913C19.2203 9.11911 19.2204 9.11857 19.2208 9.11761L19.2203 9.11913ZM19.2203 4.88088C19.2203 4.88085 19.2205 4.88131 19.2208 4.88236L19.2203 4.88088ZM19.1176 4.77917C19.1187 4.77952 19.1192 4.77972 19.1191 4.77973L19.1176 4.77917ZM5.57377 13.25H8.42623C8.68372 13.25 8.92019 13.25 9.11787 13.2661C9.33101 13.2835 9.56418 13.3234 9.79449 13.4407C10.1238 13.6085 10.3915 13.8762 10.5593 14.2055C10.6766 14.4358 10.7165 14.669 10.7339 14.8821C10.75 15.0798 10.75 15.3163 10.75 15.5738V18.4262C10.75 18.6837 10.75 18.9202 10.7339 19.1179C10.7165 19.331 10.6766 19.5642 10.5593 19.7945C10.3915 20.1238 10.1238 20.3915 9.79449 20.5593C9.56418 20.6766 9.33101 20.7165 9.11787 20.7339C8.92019 20.75 8.68372 20.75 8.42623 20.75H5.57377C5.31629 20.75 5.07981 20.75 4.88213 20.7339C4.669 20.7165 4.43583 20.6766 4.20552 20.5593C3.87624 20.3915 3.60852 20.1238 3.44074 19.7945C3.32339 19.5642 3.28353 19.331 3.26612 19.1179C3.24997 18.9202 3.24998 18.6837 3.25 18.4262V15.5738C3.24998 15.3163 3.24997 15.0798 3.26612 14.8821C3.28353 14.669 3.32339 14.4358 3.44074 14.2055C3.60852 13.8762 3.87624 13.6085 4.20552 13.4407C4.43583 13.3234 4.669 13.2835 4.88213 13.2661C5.07981 13.25 5.31629 13.25 5.57377 13.25ZM4.88088 14.7797C4.88085 14.7797 4.88131 14.7795 4.88237 14.7792L4.88088 14.7797ZM4.88346 14.7788C4.89234 14.7761 4.92546 14.7676 5.00428 14.7611C5.13341 14.7506 5.3076 14.75 5.6 14.75H8.4C8.6924 14.75 8.8666 14.7506 8.99573 14.7611C9.07453 14.7676 9.10766 14.7761 9.11654 14.7788C9.16118 14.8023 9.19766 14.8388 9.22118 14.8835C9.22393 14.8923 9.23243 14.9255 9.23887 15.0043C9.24942 15.1334 9.25 15.3076 9.25 15.6V18.4C9.25 18.6924 9.24942 18.8666 9.23887 18.9957C9.23243 19.0745 9.22393 19.1077 9.22118 19.1165C9.19766 19.1612 9.16118 19.1977 9.11654 19.2212C9.10767 19.2239 9.07454 19.2324 8.99573 19.2389C8.8666 19.2494 8.6924 19.25 8.4 19.25H5.6C5.3076 19.25 5.13341 19.2494 5.00428 19.2389C4.92547 19.2324 4.89235 19.2239 4.88347 19.2212C4.83883 19.1977 4.80235 19.1612 4.77883 19.1165C4.77607 19.1077 4.76757 19.0745 4.76114 18.9957C4.75059 18.8666 4.75 18.6924 4.75 18.4V15.6C4.75 15.3076 4.75059 15.1334 4.76114 15.0043C4.76757 14.9255 4.77607 14.8923 4.77883 14.8835C4.80234 14.8388 4.83882 14.8023 4.88346 14.7788ZM4.77973 14.8809C4.77974 14.8809 4.77956 14.8814 4.77918 14.8824L4.77973 14.8809ZM4.77973 19.1191C4.77972 19.1192 4.77953 19.1187 4.77918 19.1176L4.77973 19.1191ZM4.88088 19.2203C4.8809 19.2203 4.88143 19.2204 4.88236 19.2208L4.88088 19.2203ZM9.11913 19.2203C9.11917 19.2203 9.1187 19.2205 9.11762 19.2208L9.11913 19.2203ZM9.22028 19.1191C9.22026 19.1191 9.22044 19.1185 9.22087 19.1175L9.22028 19.1191ZM9.22027 14.8809C9.22028 14.8808 9.22048 14.8813 9.22084 14.8824L9.22027 14.8809ZM9.11761 14.7792C9.11868 14.7795 9.11915 14.7797 9.11913 14.7797L9.11761 14.7792ZM17 13.25C17.4142 13.25 17.75 13.5858 17.75 14V16.25H20C20.4142 16.25 20.75 16.5858 20.75 17C20.75 17.4142 20.4142 17.75 20 17.75H17.75V20C17.75 20.4142 17.4142 20.75 17 20.75C16.5858 20.75 16.25 20.4142 16.25 20V17.75H14C13.5858 17.75 13.25 17.4142 13.25 17C13.25 16.5858 13.5858 16.25 14 16.25H16.25V14C16.25 13.5858 16.5858 13.25 17 13.25Z\"\n/>`;\nexport const BlockHubIcon20 = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  ${InsertBlocksIcon}\n</svg>`;\nexport const BlockHubIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M5.57378 3.25C5.5825 3.25 5.59124 3.25 5.6 3.25L8.42622 3.25C8.68371 3.24998 8.92019 3.24996 9.11787 3.26612C9.33101 3.28353 9.56418 3.32339 9.79449 3.44074C10.1238 3.60852 10.3915 3.87623 10.5593 4.20552C10.6766 4.43582 10.7165 4.669 10.7339 4.88213C10.75 5.07982 10.75 5.3163 10.75 5.57379V8.42621C10.75 8.6837 10.75 8.92019 10.7339 9.11787C10.7165 9.33101 10.6766 9.56418 10.5593 9.79448C10.3915 10.1238 10.1238 10.3915 9.79449 10.5593C9.56418 10.6766 9.33101 10.7165 9.11787 10.7339C8.92019 10.75 8.6837 10.75 8.42622 10.75H5.57379C5.3163 10.75 5.07982 10.75 4.88213 10.7339C4.669 10.7165 4.43583 10.6766 4.20552 10.5593C3.87624 10.3915 3.60852 10.1238 3.44074 9.79448C3.32339 9.56418 3.28353 9.33101 3.26612 9.11787C3.24997 8.92019 3.24998 8.6837 3.25 8.42622L3.25 5.6C3.25 5.59124 3.25 5.5825 3.25 5.57378C3.24998 5.3163 3.24997 5.07981 3.26612 4.88213C3.28353 4.669 3.32339 4.43582 3.44074 4.20552C3.60852 3.87623 3.87624 3.60852 4.20552 3.44074C4.43583 3.32339 4.669 3.28353 4.88213 3.26612C5.07982 3.24996 5.3163 3.24998 5.57378 3.25ZM4.88088 4.77973C4.88085 4.77972 4.88132 4.77952 4.88239 4.77917L4.88088 4.77973ZM4.88346 4.77882C4.89234 4.77607 4.92547 4.76757 5.00428 4.76113C5.13341 4.75058 5.3076 4.75 5.6 4.75H8.4C8.6924 4.75 8.8666 4.75058 8.99573 4.76113C9.07454 4.76757 9.10766 4.77607 9.11654 4.77882C9.16118 4.80234 9.19766 4.83882 9.22118 4.88346C9.22393 4.89234 9.23243 4.92547 9.23887 5.00428C9.24942 5.1334 9.25 5.3076 9.25 5.6V8.4C9.25 8.6924 9.24942 8.8666 9.23887 8.99572C9.23243 9.07453 9.22393 9.10766 9.22118 9.11654C9.19766 9.16118 9.16118 9.19766 9.11654 9.22118C9.10767 9.22393 9.07454 9.23243 8.99573 9.23887C8.8666 9.24942 8.6924 9.25 8.4 9.25H5.6C5.3076 9.25 5.13341 9.24942 5.00428 9.23887C4.92547 9.23243 4.89234 9.22393 4.88347 9.22118C4.83883 9.19766 4.80235 9.16118 4.77883 9.11654C4.77607 9.10766 4.76757 9.07453 4.76114 8.99572C4.75059 8.8666 4.75 8.6924 4.75 8.4V5.6C4.75 5.3076 4.75059 5.1334 4.76114 5.00428C4.76757 4.92547 4.77607 4.89234 4.77883 4.88346C4.80235 4.83882 4.83883 4.80234 4.88346 4.77882ZM4.77973 4.88088C4.77974 4.8809 4.77956 4.88144 4.77917 4.88239L4.77973 4.88088ZM4.77973 9.11913C4.77972 9.11915 4.77953 9.11869 4.77918 9.11764L4.77973 9.11913ZM4.88088 9.22027C4.88091 9.22026 4.88143 9.22044 4.88236 9.22082L4.88088 9.22027ZM9.11913 9.22027C9.11916 9.22028 9.11869 9.22048 9.11764 9.22082L9.11913 9.22027ZM9.22028 9.11913C9.22027 9.11909 9.22044 9.11856 9.22084 9.11761L9.22028 9.11913ZM9.22028 4.88088C9.22029 4.88085 9.22048 4.88132 9.22084 4.88239L9.22028 4.88088ZM9.11764 4.77918C9.11869 4.77952 9.11916 4.77972 9.11913 4.77973L9.11764 4.77918ZM15.5738 3.25H18.4262C18.6837 3.24998 18.9202 3.24996 19.1179 3.26612C19.331 3.28353 19.5642 3.32339 19.7945 3.44074C20.1238 3.60852 20.3915 3.87623 20.5593 4.20552C20.6766 4.43582 20.7165 4.669 20.7339 4.88213C20.75 5.07981 20.75 5.31629 20.75 5.57377V8.42623C20.75 8.68371 20.75 8.92019 20.7339 9.11787C20.7165 9.33101 20.6766 9.56418 20.5593 9.79448C20.3915 10.1238 20.1238 10.3915 19.7945 10.5593C19.5642 10.6766 19.331 10.7165 19.1179 10.7339C18.9202 10.75 18.6837 10.75 18.4262 10.75H15.5738C15.3163 10.75 15.0798 10.75 14.8821 10.7339C14.669 10.7165 14.4358 10.6766 14.2055 10.5593C13.8762 10.3915 13.6085 10.1238 13.4407 9.79448C13.3234 9.56418 13.2835 9.33101 13.2661 9.11787C13.25 8.92019 13.25 8.68371 13.25 8.42623V5.57377C13.25 5.31629 13.25 5.07981 13.2661 4.88213C13.2835 4.669 13.3234 4.43582 13.4407 4.20552C13.6085 3.87623 13.8762 3.60852 14.2055 3.44074C14.4358 3.32339 14.669 3.28353 14.8821 3.26612C15.0798 3.24996 15.3163 3.24998 15.5738 3.25ZM14.8809 4.77973C14.8808 4.77972 14.8813 4.77953 14.8824 4.77918L14.8809 4.77973ZM14.8835 4.77882C14.8923 4.77607 14.9255 4.76757 15.0043 4.76113C15.1334 4.75058 15.3076 4.75 15.6 4.75H18.4C18.6924 4.75 18.8666 4.75058 18.9957 4.76113C19.0745 4.76757 19.1077 4.77607 19.1165 4.77882C19.1612 4.80234 19.1977 4.83882 19.2212 4.88346C19.2239 4.89234 19.2324 4.92547 19.2389 5.00428C19.2494 5.1334 19.25 5.3076 19.25 5.6V8.4C19.25 8.6924 19.2494 8.8666 19.2389 8.99572C19.2324 9.07453 19.2239 9.10766 19.2212 9.11654C19.1977 9.16118 19.1612 9.19766 19.1165 9.22118C19.1077 9.22393 19.0745 9.23243 18.9957 9.23887C18.8666 9.24942 18.6924 9.25 18.4 9.25H15.6C15.3076 9.25 15.1334 9.24942 15.0043 9.23887C14.9255 9.23243 14.8923 9.22393 14.8835 9.22118C14.8388 9.19766 14.8023 9.16118 14.7788 9.11654C14.7761 9.10766 14.7676 9.07453 14.7611 8.99572C14.7506 8.8666 14.75 8.6924 14.75 8.4V5.6C14.75 5.3076 14.7506 5.1334 14.7611 5.00428C14.7676 4.92547 14.7761 4.89234 14.7788 4.88346C14.8023 4.83882 14.8388 4.80234 14.8835 4.77882ZM14.7797 4.88088C14.7797 4.8809 14.7796 4.88143 14.7792 4.88236L14.7797 4.88088ZM14.7797 9.11913C14.7797 9.11915 14.7795 9.11867 14.7792 9.11761L14.7797 9.11913ZM14.8809 9.22027C14.8809 9.22026 14.8814 9.22044 14.8824 9.22082L14.8809 9.22027ZM19.1191 9.22027C19.1192 9.22028 19.1187 9.22048 19.1176 9.22082L19.1191 9.22027ZM19.2203 9.11913C19.2203 9.11911 19.2204 9.11857 19.2208 9.11761L19.2203 9.11913ZM19.2203 4.88088C19.2203 4.88085 19.2205 4.88131 19.2208 4.88236L19.2203 4.88088ZM19.1176 4.77917C19.1187 4.77952 19.1192 4.77972 19.1191 4.77973L19.1176 4.77917ZM5.57377 13.25H8.42623C8.68372 13.25 8.92019 13.25 9.11787 13.2661C9.33101 13.2835 9.56418 13.3234 9.79449 13.4407C10.1238 13.6085 10.3915 13.8762 10.5593 14.2055C10.6766 14.4358 10.7165 14.669 10.7339 14.8821C10.75 15.0798 10.75 15.3163 10.75 15.5738V18.4262C10.75 18.6837 10.75 18.9202 10.7339 19.1179C10.7165 19.331 10.6766 19.5642 10.5593 19.7945C10.3915 20.1238 10.1238 20.3915 9.79449 20.5593C9.56418 20.6766 9.33101 20.7165 9.11787 20.7339C8.92019 20.75 8.68372 20.75 8.42623 20.75H5.57377C5.31629 20.75 5.07981 20.75 4.88213 20.7339C4.669 20.7165 4.43583 20.6766 4.20552 20.5593C3.87624 20.3915 3.60852 20.1238 3.44074 19.7945C3.32339 19.5642 3.28353 19.331 3.26612 19.1179C3.24997 18.9202 3.24998 18.6837 3.25 18.4262V15.5738C3.24998 15.3163 3.24997 15.0798 3.26612 14.8821C3.28353 14.669 3.32339 14.4358 3.44074 14.2055C3.60852 13.8762 3.87624 13.6085 4.20552 13.4407C4.43583 13.3234 4.669 13.2835 4.88213 13.2661C5.07981 13.25 5.31629 13.25 5.57377 13.25ZM4.88088 14.7797C4.88085 14.7797 4.88131 14.7795 4.88237 14.7792L4.88088 14.7797ZM4.88346 14.7788C4.89234 14.7761 4.92546 14.7676 5.00428 14.7611C5.13341 14.7506 5.3076 14.75 5.6 14.75H8.4C8.6924 14.75 8.8666 14.7506 8.99573 14.7611C9.07453 14.7676 9.10766 14.7761 9.11654 14.7788C9.16118 14.8023 9.19766 14.8388 9.22118 14.8835C9.22393 14.8923 9.23243 14.9255 9.23887 15.0043C9.24942 15.1334 9.25 15.3076 9.25 15.6V18.4C9.25 18.6924 9.24942 18.8666 9.23887 18.9957C9.23243 19.0745 9.22393 19.1077 9.22118 19.1165C9.19766 19.1612 9.16118 19.1977 9.11654 19.2212C9.10767 19.2239 9.07454 19.2324 8.99573 19.2389C8.8666 19.2494 8.6924 19.25 8.4 19.25H5.6C5.3076 19.25 5.13341 19.2494 5.00428 19.2389C4.92547 19.2324 4.89235 19.2239 4.88347 19.2212C4.83883 19.1977 4.80235 19.1612 4.77883 19.1165C4.77607 19.1077 4.76757 19.0745 4.76114 18.9957C4.75059 18.8666 4.75 18.6924 4.75 18.4V15.6C4.75 15.3076 4.75059 15.1334 4.76114 15.0043C4.76757 14.9255 4.77607 14.8923 4.77883 14.8835C4.80234 14.8388 4.83882 14.8023 4.88346 14.7788ZM4.77973 14.8809C4.77974 14.8809 4.77956 14.8814 4.77918 14.8824L4.77973 14.8809ZM4.77973 19.1191C4.77972 19.1192 4.77953 19.1187 4.77918 19.1176L4.77973 19.1191ZM4.88088 19.2203C4.8809 19.2203 4.88143 19.2204 4.88236 19.2208L4.88088 19.2203ZM9.11913 19.2203C9.11917 19.2203 9.1187 19.2205 9.11762 19.2208L9.11913 19.2203ZM9.22028 19.1191C9.22026 19.1191 9.22044 19.1185 9.22087 19.1175L9.22028 19.1191ZM9.22027 14.8809C9.22028 14.8808 9.22048 14.8813 9.22084 14.8824L9.22027 14.8809ZM9.11761 14.7792C9.11868 14.7795 9.11915 14.7797 9.11913 14.7797L9.11761 14.7792ZM17 13.25C17.4142 13.25 17.75 13.5858 17.75 14V16.25H20C20.4142 16.25 20.75 16.5858 20.75 17C20.75 17.4142 20.4142 17.75 20 17.75H17.75V20C17.75 20.4142 17.4142 20.75 17 20.75C16.5858 20.75 16.25 20.4142 16.25 20V17.75H14C13.5858 17.75 13.25 17.4142 13.25 17C13.25 16.5858 13.5858 16.25 14 16.25H16.25V14C16.25 13.5858 16.5858 13.25 17 13.25Z\"\n  />\n</svg>`;\nexport const BlockHubRoundedRectangleIcon = html `<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M2.25 7C2.25 5.48122 3.48122 4.25 5 4.25H19C20.5188 4.25 21.75 5.48122 21.75 7V17C21.75 18.5188 20.5188 19.75 19 19.75H5C3.48122 19.75 2.25 18.5188 2.25 17V7ZM5 5.75C4.30964 5.75 3.75 6.30964 3.75 7V17C3.75 17.6904 4.30964 18.25 5 18.25H19C19.6904 18.25 20.25 17.6904 20.25 17V7C20.25 6.30964 19.6904 5.75 19 5.75H5Z\"\n  />\n</svg>`;\nexport const SearchIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M11 3.75C6.99594 3.75 3.75 6.99594 3.75 11C3.75 15.0041 6.99594 18.25 11 18.25C13.0026 18.25 14.8156 17.4381 16.1276 16.1254C16.128 16.1251 16.1284 16.1247 16.1287 16.1243C16.1288 16.1243 16.1289 16.1242 16.1289 16.1241C17.4395 14.8123 18.25 13.0008 18.25 11C18.25 6.99594 15.0041 3.75 11 3.75ZM17.6965 16.6324C18.9779 15.1104 19.75 13.1453 19.75 11C19.75 6.16751 15.8325 2.25 11 2.25C6.16751 2.25 2.25 6.16751 2.25 11C2.25 15.8325 6.16751 19.75 11 19.75C13.1471 19.75 15.1136 18.9767 16.6361 17.6933L20.4694 21.5301C20.7622 21.8231 21.2371 21.8233 21.5301 21.5306C21.8231 21.2378 21.8233 20.7629 21.5306 20.4699L17.6965 16.6324ZM10.25 6C10.25 5.58579 10.5858 5.25 11 5.25C14.1756 5.25 16.75 7.82436 16.75 11C16.75 11.4142 16.4142 11.75 16 11.75C15.5858 11.75 15.25 11.4142 15.25 11C15.25 8.65279 13.3472 6.75 11 6.75C10.5858 6.75 10.25 6.41421 10.25 6Z\"\n  />\n</svg>`;\n// Link Icon\n/**\n * ✅\n */\nexport const ConfirmIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 20 20\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M17.6726 6.0059L7.49998 16.1785L2.32739 11.0059L3.5059 9.82739L7.49998 13.8215L16.4941 4.82739L17.6726 6.0059Z\"\n  />\n</svg>`;\n/**\n * 🖊️\n */\nexport const EditIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 20 20\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M13.245 4.43531L12.543 5.16181L14.8382 7.45701L15.5647 6.75504C16.2018 6.11419 16.2006 5.07822 15.5612 4.4388C14.9218 3.7994 13.8859 3.79823 13.245 4.43531ZM13.9392 8.32572L11.6743 6.06086L5.13833 12.8251L4.2655 15.7345L7.17493 14.8617L13.9392 8.32572ZM12.3576 3.55492C13.4863 2.42619 15.3164 2.42619 16.4451 3.55492C17.5738 4.68365 17.5738 6.51369 16.4451 7.64242L16.4375 7.65L7.93429 15.8662C7.86252 15.9355 7.77518 15.9867 7.67959 16.0153L3.51292 17.2654C3.29269 17.3314 3.05397 17.2712 2.89139 17.1087C2.7288 16.9461 2.66862 16.7073 2.73469 16.4871L3.98469 12.3204C4.01337 12.2249 4.06452 12.1375 4.13387 12.0657L12.3576 3.55492Z\"\n  />\n</svg>`;\nexport const UnlinkIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12.8423 4.60675C14.6513 2.79775 17.5843 2.79775 19.3933 4.60675C21.2023 6.41576 21.2023 9.34874 19.3933 11.1577L17.3344 13.2166C17.0415 13.5095 16.5666 13.5095 16.2737 13.2166C15.9808 12.9237 15.9808 12.4489 16.2737 12.156L18.3326 10.0971C19.5558 8.87386 19.5558 6.89063 18.3326 5.66741C17.1094 4.44419 15.1261 4.44419 13.9029 5.66741L11.1578 8.41258C9.93454 9.6358 9.93454 11.619 11.1578 12.8423C11.3498 13.0343 11.5596 13.1955 11.7816 13.3266C12.1383 13.5372 12.2566 13.9971 12.046 14.3538C11.8353 14.7104 11.3755 14.8288 11.0188 14.6182C10.6892 14.4235 10.379 14.1849 10.0971 13.9029C8.28809 12.0939 8.28809 9.16093 10.0971 7.35192L12.8423 4.60675ZM11.954 9.64621C12.1647 9.28955 12.6246 9.17119 12.9812 9.38183C13.3109 9.57652 13.621 9.81514 13.9029 10.0971C15.7119 11.9061 15.7119 14.8391 13.9029 16.6481L11.1578 19.3932C9.34875 21.2023 6.41577 21.2023 4.60677 19.3932C2.79776 17.5842 2.79776 14.6513 4.60677 12.8423L6.66564 10.7834C6.95854 10.4905 7.43341 10.4905 7.7263 10.7834C8.0192 11.0763 8.0192 11.5511 7.7263 11.844L5.66743 13.9029C4.44421 15.1261 4.44421 17.1094 5.66743 18.3326C6.89065 19.5558 8.87388 19.5558 10.0971 18.3326L12.8423 15.5874C14.0655 14.3642 14.0655 12.381 12.8423 11.1577C12.6503 10.9657 12.4404 10.8045 12.2184 10.6734C11.8618 10.4627 11.7434 10.0029 11.954 9.64621Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.19501 3.26921C8.59861 3.17607 9.0013 3.42775 9.09444 3.83135L9.53081 5.72226C9.62395 6.12587 9.37227 6.52856 8.96866 6.6217C8.56505 6.71484 8.16236 6.46316 8.06922 6.05955L7.63286 4.16864C7.53972 3.76504 7.7914 3.36234 8.19501 3.26921ZM3.26922 8.19499C3.36236 7.79138 3.76505 7.5397 4.16866 7.63284L6.05957 8.06921C6.46317 8.16235 6.71486 8.56504 6.62172 8.96864C6.52858 9.37225 6.12588 9.62393 5.72228 9.53079L3.83137 9.09443C3.42776 9.00129 3.17608 8.5986 3.26922 8.19499ZM17.3783 15.0314C17.4715 14.6277 17.8741 14.3761 18.2777 14.4692L20.1687 14.9056C20.5723 14.9987 20.8239 15.4014 20.7308 15.805C20.6377 16.2086 20.235 16.4603 19.8314 16.3672L17.9405 15.9308C17.5369 15.8377 17.2852 15.435 17.3783 15.0314ZM15.0314 17.3783C15.435 17.2852 15.8377 17.5368 15.9308 17.9404L16.3672 19.8314C16.4603 20.235 16.2086 20.6377 15.805 20.7308C15.4014 20.8239 14.9987 20.5723 14.9056 20.1686L14.4692 18.2777C14.3761 17.8741 14.6278 17.4714 15.0314 17.3783Z\"\n  />\n</svg>`;\nexport const LinkToCardIcon = html `\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3409_77516)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M6.16667 6.79166C5.59137 6.79166 5.125 7.25803 5.125 7.83333V16.1667C5.125 16.742 5.59137 17.2083 6.16667 17.2083H17.8333C18.4086 17.2083 18.875 16.742 18.875 16.1667V12C18.875 11.6548 19.1548 11.375 19.5 11.375C19.8452 11.375 20.125 11.6548 20.125 12V16.1667C20.125 17.4323 19.099 18.4583 17.8333 18.4583H6.16667C4.90101 18.4583 3.875 17.4323 3.875 16.1667V7.83333C3.875 6.56768 4.90101 5.54166 6.16667 5.54166H12C12.3452 5.54166 12.625 5.82148 12.625 6.16666C12.625 6.51184 12.3452 6.79166 12 6.79166H6.16667Z\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M15.6063 5.48362C16.64 4.4499 18.316 4.4499 19.3497 5.48362C20.3834 6.51734 20.3834 8.19333 19.3497 9.22705L18.2774 10.2994C18.0333 10.5435 17.6376 10.5435 17.3935 10.2994C17.3371 10.243 17.2937 10.1784 17.2634 10.1096C17.2915 10.8217 17.0338 11.5429 16.4902 12.0866L15.0604 13.5164C14.0267 14.5501 12.3507 14.5501 11.317 13.5164C10.2832 12.4827 10.2832 10.8067 11.317 9.77294L12.3893 8.70061C12.6334 8.45653 13.0291 8.45653 13.2732 8.70061C13.3296 8.75703 13.373 8.82155 13.4033 8.89042C13.3751 8.17833 13.6329 7.45704 14.1765 6.91339L15.6063 5.48362ZM13.4445 9.2633C13.4215 9.38098 13.3643 9.49332 13.2732 9.58449L12.2008 10.6568C11.6553 11.2024 11.6553 12.0869 12.2008 12.6325C12.7464 13.1781 13.6309 13.1781 14.1765 12.6325L15.6063 11.2027C16.1518 10.6571 16.1518 9.77261 15.6063 9.22705C15.5203 9.1411 15.4267 9.0692 15.3279 9.01086C15.0307 8.83532 14.932 8.45209 15.1076 8.15487C15.2831 7.85766 15.6664 7.75902 15.9636 7.93456C16.1521 8.0459 16.3293 8.18227 16.4902 8.34317C16.8849 8.73787 17.1289 9.22622 17.2221 9.73669C17.2452 9.619 17.3023 9.50667 17.3935 9.4155L18.4658 8.34317C19.0114 7.7976 19.0114 6.91307 18.4658 6.3675C17.9203 5.82194 17.0357 5.82194 16.4902 6.3675L15.0604 7.79728C14.5148 8.34284 14.5148 9.22738 15.0604 9.77294C15.1463 9.85889 15.24 9.93079 15.3388 9.98913C15.636 10.1647 15.7346 10.5479 15.5591 10.8451C15.3835 11.1423 15.0003 11.241 14.7031 11.0654C14.5146 10.9541 14.3374 10.8177 14.1765 10.6568C13.7818 10.2621 13.5378 9.77377 13.4445 9.2633Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3409_77516\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" transform=\"translate(2 2)\" />\n      </clipPath>\n    </defs>\n  </svg>\n`;\n// Image Icon\nexport const CaptionIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 20 20\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M2.70831 4.16671C2.70831 3.36129 3.36123 2.70837 4.16665 2.70837H7.49998C8.30539 2.70837 8.95831 3.36129 8.95831 4.16671V7.50004C8.95831 8.30546 8.30539 8.95837 7.49998 8.95837H4.16665C3.36123 8.95837 2.70831 8.30546 2.70831 7.50004V4.16671ZM4.16665 3.95837C4.05159 3.95837 3.95831 4.05165 3.95831 4.16671V7.50004C3.95831 7.6151 4.05159 7.70837 4.16665 7.70837H7.49998C7.61504 7.70837 7.70831 7.6151 7.70831 7.50004V4.16671C7.70831 4.05165 7.61504 3.95837 7.49998 3.95837H4.16665Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M2.70831 16.6667C2.70831 16.3215 2.98814 16.0417 3.33331 16.0417L13.3333 16.0417C13.6785 16.0417 13.9583 16.3215 13.9583 16.6667C13.9583 17.0119 13.6785 17.2917 13.3333 17.2917L3.33331 17.2917C2.98813 17.2917 2.70831 17.0119 2.70831 16.6667Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M2.70831 12.5C2.70831 12.1549 2.98814 11.875 3.33331 11.875L16.6666 11.875C17.0118 11.875 17.2916 12.1549 17.2916 12.5C17.2916 12.8452 17.0118 13.125 16.6666 13.125L3.33331 13.125C2.98813 13.125 2.70831 12.8452 2.70831 12.5Z\"\n  />\n</svg>`;\nexport const DownloadIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 20 20\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M9.99997 2.70837C10.3452 2.70837 10.625 2.9882 10.625 3.33337V10.7134L12.197 9.14138C12.4411 8.8973 12.8368 8.8973 13.0809 9.14138C13.3249 9.38546 13.3249 9.78119 13.0809 10.0253L10.4419 12.6642C10.1978 12.9083 9.80211 12.9083 9.55803 12.6642L6.91909 10.0253C6.67502 9.78119 6.67502 9.38546 6.91909 9.14138C7.16317 8.8973 7.5589 8.8973 7.80298 9.14138L9.37498 10.7134V3.33337C9.37498 2.9882 9.6548 2.70837 9.99997 2.70837ZM16.6666 11.212C17.0118 11.212 17.2916 11.4918 17.2916 11.837V14.9104C17.2916 15.5317 17.0577 16.1337 16.6318 16.5825C16.2049 17.0324 15.6186 17.2917 15 17.2917H4.99998C4.38132 17.2917 3.79506 17.0324 3.36812 16.5825C2.94223 16.1337 2.70831 15.5317 2.70831 14.9104L2.70831 11.837C2.70831 11.4918 2.98813 11.212 3.33331 11.212C3.67849 11.212 3.95831 11.4918 3.95831 11.837L3.95831 14.9104C3.95831 15.2207 4.07559 15.5121 4.27482 15.722C4.473 15.9309 4.73459 16.0417 4.99998 16.0417H15C15.2654 16.0417 15.527 15.9309 15.7251 15.722C15.9244 15.5121 16.0416 15.2207 16.0416 14.9104V11.837C16.0416 11.4918 16.3215 11.212 16.6666 11.212Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M13.0787 13.6458C13.0787 13.3007 13.3585 13.0208 13.7037 13.0208H13.7111C14.0563 13.0208 14.3361 13.3007 14.3361 13.6458C14.3361 13.991 14.0563 14.2708 13.7111 14.2708H13.7037C13.3585 14.2708 13.0787 13.991 13.0787 13.6458Z\"\n  />\n</svg>`;\nexport const WrapIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 20 20\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.16665 2.5C3.53484 2.5 3.83331 2.79848 3.83331 3.16667L3.83331 16.8333C3.83331 17.2015 3.53484 17.5 3.16665 17.5C2.79846 17.5 2.49998 17.2015 2.49998 16.8333L2.49998 3.16667C2.49998 2.79848 2.79846 2.5 3.16665 2.5ZM9.31209 14.6598C9.58453 14.4121 9.60461 13.9905 9.35694 13.7181L8.85553 13.1665H11.8939C13.5757 13.1665 14.8333 11.6875 14.8333 9.99983C14.8333 8.31215 13.5757 6.83317 11.8939 6.83317H5.83334C5.46515 6.83317 5.16668 7.13164 5.16668 7.49983C5.16668 7.86802 5.46515 8.1665 5.83334 8.1665H11.8939C12.7226 8.1665 13.5 8.92609 13.5 9.99983C13.5 11.0736 12.7226 11.8332 11.8939 11.8332H8.85553L9.35694 11.2816C9.60461 11.0092 9.58453 10.5875 9.31209 10.3399C9.03966 10.0922 8.61802 10.1123 8.37035 10.3847L6.8552 12.0514C6.62404 12.3057 6.62404 12.694 6.8552 12.9483L8.37035 14.6149C8.61802 14.8874 9.03966 14.9075 9.31209 14.6598ZM16.1666 16.8333C16.1666 17.2015 16.4651 17.5 16.8333 17.5C17.2015 17.5 17.5 17.2015 17.5 16.8333L17.5 3.16667C17.5 2.79848 17.2015 2.5 16.8333 2.5C16.4651 2.5 16.1666 2.79848 16.1666 3.16667V16.8333Z\"\n  />\n</svg>`;\nexport const CancelWrapIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M4 3.25C4.41421 3.25 4.75 3.58579 4.75 4L4.75 20C4.75 20.4142 4.41421 20.75 4 20.75C3.58579 20.75 3.25 20.4142 3.25 20L3.25 4C3.25 3.58579 3.58579 3.25 4 3.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20 3.25C20.4142 3.25 20.75 3.58579 20.75 4V20C20.75 20.4142 20.4142 20.75 20 20.75C19.5858 20.75 19.25 20.4142 19.25 20V4C19.25 3.58579 19.5858 3.25 20 3.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M10.6437 12.408C10.3168 12.7053 10.2927 13.2112 10.5899 13.5381L11.1916 14.2H7C6.55817 14.2 6.2 14.5582 6.2 15C6.2 15.4418 6.55817 15.8 7 15.8L11.1916 15.8L10.5899 16.4619C10.2927 16.7888 10.3168 17.2947 10.6437 17.592C10.9706 17.8892 11.4766 17.8651 11.7738 17.5381L13.592 15.5381C13.8693 15.233 13.8693 14.767 13.592 14.4619L11.7738 12.4619C11.4766 12.1349 10.9706 12.1108 10.6437 12.408Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M14.6437 6.40805C14.3168 6.70525 14.2927 7.21121 14.5899 7.53814L15.1916 8.2H7C6.55817 8.2 6.2 8.55817 6.2 9C6.2 9.44183 6.55817 9.8 7 9.8H15.1916L14.5899 10.4619C14.2927 10.7888 14.3168 11.2947 14.6437 11.592C14.9706 11.8892 15.4766 11.8651 15.7738 11.5381L17.592 9.53814C17.8693 9.233 17.8693 8.767 17.592 8.46186L15.7738 6.46186C15.4766 6.13494 14.9706 6.11084 14.6437 6.40805Z\"\n  />\n</svg>`;\n// A Rectangular Icon\nexport const RectIcon = html `<svg\n  width=\"36\"\n  height=\"36\"\n  viewBox=\"0 0 36 36\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.25 14C8.25 11.9289 9.92893 10.25 12 10.25H24C26.0711 10.25 27.75 11.9289 27.75 14V22C27.75 24.0711 26.0711 25.75 24 25.75H12C9.92893 25.75 8.25 24.0711 8.25 22V14ZM12 11.75C10.7574 11.75 9.75 12.7574 9.75 14V22C9.75 23.2426 10.7574 24.25 12 24.25H24C25.2426 24.25 26.25 23.2426 26.25 22V14C26.25 12.7574 25.2426 11.75 24 11.75H12Z\"\n  />\n</svg>`;\nexport const ArrowDownIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M6.46967 9.46967C6.76256 9.17678 7.23744 9.17678 7.53033 9.46967L11.6464 13.5858C11.8417 13.781 12.1583 13.781 12.3536 13.5858L16.4697 9.46967C16.7626 9.17678 17.2374 9.17678 17.5303 9.46967C17.8232 9.76256 17.8232 10.2374 17.5303 10.5303L13.4142 14.6464C12.6332 15.4275 11.3668 15.4275 10.5858 14.6464L6.46967 10.5303C6.17678 10.2374 6.17678 9.76256 6.46967 9.46967Z\"\n  />\n</svg>`;\n// Linked Page\nconst PageIconSVG = svg `\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.25 6C3.25 4.48122 4.48122 3.25 6 3.25H14C14.4142 3.25 14.75 3.58579 14.75 4C14.75 4.41421 14.4142 4.75 14 4.75H6C5.30964 4.75 4.75 5.30964 4.75 6V20C4.75 20.4142 4.41421 20.75 4 20.75C3.58579 20.75 3.25 20.4142 3.25 20V6Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20.75 18C20.75 19.5188 19.5188 20.75 18 20.75H10C9.58579 20.75 9.25 20.4142 9.25 20C9.25 19.5858 9.58579 19.25 10 19.25L18 19.25C18.6904 19.25 19.25 18.6904 19.25 18L19.25 4C19.25 3.58579 19.5858 3.25 20 3.25C20.4142 3.25 20.75 3.58579 20.75 4L20.75 18Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.25 9C8.25 8.0335 9.0335 7.25 10 7.25H14C14.9665 7.25 15.75 8.0335 15.75 9V11C15.75 11.9665 14.9665 12.75 14 12.75H10C9.0335 12.75 8.25 11.9665 8.25 11V9ZM10 8.75C9.86193 8.75 9.75 8.86193 9.75 9V11C9.75 11.1381 9.86193 11.25 10 11.25H14C14.1381 11.25 14.25 11.1381 14.25 11V9C14.25 8.86193 14.1381 8.75 14 8.75H10Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.25 16C8.25 15.5858 8.58579 15.25 9 15.25H15C15.4142 15.25 15.75 15.5858 15.75 16C15.75 16.4142 15.4142 16.75 15 16.75H9C8.58579 16.75 8.25 16.4142 8.25 16Z\"\n  />`;\nconst LinkedPageSVG = svg `<path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.25 6C3.25 4.48122 4.48122 3.25 6 3.25H14C14.4142 3.25 14.75 3.58579 14.75 4C14.75 4.41421 14.4142 4.75 14 4.75H6C5.30964 4.75 4.75 5.30964 4.75 6V20C4.75 20.4142 4.41421 20.75 4 20.75C3.58579 20.75 3.25 20.4142 3.25 20V6Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M20 10.75C19.5858 10.75 19.25 10.4142 19.25 10V4C19.25 3.58579 19.5858 3.25 20 3.25C20.4142 3.25 20.75 3.58579 20.75 4V10C20.75 10.4142 20.4142 10.75 20 10.75Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.25 9C8.25 8.0335 9.0335 7.25 10 7.25H14C14.9665 7.25 15.75 8.0335 15.75 9V11C15.75 11.9665 14.9665 12.75 14 12.75H10C9.0335 12.75 8.25 11.9665 8.25 11V9ZM10 8.75C9.86193 8.75 9.75 8.86193 9.75 9V11C9.75 11.1381 9.86193 11.25 10 11.25H14C14.1381 11.25 14.25 11.1381 14.25 11V9C14.25 8.86193 14.1381 8.75 14 8.75H10Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M8.25 16C8.25 15.5858 8.58579 15.25 9 15.25H12C12.4142 15.25 12.75 15.5858 12.75 16C12.75 16.4142 12.4142 16.75 12 16.75H9C8.58579 16.75 8.25 16.4142 8.25 16Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M18 14.75C17.5858 14.75 17.25 14.4142 17.25 14C17.25 13.5858 17.5858 13.25 18 13.25H20.9C20.9174 13.25 20.9346 13.2505 20.9517 13.2515C21.1594 13.2382 21.3716 13.3109 21.5303 13.4697C21.6891 13.6284 21.7618 13.8406 21.7485 14.0483C21.7495 14.0654 21.75 14.0826 21.75 14.1V17C21.75 17.4142 21.4142 17.75 21 17.75C20.5858 17.75 20.25 17.4142 20.25 17V15.8107L14.5303 21.5303C14.2374 21.8232 13.7626 21.8232 13.4697 21.5303C13.1768 21.2374 13.1768 20.7626 13.4697 20.4697L19.1893 14.75H18Z\"\n  />`;\nexport const FontPageIcon = fontIcon(PageIconSVG);\nexport const FontLinkedPageIcon = fontIcon(LinkedPageSVG);\nexport const PageIcon = icon(PageIconSVG, 20);\nexport const LinkedPageIcon = icon(LinkedPageSVG, 20);\nexport const NewPageIcon = html `<svg\n  width=\"20\"\n  height=\"20\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M12 3.25C12.4142 3.25 12.75 3.58579 12.75 4V20C12.75 20.4142 12.4142 20.75 12 20.75C11.5858 20.75 11.25 20.4142 11.25 20V4C11.25 3.58579 11.5858 3.25 12 3.25Z\"\n  />\n  <path\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n    d=\"M3.25 12C3.25 11.5858 3.58579 11.25 4 11.25H20C20.4142 11.25 20.75 11.5858 20.75 12C20.75 12.4142 20.4142 12.75 20 12.75H4C3.58579 12.75 3.25 12.4142 3.25 12Z\"\n  />\n</svg>`;\nexport const DualLinkSVG = svg `<path\n  fill-rule=\"evenodd\"\n  clip-rule=\"evenodd\"\n  d=\"M11 4.75C10.5858 4.75 10.25 4.41421 10.25 4C10.25 3.58579 10.5858 3.25 11 3.25H19.9C19.9174 3.25 19.9346 3.25052 19.9517 3.25155C20.1594 3.23823 20.3716 3.31093 20.5303 3.46967C20.6891 3.62841 20.7618 3.84059 20.7485 4.04829C20.7495 4.0654 20.75 4.08264 20.75 4.1V13C20.75 13.4142 20.4142 13.75 20 13.75C19.5858 13.75 19.25 13.4142 19.25 13V5.81066L4.53033 20.5303C4.23744 20.8232 3.76256 20.8232 3.46967 20.5303C3.17678 20.2374 3.17678 19.7626 3.46967 19.4697L18.1893 4.75H11Z\"\n/>`;\nexport const DualLinkIcon = icon(DualLinkSVG, 20);\nexport const DualLinkIcon16 = icon(DualLinkSVG, 16);\n//# sourceMappingURL=text.js.map","import { DisposableGroup } from '@blocksuite/global/utils';\n/**\n * Mixin that adds a `_disposables: DisposableGroup` property to the class.\n *\n * The `_disposables` property is initialized in `connectedCallback` and disposed in `disconnectedCallback`.\n *\n * see https://lit.dev/docs/composition/mixins/\n *\n * @example\n * ```ts\n * class MyElement extends WithDisposable(ShadowlessElement) {\n *   onClick() {\n *     this._disposables.add(...);\n *   }\n * }\n * ```\n */\nexport function WithDisposable(SuperClass) {\n    class DerivedClass extends SuperClass {\n        constructor() {\n            super(...arguments);\n            this._disposables = new DisposableGroup();\n        }\n        connectedCallback() {\n            super.connectedCallback();\n            if (this._disposables.disposed) {\n                this._disposables = new DisposableGroup();\n            }\n        }\n        disconnectedCallback() {\n            super.disconnectedCallback();\n            this._disposables.dispose();\n        }\n    }\n    return DerivedClass;\n}\n//# sourceMappingURL=width-disposable.js.map","import { CSSResult, LitElement } from 'lit';\nclass ShadowlessElement extends LitElement {\n    static finalizeStyles(styles) {\n        let elementStyles = super.finalizeStyles(styles);\n        const styleRoot = document.head;\n        if (this.disableShadowRoot) {\n            // XXX: This breaks component encapsulation and applies styles to the document.\n            // These styles should be manually scoped.\n            elementStyles.forEach((s) => {\n                if (s instanceof CSSResult) {\n                    const style = document.createElement('style');\n                    style.textContent = s.cssText;\n                    styleRoot.appendChild(style);\n                }\n                else {\n                    console.error('unreachable');\n                }\n            });\n            elementStyles = [];\n        }\n        return elementStyles;\n    }\n    createRenderRoot() {\n        return this.constructor.disableShadowRoot\n            ? this\n            : super.createRenderRoot();\n    }\n}\nShadowlessElement.disableShadowRoot = true;\nexport { ShadowlessElement };\n//# sourceMappingURL=shadowless-element.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { WithDisposable } from '../width-disposable.js';\nimport { ShadowlessElement } from './shadowless-element.js';\nexport class BlockElement extends WithDisposable(ShadowlessElement) {\n}\n__decorate([\n    property()\n], BlockElement.prototype, \"root\", void 0);\n__decorate([\n    property()\n], BlockElement.prototype, \"model\", void 0);\n__decorate([\n    property()\n], BlockElement.prototype, \"content\", void 0);\n__decorate([\n    property()\n], BlockElement.prototype, \"page\", void 0);\n//# sourceMappingURL=block-element.js.map","import { assertExists } from '@blocksuite/global/utils';\nexport class UIEventState {\n    constructor(event) {\n        this.event = event;\n        /** when extends, override it with pattern `xxxState` */\n        this.type = 'defaultState';\n    }\n}\nexport class UIEventStateContext {\n    constructor() {\n        this._map = {};\n        this.add = (state) => {\n            const name = state.type;\n            if (this._map[name]) {\n                console.warn('UIEventStateContext: state name duplicated', name);\n            }\n            this._map[name] = state;\n        };\n        this.has = (type) => {\n            return !!this._map[type];\n        };\n        this.get = (type) => {\n            const state = this._map[type];\n            assertExists(state, `UIEventStateContext: state ${type} not found`);\n            return state;\n        };\n    }\n    static from(...states) {\n        const context = new UIEventStateContext();\n        states.forEach(state => {\n            context.add(state);\n        });\n        return context;\n    }\n}\n//# sourceMappingURL=base.js.map","import { UIEventState } from './base.js';\nexport class PointerEventState extends UIEventState {\n    get x() {\n        return this.point.x;\n    }\n    get y() {\n        return this.point.y;\n    }\n    constructor({ event, rect, startX, startY, last }) {\n        super(event);\n        this.type = 'pointerState';\n        const offsetX = event.clientX - rect.left;\n        const offsetY = event.clientY - rect.top;\n        this.raw = event;\n        this.point = { x: offsetX, y: offsetY };\n        this.containerOffset = { x: rect.left, y: rect.top };\n        this.start = { x: startX, y: startY };\n        this.delta = last\n            ? { x: offsetX - last.point.x, y: offsetY - last.point.y }\n            : { x: 0, y: 0 };\n        this.keys = {\n            shift: event.shiftKey,\n            cmd: event.metaKey || event.ctrlKey,\n            alt: event.altKey,\n        };\n        this.button = last?.button || event.button;\n        this.dragging = !!last;\n    }\n}\nexport class KeyboardEventState extends UIEventState {\n    constructor({ event }) {\n        super(event);\n        this.type = 'keyboardState';\n        this.raw = event;\n    }\n}\n//# sourceMappingURL=state.js.map","import { UIEventStateContext } from './base.js';\nimport { KeyboardEventState } from './state.js';\nexport class KeyboardControl {\n    constructor(_dispatcher) {\n        this._dispatcher = _dispatcher;\n        this._down = (event) => {\n            const keyboardEventState = new KeyboardEventState({\n                event,\n            });\n            this._dispatcher.run('keyDown', UIEventStateContext.from(keyboardEventState));\n        };\n        this._up = (event) => {\n            const keyboardEventState = new KeyboardEventState({\n                event,\n            });\n            this._dispatcher.run('keyUp', UIEventStateContext.from(keyboardEventState));\n        };\n    }\n    listen() {\n        this._dispatcher.disposables.addFromEvent(document, 'keydown', this._down);\n        this._dispatcher.disposables.addFromEvent(document, 'keyup', this._up);\n    }\n}\n//# sourceMappingURL=keyboard.js.map","export function isFarEnough(a, b) {\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) > 4;\n}\nexport const toLowerCase = (str) => str.toLowerCase();\n//# sourceMappingURL=utils.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { UIEventStateContext } from './base.js';\nimport { PointerEventState } from './state.js';\nimport { isFarEnough } from './utils.js';\nexport class PointerControl {\n    constructor(_dispatcher) {\n        this._dispatcher = _dispatcher;\n        this._lastPointerDownEvent = null;\n        this._startDragState = null;\n        this._lastDragState = null;\n        this._pointerDownCount = 0;\n        this._dragging = false;\n        this._startX = -Infinity;\n        this._startY = -Infinity;\n        this._reset = () => {\n            this._startX = -Infinity;\n            this._startY = -Infinity;\n            this._lastDragState = null;\n            this._dragging = false;\n        };\n        this._down = (event) => {\n            if (this._lastPointerDownEvent &&\n                event.timeStamp - this._lastPointerDownEvent.timeStamp < 500 &&\n                !isFarEnough(event, this._lastPointerDownEvent)) {\n                this._pointerDownCount++;\n            }\n            else {\n                this._pointerDownCount = 1;\n            }\n            const pointerEventState = new PointerEventState({\n                event,\n                rect: this._rect,\n                startX: this._startX,\n                startY: this._startY,\n                last: null,\n            });\n            this._startX = pointerEventState.point.x;\n            this._startY = pointerEventState.point.y;\n            this._startDragState = pointerEventState;\n            this._lastDragState = pointerEventState;\n            this._lastPointerDownEvent = event;\n            this._dispatcher.run('pointerDown', UIEventStateContext.from(pointerEventState));\n            this._dispatcher.disposables.addFromEvent(document, 'pointermove', this._move);\n            this._dispatcher.disposables.addFromEvent(document, 'pointerup', this._up);\n        };\n        this._up = (event) => {\n            const pointerEventState = new PointerEventState({\n                event,\n                rect: this._rect,\n                startX: this._startX,\n                startY: this._startY,\n                last: this._lastDragState,\n            });\n            const context = UIEventStateContext.from(pointerEventState);\n            const run = () => {\n                if (this._dragging) {\n                    this._dispatcher.run('dragEnd', context);\n                    return;\n                }\n                this._dispatcher.run('click', context);\n                if (this._pointerDownCount === 2) {\n                    this._dispatcher.run('doubleClick', context);\n                }\n                if (this._pointerDownCount === 3) {\n                    this._dispatcher.run('tripleClick', context);\n                }\n            };\n            run();\n            this._dispatcher.run('pointerUp', context);\n            this._reset();\n            document.removeEventListener('pointermove', this._move);\n            document.removeEventListener('pointerup', this._up);\n        };\n        this._move = (event) => {\n            const last = this._lastDragState;\n            const state = new PointerEventState({\n                event,\n                rect: this._rect,\n                startX: this._startX,\n                startY: this._startY,\n                last,\n            });\n            this._lastDragState = state;\n            assertExists(this._startDragState);\n            if (!this._dragging && isFarEnough(this._startDragState.raw, state.raw)) {\n                this._dragging = true;\n                this._dispatcher.run('dragStart', UIEventStateContext.from(this._startDragState));\n            }\n            if (this._dragging) {\n                this._dispatcher.run('dragMove', UIEventStateContext.from(state));\n            }\n        };\n        this._moveOn = (event) => {\n            const state = new PointerEventState({\n                event,\n                rect: this._rect,\n                startX: this._startX,\n                startY: this._startY,\n                last: this._lastDragState,\n            });\n            this._dispatcher.run('pointerMove', UIEventStateContext.from(state));\n        };\n        this._out = (event) => {\n            const state = new PointerEventState({\n                event,\n                rect: this._rect,\n                startX: -Infinity,\n                startY: -Infinity,\n                last: null,\n            });\n            this._dispatcher.run('pointerOut', UIEventStateContext.from(state));\n        };\n    }\n    listen() {\n        this._dispatcher.disposables.addFromEvent(this._dispatcher.root, 'pointerdown', this._down);\n        this._dispatcher.disposables.addFromEvent(this._dispatcher.root, 'pointermove', this._moveOn);\n        this._dispatcher.disposables.addFromEvent(this._dispatcher.root, 'pointerout', this._out);\n    }\n    get _rect() {\n        return this._dispatcher.root.getBoundingClientRect();\n    }\n}\n//# sourceMappingURL=pointer.js.map","import { DisposableGroup } from '@blocksuite/global/utils';\nimport { UIEventStateContext } from './base.js';\nimport { UIEventState } from './base.js';\nimport { KeyboardControl } from './keyboard.js';\nimport { PointerControl } from './pointer.js';\nimport { toLowerCase } from './utils.js';\nconst bypassEventNames = [\n    'beforeInput',\n    'compositionStart',\n    'compositionUpdate',\n    'compositionEnd',\n    'paste',\n    'copy',\n    'blur',\n    'focus',\n    'drop',\n    'contextMenu',\n    'wheel',\n];\nconst globalEventNames = ['selectionChange', 'virgo-vrange-updated'];\nconst eventNames = [\n    'click',\n    'doubleClick',\n    'tripleClick',\n    'pointerDown',\n    'pointerMove',\n    'pointerUp',\n    'pointerOut',\n    'dragStart',\n    'dragMove',\n    'dragEnd',\n    'keyDown',\n    'keyUp',\n    ...bypassEventNames,\n    ...globalEventNames,\n];\nexport class UIEventDispatcher {\n    constructor(root) {\n        this.root = root;\n        this.disposables = new DisposableGroup();\n        this._handlersMap = Object.fromEntries(eventNames.map((name) => [name, []]));\n        this._pointerControl = new PointerControl(this);\n        this._keyboardControl = new KeyboardControl(this);\n    }\n    mount() {\n        if (this.disposables.disposed) {\n            this.disposables = new DisposableGroup();\n        }\n        this._bindEvents();\n    }\n    unmount() {\n        this.disposables.dispose();\n    }\n    run(name, context) {\n        const handlers = this._handlersMap[name];\n        if (!handlers)\n            return;\n        for (const handler of handlers) {\n            const result = handler(context);\n            if (result) {\n                return;\n            }\n        }\n    }\n    add(name, handler) {\n        this._handlersMap[name].unshift(handler);\n        return () => {\n            if (this._handlersMap[name].includes(handler)) {\n                this._handlersMap[name] = this._handlersMap[name].filter(f => f !== handler);\n            }\n        };\n    }\n    _bindEvents() {\n        bypassEventNames.forEach(eventName => {\n            this.disposables.addFromEvent(this.root, toLowerCase(eventName), e => {\n                this.run(eventName, UIEventStateContext.from(new UIEventState(e)));\n            });\n        });\n        globalEventNames.forEach(eventName => {\n            this.disposables.addFromEvent(document, toLowerCase(eventName), e => {\n                this.run(eventName, UIEventStateContext.from(new UIEventState(e)));\n            });\n        });\n        this._pointerControl.listen();\n        this._keyboardControl.listen();\n    }\n}\n//# sourceMappingURL=dispatcher.js.map","export * from './base.js';\nexport * from './dispatcher.js';\nexport * from './state.js';\n//# sourceMappingURL=index.js.map","/* eslint-disable lit/binding-positions, lit/no-invalid-html */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { html, unsafeStatic } from 'lit/static-html.js';\nimport { UIEventDispatcher } from '../event/index.js';\nimport { ShadowlessElement } from './shadowless-element.js';\nlet BlockSuiteRoot = class BlockSuiteRoot extends ShadowlessElement {\n    constructor() {\n        super(...arguments);\n        this.blockIdAttr = 'data-block-id';\n        this.modelSubscribed = new Set();\n        this.uiEventDispatcher = new UIEventDispatcher(this);\n        this.renderModel = (model) => {\n            const { flavour, children } = model;\n            const schema = this.page.schema.flavourSchemaMap.get(flavour);\n            if (!schema) {\n                console.warn(`Cannot find schema for ${flavour}.`);\n                return html `${nothing}`;\n            }\n            const tag = this.componentMap.get(schema);\n            if (!tag) {\n                console.warn(`Cannot find tag for ${flavour}.`);\n                return html `${nothing}`;\n            }\n            this._onLoadModel(model);\n            return html `<${tag}\n      ${unsafeStatic(this.blockIdAttr)}=${model.id}\n      .root=${this}\n      .page=${this.page}\n      .model=${model}\n      .content=${html `${repeat(children, child => child.id, child => this.renderModel(child))}`}\n    ></${tag}>`;\n        };\n        this._onLoadModel = (model) => {\n            const { id } = model;\n            if (!this.modelSubscribed.has(id)) {\n                model.propsUpdated.on(() => {\n                    this.requestUpdate();\n                });\n                model.childrenUpdated.on(() => {\n                    this.requestUpdate();\n                });\n                this.modelSubscribed.add(id);\n            }\n        };\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.uiEventDispatcher.mount();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.uiEventDispatcher.unmount();\n    }\n    render() {\n        const { root } = this.page;\n        if (!root) {\n            return null;\n        }\n        return this.renderModel(root);\n    }\n};\n__decorate([\n    property()\n], BlockSuiteRoot.prototype, \"componentMap\", void 0);\n__decorate([\n    property()\n], BlockSuiteRoot.prototype, \"page\", void 0);\n__decorate([\n    property()\n], BlockSuiteRoot.prototype, \"blockIdAttr\", void 0);\nBlockSuiteRoot = __decorate([\n    customElement('block-suite-root')\n], BlockSuiteRoot);\nexport { BlockSuiteRoot };\n//# sourceMappingURL=lit-root.js.map","export * from './block-element.js';\nexport * from './lit-root.js';\nexport * from './shadowless-element.js';\n//# sourceMappingURL=index.js.map","export * from './element/index.js';\nexport * from './event/index.js';\nexport * from './width-disposable.js';\n//# sourceMappingURL=index.js.map","export const ZOOM_MAX = 6.0;\nexport const ZOOM_MIN = 0.1;\nexport const ZOOM_STEP = 0.25;\nexport const GRID_SIZE = 3000;\nexport var StrokeStyle;\n(function (StrokeStyle) {\n    StrokeStyle[\"Solid\"] = \"solid\";\n    StrokeStyle[\"Dashed\"] = \"dash\";\n    StrokeStyle[\"None\"] = \"none\";\n})(StrokeStyle || (StrokeStyle = {}));\n//# sourceMappingURL=consts.js.map","export var ConnectorMode;\n(function (ConnectorMode) {\n    ConnectorMode[ConnectorMode[\"Straight\"] = 0] = \"Straight\";\n    ConnectorMode[ConnectorMode[\"Orthogonal\"] = 1] = \"Orthogonal\";\n})(ConnectorMode || (ConnectorMode = {}));\n//# sourceMappingURL=types.js.map","/**\n * Compute a radius based on the pressure.\n * @param size\n * @param thinning\n * @param pressure\n * @param easing\n * @internal\n */\nexport function getStrokeRadius(size, thinning, pressure, easing = t => t) {\n    return size * easing(0.5 - thinning * (0.5 - pressure));\n}\n//# sourceMappingURL=getStrokeRadius.js.map","/**\n * Negate a vector.\n * @param A\n * @internal\n */\nexport function neg(A) {\n    return [-A[0], -A[1]];\n}\n/**\n * Add vectors.\n * @param A\n * @param B\n * @internal\n */\nexport function add(A, B) {\n    return [A[0] + B[0], A[1] + B[1]];\n}\n/**\n * Subtract vectors.\n * @param A\n * @param B\n * @internal\n */\nexport function sub(A, B) {\n    return [A[0] - B[0], A[1] - B[1]];\n}\n/**\n * Vector multiplication by scalar\n * @param A\n * @param n\n * @internal\n */\nexport function mul(A, n) {\n    return [A[0] * n, A[1] * n];\n}\n/**\n * Vector division by scalar.\n * @param A\n * @param n\n * @internal\n */\nexport function div(A, n) {\n    return [A[0] / n, A[1] / n];\n}\n/**\n * Perpendicular rotation of a vector A\n * @param A\n * @internal\n */\nexport function per(A) {\n    return [A[1], -A[0]];\n}\n/**\n * Dot product\n * @param A\n * @param B\n * @internal\n */\nexport function dpr(A, B) {\n    return A[0] * B[0] + A[1] * B[1];\n}\n/**\n * Get whether two vectors are equal.\n * @param A\n * @param B\n * @internal\n */\nexport function isEqual(A, B) {\n    return A[0] === B[0] && A[1] === B[1];\n}\n/**\n * Length of the vector\n * @param A\n * @internal\n */\nexport function len(A) {\n    return Math.hypot(A[0], A[1]);\n}\n/**\n * Length of the vector squared\n * @param A\n * @internal\n */\nexport function len2(A) {\n    return A[0] * A[0] + A[1] * A[1];\n}\n/**\n * Dist length from A to B squared.\n * @param A\n * @param B\n * @internal\n */\nexport function dist2(A, B) {\n    return len2(sub(A, B));\n}\n/**\n * Get normalized / unit vector.\n * @param A\n * @internal\n */\nexport function uni(A) {\n    return div(A, len(A));\n}\n/**\n * Dist length from A to B\n * @param A\n * @param B\n * @internal\n */\nexport function dist(A, B) {\n    return Math.hypot(A[1] - B[1], A[0] - B[0]);\n}\n/**\n * Mean between two vectors or mid vector between two vectors\n * @param A\n * @param B\n * @internal\n */\nexport function med(A, B) {\n    return mul(add(A, B), 0.5);\n}\n/**\n * Rotate a vector around another vector by r (radians)\n * @param A vector\n * @param C center\n * @param r rotation in radians\n * @internal\n */\nexport function rotAround(A, C, r) {\n    const s = Math.sin(r);\n    const c = Math.cos(r);\n    const px = A[0] - C[0];\n    const py = A[1] - C[1];\n    const nx = px * c - py * s;\n    const ny = px * s + py * c;\n    return [nx + C[0], ny + C[1]];\n}\n/**\n * Interpolate vector A to B with a scalar t\n * @param A\n * @param B\n * @param t scalar\n * @internal\n */\nexport function lrp(A, B, t) {\n    return add(A, mul(sub(B, A), t));\n}\n/**\n * Project a point A in the direction B by a scalar c\n * @param A\n * @param B\n * @param c\n * @internal\n */\nexport function prj(A, B, c) {\n    return add(A, mul(B, c));\n}\n//# sourceMappingURL=vec.js.map","import { getStrokeRadius } from './getStrokeRadius.js';\nimport { add, dist2, dpr, lrp, mul, neg, per, prj, rotAround, sub, uni, } from './vec.js';\nconst { min, PI } = Math;\n// This is the rate of change for simulated pressure. It could be an option.\nconst RATE_OF_PRESSURE_CHANGE = 0.275;\n// Browser strokes seem to be off if PI is regular, a tiny offset seems to fix it\nconst FIXED_PI = PI + 0.0001;\n/**\n * ## getStrokeOutlinePoints\n * @description Get an array of points (as `[x, y]`) representing the outline of a stroke.\n * @param points An array of StrokePoints as returned from `getStrokePoints`.\n * @param options (optional) An object with options.\n * @param options.size\tThe base size (diameter) of the stroke.\n * @param options.thinning The effect of pressure on the stroke's size.\n * @param options.smoothing\tHow much to soften the stroke's edges.\n * @param options.easing\tAn easing function to apply to each point's pressure.\n * @param options.simulatePressure Whether to simulate pressure based on velocity.\n * @param options.start Cap, taper and easing for the start of the line.\n * @param options.end Cap, taper and easing for the end of the line.\n * @param options.last Whether to handle the points as a completed stroke.\n */\nexport function getStrokeOutlinePoints(points, options = {}) {\n    const { size = 16, smoothing = 0.5, thinning = 0.5, simulatePressure = true, easing = t => t, start = {}, end = {}, last: isComplete = false, } = options;\n    const { cap: capStart = true, easing: taperStartEase = t => t * (2 - t) } = start;\n    const { cap: capEnd = true, easing: taperEndEase = t => --t * t * t + 1 } = end;\n    // We can't do anything with an empty array or a stroke with negative size.\n    if (points.length === 0 || size <= 0) {\n        return [];\n    }\n    // The total length of the line\n    const totalLength = points[points.length - 1].runningLength;\n    const taperStart = start.taper === false\n        ? 0\n        : start.taper === true\n            ? Math.max(size, totalLength)\n            : start.taper;\n    const taperEnd = end.taper === false\n        ? 0\n        : end.taper === true\n            ? Math.max(size, totalLength)\n            : end.taper;\n    // The minimum allowed distance between points (squared)\n    const minDistance = Math.pow(size * smoothing, 2);\n    // Our collected left and right points\n    const leftPts = [];\n    const rightPts = [];\n    // Previous pressure (start with average of first five pressures,\n    // in order to prevent fat starts for every line. Drawn lines\n    // almost always start slow!\n    let prevPressure = points.slice(0, 10).reduce((acc, curr) => {\n        let pressure = curr.pressure;\n        if (simulatePressure) {\n            // Speed of change - how fast should the the pressure changing?\n            const sp = min(1, curr.distance / size);\n            // Rate of change - how much of a change is there?\n            const rp = min(1, 1 - sp);\n            // Accelerate the pressure\n            pressure = min(1, acc + (rp - acc) * (sp * RATE_OF_PRESSURE_CHANGE));\n        }\n        return (acc + pressure) / 2;\n    }, points[0].pressure);\n    // The current radius\n    let radius = getStrokeRadius(size, thinning, points[points.length - 1].pressure, easing);\n    // The radius of the first saved point\n    let firstRadius = undefined;\n    // Previous vector\n    let prevVector = points[0].vector;\n    // Previous left and right points\n    let pl = points[0].point;\n    let pr = pl;\n    // Temporary left and right points\n    let tl = pl;\n    let tr = pr;\n    // Keep track of whether the previous point is a sharp corner\n    // ... so that we don't detect the same corner twice\n    let isPrevPointSharpCorner = false;\n    // let short = true\n    /*\n      Find the outline's left and right points\n  \n      Iterating through the points and populate the rightPts and leftPts arrays,\n      skipping the first and last pointsm, which will get caps later on.\n    */\n    for (let i = 0; i < points.length; i++) {\n        let { pressure } = points[i];\n        const { point, vector, distance, runningLength } = points[i];\n        // Removes noise from the end of the line\n        if (i < points.length - 1 && totalLength - runningLength < 3) {\n            continue;\n        }\n        /*\n          Calculate the radius\n    \n          If not thinning, the current point's radius will be half the size; or\n          otherwise, the size will be based on the current (real or simulated)\n          pressure.\n        */\n        if (thinning) {\n            if (simulatePressure) {\n                // If we're simulating pressure, then do so based on the distance\n                // between the current point and the previous point, and the size\n                // of the stroke. Otherwise, use the input pressure.\n                const sp = min(1, distance / size);\n                const rp = min(1, 1 - sp);\n                pressure = min(1, prevPressure + (rp - prevPressure) * (sp * RATE_OF_PRESSURE_CHANGE));\n            }\n            radius = getStrokeRadius(size, thinning, pressure, easing);\n        }\n        else {\n            radius = size / 2;\n        }\n        if (firstRadius === undefined) {\n            firstRadius = radius;\n        }\n        /*\n          Apply tapering\n    \n          If the current length is within the taper distance at either the\n          start or the end, calculate the taper strengths. Apply the smaller\n          of the two taper strengths to the radius.\n        */\n        const ts = runningLength < taperStart\n            ? taperStartEase(runningLength / taperStart)\n            : 1;\n        const te = totalLength - runningLength < taperEnd\n            ? taperEndEase((totalLength - runningLength) / taperEnd)\n            : 1;\n        radius = Math.max(0.01, radius * Math.min(ts, te));\n        /* Add points to left and right */\n        /*\n          Handle sharp corners\n    \n          Find the difference (dot product) between the current and next vector.\n          If the next vector is at more than a right angle to the current vector,\n          draw a cap at the current point.\n        */\n        const nextVector = (i < points.length - 1 ? points[i + 1] : points[i])\n            .vector;\n        const nextDpr = i < points.length - 1 ? dpr(vector, nextVector) : 1.0;\n        const prevDpr = dpr(vector, prevVector);\n        const isPointSharpCorner = prevDpr < 0 && !isPrevPointSharpCorner;\n        const isNextPointSharpCorner = nextDpr !== null && nextDpr < 0;\n        if (isPointSharpCorner || isNextPointSharpCorner) {\n            // It's a sharp corner. Draw a rounded cap and move on to the next point\n            // Considering saving these and drawing them later? So that we can avoid\n            // crossing future points.\n            const offset = mul(per(prevVector), radius);\n            for (let step = 1 / 13, t = 0; t <= 1; t += step) {\n                tl = rotAround(sub(point, offset), point, FIXED_PI * t);\n                leftPts.push(tl);\n                tr = rotAround(add(point, offset), point, FIXED_PI * -t);\n                rightPts.push(tr);\n            }\n            pl = tl;\n            pr = tr;\n            if (isNextPointSharpCorner) {\n                isPrevPointSharpCorner = true;\n            }\n            continue;\n        }\n        isPrevPointSharpCorner = false;\n        // Handle the last point\n        if (i === points.length - 1) {\n            const offset = mul(per(vector), radius);\n            leftPts.push(sub(point, offset));\n            rightPts.push(add(point, offset));\n            continue;\n        }\n        /*\n          Add regular points\n    \n          Project points to either side of the current point, using the\n          calculated size as a distance. If a point's distance to the\n          previous point on that side greater than the minimum distance\n          (or if the corner is kinda sharp), add the points to the side's\n          points array.\n        */\n        const offset = mul(per(lrp(nextVector, vector, nextDpr)), radius);\n        tl = sub(point, offset);\n        if (i <= 1 || dist2(pl, tl) > minDistance) {\n            leftPts.push(tl);\n            pl = tl;\n        }\n        tr = add(point, offset);\n        if (i <= 1 || dist2(pr, tr) > minDistance) {\n            rightPts.push(tr);\n            pr = tr;\n        }\n        // Set variables for next iteration\n        prevPressure = pressure;\n        prevVector = vector;\n    }\n    /*\n      Drawing caps\n  \n      Now that we have our points on either side of the line, we need to\n      draw caps at the start and end. Tapered lines don't have caps, but\n      may have dots for very short lines.\n    */\n    const firstPoint = points[0].point.slice(0, 2);\n    const lastPoint = points.length > 1\n        ? points[points.length - 1].point.slice(0, 2)\n        : add(points[0].point, [1, 1]);\n    const startCap = [];\n    const endCap = [];\n    /*\n      Draw a dot for very short or completed strokes\n  \n      If the line is too short to gather left or right points and if the line is\n      not tapered on either side, draw a dot. If the line is tapered, then only\n      draw a dot if the line is both very short and complete. If we draw a dot,\n      we can just return those points.\n    */\n    if (points.length === 1) {\n        if (!(taperStart || taperEnd) || isComplete) {\n            const start = prj(firstPoint, uni(per(sub(firstPoint, lastPoint))), -(firstRadius || radius));\n            const dotPts = [];\n            for (let step = 1 / 13, t = step; t <= 1; t += step) {\n                dotPts.push(rotAround(start, firstPoint, FIXED_PI * 2 * t));\n            }\n            return dotPts;\n        }\n    }\n    else {\n        /*\n        Draw a start cap\n    \n        Unless the line has a tapered start, or unless the line has a tapered end\n        and the line is very short, draw a start cap around the first point. Use\n        the distance between the second left and right point for the cap's radius.\n        Finally remove the first left and right points. :psyduck:\n      */\n        if (taperStart || (taperEnd && points.length === 1)) {\n            // The start point is tapered, noop\n        }\n        else if (capStart) {\n            // Draw the round cap - add thirteen points rotating the right point around the start point to the left point\n            for (let step = 1 / 13, t = step; t <= 1; t += step) {\n                const pt = rotAround(rightPts[0], firstPoint, FIXED_PI * t);\n                startCap.push(pt);\n            }\n        }\n        else {\n            // Draw the flat cap - add a point to the left and right of the start point\n            const cornersVector = sub(leftPts[0], rightPts[0]);\n            const offsetA = mul(cornersVector, 0.5);\n            const offsetB = mul(cornersVector, 0.51);\n            startCap.push(sub(firstPoint, offsetA), sub(firstPoint, offsetB), add(firstPoint, offsetB), add(firstPoint, offsetA));\n        }\n        /*\n        Draw an end cap\n    \n        If the line does not have a tapered end, and unless the line has a tapered\n        start and the line is very short, draw a cap around the last point. Finally,\n        remove the last left and right points. Otherwise, add the last point. Note\n        that This cap is a full-turn-and-a-half: this prevents incorrect caps on\n        sharp end turns.\n      */\n        const direction = per(neg(points[points.length - 1].vector));\n        if (taperEnd || (taperStart && points.length === 1)) {\n            // Tapered end - push the last point to the line\n            endCap.push(lastPoint);\n        }\n        else if (capEnd) {\n            // Draw the round end cap\n            const start = prj(lastPoint, direction, radius);\n            for (let step = 1 / 29, t = step; t < 1; t += step) {\n                endCap.push(rotAround(start, lastPoint, FIXED_PI * 3 * t));\n            }\n        }\n        else {\n            // Draw the flat end cap\n            endCap.push(add(lastPoint, mul(direction, radius)), add(lastPoint, mul(direction, radius * 0.99)), sub(lastPoint, mul(direction, radius * 0.99)), sub(lastPoint, mul(direction, radius)));\n        }\n    }\n    /*\n      Return the points in the correct winding order: begin on the left side, then\n      continue around the end cap, then come back along the right side, and finally\n      complete the start cap.\n    */\n    return leftPts.concat(endCap, rightPts.reverse(), startCap);\n}\n//# sourceMappingURL=getStrokeOutlinePoints.js.map","import { add, dist, isEqual, lrp, sub, uni } from './vec.js';\n/**\n * ## getStrokePoints\n * @description Get an array of points as objects with an adjusted point, pressure, vector, distance, and runningLength.\n * @param points An array of points (as `[x, y, pressure]` or `{x, y, pressure}`). Pressure is optional in both cases.\n * @param options (optional) An object with options.\n * @param options.size\tThe base size (diameter) of the stroke.\n * @param options.thinning The effect of pressure on the stroke's size.\n * @param options.smoothing\tHow much to soften the stroke's edges.\n * @param options.easing\tAn easing function to apply to each point's pressure.\n * @param options.simulatePressure Whether to simulate pressure based on velocity.\n * @param options.start Cap, taper and easing for the start of the line.\n * @param options.end Cap, taper and easing for the end of the line.\n * @param options.last Whether to handle the points as a completed stroke.\n */\nexport function getStrokePoints(points, options = {}) {\n    const { streamline = 0.5, size = 16, last: isComplete = false } = options;\n    // If we don't have any points, return an empty array.\n    if (points.length === 0)\n        return [];\n    // Find the interpolation level between points.\n    const t = 0.15 + (1 - streamline) * 0.85;\n    // Whatever the input is, make sure that the points are in number[][].\n    let pts = Array.isArray(points[0])\n        ? points\n        : points.map(({ x, y, pressure = 0.5 }) => [x, y, pressure]);\n    // Add extra points between the two, to help avoid \"dash\" lines\n    // for strokes with tapered start and ends. Don't mutate the\n    // input array!\n    if (pts.length === 2) {\n        const last = pts[1];\n        pts = pts.slice(0, -1);\n        for (let i = 1; i < 5; i++) {\n            pts.push(lrp(pts[0], last, i / 4));\n        }\n    }\n    // If there's only one point, add another point at a 1pt offset.\n    // Don't mutate the input array!\n    if (pts.length === 1) {\n        pts = [...pts, [...add(pts[0], [1, 1]), ...pts[0].slice(2)]];\n    }\n    // The strokePoints array will hold the points for the stroke.\n    // Start it out with the first point, which needs no adjustment.\n    const strokePoints = [\n        {\n            point: [pts[0][0], pts[0][1]],\n            pressure: pts[0][2] >= 0 ? pts[0][2] : 0.25,\n            vector: [1, 1],\n            distance: 0,\n            runningLength: 0,\n        },\n    ];\n    // A flag to see whether we've already reached out minimum length\n    let hasReachedMinimumLength = false;\n    // We use the runningLength to keep track of the total distance\n    let runningLength = 0;\n    // We're set this to the latest point, so we can use it to calculate\n    // the distance and vector of the next point.\n    let prev = strokePoints[0];\n    const max = pts.length - 1;\n    // Iterate through all of the points, creating StrokePoints.\n    for (let i = 1; i < pts.length; i++) {\n        const point = isComplete && i === max\n            ? // If we're at the last point, and `options.last` is true,\n                // then add the actual input point.\n                pts[i].slice(0, 2)\n            : // Otherwise, using the t calculated from the streamline\n                // option, interpolate a new point between the previous\n                // point the current point.\n                lrp(prev.point, pts[i], t);\n        // If the new point is the same as the previous point, skip ahead.\n        if (isEqual(prev.point, point))\n            continue;\n        // How far is the new point from the previous point?\n        const distance = dist(point, prev.point);\n        // Add this distance to the total \"running length\" of the line.\n        runningLength += distance;\n        // At the start of the line, we wait until the new point is a\n        // certain distance away from the original point, to avoid noise\n        if (i < max && !hasReachedMinimumLength) {\n            if (runningLength < size)\n                continue;\n            hasReachedMinimumLength = true;\n            // TODO: Backfill the missing points so that tapering works correctly.\n        }\n        // Create a new strokepoint (it will be the new \"previous\" one).\n        prev = {\n            // The adjusted point\n            point,\n            // The input pressure (or .5 if not specified)\n            pressure: pts[i][2] >= 0 ? pts[i][2] : 0.5,\n            // The vector from the current point to the previous point\n            vector: uni(sub(prev.point, point)),\n            // The distance between the current point and the previous point\n            distance,\n            // The total distance so far\n            runningLength,\n        };\n        // Push it to the strokePoints array.\n        strokePoints.push(prev);\n    }\n    // Set the vector of the first point to be the same as the second point.\n    strokePoints[0].vector = strokePoints[1]?.vector || [0, 0];\n    return strokePoints;\n}\n//# sourceMappingURL=getStrokePoints.js.map","import { getStrokeOutlinePoints } from './getStrokeOutlinePoints.js';\nimport { getStrokePoints } from './getStrokePoints.js';\n/**\n * ## getStroke\n * @description Get an array of points describing a polygon that surrounds the input points.\n * @param points An array of points (as `[x, y, pressure]` or `{x, y, pressure}`). Pressure is optional in both cases.\n * @param options (optional) An object with options.\n * @param options.size\tThe base size (diameter) of the stroke.\n * @param options.thinning The effect of pressure on the stroke's size.\n * @param options.smoothing\tHow much to soften the stroke's edges.\n * @param options.easing\tAn easing function to apply to each point's pressure.\n * @param options.simulatePressure Whether to simulate pressure based on velocity.\n * @param options.start Cap, taper and easing for the start of the line.\n * @param options.end Cap, taper and easing for the end of the line.\n * @param options.last Whether to handle the points as a completed stroke.\n */\nexport function getStroke(points, options = {}) {\n    return getStrokeOutlinePoints(getStrokePoints(points, options), options);\n}\n//# sourceMappingURL=getStroke.js.map","// Inlined from https://raw.githubusercontent.com/tldraw/tldraw/24cad6959f59f93e20e556d018c391fd89d4ecca/packages/vec/src/index.ts\n// Credits to tldraw\nclass Vec {\n    static clamp(n, min, max) {\n        return Math.max(min, typeof max !== 'undefined' ? Math.min(n, max) : n);\n    }\n    static clampV(A, min, max) {\n        return A.map(n => (max ? Vec.clamp(n, min, max) : Vec.clamp(n, min)));\n    }\n    /**\n     * Cross (for point in polygon)\n     *\n     */\n    static cross(x, y, z) {\n        return (y[0] - x[0]) * (z[1] - x[1]) - (z[0] - x[0]) * (y[1] - x[1]);\n    }\n    /**\n     * Snap vector to nearest step.\n     * @param A\n     * @param step\n     * @example\n     * ```ts\n     * Vec.snap([10.5, 28], 10) // [10, 30]\n     * ```\n     */\n    static snap(a, step = 1) {\n        return [Math.round(a[0] / step) * step, Math.round(a[1] / step) * step];\n    }\n}\n/**\n * Negate a vector.\n * @param A\n */\nVec.neg = (A) => {\n    return [-A[0], -A[1]];\n};\n/**\n * Add vectors.\n * @param A\n * @param B\n */\nVec.add = (A, B) => {\n    return [A[0] + B[0], A[1] + B[1]];\n};\n/**\n * Add scalar to vector.\n * @param A\n * @param B\n */\nVec.addScalar = (A, n) => {\n    return [A[0] + n, A[1] + n];\n};\n/**\n * Subtract vectors.\n * @param A\n * @param B\n */\nVec.sub = (A, B) => {\n    return [A[0] - B[0], A[1] - B[1]];\n};\n/**\n * Subtract scalar from vector.\n * @param A\n * @param B\n */\nVec.subScalar = (A, n) => {\n    return [A[0] - n, A[1] - n];\n};\n/**\n * Get the vector from vectors A to B.\n * @param A\n * @param B\n */\nVec.vec = (A, B) => {\n    // A, B as vectors get the vector from A to B\n    return [B[0] - A[0], B[1] - A[1]];\n};\n/**\n * Vector multiplication by scalar\n * @param A\n * @param n\n */\nVec.mul = (A, n) => {\n    return [A[0] * n, A[1] * n];\n};\n/**\n * Multiple two vectors.\n * @param A\n * @param B\n */\nVec.mulV = (A, B) => {\n    return [A[0] * B[0], A[1] * B[1]];\n};\n/**\n * Vector division by scalar.\n * @param A\n * @param n\n */\nVec.div = (A, n) => {\n    return [A[0] / n, A[1] / n];\n};\n/**\n * Vector division by vector.\n * @param A\n * @param n\n */\nVec.divV = (A, B) => {\n    return [A[0] / B[0], A[1] / B[1]];\n};\n/**\n * Perpendicular rotation of a vector A\n * @param A\n */\nVec.per = (A) => {\n    return [A[1], -A[0]];\n};\n/**\n * Dot product\n * @param A\n * @param B\n */\nVec.dpr = (A, B) => {\n    return A[0] * B[0] + A[1] * B[1];\n};\n/**\n * Cross product (outer product) | A X B |\n * @param A\n * @param B\n */\nVec.cpr = (A, B) => {\n    return A[0] * B[1] - B[0] * A[1];\n};\n/**\n * Length of the vector squared\n * @param A\n */\nVec.len2 = (A) => {\n    return A[0] * A[0] + A[1] * A[1];\n};\n/**\n * Length of the vector\n * @param A\n */\nVec.len = (A) => {\n    return Math.hypot(A[0], A[1]);\n};\n/**\n * Project A over B\n * @param A\n * @param B\n */\nVec.pry = (A, B) => {\n    return Vec.dpr(A, B) / Vec.len(B);\n};\n/**\n * Get normalized / unit vector.\n * @param A\n */\nVec.uni = (A) => {\n    return Vec.div(A, Vec.len(A));\n};\n/**\n * Get normalized / unit vector.\n * @param A\n */\nVec.normalize = (A) => {\n    return Vec.uni(A);\n};\n/**\n * Get the tangent between two vectors.\n * @param A\n * @param B\n * @returns\n */\nVec.tangent = (A, B) => {\n    return Vec.uni(Vec.sub(A, B));\n};\n/**\n * Dist length from A to B squared.\n * @param A\n * @param B\n */\nVec.dist2 = (A, B) => {\n    return Vec.len2(Vec.sub(A, B));\n};\n/**\n * Dist length from A to B\n * @param A\n * @param B\n */\nVec.dist = (A, B) => {\n    return Math.hypot(A[1] - B[1], A[0] - B[0]);\n};\n/**\n * A faster, though less accurate method for testing distances. Maybe faster?\n * @param A\n * @param B\n * @returns\n */\nVec.fastDist = (A, B) => {\n    const V = [B[0] - A[0], B[1] - A[1]];\n    const aV = [Math.abs(V[0]), Math.abs(V[1])];\n    let r = 1 / Math.max(aV[0], aV[1]);\n    r = r * (1.29289 - (aV[0] + aV[1]) * r * 0.29289);\n    return [V[0] * r, V[1] * r];\n};\n/**\n * Angle between vector A and vector B in radians\n * @param A\n * @param B\n */\nVec.ang = (A, B) => {\n    return Math.atan2(Vec.cpr(A, B), Vec.dpr(A, B));\n};\n/**\n * Angle between vector A and vector B in radians\n * @param A\n * @param B\n */\nVec.angle = (A, B) => {\n    return Math.atan2(B[1] - A[1], B[0] - A[0]);\n};\n/**\n * Mean between two vectors or mid vector between two vectors\n * @param A\n * @param B\n */\nVec.med = (A, B) => {\n    return Vec.mul(Vec.add(A, B), 0.5);\n};\n/**\n * Vector rotation by r (radians)\n * @param A\n * @param r rotation in radians\n */\nVec.rot = (A, r = 0) => {\n    return [\n        A[0] * Math.cos(r) - A[1] * Math.sin(r),\n        A[0] * Math.sin(r) + A[1] * Math.cos(r),\n    ];\n};\n/**\n * Rotate a vector around another vector by r (radians)\n * @param A vector\n * @param C center\n * @param r rotation in radians\n */\nVec.rotWith = (A, C, r = 0) => {\n    if (r === 0)\n        return A;\n    const s = Math.sin(r);\n    const c = Math.cos(r);\n    const px = A[0] - C[0];\n    const py = A[1] - C[1];\n    const nx = px * c - py * s;\n    const ny = px * s + py * c;\n    return [nx + C[0], ny + C[1]];\n};\n/**\n * Check of two vectors are identical.\n * @param A\n * @param B\n */\nVec.isEqual = (A, B) => {\n    return A[0] === B[0] && A[1] === B[1];\n};\n/**\n * Interpolate vector A to B with a scalar t\n * @param A\n * @param B\n * @param t scalar\n */\nVec.lrp = (A, B, t) => {\n    return Vec.add(A, Vec.mul(Vec.sub(B, A), t));\n};\n/**\n * Interpolate from A to B when curVAL goes fromVAL: number[] => to\n * @param A\n * @param B\n * @param from Starting value\n * @param to Ending value\n * @param s Strength\n */\nVec.int = (A, B, from, to, s = 1) => {\n    const t = (Vec.clamp(from, to) - from) / (to - from);\n    return Vec.add(Vec.mul(A, 1 - t), Vec.mul(B, s));\n};\n/**\n * Get the angle between the three vectors A, B, and C.\n * @param p1\n * @param pc\n * @param p2\n */\nVec.ang3 = (p1, pc, p2) => {\n    // this,\n    const v1 = Vec.vec(pc, p1);\n    const v2 = Vec.vec(pc, p2);\n    return Vec.ang(v1, v2);\n};\n/**\n * Absolute value of a vector.\n * @param A\n * @returns\n */\nVec.abs = (A) => {\n    return [Math.abs(A[0]), Math.abs(A[1])];\n};\nVec.rescale = (a, n) => {\n    const l = Vec.len(a);\n    return [(n * a[0]) / l, (n * a[1]) / l];\n};\n/**\n * Get whether p1 is left of p2, relative to pc.\n * @param p1\n * @param pc\n * @param p2\n */\nVec.isLeft = (p1, pc, p2) => {\n    //  isLeft: >0 for counterclockwise\n    //          =0 for none (degenerate)\n    //          <0 for clockwise\n    return ((pc[0] - p1[0]) * (p2[1] - p1[1]) - (p2[0] - p1[0]) * (pc[1] - p1[1]));\n};\n/**\n * Get whether p1 is left of p2, relative to pc.\n * @param p1\n * @param pc\n * @param p2\n */\nVec.clockwise = (p1, pc, p2) => {\n    return Vec.isLeft(p1, pc, p2) > 0;\n};\n/**\n * Round a vector to two decimal places.\n * @param a\n */\nVec.toFixed = (a) => {\n    return a.map(v => Math.round(v * 100) / 100);\n};\n/**\n * Get the nearest point on a line with a known unit vector that passes through point A\n * @param A Any point on the line\n * @param u The unit vector for the line.\n * @param P A point not on the line to test.\n * @returns\n */\nVec.nearestPointOnLineThroughPoint = (A, u, P) => {\n    return Vec.add(A, Vec.mul(u, Vec.pry(Vec.sub(P, A), u)));\n};\n/**\n * Distance between a point and a line with a known unit vector that passes through a point.\n * @param A Any point on the line\n * @param u The unit vector for the line.\n * @param P A point not on the line to test.\n * @returns\n */\nVec.distanceToLineThroughPoint = (A, u, P) => {\n    return Vec.dist(P, Vec.nearestPointOnLineThroughPoint(A, u, P));\n};\n/**\n * Get the nearest point on a line segment between A and B\n * @param A The start of the line segment\n * @param B The end of the line segment\n * @param P The off-line point\n * @param clamp Whether to clamp the point between A and B.\n * @returns\n */\nVec.nearestPointOnLineSegment = (A, B, P, clamp = true) => {\n    const u = Vec.uni(Vec.sub(B, A));\n    const C = Vec.add(A, Vec.mul(u, Vec.pry(Vec.sub(P, A), u)));\n    if (clamp) {\n        if (C[0] < Math.min(A[0], B[0]))\n            return A[0] < B[0] ? A : B;\n        if (C[0] > Math.max(A[0], B[0]))\n            return A[0] > B[0] ? A : B;\n        if (C[1] < Math.min(A[1], B[1]))\n            return A[1] < B[1] ? A : B;\n        if (C[1] > Math.max(A[1], B[1]))\n            return A[1] > B[1] ? A : B;\n    }\n    return C;\n};\n/**\n * Distance between a point and the nearest point on a line segment between A and B\n * @param A The start of the line segment\n * @param B The end of the line segment\n * @param P The off-line point\n * @param clamp Whether to clamp the point between A and B.\n * @returns\n */\nVec.distanceToLineSegment = (A, B, P, clamp = true) => {\n    return Vec.dist(P, Vec.nearestPointOnLineSegment(A, B, P, clamp));\n};\n/**\n * Get the nearest point on a bounding box to a point P.\n * @param bounds The bounding box\n * @param P The point point\n * @returns\n */\nVec.nearestPointOnBounds = (bounds, P) => {\n    return [\n        Vec.clamp(P[0], bounds.minX, bounds.maxX),\n        Vec.clamp(P[1], bounds.minY, bounds.maxY),\n    ];\n};\n/**\n * Distance between a point and the nearest point on a bounding box.\n * @param bounds The bounding box.\n * @param P The point\n * @returns\n */\nVec.distanceToBounds = (bounds, P) => {\n    return Vec.dist(P, Vec.nearestPointOnBounds(bounds, P));\n};\n/**\n * Push a point A towards point B by a given distance.\n * @param A\n * @param B\n * @param d\n * @returns\n */\nVec.nudge = (A, B, d) => {\n    if (Vec.isEqual(A, B))\n        return A;\n    return Vec.add(A, Vec.mul(Vec.uni(Vec.sub(B, A)), d));\n};\n/**\n * Push a point in a given angle by a given distance.\n * @param A\n * @param B\n * @param d\n */\nVec.nudgeAtAngle = (A, a, d) => {\n    return [Math.cos(a) * d + A[0], Math.sin(a) * d + A[1]];\n};\n/**\n * Round a vector to a precision length.\n * @param a\n * @param n\n */\nVec.toPrecision = (a, n = 4) => {\n    return [+a[0].toPrecision(n), +a[1].toPrecision(n)];\n};\n/**\n * Get an array of points between two points.\n * @param A The first point.\n * @param B The second point.\n * @param steps The number of points to return.\n */\nVec.pointsBetween = (A, B, steps = 6) => {\n    return Array.from(Array(steps)).map((_, i) => {\n        const t = i / (steps - 1);\n        const k = Math.min(1, 0.5 + Math.abs(0.5 - t));\n        return [...Vec.lrp(A, B, t), k];\n    });\n};\n/**\n * Get the slope between two points.\n * @param A\n * @param B\n */\nVec.slope = (A, B) => {\n    if (A[0] === B[0])\n        return NaN;\n    return (A[1] - B[1]) / (A[0] - B[0]);\n};\n/**\n * Get a vector comprised of the maximum of two or more vectors.\n */\nVec.max = (...v) => {\n    return [Math.max(...v.map(a => a[0])), Math.max(...v.map(a => a[1]))];\n};\n/**\n * Get a vector comprised of the minimum of two or more vectors.\n */\nVec.min = (...v) => {\n    return [Math.min(...v.map(a => a[0])), Math.min(...v.map(a => a[1]))];\n};\nexport { Vec };\n//# sourceMappingURL=vec.js.map","// https://github.com/tldraw/tldraw/blob/31f0f02adf58b909f59764f62de09e97542eb2b1/packages/core/src/utils/utils.ts\n// Credits to tldraw\nimport { Vec } from './vec.js';\nconst TAU = Math.PI * 2;\nvar TLBoundsEdge;\n(function (TLBoundsEdge) {\n    TLBoundsEdge[\"Top\"] = \"top_edge\";\n    TLBoundsEdge[\"Right\"] = \"right_edge\";\n    TLBoundsEdge[\"Bottom\"] = \"bottom_edge\";\n    TLBoundsEdge[\"Left\"] = \"left_edge\";\n})(TLBoundsEdge || (TLBoundsEdge = {}));\nvar TLBoundsCorner;\n(function (TLBoundsCorner) {\n    TLBoundsCorner[\"TopLeft\"] = \"top_left_corner\";\n    TLBoundsCorner[\"TopRight\"] = \"top_right_corner\";\n    TLBoundsCorner[\"BottomRight\"] = \"bottom_right_corner\";\n    TLBoundsCorner[\"BottomLeft\"] = \"bottom_left_corner\";\n})(TLBoundsCorner || (TLBoundsCorner = {}));\nvar SnapPoints;\n(function (SnapPoints) {\n    SnapPoints[\"minX\"] = \"minX\";\n    SnapPoints[\"midX\"] = \"midX\";\n    SnapPoints[\"maxX\"] = \"maxX\";\n    SnapPoints[\"minY\"] = \"minY\";\n    SnapPoints[\"midY\"] = \"midY\";\n    SnapPoints[\"maxY\"] = \"maxY\";\n})(SnapPoints || (SnapPoints = {}));\nclass Utils {\n    /* -------------------------------------------------- */\n    /*                    Math & Geometry                 */\n    /* -------------------------------------------------- */\n    /**\n     * Linear interpolation between two numbers.\n     * @param y1\n     * @param y2\n     * @param mu\n     */\n    static lerp(y1, y2, mu) {\n        mu = Utils.clamp(mu, 0, 1);\n        return y1 * (1 - mu) + y2 * mu;\n    }\n    /**\n     * Linear interpolation between two colors.\n     *\n     * ### Example\n     *\n     *```ts\n     * lerpColor(\"#000000\", \"#0099FF\", .25)\n     *```\n     */\n    static lerpColor(color1, color2, factor = 0.5) {\n        function h2r(hex) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n            return [\n                parseInt(result[1], 16),\n                parseInt(result[2], 16),\n                parseInt(result[3], 16),\n            ];\n        }\n        function r2h(rgb) {\n            return ('#' +\n                ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2])\n                    .toString(16)\n                    .slice(1));\n        }\n        const c1 = h2r(color1) || [0, 0, 0];\n        const c2 = h2r(color2) || [0, 0, 0];\n        const result = c1.slice();\n        for (let i = 0; i < 3; i++) {\n            result[i] = Math.round(result[i] + factor * (c2[i] - c1[i]));\n        }\n        return r2h(result);\n    }\n    /**\n     * Modulate a value between two ranges.\n     * @param value\n     * @param rangeA from [low, high]\n     * @param rangeB to [low, high]\n     * @param clamp\n     */\n    static modulate(value, rangeA, rangeB, clamp = false) {\n        const [fromLow, fromHigh] = rangeA;\n        const [v0, v1] = rangeB;\n        const result = v0 + ((value - fromLow) / (fromHigh - fromLow)) * (v1 - v0);\n        return clamp\n            ? v0 < v1\n                ? Math.max(Math.min(result, v1), v0)\n                : Math.max(Math.min(result, v0), v1)\n            : result;\n    }\n    static clamp(n, min, max) {\n        return Math.max(min, typeof max !== 'undefined' ? Math.min(n, max) : n);\n    }\n    /**\n     * Recursively clone an object or array.\n     * @param obj\n     */\n    static deepClone(obj) {\n        if (obj === null)\n            return obj;\n        if (Array.isArray(obj)) {\n            return [...obj];\n        }\n        if (typeof obj === 'object') {\n            const clone = { ...obj };\n            Object.keys(clone).forEach(key => (clone[key] =\n                typeof obj[key] === 'object'\n                    ? Utils.deepClone(obj[key])\n                    : obj[key]));\n            return clone;\n        }\n        return obj;\n    }\n    /**\n     * Seeded random number generator, using [xorshift](https://en.wikipedia.org/wiki/Xorshift).\n     * The result will always be between -1 and 1.\n     *\n     * Adapted from [seedrandom](https://github.com/davidbau/seedrandom).\n     */\n    static rng(seed = '') {\n        let x = 0;\n        let y = 0;\n        let z = 0;\n        let w = 0;\n        function next() {\n            const t = x ^ (x << 11);\n            x = y;\n            y = z;\n            z = w;\n            w ^= ((w >>> 19) ^ t ^ (t >>> 8)) >>> 0;\n            return w / 0x100000000;\n        }\n        for (let k = 0; k < seed.length + 64; k++) {\n            x ^= seed.charCodeAt(k) | 0;\n            next();\n        }\n        return next;\n    }\n    /* ---------------------- Boxes --------------------- */\n    static pointsToLineSegments(points, closed = false) {\n        const segments = [];\n        for (let i = 1; i < points.length; i++)\n            segments.push([points[i - 1], points[i]]);\n        if (closed)\n            segments.push([points[points.length - 1], points[0]]);\n        return segments;\n    }\n    static getRectangleSides(point, size, rotation = 0) {\n        const center = [point[0] + size[0] / 2, point[1] + size[1] / 2];\n        const tl = Vec.rotWith(point, center, rotation);\n        const tr = Vec.rotWith(Vec.add(point, [size[0], 0]), center, rotation);\n        const br = Vec.rotWith(Vec.add(point, size), center, rotation);\n        const bl = Vec.rotWith(Vec.add(point, [0, size[1]]), center, rotation);\n        return [\n            ['top', [tl, tr]],\n            ['right', [tr, br]],\n            ['bottom', [br, bl]],\n            ['left', [bl, tl]],\n        ];\n    }\n    /* --------------- Circles and Angles --------------- */\n    /**\n     * Get a circle from three points.\n     * @param A\n     * @param B\n     * @param C\n     * @returns [x, y, r]\n     */\n    static circleFromThreePoints(A, B, C) {\n        const [x1, y1] = A;\n        const [x2, y2] = B;\n        const [x3, y3] = C;\n        const a = x1 * (y2 - y3) - y1 * (x2 - x3) + x2 * y3 - x3 * y2;\n        const b = (x1 * x1 + y1 * y1) * (y3 - y2) +\n            (x2 * x2 + y2 * y2) * (y1 - y3) +\n            (x3 * x3 + y3 * y3) * (y2 - y1);\n        const c = (x1 * x1 + y1 * y1) * (x2 - x3) +\n            (x2 * x2 + y2 * y2) * (x3 - x1) +\n            (x3 * x3 + y3 * y3) * (x1 - x2);\n        const x = -b / (2 * a);\n        const y = -c / (2 * a);\n        return [x, y, Math.hypot(x - x1, y - y1)];\n    }\n    /**\n     * Find the approximate perimeter of an ellipse.\n     * @param rx\n     * @param ry\n     */\n    static perimeterOfEllipse(rx, ry) {\n        const h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n        const p = Math.PI * (rx + ry) * (1 + (3 * h) / (10 + Math.sqrt(4 - 3 * h)));\n        return p;\n    }\n    /**\n     * Get the short angle distance between two angles.\n     * @param a0\n     * @param a1\n     */\n    static shortAngleDist(a0, a1) {\n        const max = Math.PI * 2;\n        const da = (a1 - a0) % max;\n        return ((2 * da) % max) - da;\n    }\n    /**\n     * Get the long angle distance between two angles.\n     * @param a0\n     * @param a1\n     */\n    static longAngleDist(a0, a1) {\n        return Math.PI * 2 - Utils.shortAngleDist(a0, a1);\n    }\n    /**\n     * Interpolate an angle between two angles.\n     * @param a0\n     * @param a1\n     * @param t\n     */\n    static lerpAngles(a0, a1, t) {\n        return a0 + Utils.shortAngleDist(a0, a1) * t;\n    }\n    /**\n     * Get the short distance between two angles.\n     * @param a0\n     * @param a1\n     */\n    static angleDelta(a0, a1) {\n        return Utils.shortAngleDist(a0, a1);\n    }\n    /**\n     * Get the \"sweep\" or short distance between two points on a circle's perimeter.\n     * @param C\n     * @param A\n     * @param B\n     */\n    static getSweep(C, A, B) {\n        return Utils.angleDelta(Vec.angle(C, A), Vec.angle(C, B));\n    }\n    /**\n     * Clamp radians within 0 and 2PI\n     * @param r\n     */\n    static clampRadians(r) {\n        return (Math.PI * 2 + r) % (Math.PI * 2);\n    }\n    /**\n     * Clamp rotation to even segments.\n     * @param r\n     * @param segments\n     */\n    static snapAngleToSegments(r, segments) {\n        const seg = (Math.PI * 2) / segments;\n        return Math.floor((Utils.clampRadians(r) + seg / 2) / seg) * seg;\n    }\n    /**\n     * Is angle c between angles a and b?\n     * @param a\n     * @param b\n     * @param c\n     */\n    static isAngleBetween(a, b, c) {\n        if (c === a || c === b)\n            return true;\n        const AB = (b - a + TAU) % TAU;\n        const AC = (c - a + TAU) % TAU;\n        return AB <= Math.PI !== AC > AB;\n    }\n    /**\n     * Convert degrees to radians.\n     * @param d\n     */\n    static degreesToRadians(d) {\n        return (d * Math.PI) / 180;\n    }\n    /**\n     * Convert radians to degrees.\n     * @param r\n     */\n    static radiansToDegrees(r) {\n        return (r * 180) / Math.PI;\n    }\n    /**\n     * Get the length of an arc between two points on a circle's perimeter.\n     * @param C\n     * @param r\n     * @param A\n     * @param B\n     */\n    static getArcLength(C, r, A, B) {\n        const sweep = Utils.getSweep(C, A, B);\n        return r * (2 * Math.PI) * (sweep / (2 * Math.PI));\n    }\n    static getSweepFlag(A, B, C) {\n        const angleAC = Vec.angle(A, C);\n        const angleAB = Vec.angle(A, B);\n        const angleCAB = ((angleAB - angleAC + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\n        return angleCAB > 0 ? 0 : 1;\n    }\n    static getLargeArcFlag(A, C, P) {\n        const anglePA = Vec.angle(P, A);\n        const anglePC = Vec.angle(P, C);\n        const angleAPC = ((anglePC - anglePA + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\n        return Math.abs(angleAPC) > Math.PI / 2 ? 0 : 1;\n    }\n    /**\n     * Get a dash offset for an arc, based on its length.\n     * @param C\n     * @param r\n     * @param A\n     * @param B\n     * @param step\n     */\n    static getArcDashOffset(C, r, A, B, step) {\n        const del0 = Utils.getSweepFlag(C, A, B);\n        const len0 = Utils.getArcLength(C, r, A, B);\n        const off0 = del0 < 0 ? len0 : 2 * Math.PI * C[2] - len0;\n        return -off0 / 2 + step;\n    }\n    /**\n     * Get a dash offset for an ellipse, based on its length.\n     * @param A\n     * @param step\n     */\n    static getEllipseDashOffset(A, step) {\n        const c = 2 * Math.PI * A[2];\n        return -c / 2 + -step;\n    }\n    /* -------------------- Hit Tests ------------------- */\n    /**\n     * Get whether a point is inside of a circle.\n     * @param A\n     * @param b\n     * @returns\n     */\n    static pointInCircle(A, C, r) {\n        return Vec.dist(A, C) <= r;\n    }\n    /**\n     * Get whether a point is inside of an ellipse.\n     * @param point\n     * @param center\n     * @param rx\n     * @param ry\n     * @param rotation\n     * @returns\n     */\n    static pointInEllipse(A, C, rx, ry, rotation = 0) {\n        rotation = rotation || 0;\n        const cos = Math.cos(rotation);\n        const sin = Math.sin(rotation);\n        const delta = Vec.sub(A, C);\n        const tdx = cos * delta[0] + sin * delta[1];\n        const tdy = sin * delta[0] - cos * delta[1];\n        return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\n    }\n    /**\n     * Get whether a point is inside of a rectangle.\n     * @param point\n     * @param size\n     */\n    static pointInRect(point, size) {\n        return !(point[0] < size[0] ||\n            point[0] > point[0] + size[0] ||\n            point[1] < size[1] ||\n            point[1] > point[1] + size[1]);\n    }\n    static pointInPolygon(p, points) {\n        let wn = 0; // winding number\n        points.forEach((a, i) => {\n            const b = points[(i + 1) % points.length];\n            if (a[1] <= p[1]) {\n                if (b[1] > p[1] && Vec.cross(a, b, p) > 0) {\n                    wn += 1;\n                }\n            }\n            else if (b[1] <= p[1] && Vec.cross(a, b, p) < 0) {\n                wn -= 1;\n            }\n        });\n        return wn !== 0;\n    }\n    /**\n     * Get whether a point is inside of a bounds.\n     * @param A The point to check.\n     * @param b The bounds to check.\n     * @returns\n     */\n    static pointInBounds(A, b) {\n        return !(A[0] < b.minX || A[0] > b.maxX || A[1] < b.minY || A[1] > b.maxY);\n    }\n    /**\n     * Hit test a point and a polyline using a minimum distance.\n     * @param A The point to check.\n     * @param points The points that make up the polyline.\n     * @param distance (optional) The minimum distance that qualifies a hit.\n     */\n    static pointInPolyline(A, points, distance = 3) {\n        for (let i = 1; i < points.length; i++) {\n            if (Vec.distanceToLineSegment(points[i - 1], points[i], A) < distance) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /* --------------------- Bounds --------------------- */\n    static getBoundsSides(bounds) {\n        return this.getRectangleSides([bounds.minX, bounds.minY], [bounds.width, bounds.height]);\n    }\n    /**\n     * Expand a bounding box by a delta.\n     *\n     * ### Example\n     *\n     *```ts\n     * expandBounds(myBounds, [100, 100])\n     *```\n     */\n    static expandBounds(bounds, delta) {\n        return {\n            minX: bounds.minX - delta,\n            minY: bounds.minY - delta,\n            maxX: bounds.maxX + delta,\n            maxY: bounds.maxY + delta,\n            width: bounds.width + delta * 2,\n            height: bounds.height + delta * 2,\n        };\n    }\n    /**\n     * Get whether two bounds collide.\n     * @param a Bounds\n     * @param b Bounds\n     * @returns\n     */\n    static boundsCollide(a, b) {\n        return !(a.maxX < b.minX ||\n            a.minX > b.maxX ||\n            a.maxY < b.minY ||\n            a.minY > b.maxY);\n    }\n    /**\n     * Get whether the bounds of A contain the bounds of B. A perfect match will return true.\n     * @param a Bounds\n     * @param b Bounds\n     * @returns\n     */\n    static boundsContain(a, b) {\n        return (a.minX < b.minX && a.minY < b.minY && a.maxY > b.maxY && a.maxX > b.maxX);\n    }\n    /**\n     * Get whether the bounds of A are contained by the bounds of B.\n     * @param a Bounds\n     * @param b Bounds\n     * @returns\n     */\n    static boundsContained(a, b) {\n        return Utils.boundsContain(b, a);\n    }\n    /**\n     * Get whether two bounds are identical.\n     * @param a Bounds\n     * @param b Bounds\n     * @returns\n     */\n    static boundsAreEqual(a, b) {\n        return !(b.maxX !== a.maxX ||\n            b.minX !== a.minX ||\n            b.maxY !== a.maxY ||\n            b.minY !== a.minY);\n    }\n    /**\n     * Find a bounding box from an array of points.\n     * @param points\n     * @param rotation (optional) The bounding box's rotation.\n     */\n    static getBoundsFromPoints(points, rotation = 0) {\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        if (points.length < 2) {\n            minX = 0;\n            minY = 0;\n            maxX = 1;\n            maxY = 1;\n        }\n        else {\n            for (const [x, y] of points) {\n                minX = Math.min(x, minX);\n                minY = Math.min(y, minY);\n                maxX = Math.max(x, maxX);\n                maxY = Math.max(y, maxY);\n            }\n        }\n        if (rotation !== 0) {\n            return Utils.getBoundsFromPoints(points.map(pt => Vec.rotWith(pt, [(minX + maxX) / 2, (minY + maxY) / 2], rotation)));\n        }\n        return {\n            minX,\n            minY,\n            maxX,\n            maxY,\n            width: Math.max(1, maxX - minX),\n            height: Math.max(1, maxY - minY),\n        };\n    }\n    /**\n     * Center a bounding box around a given point.\n     * @param bounds\n     * @param center\n     */\n    static centerBounds(bounds, point) {\n        const boundsCenter = this.getBoundsCenter(bounds);\n        const dx = point[0] - boundsCenter[0];\n        const dy = point[1] - boundsCenter[1];\n        return this.translateBounds(bounds, [dx, dy]);\n    }\n    /**\n     * Snap a bounding box to a grid size.\n     * @param bounds\n     * @param gridSize\n     */\n    static snapBoundsToGrid(bounds, gridSize) {\n        const minX = Math.round(bounds.minX / gridSize) * gridSize;\n        const minY = Math.round(bounds.minY / gridSize) * gridSize;\n        const maxX = Math.round(bounds.maxX / gridSize) * gridSize;\n        const maxY = Math.round(bounds.maxY / gridSize) * gridSize;\n        return {\n            minX,\n            minY,\n            maxX,\n            maxY,\n            width: Math.max(1, maxX - minX),\n            height: Math.max(1, maxY - minY),\n        };\n    }\n    /**\n     * Move a bounding box without recalculating it.\n     * @param bounds\n     * @param delta\n     * @returns\n     */\n    static translateBounds(bounds, delta) {\n        return {\n            minX: bounds.minX + delta[0],\n            minY: bounds.minY + delta[1],\n            maxX: bounds.maxX + delta[0],\n            maxY: bounds.maxY + delta[1],\n            width: bounds.width,\n            height: bounds.height,\n        };\n    }\n    /**\n     * Rotate a bounding box.\n     * @param bounds\n     * @param center\n     * @param rotation\n     */\n    static rotateBounds(bounds, center, rotation) {\n        const [minX, minY] = Vec.rotWith([bounds.minX, bounds.minY], center, rotation);\n        const [maxX, maxY] = Vec.rotWith([bounds.maxX, bounds.maxY], center, rotation);\n        return {\n            minX,\n            minY,\n            maxX,\n            maxY,\n            width: bounds.width,\n            height: bounds.height,\n        };\n    }\n    /**\n     * Get the rotated bounds of an ellipse.\n     * @param x\n     * @param y\n     * @param rx\n     * @param ry\n     * @param rotation\n     */\n    static getRotatedEllipseBounds(x, y, rx, ry, rotation = 0) {\n        const c = Math.cos(rotation);\n        const s = Math.sin(rotation);\n        const w = Math.hypot(rx * c, ry * s);\n        const h = Math.hypot(rx * s, ry * c);\n        return {\n            minX: x + rx - w,\n            minY: y + ry - h,\n            maxX: x + rx + w,\n            maxY: y + ry + h,\n            width: w * 2,\n            height: h * 2,\n        };\n    }\n    /**\n     * Get a bounding box that includes two bounding boxes.\n     * @param a Bounding box\n     * @param b Bounding box\n     * @returns\n     */\n    static getExpandedBounds(a, b) {\n        const minX = Math.min(a.minX, b.minX);\n        const minY = Math.min(a.minY, b.minY);\n        const maxX = Math.max(a.maxX, b.maxX);\n        const maxY = Math.max(a.maxY, b.maxY);\n        const width = Math.abs(maxX - minX);\n        const height = Math.abs(maxY - minY);\n        return { minX, minY, maxX, maxY, width, height };\n    }\n    /**\n     * Get the common bounds of a group of bounds.\n     * @returns\n     */\n    static getCommonBounds(bounds) {\n        if (bounds.length < 2)\n            return bounds[0];\n        let result = bounds[0];\n        for (let i = 1; i < bounds.length; i++) {\n            result = Utils.getExpandedBounds(result, bounds[i]);\n        }\n        return result;\n    }\n    static getRotatedCorners(b, rotation = 0) {\n        const center = [b.minX + b.width / 2, b.minY + b.height / 2];\n        return [\n            [b.minX, b.minY],\n            [b.maxX, b.minY],\n            [b.maxX, b.maxY],\n            [b.minX, b.maxY],\n        ].map(point => Vec.rotWith(point, center, rotation));\n    }\n    static getTransformedBoundingBox(bounds, handle, delta, rotation = 0, isAspectRatioLocked = false) {\n        // Create top left and bottom right corners.\n        const [ax0, ay0] = [bounds.minX, bounds.minY];\n        const [ax1, ay1] = [bounds.maxX, bounds.maxY];\n        // Create a second set of corners for the new box.\n        let [bx0, by0] = [bounds.minX, bounds.minY];\n        let [bx1, by1] = [bounds.maxX, bounds.maxY];\n        // If the drag is on the center, just translate the bounds.\n        if (handle === 'center') {\n            return {\n                minX: bx0 + delta[0],\n                minY: by0 + delta[1],\n                maxX: bx1 + delta[0],\n                maxY: by1 + delta[1],\n                width: bx1 - bx0,\n                height: by1 - by0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        // Counter rotate the delta. This lets us make changes as if\n        // the (possibly rotated) boxes were axis aligned.\n        const [dx, dy] = Vec.rot(delta, -rotation);\n        /*\n    1. Delta\n    \n    Use the delta to adjust the new box by changing its corners.\n    The dragging handle (corner or edge) will determine which\n    corners should change.\n    */\n        switch (handle) {\n            case TLBoundsEdge.Top:\n            case TLBoundsCorner.TopLeft:\n            case TLBoundsCorner.TopRight: {\n                by0 += dy;\n                break;\n            }\n            case TLBoundsEdge.Bottom:\n            case TLBoundsCorner.BottomLeft:\n            case TLBoundsCorner.BottomRight: {\n                by1 += dy;\n                break;\n            }\n        }\n        switch (handle) {\n            case TLBoundsEdge.Left:\n            case TLBoundsCorner.TopLeft:\n            case TLBoundsCorner.BottomLeft: {\n                bx0 += dx;\n                break;\n            }\n            case TLBoundsEdge.Right:\n            case TLBoundsCorner.TopRight:\n            case TLBoundsCorner.BottomRight: {\n                bx1 += dx;\n                break;\n            }\n        }\n        const aw = ax1 - ax0;\n        const ah = ay1 - ay0;\n        const scaleX = (bx1 - bx0) / aw;\n        const scaleY = (by1 - by0) / ah;\n        const flipX = scaleX < 0;\n        const flipY = scaleY < 0;\n        const bw = Math.abs(bx1 - bx0);\n        const bh = Math.abs(by1 - by0);\n        /*\n    2. Aspect ratio\n    \n    If the aspect ratio is locked, adjust the corners so that the\n    new box's aspect ratio matches the original aspect ratio.\n    */\n        if (isAspectRatioLocked) {\n            const ar = aw / ah;\n            const isTall = ar < bw / bh;\n            const tw = bw * (scaleY < 0 ? 1 : -1) * (1 / ar);\n            const th = bh * (scaleX < 0 ? 1 : -1) * ar;\n            switch (handle) {\n                case TLBoundsCorner.TopLeft: {\n                    if (isTall)\n                        by0 = by1 + tw;\n                    else\n                        bx0 = bx1 + th;\n                    break;\n                }\n                case TLBoundsCorner.TopRight: {\n                    if (isTall)\n                        by0 = by1 + tw;\n                    else\n                        bx1 = bx0 - th;\n                    break;\n                }\n                case TLBoundsCorner.BottomRight: {\n                    if (isTall)\n                        by1 = by0 - tw;\n                    else\n                        bx1 = bx0 - th;\n                    break;\n                }\n                case TLBoundsCorner.BottomLeft: {\n                    if (isTall)\n                        by1 = by0 - tw;\n                    else\n                        bx0 = bx1 + th;\n                    break;\n                }\n                case TLBoundsEdge.Bottom:\n                case TLBoundsEdge.Top: {\n                    const m = (bx0 + bx1) / 2;\n                    const w = bh * ar;\n                    bx0 = m - w / 2;\n                    bx1 = m + w / 2;\n                    break;\n                }\n                case TLBoundsEdge.Left:\n                case TLBoundsEdge.Right: {\n                    const m = (by0 + by1) / 2;\n                    const h = bw / ar;\n                    by0 = m - h / 2;\n                    by1 = m + h / 2;\n                    break;\n                }\n            }\n        }\n        /*\n    3. Rotation\n    \n    If the bounds are rotated, get a Vector from the rotated anchor\n    corner in the initial bounds to the rotated anchor corner in the\n    result's bounds. Subtract this Vector from the result's corners,\n    so that the two anchor points (initial and result) will be equal.\n    */\n        if (rotation % (Math.PI * 2) !== 0) {\n            let cv = [0, 0];\n            const c0 = Vec.med([ax0, ay0], [ax1, ay1]);\n            const c1 = Vec.med([bx0, by0], [bx1, by1]);\n            switch (handle) {\n                case TLBoundsCorner.TopLeft: {\n                    cv = Vec.sub(Vec.rotWith([bx1, by1], c1, rotation), Vec.rotWith([ax1, ay1], c0, rotation));\n                    break;\n                }\n                case TLBoundsCorner.TopRight: {\n                    cv = Vec.sub(Vec.rotWith([bx0, by1], c1, rotation), Vec.rotWith([ax0, ay1], c0, rotation));\n                    break;\n                }\n                case TLBoundsCorner.BottomRight: {\n                    cv = Vec.sub(Vec.rotWith([bx0, by0], c1, rotation), Vec.rotWith([ax0, ay0], c0, rotation));\n                    break;\n                }\n                case TLBoundsCorner.BottomLeft: {\n                    cv = Vec.sub(Vec.rotWith([bx1, by0], c1, rotation), Vec.rotWith([ax1, ay0], c0, rotation));\n                    break;\n                }\n                case TLBoundsEdge.Top: {\n                    cv = Vec.sub(Vec.rotWith(Vec.med([bx0, by1], [bx1, by1]), c1, rotation), Vec.rotWith(Vec.med([ax0, ay1], [ax1, ay1]), c0, rotation));\n                    break;\n                }\n                case TLBoundsEdge.Left: {\n                    cv = Vec.sub(Vec.rotWith(Vec.med([bx1, by0], [bx1, by1]), c1, rotation), Vec.rotWith(Vec.med([ax1, ay0], [ax1, ay1]), c0, rotation));\n                    break;\n                }\n                case TLBoundsEdge.Bottom: {\n                    cv = Vec.sub(Vec.rotWith(Vec.med([bx0, by0], [bx1, by0]), c1, rotation), Vec.rotWith(Vec.med([ax0, ay0], [ax1, ay0]), c0, rotation));\n                    break;\n                }\n                case TLBoundsEdge.Right: {\n                    cv = Vec.sub(Vec.rotWith(Vec.med([bx0, by0], [bx0, by1]), c1, rotation), Vec.rotWith(Vec.med([ax0, ay0], [ax0, ay1]), c0, rotation));\n                    break;\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            [bx0, by0] = Vec.sub([bx0, by0], cv);\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            [bx1, by1] = Vec.sub([bx1, by1], cv);\n        }\n        /*\n    4. Flips\n    \n    If the axes are flipped (e.g. if the right edge has been dragged\n    left past the initial left edge) then swap points on that axis.\n    */\n        if (bx1 < bx0) {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            [bx1, bx0] = [bx0, bx1];\n        }\n        if (by1 < by0) {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            [by1, by0] = [by0, by1];\n        }\n        return {\n            minX: bx0,\n            minY: by0,\n            maxX: bx1,\n            maxY: by1,\n            width: bx1 - bx0,\n            height: by1 - by0,\n            scaleX: ((bx1 - bx0) / (ax1 - ax0 || 1)) * (flipX ? -1 : 1),\n            scaleY: ((by1 - by0) / (ay1 - ay0 || 1)) * (flipY ? -1 : 1),\n        };\n    }\n    static getTransformAnchor(type, isFlippedX, isFlippedY) {\n        let anchor = type;\n        // Change corner anchors if flipped\n        switch (type) {\n            case TLBoundsCorner.TopLeft: {\n                if (isFlippedX && isFlippedY) {\n                    anchor = TLBoundsCorner.BottomRight;\n                }\n                else if (isFlippedX) {\n                    anchor = TLBoundsCorner.TopRight;\n                }\n                else if (isFlippedY) {\n                    anchor = TLBoundsCorner.BottomLeft;\n                }\n                else {\n                    anchor = TLBoundsCorner.BottomRight;\n                }\n                break;\n            }\n            case TLBoundsCorner.TopRight: {\n                if (isFlippedX && isFlippedY) {\n                    anchor = TLBoundsCorner.BottomLeft;\n                }\n                else if (isFlippedX) {\n                    anchor = TLBoundsCorner.TopLeft;\n                }\n                else if (isFlippedY) {\n                    anchor = TLBoundsCorner.BottomRight;\n                }\n                else {\n                    anchor = TLBoundsCorner.BottomLeft;\n                }\n                break;\n            }\n            case TLBoundsCorner.BottomRight: {\n                if (isFlippedX && isFlippedY) {\n                    anchor = TLBoundsCorner.TopLeft;\n                }\n                else if (isFlippedX) {\n                    anchor = TLBoundsCorner.BottomLeft;\n                }\n                else if (isFlippedY) {\n                    anchor = TLBoundsCorner.TopRight;\n                }\n                else {\n                    anchor = TLBoundsCorner.TopLeft;\n                }\n                break;\n            }\n            case TLBoundsCorner.BottomLeft: {\n                if (isFlippedX && isFlippedY) {\n                    anchor = TLBoundsCorner.TopRight;\n                }\n                else if (isFlippedX) {\n                    anchor = TLBoundsCorner.BottomRight;\n                }\n                else if (isFlippedY) {\n                    anchor = TLBoundsCorner.TopLeft;\n                }\n                else {\n                    anchor = TLBoundsCorner.TopRight;\n                }\n                break;\n            }\n        }\n        return anchor;\n    }\n    /**\n     * Get the relative bounds (usually a child) within a transformed bounding box.\n     * @param bounds\n     * @param initialBounds\n     * @param initialShapeBounds\n     * @param isFlippedX\n     * @param isFlippedY\n     */\n    static getRelativeTransformedBoundingBox(bounds, initialBounds, initialShapeBounds, isFlippedX, isFlippedY) {\n        const nx = (isFlippedX\n            ? initialBounds.maxX - initialShapeBounds.maxX\n            : initialShapeBounds.minX - initialBounds.minX) / initialBounds.width;\n        const ny = (isFlippedY\n            ? initialBounds.maxY - initialShapeBounds.maxY\n            : initialShapeBounds.minY - initialBounds.minY) / initialBounds.height;\n        const nw = initialShapeBounds.width / initialBounds.width;\n        const nh = initialShapeBounds.height / initialBounds.height;\n        const minX = bounds.minX + bounds.width * nx;\n        const minY = bounds.minY + bounds.height * ny;\n        const width = bounds.width * nw;\n        const height = bounds.height * nh;\n        return {\n            minX,\n            minY,\n            maxX: minX + width,\n            maxY: minY + height,\n            width,\n            height,\n        };\n    }\n    /**\n     * Get the size of a rotated box.\n     * @param size : ;\n     * @param rotation\n     */\n    static getRotatedSize(size, rotation) {\n        const center = Vec.div(size, 2);\n        const points = [[0, 0], [size[0], 0], size, [0, size[1]]].map(point => Vec.rotWith(point, center, rotation));\n        const bounds = Utils.getBoundsFromPoints(points);\n        return [bounds.width, bounds.height];\n    }\n    /**\n     * Get the center of a bounding box.\n     * @param bounds\n     */\n    static getBoundsCenter(bounds) {\n        return [bounds.minX + bounds.width / 2, bounds.minY + bounds.height / 2];\n    }\n    /**\n     * Get a bounding box with a midX and midY.\n     * @param bounds\n     */\n    static getBoundsWithCenter(bounds) {\n        const center = Utils.getBoundsCenter(bounds);\n        return {\n            ...bounds,\n            midX: center[0],\n            midY: center[1],\n        };\n    }\n    /**\n     * Given a set of points, get their common [minX, minY].\n     * @param points\n     */\n    static getCommonTopLeft(points) {\n        const min = [Infinity, Infinity];\n        points.forEach(point => {\n            min[0] = Math.min(min[0], point[0]);\n            min[1] = Math.min(min[1], point[1]);\n        });\n        return min;\n    }\n    /**\n     * Get a value from a cache (a WeakMap), filling the value if it is not present.\n     *\n     * ### Example\n     *\n     *```ts\n     * getFromCache(boundsCache, shape, (cache) => cache.set(shape, \"value\"))\n     *```\n     */\n    static getFromCache(cache, item, getNext) {\n        let value = cache.get(item);\n        if (value === undefined) {\n            cache.set(item, getNext());\n            value = cache.get(item);\n            if (value === undefined) {\n                throw Error('Cache did not include item!');\n            }\n        }\n        return value;\n    }\n    /**\n     * Get a unique string id.\n     */\n    static uniqueId(a = '') {\n        return a\n            ? /* eslint-disable no-bitwise */\n                ((Number(a) ^ (Math.random() * 16)) >> (Number(a) / 4)).toString(16)\n            : `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`.replace(/[018]/g, Utils.uniqueId);\n    }\n    /**\n     * Shuffle the contents of an array.\n     * @param arr\n     * @param offset\n     */\n    static rotateArray(arr, offset) {\n        return arr.map((_, i) => arr[(i + offset) % arr.length]);\n    }\n    /**\n     * Debounce a function.\n     */\n    static debounce(fn, ms = 0) {\n        let timeoutId;\n        return function (...args) {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => fn.apply(args), ms);\n        };\n    }\n    /**\n     * Turn an array of points into a path of quadratic curves.\n     *\n     * @param points The points returned from perfect-freehand\n     * @param closed Whether the stroke is closed\n     */\n    static getSvgPathFromStroke(points, closed = true) {\n        const len = points.length;\n        if (len < 4) {\n            return ``;\n        }\n        let a = points[0];\n        let b = points[1];\n        const c = points[2];\n        let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(2)},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(b[1], c[1]).toFixed(2)} T`;\n        for (let i = 2, max = len - 1; i < max; i++) {\n            a = points[i];\n            b = points[i + 1];\n            result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(2)} `;\n        }\n        if (closed) {\n            result += 'Z';\n        }\n        return result;\n    }\n    /**\n     * Turn an array of stroke points into a path of quadratic curves.\n     * @param points - the stroke points returned from perfect-freehand\n     */\n    static getSvgPathFromStrokePoints(points, closed = false) {\n        const len = points.length;\n        if (len < 4) {\n            return ``;\n        }\n        let a = points[0].point;\n        let b = points[1].point;\n        const c = points[2].point;\n        let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(2)},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(b[1], c[1]).toFixed(2)} T`;\n        for (let i = 2, max = len - 1; i < max; i++) {\n            a = points[i].point;\n            b = points[i + 1].point;\n            result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(2)} `;\n        }\n        if (closed) {\n            result += 'Z';\n        }\n        return result;\n    }\n    /* -------------------------------------------------- */\n    /*                   Browser and DOM                  */\n    /* -------------------------------------------------- */\n    /**\n     * Get balanced dash-strokearray and dash-strokeoffset properties for a path of a given length.\n     * @param length The length of the path.\n     * @param strokeWidth The shape's stroke-width property.\n     * @param style The stroke's style: \"dashed\" or \"dotted\" (default \"dashed\").\n     * @param snap An interval for dashes (e.g. 4 will produce arrays with 4, 8, 16, etc dashes).\n     * @param outset Whether to outset the stroke (default false).\n     * @param lengthRatio The ratio to apply to dashed lines (default 2).\n     */\n    static getPerfectDashProps(length, strokeWidth, style, snap = 1, outset = true, lengthRatio = 2) {\n        let dashLength;\n        let strokeDashoffset;\n        let ratio;\n        if (style.toLowerCase() === 'dashed') {\n            dashLength = strokeWidth * lengthRatio;\n            ratio = 1;\n            strokeDashoffset = outset ? (dashLength / 2).toString() : '0';\n        }\n        else if (style.toLowerCase() === 'dotted') {\n            dashLength = strokeWidth / 100;\n            ratio = 100;\n            strokeDashoffset = '0';\n        }\n        else {\n            return {\n                strokeDasharray: 'none',\n                strokeDashoffset: 'none',\n            };\n        }\n        let dashes = Math.floor(length / dashLength / (2 * ratio));\n        dashes -= dashes % snap;\n        dashes = Math.max(dashes, 4);\n        const gapLength = Math.max(dashLength, (length - dashes * dashLength) / (outset ? dashes : dashes - 1));\n        return {\n            strokeDasharray: [dashLength, gapLength].join(' '),\n            strokeDashoffset,\n        };\n    }\n    static isMobileSafari() {\n        if (typeof window === 'undefined')\n            return false;\n        const ua = window.navigator.userAgent;\n        const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n        const webkit = !!ua.match(/WebKit/i);\n        return iOS && webkit && !ua.match(/CriOS/i);\n    }\n    // via https://github.com/bameyrick/throttle-typescript\n    static throttle(func, limit) {\n        let inThrottle;\n        let lastResult;\n        return function (...args) {\n            if (!inThrottle) {\n                inThrottle = true;\n                setTimeout(() => (inThrottle = false), limit);\n                // @ts-ignore\n                lastResult = func(...args);\n            }\n            return lastResult;\n        };\n    }\n    /**\n     * Find whether the current display is a touch display.\n     */\n    // static isTouchDisplay(): boolean {\n    //   return (\n    //     'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0\n    //   )\n    // }\n    /**\n     * Find whether the current device is a Mac / iOS / iPadOS.\n     */\n    static isDarwin() {\n        return /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n    }\n    /**\n     * Get whether an event is command (mac) or control (pc).\n     * @param e\n     */\n    static metaKey(e) {\n        return Utils.isDarwin() ? e.metaKey : e.ctrlKey;\n    }\n    /**\n     * Reversible pseudo hash.\n     * @param str string\n     */\n    static lns(str) {\n        const result = str.split('');\n        result.push(...result.splice(0, Math.round(result.length / 5)));\n        result.push(...result.splice(0, Math.round(result.length / 4)));\n        result.push(...result.splice(0, Math.round(result.length / 3)));\n        result.push(...result.splice(0, Math.round(result.length / 2)));\n        return result\n            .reverse()\n            .map(n => (+n ? (+n < 5 ? 5 + +n : +n > 5 ? +n - 5 : n) : n))\n            .join('');\n    }\n}\nUtils.getSnapPoints = (bounds, others, snapDistance) => {\n    const A = { ...bounds };\n    const offset = [0, 0];\n    const snapLines = [];\n    // 1.\n    // Find the snap points for the x and y axes\n    const snaps = {\n        [SnapPoints.minX]: { id: SnapPoints.minX, isSnapped: false },\n        [SnapPoints.midX]: { id: SnapPoints.midX, isSnapped: false },\n        [SnapPoints.maxX]: { id: SnapPoints.maxX, isSnapped: false },\n        [SnapPoints.minY]: { id: SnapPoints.minY, isSnapped: false },\n        [SnapPoints.midY]: { id: SnapPoints.midY, isSnapped: false },\n        [SnapPoints.maxY]: { id: SnapPoints.maxY, isSnapped: false },\n    };\n    const xs = [SnapPoints.midX, SnapPoints.minX, SnapPoints.maxX];\n    const ys = [SnapPoints.midY, SnapPoints.minY, SnapPoints.maxY];\n    const snapResults = others.map(B => {\n        const rx = xs.flatMap((f, i) => xs.map((t, k) => {\n            const gap = A[f] - B[t];\n            const distance = Math.abs(gap);\n            return {\n                f,\n                t,\n                gap,\n                distance,\n                isCareful: i === 0 || i + k === 3,\n            };\n        }));\n        const ry = ys.flatMap((f, i) => ys.map((t, k) => {\n            const gap = A[f] - B[t];\n            const distance = Math.abs(gap);\n            return {\n                f,\n                t,\n                gap,\n                distance,\n                isCareful: i === 0 || i + k === 3,\n            };\n        }));\n        return [B, rx, ry];\n    });\n    let gapX = Infinity;\n    let gapY = Infinity;\n    let minX = Infinity;\n    let minY = Infinity;\n    snapResults.forEach(([_, rx, ry]) => {\n        rx.forEach(r => {\n            if (r.distance < snapDistance && r.distance < minX) {\n                minX = r.distance;\n                gapX = r.gap;\n            }\n        });\n        ry.forEach(r => {\n            if (r.distance < snapDistance && r.distance < minY) {\n                minY = r.distance;\n                gapY = r.gap;\n            }\n        });\n    });\n    // Check for other shapes with the same gap\n    snapResults.forEach(([B, rx, ry]) => {\n        if (gapX !== Infinity) {\n            rx.forEach(r => {\n                if (Math.abs(r.gap - gapX) < 2) {\n                    snaps[r.f] = {\n                        ...snaps[r.f],\n                        isSnapped: true,\n                        to: B[r.t],\n                        B,\n                        distance: r.distance,\n                    };\n                }\n            });\n        }\n        if (gapY !== Infinity) {\n            ry.forEach(r => {\n                if (Math.abs(r.gap - gapY) < 2) {\n                    snaps[r.f] = {\n                        ...snaps[r.f],\n                        isSnapped: true,\n                        to: B[r.t],\n                        B,\n                        distance: r.distance,\n                    };\n                }\n            });\n        }\n    });\n    offset[0] = gapX === Infinity ? 0 : gapX;\n    offset[1] = gapY === Infinity ? 0 : gapY;\n    A.minX -= offset[0];\n    A.midX -= offset[0];\n    A.maxX -= offset[0];\n    A.minY -= offset[1];\n    A.midY -= offset[1];\n    A.maxY -= offset[1];\n    // 2.\n    // Calculate snap lines based on adjusted bounds A. This has\n    // to happen after we've adjusted both dimensions x and y of\n    // the bounds A!\n    xs.forEach(from => {\n        const snap = snaps[from];\n        if (!snap.isSnapped)\n            return;\n        const { id, B } = snap;\n        const x = A[id];\n        // If A is snapped at its center, show include only the midY;\n        // otherwise, include both its minY and maxY.\n        snapLines.push(id === SnapPoints.minX\n            ? [\n                [x, A.midY],\n                [x, B.minY],\n                [x, B.maxY],\n            ]\n            : [\n                [x, A.minY],\n                [x, A.maxY],\n                [x, B.minY],\n                [x, B.maxY],\n            ]);\n    });\n    ys.forEach(from => {\n        const snap = snaps[from];\n        if (!snap.isSnapped)\n            return;\n        const { id, B } = snap;\n        const y = A[id];\n        snapLines.push(id === SnapPoints.midY\n            ? [\n                [A.midX, y],\n                [B.minX, y],\n                [B.maxX, y],\n            ]\n            : [\n                [A.minX, y],\n                [A.maxX, y],\n                [B.minX, y],\n                [B.maxX, y],\n            ]);\n    });\n    return { offset, snapLines };\n};\n/* -------------------------------------------------- */\n/*                Lists and Collections               */\n/* -------------------------------------------------- */\nUtils.deepMerge = (target, patch) => {\n    const result = { ...target };\n    const entries = Object.entries(patch);\n    for (const [key, value] of entries)\n        result[key] =\n            value === Object(value) && !Array.isArray(value)\n                ? Utils.deepMerge(result[key], value)\n                : value;\n    return result;\n};\nexport { Utils };\nexport default Utils;\nfunction average(a, b) {\n    return (a + b) / 2;\n}\n//# sourceMappingURL=tl-utils.js.map","export function serializeXYWH(x, y, w, h) {\n    return `[${x},${y},${w},${h}]`;\n}\nexport function deserializeXYWH(xywh) {\n    return JSON.parse(xywh);\n}\nexport function setXYWH(element, bound) {\n    element.x = bound.x;\n    element.y = bound.y;\n    element.w = bound.w;\n    element.h = bound.h;\n}\n//# sourceMappingURL=xywh.js.map","import { Utils } from './tl-utils.js';\nimport { deserializeXYWH, serializeXYWH } from './xywh.js';\nexport class Bound {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    serialize() {\n        return serializeXYWH(this.x, this.y, this.w, this.h);\n    }\n    static deserialize(s) {\n        const [x, y, w, h] = deserializeXYWH(s);\n        return new Bound(x, y, w, h);\n    }\n}\nfunction getExpandedBound(a, b) {\n    const minX = Math.min(a.x, b.x);\n    const minY = Math.min(a.y, b.y);\n    const maxX = Math.max(a.x + a.w, b.x + b.w);\n    const maxY = Math.max(a.y + a.h, b.y + b.h);\n    const width = Math.abs(maxX - minX);\n    const height = Math.abs(maxY - minY);\n    return {\n        x: minX,\n        y: minY,\n        w: width,\n        h: height,\n    };\n}\nexport function getCommonBound(bounds) {\n    if (!bounds.length) {\n        return null;\n    }\n    if (bounds.length === 1) {\n        const { x, y, w, h } = bounds[0];\n        return new Bound(x, y, w, h);\n    }\n    let result = bounds[0];\n    for (let i = 1; i < bounds.length; i++) {\n        result = getExpandedBound(result, bounds[i]);\n    }\n    return new Bound(result.x, result.y, result.w, result.h);\n}\n/**\n * Get whether A contains B\n */\nexport function contains(a, b) {\n    return (a.x <= b.x && a.x + a.w >= b.x + b.w && a.y <= b.y && a.y + a.h >= b.y + b.h);\n}\nexport function getBoundFromPoints(points) {\n    const { minX, minY, width, height } = Utils.getBoundsFromPoints(points);\n    return new Bound(minX, minY, width, height);\n}\nexport function inflateBound(bound, delta) {\n    const half = delta / 2;\n    const newBound = new Bound(bound.x - half, bound.y - half, bound.w + delta, bound.h + delta);\n    if (newBound.w <= 0 || newBound.h <= 0) {\n        throw new Error('Invalid delta range or bound size.');\n    }\n    return newBound;\n}\nexport function transformPointsToNewBound(points, oldBound, oldMargin, newBound, newMargin) {\n    const wholeOldMargin = oldMargin * 2;\n    const wholeNewMargin = newMargin * 2;\n    const oldW = Math.max(oldBound.w - wholeOldMargin, 1);\n    const oldH = Math.max(oldBound.h - wholeOldMargin, 1);\n    const newW = Math.max(newBound.w - wholeNewMargin, 1);\n    const newH = Math.max(newBound.h - wholeNewMargin, 1);\n    const transformedPoints = points.map(p => {\n        return {\n            ...p,\n            x: newW * ((p.x - oldMargin) / oldW) + newMargin,\n            y: newH * ((p.y - oldMargin) / oldH) + newMargin,\n        };\n    });\n    return {\n        points: transformedPoints,\n        bound: new Bound(newBound.x, newBound.y, newW + wholeNewMargin, newH + wholeNewMargin),\n    };\n}\n//# sourceMappingURL=bound.js.map","export function isPointIn(a, x, y) {\n    return a.x <= x && x <= a.x + a.w && a.y <= y && y <= a.y + a.h;\n}\nexport function intersects(a, b) {\n    return (a.x < b.x + b.w && a.x + a.w > b.x && a.y < b.y + b.h && a.y + a.h > b.y);\n}\n//# sourceMappingURL=hit-utils.js.map","import { isPointIn } from '../utils/hit-utils.js';\nimport { deserializeXYWH } from '../utils/xywh.js';\nexport class SurfaceElement {\n    get display() {\n        return this._display;\n    }\n    setDisplay(display) {\n        this._display = display;\n        this.renderer?.removeElement(this);\n        this.renderer?.addElement(this);\n    }\n    constructor(yMap, surface, data) {\n        this.renderer = null;\n        this.surface = null;\n        this.computedValue = v => v;\n        this._display = true;\n        this._onMap = () => {\n            this.renderer?.removeElement(this);\n            this.renderer?.addElement(this);\n        };\n        if (!yMap.doc) {\n            throw new Error('yMap must be bound to a Y.Doc');\n        }\n        this.yMap = yMap;\n        if (data) {\n            for (const key in data) {\n                this.yMap.set(key, data[key]);\n            }\n        }\n        this.surface = surface;\n    }\n    get id() {\n        const id = this.yMap.get('id');\n        return id;\n    }\n    get index() {\n        const index = this.yMap.get('index');\n        return index;\n    }\n    get type() {\n        const type = this.yMap.get('type');\n        return type;\n    }\n    get xywh() {\n        const xywh = this.yMap.get('xywh');\n        return xywh;\n    }\n    get x() {\n        const [x] = deserializeXYWH(this.xywh);\n        return x;\n    }\n    get y() {\n        const [, y] = deserializeXYWH(this.xywh);\n        return y;\n    }\n    get w() {\n        const [, , w] = deserializeXYWH(this.xywh);\n        return w;\n    }\n    get h() {\n        const [, , , h] = deserializeXYWH(this.xywh);\n        return h;\n    }\n    get seed() {\n        const seed = this.yMap.get('seed');\n        return seed;\n    }\n    get minWidth() {\n        return this.w;\n    }\n    get minHeight() {\n        return this.h;\n    }\n    applyUpdate(updates) {\n        for (const key in updates) {\n            this.yMap.set(key, updates[key]);\n        }\n    }\n    serialize() {\n        return this.yMap.toJSON();\n    }\n    hitTest(x, y, options) {\n        return isPointIn(this, x, y);\n    }\n    mount(renderer) {\n        this.renderer = renderer;\n        this.renderer.addElement(this);\n        this.yMap.observeDeep(this._onMap);\n    }\n    unmount() {\n        this.yMap.unobserveDeep(this._onMap);\n        this.renderer?.removeElement(this);\n        this.renderer = null;\n    }\n    render(ctx, rc) {\n        return;\n    }\n}\n//# sourceMappingURL=surface-element.js.map","import { getStroke } from '../../perfect-freehand/getStroke.js';\nimport { Bound, getBoundFromPoints, inflateBound, transformPointsToNewBound, } from '../../utils/bound.js';\nimport { Utils } from '../../utils/tl-utils.js';\nimport { SurfaceElement } from '../surface-element.js';\nfunction getSolidStrokePoints(points, lineWidth) {\n    return getStroke(points, {\n        size: lineWidth,\n        thinning: 0.6,\n        streamline: 0.5,\n        smoothing: 0.5,\n        easing: t => Math.sin((t * Math.PI) / 2),\n        simulatePressure: true,\n    });\n}\nexport class BrushElement extends SurfaceElement {\n    /* Brush mouse coords relative to left-top corner */\n    get points() {\n        const points = this.yMap.get('points');\n        return points;\n    }\n    get color() {\n        const color = this.yMap.get('color');\n        return color;\n    }\n    get lineWidth() {\n        const lineWidth = this.yMap.get('lineWidth');\n        return lineWidth;\n    }\n    render(ctx) {\n        const stroke = getSolidStrokePoints(this.points, this.lineWidth);\n        const commands = Utils.getSvgPathFromStroke(stroke);\n        const path = new Path2D(commands);\n        ctx.fillStyle = this.computedValue(this.color);\n        ctx.fill(path);\n    }\n    applyUpdate(props) {\n        const updates = { ...props };\n        const { points, xywh } = props;\n        if (points?.length) {\n            const lineWidth = this.lineWidth;\n            const bound = getBoundFromPoints(points);\n            const boundWidthLineWidth = inflateBound(bound, lineWidth);\n            const relativePoints = points.map(([x, y]) => {\n                return [x - boundWidthLineWidth.x, y - boundWidthLineWidth.y];\n            });\n            updates.points = relativePoints;\n            updates.xywh = boundWidthLineWidth.serialize();\n        }\n        if (xywh) {\n            const bound = Bound.deserialize(xywh);\n            const { lineWidth } = this;\n            const transformed = transformPointsToNewBound(this.points.map(([x, y]) => ({ x, y })), this, lineWidth / 2, bound, lineWidth / 2);\n            updates.points = transformed.points.map(p => [p.x, p.y]);\n            updates.xywh = transformed.bound.serialize();\n        }\n        if (props.lineWidth && props.lineWidth !== this.lineWidth) {\n            const bound = updates.xywh ? Bound.deserialize(updates.xywh) : this;\n            const points = updates.points ?? this.points;\n            const transformed = transformPointsToNewBound(points.map(([x, y]) => ({ x, y })), bound, this.lineWidth / 2, inflateBound(bound, props.lineWidth - this.lineWidth), props.lineWidth / 2);\n            updates.points = transformed.points.map(p => [p.x, p.y]);\n            updates.xywh = transformed.bound.serialize();\n        }\n        for (const key in updates) {\n            this.yMap.set(key, updates[key]);\n        }\n    }\n}\n//# sourceMappingURL=brush-element.js.map","export const BrushElementDefaultProps = {\n    type: 'brush',\n    xywh: '[0,0,0,0]',\n    points: [],\n    color: '#000000',\n    lineWidth: 4,\n};\n//# sourceMappingURL=constants.js.map","import { getBoundFromPoints } from '../../utils/bound.js';\nexport function getArrowPoints([startX, startY], [endX, endY], arrowSize = 10) {\n    const dx = endX - startX;\n    const dy = endY - startY;\n    const angle = Math.atan2(dy, dx);\n    const oneSide = [\n        endX - arrowSize * Math.cos(angle - Math.PI / 10),\n        endY - arrowSize * Math.sin(angle - Math.PI / 10),\n    ];\n    const anotherSide = [\n        endX - arrowSize * Math.cos(angle + Math.PI / 10),\n        endY - arrowSize * Math.sin(angle + Math.PI / 10),\n    ];\n    return {\n        sides: [oneSide, anotherSide],\n        start: [startX, startY],\n        end: [endX, endY],\n    };\n}\nexport function getConnectorPointsBound(controllers) {\n    const last = controllers[controllers.length - 1];\n    const secondToLast = controllers[controllers.length - 2];\n    const arrowPoints = getArrowPoints([last.x, last.y], [secondToLast.x, secondToLast.y]);\n    const points = arrowPoints.sides.concat(controllers.map(c => [c.x, c.y]));\n    return getBoundFromPoints(points);\n}\n//# sourceMappingURL=utils.js.map","import { StrokeStyle } from '../../consts.js';\nimport { Bound, inflateBound, transformPointsToNewBound, } from '../../utils/bound.js';\nimport { SurfaceElement } from '../surface-element.js';\nimport { ConnectorMode } from './types.js';\nimport { getArrowPoints, getConnectorPointsBound } from './utils.js';\nexport class ConnectorElement extends SurfaceElement {\n    get mode() {\n        return this.yMap.get('mode');\n    }\n    get lineWidth() {\n        return this.yMap.get('lineWidth');\n    }\n    get color() {\n        return this.yMap.get('color');\n    }\n    get strokeStyle() {\n        return this.yMap.get('strokeStyle');\n    }\n    get roughness() {\n        return this.yMap.get('roughness') ?? 2;\n    }\n    get startElement() {\n        return this.yMap.get('startElement');\n    }\n    get endElement() {\n        return this.yMap.get('endElement');\n    }\n    get controllers() {\n        return this.yMap.get('controllers');\n    }\n    render(ctx, rc) {\n        const { seed, strokeStyle, color, roughness, lineWidth, controllers } = this;\n        const realStrokeColor = this.computedValue(color);\n        if (this.mode === ConnectorMode.Orthogonal) {\n            rc.linearPath(controllers.map(controller => [controller.x, controller.y]), {\n                seed,\n                roughness,\n                strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,\n                stroke: realStrokeColor,\n                strokeWidth: lineWidth,\n            });\n        }\n        else {\n            rc.linearPath([\n                [controllers[0].x, controllers[0].y],\n                [\n                    controllers[controllers.length - 1].x,\n                    controllers[controllers.length - 1].y,\n                ],\n            ], {\n                seed,\n                roughness,\n                strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,\n                stroke: realStrokeColor,\n                strokeWidth: lineWidth,\n            });\n        }\n        const last = this.controllers[this.controllers.length - 1];\n        const secondToLast = this.controllers[this.controllers.length - 2];\n        //TODO: Adjust arrow direction\n        const { sides, end } = getArrowPoints([secondToLast.x, secondToLast.y], [last.x, last.y], 35);\n        rc.linearPath([\n            [sides[0][0], sides[0][1]],\n            [end[0], end[1]],\n            [sides[1][0], sides[1][1]],\n        ], {\n            seed,\n            roughness,\n            strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,\n            stroke: realStrokeColor,\n            strokeWidth: lineWidth,\n        });\n    }\n    applyUpdate(props) {\n        const updates = { ...props };\n        const { controllers, xywh } = props;\n        if (controllers?.length) {\n            const lineWidth = props.lineWidth ?? this.lineWidth;\n            const bound = getConnectorPointsBound(controllers);\n            const boundWidthLineWidth = inflateBound(bound, lineWidth);\n            const relativeControllers = controllers.map(c => {\n                return {\n                    ...c,\n                    x: c.x - boundWidthLineWidth.x,\n                    y: c.y - boundWidthLineWidth.y,\n                };\n            });\n            updates.controllers = relativeControllers;\n            updates.xywh = boundWidthLineWidth.serialize();\n        }\n        if (xywh) {\n            const { lineWidth } = this;\n            const bound = Bound.deserialize(xywh);\n            const transformed = transformPointsToNewBound(this.controllers, this, lineWidth / 2, bound, lineWidth / 2);\n            updates.controllers = transformed.points;\n            updates.xywh = transformed.bound.serialize();\n        }\n        if (props.lineWidth && props.lineWidth !== this.lineWidth) {\n            const bound = updates.xywh ? Bound.deserialize(updates.xywh) : this;\n            const controllers = updates.controllers ?? this.controllers;\n            const transformed = transformPointsToNewBound(controllers, bound, this.lineWidth / 2, inflateBound(bound, props.lineWidth - this.lineWidth), props.lineWidth / 2);\n            updates.controllers = transformed.points;\n            updates.xywh = transformed.bound.serialize();\n        }\n        for (const key in updates) {\n            this.yMap.set(key, updates[key]);\n        }\n    }\n}\n//# sourceMappingURL=connector-element.js.map","import { StrokeStyle } from '../../consts.js';\nimport { ConnectorMode } from './types.js';\nexport const ConnectorElementDefaultProps = {\n    type: 'connector',\n    xywh: '[0,0,0,0]',\n    mode: ConnectorMode.Orthogonal,\n    lineWidth: 4,\n    color: '#000000',\n    strokeStyle: StrokeStyle.Solid,\n    roughness: 2,\n    controllers: [],\n};\n//# sourceMappingURL=constants.js.map","import {} from '../../utils/xywh.js';\nimport { SurfaceElement } from '../surface-element.js';\nexport const DebugElementDefaultProps = {\n    type: 'debug',\n    xywh: '[0,0,0,0]',\n    color: '#000000',\n};\nexport class DebugElement extends SurfaceElement {\n    get color() {\n        const color = this.yMap.get('color');\n        return color;\n    }\n    render(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(0, 0, this.w, this.h);\n    }\n}\n//# sourceMappingURL=debug-element.js.map","import { StrokeStyle } from '../../consts.js';\nexport const ShapeElementDefaultProps = {\n    type: 'shape',\n    xywh: '[0,0,0,0]',\n    shapeType: 'rect',\n    radius: 0,\n    filled: false,\n    fillColor: '#ffffff',\n    strokeWidth: 4,\n    strokeColor: '#000000',\n    strokeStyle: StrokeStyle.Solid,\n    roughness: 2,\n};\n//# sourceMappingURL=constants.js.map","import { StrokeStyle } from '../../../consts.js';\nimport { Utils } from '../../../utils/tl-utils.js';\nexport const DiamondMethods = {\n    render(ctx, rc, element) {\n        const { w, h, seed, strokeWidth, filled, realFillColor, realStrokeColor, strokeStyle, roughness, } = element;\n        const renderOffset = Math.max(strokeWidth, 0) / 2;\n        const renderWidth = w - renderOffset * 2;\n        const renderHeight = h - renderOffset * 2;\n        ctx.translate(renderOffset, renderOffset);\n        rc.polygon([\n            [renderWidth / 2, 0],\n            [renderWidth, renderHeight / 2],\n            [renderWidth / 2, renderHeight],\n            [0, renderHeight / 2],\n        ], {\n            seed,\n            roughness,\n            strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,\n            stroke: realStrokeColor,\n            strokeWidth,\n            fill: filled ? realFillColor : undefined,\n        });\n    },\n    hitTest(x, y, bound, options) {\n        const points = [\n            [bound.x + bound.w / 2, bound.y + 0],\n            [bound.x + bound.w, bound.y + bound.h / 2],\n            [bound.x + bound.w / 2, bound.y + bound.h],\n            [bound.x + 0, bound.y + bound.h / 2],\n        ];\n        return Utils.pointInPolygon([x, y], points);\n    },\n};\n//# sourceMappingURL=diamond.js.map","import { StrokeStyle } from '../../../consts.js';\nimport { Utils } from '../../../utils/tl-utils.js';\nexport const EllipseMethods = {\n    render(ctx, rc, element) {\n        const { w, h, seed, strokeWidth, filled, realFillColor, realStrokeColor, strokeStyle, roughness, } = element;\n        const renderOffset = Math.max(strokeWidth, 0) / 2;\n        const renderWidth = Math.max(1, w - renderOffset * 2);\n        const renderHeight = Math.max(1, h - renderOffset * 2);\n        ctx.translate(renderOffset, renderOffset);\n        rc.ellipse(renderWidth / 2, renderHeight / 2, renderWidth, renderHeight, {\n            seed,\n            roughness,\n            strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,\n            stroke: realStrokeColor,\n            strokeWidth,\n            fill: filled ? realFillColor : undefined,\n        });\n    },\n    hitTest(x, y, bound, options) {\n        return Utils.pointInEllipse([x, y], [bound.x + bound.w / 2, bound.y + bound.h / 2], bound.w / 2, bound.h / 2);\n    },\n};\n//# sourceMappingURL=ellipse.js.map","import { StrokeStyle } from '../../../consts.js';\nimport { isPointIn } from '../../../utils/hit-utils.js';\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\nconst kRect = 1 - 0.5522847498;\nexport const RectMethods = {\n    render(ctx, rc, element) {\n        const { w, h, seed, strokeWidth, filled, realFillColor, realStrokeColor, radius, strokeStyle, roughness, } = element;\n        const renderOffset = Math.max(strokeWidth, 0) / 2;\n        const renderWidth = w - renderOffset * 2;\n        const renderHeight = h - renderOffset * 2;\n        const r = Math.min(renderWidth * radius, renderHeight * radius);\n        ctx.translate(renderOffset, renderOffset);\n        rc.path(`\n      M${r} 0\n      L${renderWidth - r} 0\n      C ${renderWidth - kRect * r} 0 ${renderWidth} ${kRect * r} ${renderWidth} ${r}\n      L${renderWidth} ${renderHeight - r}\n      C ${renderWidth} ${renderHeight - kRect * r} ${renderWidth - kRect * r} ${renderHeight} ${renderWidth - r} ${renderHeight}\n      L${r} ${renderHeight}\n      C ${kRect * r} ${renderHeight} 0 ${renderHeight - kRect * r} 0 ${renderHeight - r}\n      L0 ${r}\n      C 0 ${kRect * r} ${kRect * r} 0 ${r} 0\n      Z\n      `, {\n            seed,\n            roughness,\n            strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,\n            stroke: realStrokeColor,\n            strokeWidth,\n            fill: filled ? realFillColor : undefined,\n        });\n    },\n    hitTest(x, y, bound, options) {\n        return isPointIn(bound, x, y);\n    },\n};\n//# sourceMappingURL=rect.js.map","import { StrokeStyle } from '../../../consts.js';\nimport { Utils } from '../../../utils/tl-utils.js';\nexport const TriangleMethods = {\n    render(ctx, rc, element) {\n        const { w, h, seed, strokeWidth, filled, realFillColor, realStrokeColor, strokeStyle, roughness, } = element;\n        const renderOffset = Math.max(strokeWidth, 0) / 2;\n        const renderWidth = w - renderOffset * 2;\n        const renderHeight = h - renderOffset * 2;\n        ctx.translate(renderOffset, renderOffset);\n        rc.polygon([\n            [renderWidth / 2, 0],\n            [renderWidth, renderHeight],\n            [0, renderHeight],\n        ], {\n            seed,\n            roughness,\n            strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,\n            stroke: realStrokeColor,\n            strokeWidth,\n            fill: filled ? realFillColor : undefined,\n        });\n    },\n    hitTest(x, y, bound, options) {\n        const points = [\n            [bound.x + bound.w / 2, bound.y + 0],\n            [bound.x + bound.w, bound.y + bound.h],\n            [bound.x + 0, bound.y + bound.h],\n        ];\n        return Utils.pointInPolygon([x, y], points);\n    },\n};\n//# sourceMappingURL=triangle.js.map","import { DiamondMethods } from './diamond.js';\nimport { EllipseMethods } from './ellipse.js';\nimport { RectMethods } from './rect.js';\nimport { TriangleMethods } from './triangle.js';\nexport const ShapeMethodsMap = {\n    rect: RectMethods,\n    triangle: TriangleMethods,\n    ellipse: EllipseMethods,\n    diamond: DiamondMethods,\n};\n//# sourceMappingURL=index.js.map","import { SurfaceElement } from '../surface-element.js';\nimport { ShapeMethodsMap } from './shapes/index.js';\nexport class ShapeElement extends SurfaceElement {\n    get shapeType() {\n        const shapeType = this.yMap.get('shapeType');\n        return shapeType;\n    }\n    get radius() {\n        const radius = this.yMap.get('radius');\n        return radius;\n    }\n    get filled() {\n        const filled = this.yMap.get('filled');\n        return filled;\n    }\n    get fillColor() {\n        const fillColor = this.yMap.get('fillColor');\n        return fillColor;\n    }\n    get strokeWidth() {\n        const strokeWidth = this.yMap.get('strokeWidth');\n        return strokeWidth;\n    }\n    get strokeColor() {\n        const strokeColor = this.yMap.get('strokeColor');\n        return strokeColor;\n    }\n    get strokeStyle() {\n        const strokeStyle = this.yMap.get('strokeStyle');\n        return strokeStyle;\n    }\n    get roughness() {\n        const roughness = this.yMap.get('roughness') ?? 2;\n        return roughness;\n    }\n    get realStrokeColor() {\n        return this.computedValue(this.strokeColor);\n    }\n    get realFillColor() {\n        return this.computedValue(this.fillColor);\n    }\n    hitTest(x, y, options) {\n        const { hitTest } = ShapeMethodsMap[this.shapeType];\n        return hitTest(x, y, this, options);\n    }\n    render(ctx, rc) {\n        const { render } = ShapeMethodsMap[this.shapeType];\n        render(ctx, rc, this);\n    }\n}\n//# sourceMappingURL=shape-element.js.map","import * as Y from 'yjs';\nexport const TextElementDefaultProps = {\n    type: 'text',\n    xywh: '[0,0,0,0]',\n    text: new Y.Text(),\n    color: '#000000',\n    fontSize: 16,\n    fontFamily: \"'Kalam', cursive\",\n    textAlign: 'center',\n};\n//# sourceMappingURL=constants.js.map","// something comes from https://github.com/excalidraw/excalidraw/blob/b1311a407a636c87ee0ca326fd20599d0ce4ba9b/src/utils.ts\nconst RS_LTR_CHARS = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF' +\n    '\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF';\nconst RS_RTL_CHARS = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n// eslint-disable-next-line no-misleading-character-class\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\nexport const isRTL = (text) => RE_RTL_CHECK.test(text);\nexport const isChrome = globalThis.navigator?.userAgent.indexOf('Chrome') !== -1;\nexport const isSafari = !isChrome && globalThis.navigator?.userAgent.indexOf('Safari') !== -1;\nexport const getFontString = ({ fontSize, fontFamily, lineHeight, }) => {\n    return `${fontSize}px/${lineHeight} ${fontFamily}`;\n};\nexport function normalizeText(text) {\n    return (text\n        // replace tabs with spaces so they render and measure correctly\n        .replace(/\\t/g, '        ')\n        // normalize newlines\n        .replace(/\\r?\\n|\\r/g, '\\n'));\n}\nexport const splitIntoLines = (text) => {\n    return normalizeText(text).split('\\n');\n};\nexport function getLineWidth(text, font) {\n    const canvas = document.createElement('canvas');\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const canvas2dContext = canvas.getContext('2d');\n    canvas2dContext.font = font;\n    const width = canvas2dContext.measureText(text).width;\n    return width;\n}\nexport function getTextWidth(text, font) {\n    const lines = splitIntoLines(text);\n    let width = 0;\n    lines.forEach(line => {\n        width = Math.max(width, getLineWidth(line, font));\n    });\n    return width;\n}\nexport function parseTokens(text) {\n    // Splitting words containing \"-\" as those are treated as separate words\n    // by css wrapping algorithm eg non-profit => non-, profit\n    const words = text.split('-');\n    if (words.length > 1) {\n        // non-proft org => ['non-', 'profit org']\n        words.forEach((word, index) => {\n            if (index !== words.length - 1) {\n                words[index] = word += '-';\n            }\n        });\n    }\n    // Joining the words with space and splitting them again with space to get the\n    // final list of tokens\n    // ['non-', 'profit org'] =>,'non- proft org' => ['non-','profit','org']\n    return words.join(' ').split(' ');\n}\nexport const charWidth = (() => {\n    const cachedCharWidth = {};\n    const calculate = (char, font) => {\n        const ascii = char.charCodeAt(0);\n        if (!cachedCharWidth[font]) {\n            cachedCharWidth[font] = [];\n        }\n        if (!cachedCharWidth[font][ascii]) {\n            const width = getLineWidth(char, font);\n            cachedCharWidth[font][ascii] = width;\n        }\n        return cachedCharWidth[font][ascii];\n    };\n    const getCache = (font) => {\n        return cachedCharWidth[font];\n    };\n    return {\n        calculate,\n        getCache,\n    };\n})();\nexport function wrapText(text, font, maxWidth) {\n    // if maxWidth is not finite or NaN which can happen in case of bugs in\n    // computation, we need to make sure we don't continue as we'll end up\n    // in an infinite loop\n    if (!Number.isFinite(maxWidth) || maxWidth < 0) {\n        return text;\n    }\n    const lines = [];\n    const originalLines = text.split('\\n');\n    const spaceWidth = getLineWidth(' ', font);\n    let currentLine = '';\n    let currentLineWidthTillNow = 0;\n    const push = (str) => {\n        if (str.trim()) {\n            lines.push(str);\n        }\n    };\n    const resetParams = () => {\n        currentLine = '';\n        currentLineWidthTillNow = 0;\n    };\n    originalLines.forEach(originalLine => {\n        const currentLineWidth = getTextWidth(originalLine, font);\n        // Push the line if its <= maxWidth\n        if (currentLineWidth <= maxWidth) {\n            lines.push(originalLine);\n            return; // continue\n        }\n        const words = parseTokens(originalLine);\n        resetParams();\n        let index = 0;\n        while (index < words.length) {\n            const currentWordWidth = getLineWidth(words[index], font);\n            // This will only happen when single word takes entire width\n            if (currentWordWidth === maxWidth) {\n                push(words[index]);\n                index++;\n            }\n            // Start breaking longer words exceeding max width\n            else if (currentWordWidth > maxWidth) {\n                // push current line since the current word exceeds the max width\n                // so will be appended in next line\n                push(currentLine);\n                resetParams();\n                while (words[index].length > 0) {\n                    const currentChar = String.fromCodePoint(\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    words[index].codePointAt(0));\n                    const width = charWidth.calculate(currentChar, font);\n                    currentLineWidthTillNow += width;\n                    words[index] = words[index].slice(currentChar.length);\n                    if (currentLineWidthTillNow >= maxWidth) {\n                        push(currentLine);\n                        currentLine = currentChar;\n                        currentLineWidthTillNow = width;\n                    }\n                    else {\n                        currentLine += currentChar;\n                    }\n                }\n                // push current line if appending space exceeds max width\n                if (currentLineWidthTillNow + spaceWidth >= maxWidth) {\n                    push(currentLine);\n                    resetParams();\n                    // space needs to be appended before next word\n                    // as currentLine contains chars which couldn't be appended\n                    // to previous line unless the line ends with hyphen to sync\n                    // with css word-wrap\n                }\n                else if (!currentLine.endsWith('-')) {\n                    currentLine += ' ';\n                    currentLineWidthTillNow += spaceWidth;\n                }\n                index++;\n            }\n            else {\n                // Start appending words in a line till max width reached\n                while (currentLineWidthTillNow < maxWidth && index < words.length) {\n                    const word = words[index];\n                    currentLineWidthTillNow = getLineWidth(currentLine + word, font);\n                    if (currentLineWidthTillNow > maxWidth) {\n                        push(currentLine);\n                        resetParams();\n                        break;\n                    }\n                    index++;\n                    // if word ends with \"-\" then we don't need to add space\n                    // to sync with css word-wrap\n                    const shouldAppendSpace = !word.endsWith('-');\n                    currentLine += word;\n                    if (shouldAppendSpace) {\n                        currentLine += ' ';\n                    }\n                    // Push the word if appending space exceeds max width\n                    if (currentLineWidthTillNow + spaceWidth >= maxWidth) {\n                        if (shouldAppendSpace) {\n                            lines.push(currentLine.slice(0, -1));\n                        }\n                        else {\n                            lines.push(currentLine);\n                        }\n                        resetParams();\n                        break;\n                    }\n                }\n            }\n        }\n        if (currentLine.slice(-1) === ' ') {\n            // only remove last trailing space which we have added when joining words\n            currentLine = currentLine.slice(0, -1);\n            push(currentLine);\n        }\n    });\n    return lines.join('\\n');\n}\nfunction transformDelta(delta) {\n    const result = [];\n    let tmpString = delta.insert;\n    while (tmpString.length > 0) {\n        const index = tmpString.indexOf('\\n');\n        if (index === -1) {\n            result.push({\n                insert: tmpString,\n                attributes: delta.attributes,\n            });\n            break;\n        }\n        if (tmpString.slice(0, index).length > 0) {\n            result.push({\n                insert: tmpString.slice(0, index),\n                attributes: delta.attributes,\n            });\n        }\n        result.push('\\n');\n        tmpString = tmpString.slice(index + 1);\n    }\n    return result;\n}\n/**\n * convert a delta insert array to chunks, each chunk is a line\n */\nexport function deltaInsertsToChunks(delta) {\n    if (delta.length === 0) {\n        return [[]];\n    }\n    const transformedDelta = delta.flatMap(transformDelta);\n    function* chunksGenerator(arr) {\n        let start = 0;\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i] === '\\n') {\n                const chunk = arr.slice(start, i);\n                start = i + 1;\n                yield chunk;\n            }\n            else if (i === arr.length - 1) {\n                yield arr.slice(start);\n            }\n        }\n        if (arr.at(-1) === '\\n') {\n            yield [];\n        }\n    }\n    return [...chunksGenerator(transformedDelta)];\n}\n//# sourceMappingURL=utils.js.map","import { SurfaceElement } from '../surface-element.js';\nimport { deltaInsertsToChunks, getFontString, getTextWidth, isRTL, } from './utils.js';\nexport class TextElement extends SurfaceElement {\n    constructor() {\n        super(...arguments);\n        this._maxTextWidth = 0;\n        this._maxTextHeight = 0;\n        this._lineHeight = 0;\n        this._lines = [];\n    }\n    get text() {\n        return this.yMap.get('text');\n    }\n    get color() {\n        return this.yMap.get('color');\n    }\n    get fontSize() {\n        return this.yMap.get('fontSize');\n    }\n    get fontFamily() {\n        return this.yMap.get('fontFamily');\n    }\n    get textAlign() {\n        return this.yMap.get('textAlign');\n    }\n    get minWidth() {\n        return this._maxTextWidth;\n    }\n    get minHeight() {\n        return this._maxTextHeight;\n    }\n    get lineHeight() {\n        return this._lineHeight;\n    }\n    get lines() {\n        return this._lines;\n    }\n    render(ctx) {\n        const { w, text, color, fontSize, fontFamily, textAlign } = this;\n        const yText = text;\n        const deltas = yText.toDelta();\n        const lines = deltaInsertsToChunks(deltas);\n        this._lines = lines;\n        const lineHeightPx = this.h / lines.length;\n        const font = getFontString({\n            fontSize: fontSize,\n            lineHeight: `${lineHeightPx}px`,\n            fontFamily: fontFamily,\n        });\n        this._lineHeight = lineHeightPx;\n        const horizontalOffset = textAlign === 'center' ? w / 2 : textAlign === 'right' ? w : 0;\n        for (const [lineIndex, line] of lines.entries()) {\n            let beforeTextWidth = 0;\n            for (const delta of line) {\n                ctx.save();\n                const str = delta.insert;\n                const rtl = isRTL(str);\n                const shouldTemporarilyAttach = rtl && !ctx.canvas.isConnected;\n                if (shouldTemporarilyAttach) {\n                    // to correctly render RTL text mixed with LTR, we have to append it\n                    // to the DOM\n                    document.body.appendChild(ctx.canvas);\n                }\n                ctx.canvas.setAttribute('dir', rtl ? 'rtl' : 'ltr');\n                ctx.font = font;\n                ctx.fillStyle = this.computedValue(color);\n                ctx.textAlign = textAlign;\n                ctx.textBaseline = 'ideographic';\n                ctx.fillText(str, horizontalOffset + beforeTextWidth, (lineIndex + 1) * lineHeightPx);\n                beforeTextWidth += getTextWidth(str, fontFamily);\n                if (shouldTemporarilyAttach) {\n                    ctx.canvas.remove();\n                }\n                ctx.restore();\n            }\n            if (beforeTextWidth > this._maxTextWidth) {\n                this._maxTextWidth = beforeTextWidth;\n            }\n        }\n        if (this._maxTextHeight < lines.length * lineHeightPx) {\n            this._maxTextHeight = lines.length * lineHeightPx;\n        }\n    }\n}\n//# sourceMappingURL=text-element.js.map","import { BrushElement } from './brush/brush-element.js';\nimport { BrushElementDefaultProps } from './brush/constants.js';\nimport { ConnectorElement } from './connector/connector-element.js';\nimport { ConnectorElementDefaultProps } from './connector/constants.js';\nimport { DebugElement, DebugElementDefaultProps, } from './debug/debug-element.js';\nimport { ShapeElementDefaultProps } from './shape/constants.js';\nimport { ShapeElement } from './shape/shape-element.js';\nimport { TextElementDefaultProps } from './text/constants.js';\nimport { TextElement } from './text/text-element.js';\nexport { BrushElement } from './brush/brush-element.js';\nexport { ConnectorElement } from './connector/connector-element.js';\nexport { DebugElement } from './debug/debug-element.js';\nexport { ShapeElement } from './shape/shape-element.js';\nexport { TextElement } from './text/text-element.js';\nexport const ElementCtors = {\n    debug: DebugElement,\n    brush: BrushElement,\n    shape: ShapeElement,\n    connector: ConnectorElement,\n    text: TextElement,\n};\nexport const ElementDefaultProps = {\n    debug: DebugElementDefaultProps,\n    brush: BrushElementDefaultProps,\n    shape: ShapeElementDefaultProps,\n    connector: ConnectorElementDefaultProps,\n    text: TextElementDefaultProps,\n};\n//# sourceMappingURL=index.js.map","import { assertExists } from '@blocksuite/store';\nimport { GRID_SIZE } from './consts.js';\nimport { intersects, isPointIn } from './utils/hit-utils.js';\nfunction getGridIndex(val) {\n    return Math.ceil(val / GRID_SIZE) - 1;\n}\nfunction rangeFromBound(a) {\n    const minRow = getGridIndex(a.x);\n    const maxRow = getGridIndex(a.x + a.w);\n    const minCol = getGridIndex(a.y);\n    const maxCol = getGridIndex(a.y + a.h);\n    return [minRow, maxRow, minCol, maxCol];\n}\n// Dont compare by id, '398303718:2' > '398303718:14' is true\nexport function compare(a, b) {\n    if (a.index < b.index)\n        return -1;\n    if (a.index > b.index)\n        return 1;\n    return 0;\n}\nexport class GridManager {\n    constructor() {\n        this._grids = new Map();\n        this._elementToGrids = new Map();\n    }\n    _createGrid(row, col) {\n        const id = row + '|' + col;\n        const elements = new Set();\n        this._grids.set(id, elements);\n        return elements;\n    }\n    _getGrid(row, col) {\n        const id = row + '|' + col;\n        return this._grids.get(id);\n    }\n    get isEmpty() {\n        return this._grids.size === 0;\n    }\n    add(element) {\n        const [minRow, maxRow, minCol, maxCol] = rangeFromBound(element);\n        const grids = new Set();\n        this._elementToGrids.set(element, grids);\n        for (let i = minRow; i <= maxRow; i++) {\n            for (let j = minCol; j <= maxCol; j++) {\n                let grid = this._getGrid(i, j);\n                if (!grid) {\n                    grid = this._createGrid(i, j);\n                }\n                grid.add(element);\n                grids.add(grid);\n            }\n        }\n    }\n    remove(element) {\n        const grids = this._elementToGrids.get(element);\n        assertExists(grids);\n        for (const grid of grids) {\n            grid.delete(element);\n        }\n    }\n    boundHasChanged(a, b) {\n        const [minRow, maxRow, minCol, maxCol] = rangeFromBound(a);\n        const [minRow2, maxRow2, minCol2, maxCol2] = rangeFromBound(b);\n        return (minRow !== minRow2 ||\n            maxRow !== maxRow2 ||\n            minCol !== minCol2 ||\n            maxCol !== maxCol2);\n    }\n    search(bound) {\n        const [minRow, maxRow, minCol, maxCol] = rangeFromBound(bound);\n        const results = new Set();\n        for (let i = minRow; i <= maxRow; i++) {\n            for (let j = minCol; j <= maxCol; j++) {\n                const gridElements = this._getGrid(i, j);\n                if (!gridElements)\n                    continue;\n                for (const element of gridElements) {\n                    if (intersects(element, bound)) {\n                        results.add(element);\n                    }\n                }\n            }\n        }\n        // sort elements in set based on index\n        const sorted = Array.from(results).sort(compare);\n        return sorted;\n    }\n    pick(x, y) {\n        const row = getGridIndex(x);\n        const col = getGridIndex(y);\n        const gridElements = this._getGrid(row, col);\n        if (!gridElements)\n            return [];\n        const results = [];\n        for (const element of gridElements) {\n            if (isPointIn(element, x, y)) {\n                results.push(element);\n            }\n        }\n        return results;\n    }\n}\n//# sourceMappingURL=grid.js.map","export function rotatePoints(points, center, degrees) {\n    if (points && points.length) {\n        const [cx, cy] = center;\n        const angle = (Math.PI / 180) * degrees;\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        points.forEach((p) => {\n            const [x, y] = p;\n            p[0] = ((x - cx) * cos) - ((y - cy) * sin) + cx;\n            p[1] = ((x - cx) * sin) + ((y - cy) * cos) + cy;\n        });\n    }\n}\nexport function rotateLines(lines, center, degrees) {\n    const points = [];\n    lines.forEach((line) => points.push(...line));\n    rotatePoints(points, center, degrees);\n}\nexport function lineLength(line) {\n    const p1 = line[0];\n    const p2 = line[1];\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\n","import { rotatePoints, rotateLines } from '../geometry';\nexport function polygonHachureLines(polygonList, o) {\n    const angle = o.hachureAngle + 90;\n    let gap = o.hachureGap;\n    if (gap < 0) {\n        gap = o.strokeWidth * 4;\n    }\n    gap = Math.max(gap, 0.1);\n    const rotationCenter = [0, 0];\n    if (angle) {\n        for (const polygon of polygonList) {\n            rotatePoints(polygon, rotationCenter, angle);\n        }\n    }\n    const lines = straightHachureLines(polygonList, gap);\n    if (angle) {\n        for (const polygon of polygonList) {\n            rotatePoints(polygon, rotationCenter, -angle);\n        }\n        rotateLines(lines, rotationCenter, -angle);\n    }\n    return lines;\n}\nfunction straightHachureLines(polygonList, gap) {\n    const vertexArray = [];\n    for (const polygon of polygonList) {\n        const vertices = [...polygon];\n        if (vertices[0].join(',') !== vertices[vertices.length - 1].join(',')) {\n            vertices.push([vertices[0][0], vertices[0][1]]);\n        }\n        if (vertices.length > 2) {\n            vertexArray.push(vertices);\n        }\n    }\n    const lines = [];\n    gap = Math.max(gap, 0.1);\n    // Create sorted edges table\n    const edges = [];\n    for (const vertices of vertexArray) {\n        for (let i = 0; i < vertices.length - 1; i++) {\n            const p1 = vertices[i];\n            const p2 = vertices[i + 1];\n            if (p1[1] !== p2[1]) {\n                const ymin = Math.min(p1[1], p2[1]);\n                edges.push({\n                    ymin,\n                    ymax: Math.max(p1[1], p2[1]),\n                    x: ymin === p1[1] ? p1[0] : p2[0],\n                    islope: (p2[0] - p1[0]) / (p2[1] - p1[1]),\n                });\n            }\n        }\n    }\n    edges.sort((e1, e2) => {\n        if (e1.ymin < e2.ymin) {\n            return -1;\n        }\n        if (e1.ymin > e2.ymin) {\n            return 1;\n        }\n        if (e1.x < e2.x) {\n            return -1;\n        }\n        if (e1.x > e2.x) {\n            return 1;\n        }\n        if (e1.ymax === e2.ymax) {\n            return 0;\n        }\n        return (e1.ymax - e2.ymax) / Math.abs((e1.ymax - e2.ymax));\n    });\n    if (!edges.length) {\n        return lines;\n    }\n    // Start scanning\n    let activeEdges = [];\n    let y = edges[0].ymin;\n    while (activeEdges.length || edges.length) {\n        if (edges.length) {\n            let ix = -1;\n            for (let i = 0; i < edges.length; i++) {\n                if (edges[i].ymin > y) {\n                    break;\n                }\n                ix = i;\n            }\n            const removed = edges.splice(0, ix + 1);\n            removed.forEach((edge) => {\n                activeEdges.push({ s: y, edge });\n            });\n        }\n        activeEdges = activeEdges.filter((ae) => {\n            if (ae.edge.ymax <= y) {\n                return false;\n            }\n            return true;\n        });\n        activeEdges.sort((ae1, ae2) => {\n            if (ae1.edge.x === ae2.edge.x) {\n                return 0;\n            }\n            return (ae1.edge.x - ae2.edge.x) / Math.abs((ae1.edge.x - ae2.edge.x));\n        });\n        // fill between the edges\n        if (activeEdges.length > 1) {\n            for (let i = 0; i < activeEdges.length; i = i + 2) {\n                const nexti = i + 1;\n                if (nexti >= activeEdges.length) {\n                    break;\n                }\n                const ce = activeEdges[i].edge;\n                const ne = activeEdges[nexti].edge;\n                lines.push([\n                    [Math.round(ce.x), y],\n                    [Math.round(ne.x), y],\n                ]);\n            }\n        }\n        y += gap;\n        activeEdges.forEach((ae) => {\n            ae.edge.x = ae.edge.x + (gap * ae.edge.islope);\n        });\n    }\n    return lines;\n}\n","import { polygonHachureLines } from './scan-line-hachure';\nexport class HachureFiller {\n    constructor(helper) {\n        this.helper = helper;\n    }\n    fillPolygons(polygonList, o) {\n        return this._fillPolygons(polygonList, o);\n    }\n    _fillPolygons(polygonList, o) {\n        const lines = polygonHachureLines(polygonList, o);\n        const ops = this.renderLines(lines, o);\n        return { type: 'fillSketch', ops };\n    }\n    renderLines(lines, o) {\n        const ops = [];\n        for (const line of lines) {\n            ops.push(...this.helper.doubleLineOps(line[0][0], line[0][1], line[1][0], line[1][1], o));\n        }\n        return ops;\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nimport { polygonHachureLines } from './scan-line-hachure';\nimport { lineLength } from '../geometry';\nexport class ZigZagFiller extends HachureFiller {\n    fillPolygons(polygonList, o) {\n        let gap = o.hachureGap;\n        if (gap < 0) {\n            gap = o.strokeWidth * 4;\n        }\n        gap = Math.max(gap, 0.1);\n        const o2 = Object.assign({}, o, { hachureGap: gap });\n        const lines = polygonHachureLines(polygonList, o2);\n        const zigZagAngle = (Math.PI / 180) * o.hachureAngle;\n        const zigzagLines = [];\n        const dgx = gap * 0.5 * Math.cos(zigZagAngle);\n        const dgy = gap * 0.5 * Math.sin(zigZagAngle);\n        for (const [p1, p2] of lines) {\n            if (lineLength([p1, p2])) {\n                zigzagLines.push([\n                    [p1[0] - dgx, p1[1] + dgy],\n                    [...p2],\n                ], [\n                    [p1[0] + dgx, p1[1] - dgy],\n                    [...p2],\n                ]);\n            }\n        }\n        const ops = this.renderLines(zigzagLines, o);\n        return { type: 'fillSketch', ops };\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nexport class HatchFiller extends HachureFiller {\n    fillPolygons(polygonList, o) {\n        const set = this._fillPolygons(polygonList, o);\n        const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n        const set2 = this._fillPolygons(polygonList, o2);\n        set.ops = set.ops.concat(set2.ops);\n        return set;\n    }\n}\n","import { lineLength } from '../geometry';\nimport { polygonHachureLines } from './scan-line-hachure';\nexport class DotFiller {\n    constructor(helper) {\n        this.helper = helper;\n    }\n    fillPolygons(polygonList, o) {\n        o = Object.assign({}, o, { hachureAngle: 0 });\n        const lines = polygonHachureLines(polygonList, o);\n        return this.dotsOnLines(lines, o);\n    }\n    dotsOnLines(lines, o) {\n        const ops = [];\n        let gap = o.hachureGap;\n        if (gap < 0) {\n            gap = o.strokeWidth * 4;\n        }\n        gap = Math.max(gap, 0.1);\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        const ro = gap / 4;\n        for (const line of lines) {\n            const length = lineLength(line);\n            const dl = length / gap;\n            const count = Math.ceil(dl) - 1;\n            const offset = length - (count * gap);\n            const x = ((line[0][0] + line[1][0]) / 2) - (gap / 4);\n            const minY = Math.min(line[0][1], line[1][1]);\n            for (let i = 0; i < count; i++) {\n                const y = minY + offset + (i * gap);\n                const cx = (x - ro) + Math.random() * 2 * ro;\n                const cy = (y - ro) + Math.random() * 2 * ro;\n                const el = this.helper.ellipse(cx, cy, fweight, fweight, o);\n                ops.push(...el.ops);\n            }\n        }\n        return { type: 'fillSketch', ops };\n    }\n}\n","import { lineLength } from '../geometry';\nimport { polygonHachureLines } from './scan-line-hachure';\nexport class DashedFiller {\n    constructor(helper) {\n        this.helper = helper;\n    }\n    fillPolygons(polygonList, o) {\n        const lines = polygonHachureLines(polygonList, o);\n        return { type: 'fillSketch', ops: this.dashedLine(lines, o) };\n    }\n    dashedLine(lines, o) {\n        const offset = o.dashOffset < 0 ? (o.hachureGap < 0 ? (o.strokeWidth * 4) : o.hachureGap) : o.dashOffset;\n        const gap = o.dashGap < 0 ? (o.hachureGap < 0 ? (o.strokeWidth * 4) : o.hachureGap) : o.dashGap;\n        const ops = [];\n        lines.forEach((line) => {\n            const length = lineLength(line);\n            const count = Math.floor(length / (offset + gap));\n            const startOffset = (length + gap - (count * (offset + gap))) / 2;\n            let p1 = line[0];\n            let p2 = line[1];\n            if (p1[0] > p2[0]) {\n                p1 = line[1];\n                p2 = line[0];\n            }\n            const alpha = Math.atan((p2[1] - p1[1]) / (p2[0] - p1[0]));\n            for (let i = 0; i < count; i++) {\n                const lstart = i * (offset + gap);\n                const lend = lstart + offset;\n                const start = [p1[0] + (lstart * Math.cos(alpha)) + (startOffset * Math.cos(alpha)), p1[1] + lstart * Math.sin(alpha) + (startOffset * Math.sin(alpha))];\n                const end = [p1[0] + (lend * Math.cos(alpha)) + (startOffset * Math.cos(alpha)), p1[1] + (lend * Math.sin(alpha)) + (startOffset * Math.sin(alpha))];\n                ops.push(...this.helper.doubleLineOps(start[0], start[1], end[0], end[1], o));\n            }\n        });\n        return ops;\n    }\n}\n","import { lineLength } from '../geometry';\nimport { polygonHachureLines } from './scan-line-hachure';\nexport class ZigZagLineFiller {\n    constructor(helper) {\n        this.helper = helper;\n    }\n    fillPolygons(polygonList, o) {\n        const gap = o.hachureGap < 0 ? (o.strokeWidth * 4) : o.hachureGap;\n        const zo = o.zigzagOffset < 0 ? gap : o.zigzagOffset;\n        o = Object.assign({}, o, { hachureGap: gap + zo });\n        const lines = polygonHachureLines(polygonList, o);\n        return { type: 'fillSketch', ops: this.zigzagLines(lines, zo, o) };\n    }\n    zigzagLines(lines, zo, o) {\n        const ops = [];\n        lines.forEach((line) => {\n            const length = lineLength(line);\n            const count = Math.round(length / (2 * zo));\n            let p1 = line[0];\n            let p2 = line[1];\n            if (p1[0] > p2[0]) {\n                p1 = line[1];\n                p2 = line[0];\n            }\n            const alpha = Math.atan((p2[1] - p1[1]) / (p2[0] - p1[0]));\n            for (let i = 0; i < count; i++) {\n                const lstart = i * 2 * zo;\n                const lend = (i + 1) * 2 * zo;\n                const dz = Math.sqrt(2 * Math.pow(zo, 2));\n                const start = [p1[0] + (lstart * Math.cos(alpha)), p1[1] + lstart * Math.sin(alpha)];\n                const end = [p1[0] + (lend * Math.cos(alpha)), p1[1] + (lend * Math.sin(alpha))];\n                const middle = [start[0] + dz * Math.cos(alpha + Math.PI / 4), start[1] + dz * Math.sin(alpha + Math.PI / 4)];\n                ops.push(...this.helper.doubleLineOps(start[0], start[1], middle[0], middle[1], o), ...this.helper.doubleLineOps(middle[0], middle[1], end[0], end[1], o));\n            }\n        });\n        return ops;\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nimport { ZigZagFiller } from './zigzag-filler';\nimport { HatchFiller } from './hatch-filler';\nimport { DotFiller } from './dot-filler';\nimport { DashedFiller } from './dashed-filler';\nimport { ZigZagLineFiller } from './zigzag-line-filler';\nconst fillers = {};\nexport function getFiller(o, helper) {\n    let fillerName = o.fillStyle || 'hachure';\n    if (!fillers[fillerName]) {\n        switch (fillerName) {\n            case 'zigzag':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new ZigZagFiller(helper);\n                }\n                break;\n            case 'cross-hatch':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new HatchFiller(helper);\n                }\n                break;\n            case 'dots':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new DotFiller(helper);\n                }\n                break;\n            case 'dashed':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new DashedFiller(helper);\n                }\n                break;\n            case 'zigzag-line':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new ZigZagLineFiller(helper);\n                }\n                break;\n            case 'hachure':\n            default:\n                fillerName = 'hachure';\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new HachureFiller(helper);\n                }\n                break;\n        }\n    }\n    return fillers[fillerName];\n}\n","export function randomSeed() {\n    return Math.floor(Math.random() * 2 ** 31);\n}\nexport class Random {\n    constructor(seed) {\n        this.seed = seed;\n    }\n    next() {\n        if (this.seed) {\n            return ((2 ** 31 - 1) & (this.seed = Math.imul(48271, this.seed))) / 2 ** 31;\n        }\n        else {\n            return Math.random();\n        }\n    }\n}\n","const COMMAND = 0;\nconst NUMBER = 1;\nconst EOD = 2;\nconst PARAMS = { A: 7, a: 7, C: 6, c: 6, H: 1, h: 1, L: 2, l: 2, M: 2, m: 2, Q: 4, q: 4, S: 4, s: 4, T: 2, t: 2, V: 1, v: 1, Z: 0, z: 0 };\nfunction tokenize(d) {\n    const tokens = new Array();\n    while (d !== '') {\n        if (d.match(/^([ \\t\\r\\n,]+)/)) {\n            d = d.substr(RegExp.$1.length);\n        }\n        else if (d.match(/^([aAcChHlLmMqQsStTvVzZ])/)) {\n            tokens[tokens.length] = { type: COMMAND, text: RegExp.$1 };\n            d = d.substr(RegExp.$1.length);\n        }\n        else if (d.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/)) {\n            tokens[tokens.length] = { type: NUMBER, text: `${parseFloat(RegExp.$1)}` };\n            d = d.substr(RegExp.$1.length);\n        }\n        else {\n            return [];\n        }\n    }\n    tokens[tokens.length] = { type: EOD, text: '' };\n    return tokens;\n}\nfunction isType(token, type) {\n    return token.type === type;\n}\nexport function parsePath(d) {\n    const segments = [];\n    const tokens = tokenize(d);\n    let mode = 'BOD';\n    let index = 0;\n    let token = tokens[index];\n    while (!isType(token, EOD)) {\n        let paramsCount = 0;\n        const params = [];\n        if (mode === 'BOD') {\n            if (token.text === 'M' || token.text === 'm') {\n                index++;\n                paramsCount = PARAMS[token.text];\n                mode = token.text;\n            }\n            else {\n                return parsePath('M0,0' + d);\n            }\n        }\n        else if (isType(token, NUMBER)) {\n            paramsCount = PARAMS[mode];\n        }\n        else {\n            index++;\n            paramsCount = PARAMS[token.text];\n            mode = token.text;\n        }\n        if ((index + paramsCount) < tokens.length) {\n            for (let i = index; i < index + paramsCount; i++) {\n                const numbeToken = tokens[i];\n                if (isType(numbeToken, NUMBER)) {\n                    params[params.length] = +numbeToken.text;\n                }\n                else {\n                    throw new Error('Param not a number: ' + mode + ',' + numbeToken.text);\n                }\n            }\n            if (typeof PARAMS[mode] === 'number') {\n                const segment = { key: mode, data: params };\n                segments.push(segment);\n                index += paramsCount;\n                token = tokens[index];\n                if (mode === 'M')\n                    mode = 'L';\n                if (mode === 'm')\n                    mode = 'l';\n            }\n            else {\n                throw new Error('Bad segment: ' + mode);\n            }\n        }\n        else {\n            throw new Error('Path data ended short');\n        }\n    }\n    return segments;\n}\nexport function serialize(segments) {\n    const tokens = [];\n    for (const { key, data } of segments) {\n        tokens.push(key);\n        switch (key) {\n            case 'C':\n            case 'c':\n                tokens.push(data[0], `${data[1]},`, data[2], `${data[3]},`, data[4], data[5]);\n                break;\n            case 'S':\n            case 's':\n            case 'Q':\n            case 'q':\n                tokens.push(data[0], `${data[1]},`, data[2], data[3]);\n                break;\n            default:\n                tokens.push(...data);\n                break;\n        }\n    }\n    return tokens.join(' ');\n}\n","// Translate relative commands to absolute commands\nexport function absolutize(segments) {\n    let cx = 0, cy = 0;\n    let subx = 0, suby = 0;\n    const out = [];\n    for (const { key, data } of segments) {\n        switch (key) {\n            case 'M':\n                out.push({ key: 'M', data: [...data] });\n                [cx, cy] = data;\n                [subx, suby] = data;\n                break;\n            case 'm':\n                cx += data[0];\n                cy += data[1];\n                out.push({ key: 'M', data: [cx, cy] });\n                subx = cx;\n                suby = cy;\n                break;\n            case 'L':\n                out.push({ key: 'L', data: [...data] });\n                [cx, cy] = data;\n                break;\n            case 'l':\n                cx += data[0];\n                cy += data[1];\n                out.push({ key: 'L', data: [cx, cy] });\n                break;\n            case 'C':\n                out.push({ key: 'C', data: [...data] });\n                cx = data[4];\n                cy = data[5];\n                break;\n            case 'c': {\n                const newdata = data.map((d, i) => (i % 2) ? (d + cy) : (d + cx));\n                out.push({ key: 'C', data: newdata });\n                cx = newdata[4];\n                cy = newdata[5];\n                break;\n            }\n            case 'Q':\n                out.push({ key: 'Q', data: [...data] });\n                cx = data[2];\n                cy = data[3];\n                break;\n            case 'q': {\n                const newdata = data.map((d, i) => (i % 2) ? (d + cy) : (d + cx));\n                out.push({ key: 'Q', data: newdata });\n                cx = newdata[2];\n                cy = newdata[3];\n                break;\n            }\n            case 'A':\n                out.push({ key: 'A', data: [...data] });\n                cx = data[5];\n                cy = data[6];\n                break;\n            case 'a':\n                cx += data[5];\n                cy += data[6];\n                out.push({ key: 'A', data: [data[0], data[1], data[2], data[3], data[4], cx, cy] });\n                break;\n            case 'H':\n                out.push({ key: 'H', data: [...data] });\n                cx = data[0];\n                break;\n            case 'h':\n                cx += data[0];\n                out.push({ key: 'H', data: [cx] });\n                break;\n            case 'V':\n                out.push({ key: 'V', data: [...data] });\n                cy = data[0];\n                break;\n            case 'v':\n                cy += data[0];\n                out.push({ key: 'V', data: [cy] });\n                break;\n            case 'S':\n                out.push({ key: 'S', data: [...data] });\n                cx = data[2];\n                cy = data[3];\n                break;\n            case 's': {\n                const newdata = data.map((d, i) => (i % 2) ? (d + cy) : (d + cx));\n                out.push({ key: 'S', data: newdata });\n                cx = newdata[2];\n                cy = newdata[3];\n                break;\n            }\n            case 'T':\n                out.push({ key: 'T', data: [...data] });\n                cx = data[0];\n                cy = data[1];\n                break;\n            case 't':\n                cx += data[0];\n                cy += data[1];\n                out.push({ key: 'T', data: [cx, cy] });\n                break;\n            case 'Z':\n            case 'z':\n                out.push({ key: 'Z', data: [] });\n                cx = subx;\n                cy = suby;\n                break;\n        }\n    }\n    return out;\n}\n","// Normalize path to include only M, L, C, and Z commands\nexport function normalize(segments) {\n    const out = [];\n    let lastType = '';\n    let cx = 0, cy = 0;\n    let subx = 0, suby = 0;\n    let lcx = 0, lcy = 0;\n    for (const { key, data } of segments) {\n        switch (key) {\n            case 'M':\n                out.push({ key: 'M', data: [...data] });\n                [cx, cy] = data;\n                [subx, suby] = data;\n                break;\n            case 'C':\n                out.push({ key: 'C', data: [...data] });\n                cx = data[4];\n                cy = data[5];\n                lcx = data[2];\n                lcy = data[3];\n                break;\n            case 'L':\n                out.push({ key: 'L', data: [...data] });\n                [cx, cy] = data;\n                break;\n            case 'H':\n                cx = data[0];\n                out.push({ key: 'L', data: [cx, cy] });\n                break;\n            case 'V':\n                cy = data[0];\n                out.push({ key: 'L', data: [cx, cy] });\n                break;\n            case 'S': {\n                let cx1 = 0, cy1 = 0;\n                if (lastType === 'C' || lastType === 'S') {\n                    cx1 = cx + (cx - lcx);\n                    cy1 = cy + (cy - lcy);\n                }\n                else {\n                    cx1 = cx;\n                    cy1 = cy;\n                }\n                out.push({ key: 'C', data: [cx1, cy1, ...data] });\n                lcx = data[0];\n                lcy = data[1];\n                cx = data[2];\n                cy = data[3];\n                break;\n            }\n            case 'T': {\n                const [x, y] = data;\n                let x1 = 0, y1 = 0;\n                if (lastType === 'Q' || lastType === 'T') {\n                    x1 = cx + (cx - lcx);\n                    y1 = cy + (cy - lcy);\n                }\n                else {\n                    x1 = cx;\n                    y1 = cy;\n                }\n                const cx1 = cx + 2 * (x1 - cx) / 3;\n                const cy1 = cy + 2 * (y1 - cy) / 3;\n                const cx2 = x + 2 * (x1 - x) / 3;\n                const cy2 = y + 2 * (y1 - y) / 3;\n                out.push({ key: 'C', data: [cx1, cy1, cx2, cy2, x, y] });\n                lcx = x1;\n                lcy = y1;\n                cx = x;\n                cy = y;\n                break;\n            }\n            case 'Q': {\n                const [x1, y1, x, y] = data;\n                const cx1 = cx + 2 * (x1 - cx) / 3;\n                const cy1 = cy + 2 * (y1 - cy) / 3;\n                const cx2 = x + 2 * (x1 - x) / 3;\n                const cy2 = y + 2 * (y1 - y) / 3;\n                out.push({ key: 'C', data: [cx1, cy1, cx2, cy2, x, y] });\n                lcx = x1;\n                lcy = y1;\n                cx = x;\n                cy = y;\n                break;\n            }\n            case 'A': {\n                const r1 = Math.abs(data[0]);\n                const r2 = Math.abs(data[1]);\n                const angle = data[2];\n                const largeArcFlag = data[3];\n                const sweepFlag = data[4];\n                const x = data[5];\n                const y = data[6];\n                if (r1 === 0 || r2 === 0) {\n                    out.push({ key: 'C', data: [cx, cy, x, y, x, y] });\n                    cx = x;\n                    cy = y;\n                }\n                else {\n                    if (cx !== x || cy !== y) {\n                        const curves = arcToCubicCurves(cx, cy, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n                        curves.forEach(function (curve) {\n                            out.push({ key: 'C', data: curve });\n                        });\n                        cx = x;\n                        cy = y;\n                    }\n                }\n                break;\n            }\n            case 'Z':\n                out.push({ key: 'Z', data: [] });\n                cx = subx;\n                cy = suby;\n                break;\n        }\n        lastType = key;\n    }\n    return out;\n}\nfunction degToRad(degrees) {\n    return (Math.PI * degrees) / 180;\n}\nfunction rotate(x, y, angleRad) {\n    const X = x * Math.cos(angleRad) - y * Math.sin(angleRad);\n    const Y = x * Math.sin(angleRad) + y * Math.cos(angleRad);\n    return [X, Y];\n}\nfunction arcToCubicCurves(x1, y1, x2, y2, r1, r2, angle, largeArcFlag, sweepFlag, recursive) {\n    const angleRad = degToRad(angle);\n    let params = [];\n    let f1 = 0, f2 = 0, cx = 0, cy = 0;\n    if (recursive) {\n        [f1, f2, cx, cy] = recursive;\n    }\n    else {\n        [x1, y1] = rotate(x1, y1, -angleRad);\n        [x2, y2] = rotate(x2, y2, -angleRad);\n        const x = (x1 - x2) / 2;\n        const y = (y1 - y2) / 2;\n        let h = (x * x) / (r1 * r1) + (y * y) / (r2 * r2);\n        if (h > 1) {\n            h = Math.sqrt(h);\n            r1 = h * r1;\n            r2 = h * r2;\n        }\n        const sign = (largeArcFlag === sweepFlag) ? -1 : 1;\n        const r1Pow = r1 * r1;\n        const r2Pow = r2 * r2;\n        const left = r1Pow * r2Pow - r1Pow * y * y - r2Pow * x * x;\n        const right = r1Pow * y * y + r2Pow * x * x;\n        const k = sign * Math.sqrt(Math.abs(left / right));\n        cx = k * r1 * y / r2 + (x1 + x2) / 2;\n        cy = k * -r2 * x / r1 + (y1 + y2) / 2;\n        f1 = Math.asin(parseFloat(((y1 - cy) / r2).toFixed(9)));\n        f2 = Math.asin(parseFloat(((y2 - cy) / r2).toFixed(9)));\n        if (x1 < cx) {\n            f1 = Math.PI - f1;\n        }\n        if (x2 < cx) {\n            f2 = Math.PI - f2;\n        }\n        if (f1 < 0) {\n            f1 = Math.PI * 2 + f1;\n        }\n        if (f2 < 0) {\n            f2 = Math.PI * 2 + f2;\n        }\n        if (sweepFlag && f1 > f2) {\n            f1 = f1 - Math.PI * 2;\n        }\n        if (!sweepFlag && f2 > f1) {\n            f2 = f2 - Math.PI * 2;\n        }\n    }\n    let df = f2 - f1;\n    if (Math.abs(df) > (Math.PI * 120 / 180)) {\n        const f2old = f2;\n        const x2old = x2;\n        const y2old = y2;\n        if (sweepFlag && f2 > f1) {\n            f2 = f1 + (Math.PI * 120 / 180) * (1);\n        }\n        else {\n            f2 = f1 + (Math.PI * 120 / 180) * (-1);\n        }\n        x2 = cx + r1 * Math.cos(f2);\n        y2 = cy + r2 * Math.sin(f2);\n        params = arcToCubicCurves(x2, y2, x2old, y2old, r1, r2, angle, 0, sweepFlag, [f2, f2old, cx, cy]);\n    }\n    df = f2 - f1;\n    const c1 = Math.cos(f1);\n    const s1 = Math.sin(f1);\n    const c2 = Math.cos(f2);\n    const s2 = Math.sin(f2);\n    const t = Math.tan(df / 4);\n    const hx = 4 / 3 * r1 * t;\n    const hy = 4 / 3 * r2 * t;\n    const m1 = [x1, y1];\n    const m2 = [x1 + hx * s1, y1 - hy * c1];\n    const m3 = [x2 + hx * s2, y2 - hy * c2];\n    const m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n    if (recursive) {\n        return [m2, m3, m4].concat(params);\n    }\n    else {\n        params = [m2, m3, m4].concat(params);\n        const curves = [];\n        for (let i = 0; i < params.length; i += 3) {\n            const r1 = rotate(params[i][0], params[i][1], angleRad);\n            const r2 = rotate(params[i + 1][0], params[i + 1][1], angleRad);\n            const r3 = rotate(params[i + 2][0], params[i + 2][1], angleRad);\n            curves.push([r1[0], r1[1], r2[0], r2[1], r3[0], r3[1]]);\n        }\n        return curves;\n    }\n}\n","export { parsePath, serialize } from './parser.js';\nexport { absolutize } from './absolutize.js';\nexport { normalize } from './normalize.js';\n","import { getFiller } from './fillers/filler.js';\nimport { Random } from './math.js';\nimport { parsePath, normalize, absolutize } from 'path-data-parser';\nconst helper = {\n    randOffset,\n    randOffsetWithRange,\n    ellipse,\n    doubleLineOps: doubleLineFillOps,\n};\nexport function line(x1, y1, x2, y2, o) {\n    return { type: 'path', ops: _doubleLine(x1, y1, x2, y2, o) };\n}\nexport function linearPath(points, close, o) {\n    const len = (points || []).length;\n    if (len > 2) {\n        const ops = [];\n        for (let i = 0; i < (len - 1); i++) {\n            ops.push(..._doubleLine(points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], o));\n        }\n        if (close) {\n            ops.push(..._doubleLine(points[len - 1][0], points[len - 1][1], points[0][0], points[0][1], o));\n        }\n        return { type: 'path', ops };\n    }\n    else if (len === 2) {\n        return line(points[0][0], points[0][1], points[1][0], points[1][1], o);\n    }\n    return { type: 'path', ops: [] };\n}\nexport function polygon(points, o) {\n    return linearPath(points, true, o);\n}\nexport function rectangle(x, y, width, height, o) {\n    const points = [\n        [x, y],\n        [x + width, y],\n        [x + width, y + height],\n        [x, y + height],\n    ];\n    return polygon(points, o);\n}\nexport function curve(points, o) {\n    let o1 = _curveWithOffset(points, 1 * (1 + o.roughness * 0.2), o);\n    if (!o.disableMultiStroke) {\n        const o2 = _curveWithOffset(points, 1.5 * (1 + o.roughness * 0.22), cloneOptionsAlterSeed(o));\n        o1 = o1.concat(o2);\n    }\n    return { type: 'path', ops: o1 };\n}\nexport function ellipse(x, y, width, height, o) {\n    const params = generateEllipseParams(width, height, o);\n    return ellipseWithParams(x, y, o, params).opset;\n}\nexport function generateEllipseParams(width, height, o) {\n    const psq = Math.sqrt(Math.PI * 2 * Math.sqrt((Math.pow(width / 2, 2) + Math.pow(height / 2, 2)) / 2));\n    const stepCount = Math.ceil(Math.max(o.curveStepCount, (o.curveStepCount / Math.sqrt(200)) * psq));\n    const increment = (Math.PI * 2) / stepCount;\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    const curveFitRandomness = 1 - o.curveFitting;\n    rx += _offsetOpt(rx * curveFitRandomness, o);\n    ry += _offsetOpt(ry * curveFitRandomness, o);\n    return { increment, rx, ry };\n}\nexport function ellipseWithParams(x, y, o, ellipseParams) {\n    const [ap1, cp1] = _computeEllipsePoints(ellipseParams.increment, x, y, ellipseParams.rx, ellipseParams.ry, 1, ellipseParams.increment * _offset(0.1, _offset(0.4, 1, o), o), o);\n    let o1 = _curve(ap1, null, o);\n    if ((!o.disableMultiStroke) && (o.roughness !== 0)) {\n        const [ap2] = _computeEllipsePoints(ellipseParams.increment, x, y, ellipseParams.rx, ellipseParams.ry, 1.5, 0, o);\n        const o2 = _curve(ap2, null, o);\n        o1 = o1.concat(o2);\n    }\n    return {\n        estimatedPoints: cp1,\n        opset: { type: 'path', ops: o1 },\n    };\n}\nexport function arc(x, y, width, height, start, stop, closed, roughClosure, o) {\n    const cx = x;\n    const cy = y;\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += _offsetOpt(rx * 0.01, o);\n    ry += _offsetOpt(ry * 0.01, o);\n    let strt = start;\n    let stp = stop;\n    while (strt < 0) {\n        strt += Math.PI * 2;\n        stp += Math.PI * 2;\n    }\n    if ((stp - strt) > (Math.PI * 2)) {\n        strt = 0;\n        stp = Math.PI * 2;\n    }\n    const ellipseInc = (Math.PI * 2) / o.curveStepCount;\n    const arcInc = Math.min(ellipseInc / 2, (stp - strt) / 2);\n    const ops = _arc(arcInc, cx, cy, rx, ry, strt, stp, 1, o);\n    if (!o.disableMultiStroke) {\n        const o2 = _arc(arcInc, cx, cy, rx, ry, strt, stp, 1.5, o);\n        ops.push(...o2);\n    }\n    if (closed) {\n        if (roughClosure) {\n            ops.push(..._doubleLine(cx, cy, cx + rx * Math.cos(strt), cy + ry * Math.sin(strt), o), ..._doubleLine(cx, cy, cx + rx * Math.cos(stp), cy + ry * Math.sin(stp), o));\n        }\n        else {\n            ops.push({ op: 'lineTo', data: [cx, cy] }, { op: 'lineTo', data: [cx + rx * Math.cos(strt), cy + ry * Math.sin(strt)] });\n        }\n    }\n    return { type: 'path', ops };\n}\nexport function svgPath(path, o) {\n    const segments = normalize(absolutize(parsePath(path)));\n    const ops = [];\n    let first = [0, 0];\n    let current = [0, 0];\n    for (const { key, data } of segments) {\n        switch (key) {\n            case 'M': {\n                const ro = 1 * (o.maxRandomnessOffset || 0);\n                const pv = o.preserveVertices;\n                ops.push({ op: 'move', data: data.map((d) => d + (pv ? 0 : _offsetOpt(ro, o))) });\n                current = [data[0], data[1]];\n                first = [data[0], data[1]];\n                break;\n            }\n            case 'L':\n                ops.push(..._doubleLine(current[0], current[1], data[0], data[1], o));\n                current = [data[0], data[1]];\n                break;\n            case 'C': {\n                const [x1, y1, x2, y2, x, y] = data;\n                ops.push(..._bezierTo(x1, y1, x2, y2, x, y, current, o));\n                current = [x, y];\n                break;\n            }\n            case 'Z':\n                ops.push(..._doubleLine(current[0], current[1], first[0], first[1], o));\n                current = [first[0], first[1]];\n                break;\n        }\n    }\n    return { type: 'path', ops };\n}\n// Fills\nexport function solidFillPolygon(polygonList, o) {\n    const ops = [];\n    for (const points of polygonList) {\n        if (points.length) {\n            const offset = o.maxRandomnessOffset || 0;\n            const len = points.length;\n            if (len > 2) {\n                ops.push({ op: 'move', data: [points[0][0] + _offsetOpt(offset, o), points[0][1] + _offsetOpt(offset, o)] });\n                for (let i = 1; i < len; i++) {\n                    ops.push({ op: 'lineTo', data: [points[i][0] + _offsetOpt(offset, o), points[i][1] + _offsetOpt(offset, o)] });\n                }\n            }\n        }\n    }\n    return { type: 'fillPath', ops };\n}\nexport function patternFillPolygons(polygonList, o) {\n    return getFiller(o, helper).fillPolygons(polygonList, o);\n}\nexport function patternFillArc(x, y, width, height, start, stop, o) {\n    const cx = x;\n    const cy = y;\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += _offsetOpt(rx * 0.01, o);\n    ry += _offsetOpt(ry * 0.01, o);\n    let strt = start;\n    let stp = stop;\n    while (strt < 0) {\n        strt += Math.PI * 2;\n        stp += Math.PI * 2;\n    }\n    if ((stp - strt) > (Math.PI * 2)) {\n        strt = 0;\n        stp = Math.PI * 2;\n    }\n    const increment = (stp - strt) / o.curveStepCount;\n    const points = [];\n    for (let angle = strt; angle <= stp; angle = angle + increment) {\n        points.push([cx + rx * Math.cos(angle), cy + ry * Math.sin(angle)]);\n    }\n    points.push([cx + rx * Math.cos(stp), cy + ry * Math.sin(stp)]);\n    points.push([cx, cy]);\n    return patternFillPolygons([points], o);\n}\nexport function randOffset(x, o) {\n    return _offsetOpt(x, o);\n}\nexport function randOffsetWithRange(min, max, o) {\n    return _offset(min, max, o);\n}\nexport function doubleLineFillOps(x1, y1, x2, y2, o) {\n    return _doubleLine(x1, y1, x2, y2, o, true);\n}\n// Private helpers\nfunction cloneOptionsAlterSeed(ops) {\n    const result = Object.assign({}, ops);\n    result.randomizer = undefined;\n    if (ops.seed) {\n        result.seed = ops.seed + 1;\n    }\n    return result;\n}\nfunction random(ops) {\n    if (!ops.randomizer) {\n        ops.randomizer = new Random(ops.seed || 0);\n    }\n    return ops.randomizer.next();\n}\nfunction _offset(min, max, ops, roughnessGain = 1) {\n    return ops.roughness * roughnessGain * ((random(ops) * (max - min)) + min);\n}\nfunction _offsetOpt(x, ops, roughnessGain = 1) {\n    return _offset(-x, x, ops, roughnessGain);\n}\nfunction _doubleLine(x1, y1, x2, y2, o, filling = false) {\n    const singleStroke = filling ? o.disableMultiStrokeFill : o.disableMultiStroke;\n    const o1 = _line(x1, y1, x2, y2, o, true, false);\n    if (singleStroke) {\n        return o1;\n    }\n    const o2 = _line(x1, y1, x2, y2, o, true, true);\n    return o1.concat(o2);\n}\nfunction _line(x1, y1, x2, y2, o, move, overlay) {\n    const lengthSq = Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2);\n    const length = Math.sqrt(lengthSq);\n    let roughnessGain = 1;\n    if (length < 200) {\n        roughnessGain = 1;\n    }\n    else if (length > 500) {\n        roughnessGain = 0.4;\n    }\n    else {\n        roughnessGain = (-0.0016668) * length + 1.233334;\n    }\n    let offset = o.maxRandomnessOffset || 0;\n    if ((offset * offset * 100) > lengthSq) {\n        offset = length / 10;\n    }\n    const halfOffset = offset / 2;\n    const divergePoint = 0.2 + random(o) * 0.2;\n    let midDispX = o.bowing * o.maxRandomnessOffset * (y2 - y1) / 200;\n    let midDispY = o.bowing * o.maxRandomnessOffset * (x1 - x2) / 200;\n    midDispX = _offsetOpt(midDispX, o, roughnessGain);\n    midDispY = _offsetOpt(midDispY, o, roughnessGain);\n    const ops = [];\n    const randomHalf = () => _offsetOpt(halfOffset, o, roughnessGain);\n    const randomFull = () => _offsetOpt(offset, o, roughnessGain);\n    const preserveVertices = o.preserveVertices;\n    if (move) {\n        if (overlay) {\n            ops.push({\n                op: 'move', data: [\n                    x1 + (preserveVertices ? 0 : randomHalf()),\n                    y1 + (preserveVertices ? 0 : randomHalf()),\n                ],\n            });\n        }\n        else {\n            ops.push({\n                op: 'move', data: [\n                    x1 + (preserveVertices ? 0 : _offsetOpt(offset, o, roughnessGain)),\n                    y1 + (preserveVertices ? 0 : _offsetOpt(offset, o, roughnessGain)),\n                ],\n            });\n        }\n    }\n    if (overlay) {\n        ops.push({\n            op: 'bcurveTo',\n            data: [\n                midDispX + x1 + (x2 - x1) * divergePoint + randomHalf(),\n                midDispY + y1 + (y2 - y1) * divergePoint + randomHalf(),\n                midDispX + x1 + 2 * (x2 - x1) * divergePoint + randomHalf(),\n                midDispY + y1 + 2 * (y2 - y1) * divergePoint + randomHalf(),\n                x2 + (preserveVertices ? 0 : randomHalf()),\n                y2 + (preserveVertices ? 0 : randomHalf()),\n            ],\n        });\n    }\n    else {\n        ops.push({\n            op: 'bcurveTo',\n            data: [\n                midDispX + x1 + (x2 - x1) * divergePoint + randomFull(),\n                midDispY + y1 + (y2 - y1) * divergePoint + randomFull(),\n                midDispX + x1 + 2 * (x2 - x1) * divergePoint + randomFull(),\n                midDispY + y1 + 2 * (y2 - y1) * divergePoint + randomFull(),\n                x2 + (preserveVertices ? 0 : randomFull()),\n                y2 + (preserveVertices ? 0 : randomFull()),\n            ],\n        });\n    }\n    return ops;\n}\nfunction _curveWithOffset(points, offset, o) {\n    const ps = [];\n    ps.push([\n        points[0][0] + _offsetOpt(offset, o),\n        points[0][1] + _offsetOpt(offset, o),\n    ]);\n    ps.push([\n        points[0][0] + _offsetOpt(offset, o),\n        points[0][1] + _offsetOpt(offset, o),\n    ]);\n    for (let i = 1; i < points.length; i++) {\n        ps.push([\n            points[i][0] + _offsetOpt(offset, o),\n            points[i][1] + _offsetOpt(offset, o),\n        ]);\n        if (i === (points.length - 1)) {\n            ps.push([\n                points[i][0] + _offsetOpt(offset, o),\n                points[i][1] + _offsetOpt(offset, o),\n            ]);\n        }\n    }\n    return _curve(ps, null, o);\n}\nfunction _curve(points, closePoint, o) {\n    const len = points.length;\n    const ops = [];\n    if (len > 3) {\n        const b = [];\n        const s = 1 - o.curveTightness;\n        ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n        for (let i = 1; (i + 2) < len; i++) {\n            const cachedVertArray = points[i];\n            b[0] = [cachedVertArray[0], cachedVertArray[1]];\n            b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n            b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n            b[3] = [points[i + 1][0], points[i + 1][1]];\n            ops.push({ op: 'bcurveTo', data: [b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]] });\n        }\n        if (closePoint && closePoint.length === 2) {\n            const ro = o.maxRandomnessOffset;\n            ops.push({ op: 'lineTo', data: [closePoint[0] + _offsetOpt(ro, o), closePoint[1] + _offsetOpt(ro, o)] });\n        }\n    }\n    else if (len === 3) {\n        ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n        ops.push({\n            op: 'bcurveTo',\n            data: [\n                points[1][0], points[1][1],\n                points[2][0], points[2][1],\n                points[2][0], points[2][1],\n            ],\n        });\n    }\n    else if (len === 2) {\n        ops.push(..._doubleLine(points[0][0], points[0][1], points[1][0], points[1][1], o));\n    }\n    return ops;\n}\nfunction _computeEllipsePoints(increment, cx, cy, rx, ry, offset, overlap, o) {\n    const coreOnly = o.roughness === 0;\n    const corePoints = [];\n    const allPoints = [];\n    if (coreOnly) {\n        increment = increment / 4;\n        allPoints.push([\n            cx + rx * Math.cos(-increment),\n            cy + ry * Math.sin(-increment),\n        ]);\n        for (let angle = 0; angle <= Math.PI * 2; angle = angle + increment) {\n            const p = [\n                cx + rx * Math.cos(angle),\n                cy + ry * Math.sin(angle),\n            ];\n            corePoints.push(p);\n            allPoints.push(p);\n        }\n        allPoints.push([\n            cx + rx * Math.cos(0),\n            cy + ry * Math.sin(0),\n        ]);\n        allPoints.push([\n            cx + rx * Math.cos(increment),\n            cy + ry * Math.sin(increment),\n        ]);\n    }\n    else {\n        const radOffset = _offsetOpt(0.5, o) - (Math.PI / 2);\n        allPoints.push([\n            _offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n            _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment),\n        ]);\n        const endAngle = Math.PI * 2 + radOffset - 0.01;\n        for (let angle = radOffset; angle < endAngle; angle = angle + increment) {\n            const p = [\n                _offsetOpt(offset, o) + cx + rx * Math.cos(angle),\n                _offsetOpt(offset, o) + cy + ry * Math.sin(angle),\n            ];\n            corePoints.push(p);\n            allPoints.push(p);\n        }\n        allPoints.push([\n            _offsetOpt(offset, o) + cx + rx * Math.cos(radOffset + Math.PI * 2 + overlap * 0.5),\n            _offsetOpt(offset, o) + cy + ry * Math.sin(radOffset + Math.PI * 2 + overlap * 0.5),\n        ]);\n        allPoints.push([\n            _offsetOpt(offset, o) + cx + 0.98 * rx * Math.cos(radOffset + overlap),\n            _offsetOpt(offset, o) + cy + 0.98 * ry * Math.sin(radOffset + overlap),\n        ]);\n        allPoints.push([\n            _offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset + overlap * 0.5),\n            _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset + overlap * 0.5),\n        ]);\n    }\n    return [allPoints, corePoints];\n}\nfunction _arc(increment, cx, cy, rx, ry, strt, stp, offset, o) {\n    const radOffset = strt + _offsetOpt(0.1, o);\n    const points = [];\n    points.push([\n        _offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n        _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment),\n    ]);\n    for (let angle = radOffset; angle <= stp; angle = angle + increment) {\n        points.push([\n            _offsetOpt(offset, o) + cx + rx * Math.cos(angle),\n            _offsetOpt(offset, o) + cy + ry * Math.sin(angle),\n        ]);\n    }\n    points.push([\n        cx + rx * Math.cos(stp),\n        cy + ry * Math.sin(stp),\n    ]);\n    points.push([\n        cx + rx * Math.cos(stp),\n        cy + ry * Math.sin(stp),\n    ]);\n    return _curve(points, null, o);\n}\nfunction _bezierTo(x1, y1, x2, y2, x, y, current, o) {\n    const ops = [];\n    const ros = [o.maxRandomnessOffset || 1, (o.maxRandomnessOffset || 1) + 0.3];\n    let f = [0, 0];\n    const iterations = o.disableMultiStroke ? 1 : 2;\n    const preserveVertices = o.preserveVertices;\n    for (let i = 0; i < iterations; i++) {\n        if (i === 0) {\n            ops.push({ op: 'move', data: [current[0], current[1]] });\n        }\n        else {\n            ops.push({ op: 'move', data: [current[0] + (preserveVertices ? 0 : _offsetOpt(ros[0], o)), current[1] + (preserveVertices ? 0 : _offsetOpt(ros[0], o))] });\n        }\n        f = preserveVertices ? [x, y] : [x + _offsetOpt(ros[i], o), y + _offsetOpt(ros[i], o)];\n        ops.push({\n            op: 'bcurveTo',\n            data: [\n                x1 + _offsetOpt(ros[i], o), y1 + _offsetOpt(ros[i], o),\n                x2 + _offsetOpt(ros[i], o), y2 + _offsetOpt(ros[i], o),\n                f[0], f[1],\n            ],\n        });\n    }\n    return ops;\n}\n","function clone(p) {\n    return [...p];\n}\nexport function curveToBezier(pointsIn, curveTightness = 0) {\n    const len = pointsIn.length;\n    if (len < 3) {\n        throw new Error('A curve must have at least three points.');\n    }\n    const out = [];\n    if (len === 3) {\n        out.push(clone(pointsIn[0]), clone(pointsIn[1]), clone(pointsIn[2]), clone(pointsIn[2]));\n    }\n    else {\n        const points = [];\n        points.push(pointsIn[0], pointsIn[0]);\n        for (let i = 1; i < pointsIn.length; i++) {\n            points.push(pointsIn[i]);\n            if (i === (pointsIn.length - 1)) {\n                points.push(pointsIn[i]);\n            }\n        }\n        const b = [];\n        const s = 1 - curveTightness;\n        out.push(clone(points[0]));\n        for (let i = 1; (i + 2) < points.length; i++) {\n            const cachedVertArray = points[i];\n            b[0] = [cachedVertArray[0], cachedVertArray[1]];\n            b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n            b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n            b[3] = [points[i + 1][0], points[i + 1][1]];\n            out.push(b[1], b[2], b[3]);\n        }\n    }\n    return out;\n}\n","// distance between 2 points\nfunction distance(p1, p2) {\n    return Math.sqrt(distanceSq(p1, p2));\n}\n// distance between 2 points squared\nfunction distanceSq(p1, p2) {\n    return Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2);\n}\n// Sistance squared from a point p to the line segment vw\nfunction distanceToSegmentSq(p, v, w) {\n    const l2 = distanceSq(v, w);\n    if (l2 === 0) {\n        return distanceSq(p, v);\n    }\n    let t = ((p[0] - v[0]) * (w[0] - v[0]) + (p[1] - v[1]) * (w[1] - v[1])) / l2;\n    t = Math.max(0, Math.min(1, t));\n    return distanceSq(p, lerp(v, w, t));\n}\nfunction lerp(a, b, t) {\n    return [\n        a[0] + (b[0] - a[0]) * t,\n        a[1] + (b[1] - a[1]) * t,\n    ];\n}\n// Adapted from https://seant23.wordpress.com/2010/11/12/offset-bezier-curves/\nfunction flatness(points, offset) {\n    const p1 = points[offset + 0];\n    const p2 = points[offset + 1];\n    const p3 = points[offset + 2];\n    const p4 = points[offset + 3];\n    let ux = 3 * p2[0] - 2 * p1[0] - p4[0];\n    ux *= ux;\n    let uy = 3 * p2[1] - 2 * p1[1] - p4[1];\n    uy *= uy;\n    let vx = 3 * p3[0] - 2 * p4[0] - p1[0];\n    vx *= vx;\n    let vy = 3 * p3[1] - 2 * p4[1] - p1[1];\n    vy *= vy;\n    if (ux < vx) {\n        ux = vx;\n    }\n    if (uy < vy) {\n        uy = vy;\n    }\n    return ux + uy;\n}\nfunction getPointsOnBezierCurveWithSplitting(points, offset, tolerance, newPoints) {\n    const outPoints = newPoints || [];\n    if (flatness(points, offset) < tolerance) {\n        const p0 = points[offset + 0];\n        if (outPoints.length) {\n            const d = distance(outPoints[outPoints.length - 1], p0);\n            if (d > 1) {\n                outPoints.push(p0);\n            }\n        }\n        else {\n            outPoints.push(p0);\n        }\n        outPoints.push(points[offset + 3]);\n    }\n    else {\n        // subdivide\n        const t = .5;\n        const p1 = points[offset + 0];\n        const p2 = points[offset + 1];\n        const p3 = points[offset + 2];\n        const p4 = points[offset + 3];\n        const q1 = lerp(p1, p2, t);\n        const q2 = lerp(p2, p3, t);\n        const q3 = lerp(p3, p4, t);\n        const r1 = lerp(q1, q2, t);\n        const r2 = lerp(q2, q3, t);\n        const red = lerp(r1, r2, t);\n        getPointsOnBezierCurveWithSplitting([p1, q1, r1, red], 0, tolerance, outPoints);\n        getPointsOnBezierCurveWithSplitting([red, r2, q3, p4], 0, tolerance, outPoints);\n    }\n    return outPoints;\n}\nexport function simplify(points, distance) {\n    return simplifyPoints(points, 0, points.length, distance);\n}\n// Ramer–Douglas–Peucker algorithm\n// https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm\nfunction simplifyPoints(points, start, end, epsilon, newPoints) {\n    const outPoints = newPoints || [];\n    // find the most distance point from the endpoints\n    const s = points[start];\n    const e = points[end - 1];\n    let maxDistSq = 0;\n    let maxNdx = 1;\n    for (let i = start + 1; i < end - 1; ++i) {\n        const distSq = distanceToSegmentSq(points[i], s, e);\n        if (distSq > maxDistSq) {\n            maxDistSq = distSq;\n            maxNdx = i;\n        }\n    }\n    // if that point is too far, split\n    if (Math.sqrt(maxDistSq) > epsilon) {\n        simplifyPoints(points, start, maxNdx + 1, epsilon, outPoints);\n        simplifyPoints(points, maxNdx, end, epsilon, outPoints);\n    }\n    else {\n        if (!outPoints.length) {\n            outPoints.push(s);\n        }\n        outPoints.push(e);\n    }\n    return outPoints;\n}\nexport function pointsOnBezierCurves(points, tolerance = 0.15, distance) {\n    const newPoints = [];\n    const numSegments = (points.length - 1) / 3;\n    for (let i = 0; i < numSegments; i++) {\n        const offset = i * 3;\n        getPointsOnBezierCurveWithSplitting(points, offset, tolerance, newPoints);\n    }\n    if (distance && distance > 0) {\n        return simplifyPoints(newPoints, 0, newPoints.length, distance);\n    }\n    return newPoints;\n}\n","import { pointsOnBezierCurves, simplify } from 'points-on-curve';\nimport { parsePath, absolutize, normalize } from 'path-data-parser';\nexport function pointsOnPath(path, tolerance, distance) {\n    const segments = parsePath(path);\n    const normalized = normalize(absolutize(segments));\n    const sets = [];\n    let currentPoints = [];\n    let start = [0, 0];\n    let pendingCurve = [];\n    const appendPendingCurve = () => {\n        if (pendingCurve.length >= 4) {\n            currentPoints.push(...pointsOnBezierCurves(pendingCurve, tolerance));\n        }\n        pendingCurve = [];\n    };\n    const appendPendingPoints = () => {\n        appendPendingCurve();\n        if (currentPoints.length) {\n            sets.push(currentPoints);\n            currentPoints = [];\n        }\n    };\n    for (const { key, data } of normalized) {\n        switch (key) {\n            case 'M':\n                appendPendingPoints();\n                start = [data[0], data[1]];\n                currentPoints.push(start);\n                break;\n            case 'L':\n                appendPendingCurve();\n                currentPoints.push([data[0], data[1]]);\n                break;\n            case 'C':\n                if (!pendingCurve.length) {\n                    const lastPoint = currentPoints.length ? currentPoints[currentPoints.length - 1] : start;\n                    pendingCurve.push([lastPoint[0], lastPoint[1]]);\n                }\n                pendingCurve.push([data[0], data[1]]);\n                pendingCurve.push([data[2], data[3]]);\n                pendingCurve.push([data[4], data[5]]);\n                break;\n            case 'Z':\n                appendPendingCurve();\n                currentPoints.push([start[0], start[1]]);\n                break;\n        }\n    }\n    appendPendingPoints();\n    if (!distance) {\n        return sets;\n    }\n    const out = [];\n    for (const set of sets) {\n        const simplifiedSet = simplify(set, distance);\n        if (simplifiedSet.length) {\n            out.push(simplifiedSet);\n        }\n    }\n    return out;\n}\n","import { line, solidFillPolygon, patternFillPolygons, rectangle, ellipseWithParams, generateEllipseParams, linearPath, arc, patternFillArc, curve, svgPath } from './renderer.js';\nimport { randomSeed } from './math.js';\nimport { curveToBezier } from 'points-on-curve/lib/curve-to-bezier.js';\nimport { pointsOnBezierCurves } from 'points-on-curve';\nimport { pointsOnPath } from 'points-on-path';\nconst NOS = 'none';\nexport class RoughGenerator {\n    constructor(config) {\n        this.defaultOptions = {\n            maxRandomnessOffset: 2,\n            roughness: 1,\n            bowing: 1,\n            stroke: '#000',\n            strokeWidth: 1,\n            curveTightness: 0,\n            curveFitting: 0.95,\n            curveStepCount: 9,\n            fillStyle: 'hachure',\n            fillWeight: -1,\n            hachureAngle: -41,\n            hachureGap: -1,\n            dashOffset: -1,\n            dashGap: -1,\n            zigzagOffset: -1,\n            seed: 0,\n            disableMultiStroke: false,\n            disableMultiStrokeFill: false,\n            preserveVertices: false,\n        };\n        this.config = config || {};\n        if (this.config.options) {\n            this.defaultOptions = this._o(this.config.options);\n        }\n    }\n    static newSeed() {\n        return randomSeed();\n    }\n    _o(options) {\n        return options ? Object.assign({}, this.defaultOptions, options) : this.defaultOptions;\n    }\n    _d(shape, sets, options) {\n        return { shape, sets: sets || [], options: options || this.defaultOptions };\n    }\n    line(x1, y1, x2, y2, options) {\n        const o = this._o(options);\n        return this._d('line', [line(x1, y1, x2, y2, o)], o);\n    }\n    rectangle(x, y, width, height, options) {\n        const o = this._o(options);\n        const paths = [];\n        const outline = rectangle(x, y, width, height, o);\n        if (o.fill) {\n            const points = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n            if (o.fillStyle === 'solid') {\n                paths.push(solidFillPolygon([points], o));\n            }\n            else {\n                paths.push(patternFillPolygons([points], o));\n            }\n        }\n        if (o.stroke !== NOS) {\n            paths.push(outline);\n        }\n        return this._d('rectangle', paths, o);\n    }\n    ellipse(x, y, width, height, options) {\n        const o = this._o(options);\n        const paths = [];\n        const ellipseParams = generateEllipseParams(width, height, o);\n        const ellipseResponse = ellipseWithParams(x, y, o, ellipseParams);\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = ellipseWithParams(x, y, o, ellipseParams).opset;\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(patternFillPolygons([ellipseResponse.estimatedPoints], o));\n            }\n        }\n        if (o.stroke !== NOS) {\n            paths.push(ellipseResponse.opset);\n        }\n        return this._d('ellipse', paths, o);\n    }\n    circle(x, y, diameter, options) {\n        const ret = this.ellipse(x, y, diameter, diameter, options);\n        ret.shape = 'circle';\n        return ret;\n    }\n    linearPath(points, options) {\n        const o = this._o(options);\n        return this._d('linearPath', [linearPath(points, false, o)], o);\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const o = this._o(options);\n        const paths = [];\n        const outline = arc(x, y, width, height, start, stop, closed, true, o);\n        if (closed && o.fill) {\n            if (o.fillStyle === 'solid') {\n                const fillOptions = Object.assign({}, o);\n                fillOptions.disableMultiStroke = true;\n                const shape = arc(x, y, width, height, start, stop, true, false, fillOptions);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(patternFillArc(x, y, width, height, start, stop, o));\n            }\n        }\n        if (o.stroke !== NOS) {\n            paths.push(outline);\n        }\n        return this._d('arc', paths, o);\n    }\n    curve(points, options) {\n        const o = this._o(options);\n        const paths = [];\n        const outline = curve(points, o);\n        if (o.fill && o.fill !== NOS && points.length >= 3) {\n            const bcurve = curveToBezier(points);\n            const polyPoints = pointsOnBezierCurves(bcurve, 10, (1 + o.roughness) / 2);\n            if (o.fillStyle === 'solid') {\n                paths.push(solidFillPolygon([polyPoints], o));\n            }\n            else {\n                paths.push(patternFillPolygons([polyPoints], o));\n            }\n        }\n        if (o.stroke !== NOS) {\n            paths.push(outline);\n        }\n        return this._d('curve', paths, o);\n    }\n    polygon(points, options) {\n        const o = this._o(options);\n        const paths = [];\n        const outline = linearPath(points, true, o);\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                paths.push(solidFillPolygon([points], o));\n            }\n            else {\n                paths.push(patternFillPolygons([points], o));\n            }\n        }\n        if (o.stroke !== NOS) {\n            paths.push(outline);\n        }\n        return this._d('polygon', paths, o);\n    }\n    path(d, options) {\n        const o = this._o(options);\n        const paths = [];\n        if (!d) {\n            return this._d('path', paths, o);\n        }\n        d = (d || '').replace(/\\n/g, ' ').replace(/(-\\s)/g, '-').replace('/(\\s\\s)/g', ' ');\n        const hasFill = o.fill && o.fill !== 'transparent' && o.fill !== NOS;\n        const hasStroke = o.stroke !== NOS;\n        const simplified = !!(o.simplification && (o.simplification < 1));\n        const distance = simplified ? (4 - 4 * (o.simplification)) : ((1 + o.roughness) / 2);\n        const sets = pointsOnPath(d, 1, distance);\n        if (hasFill) {\n            if (o.fillStyle === 'solid') {\n                paths.push(solidFillPolygon(sets, o));\n            }\n            else {\n                paths.push(patternFillPolygons(sets, o));\n            }\n        }\n        if (hasStroke) {\n            if (simplified) {\n                sets.forEach((set) => {\n                    paths.push(linearPath(set, false, o));\n                });\n            }\n            else {\n                paths.push(svgPath(d, o));\n            }\n        }\n        return this._d('path', paths, o);\n    }\n    opsToPath(drawing, fixedDecimals) {\n        let path = '';\n        for (const item of drawing.ops) {\n            const data = ((typeof fixedDecimals === 'number') && fixedDecimals >= 0) ? (item.data.map((d) => +d.toFixed(fixedDecimals))) : item.data;\n            switch (item.op) {\n                case 'move':\n                    path += `M${data[0]} ${data[1]} `;\n                    break;\n                case 'bcurveTo':\n                    path += `C${data[0]} ${data[1]}, ${data[2]} ${data[3]}, ${data[4]} ${data[5]} `;\n                    break;\n                case 'lineTo':\n                    path += `L${data[0]} ${data[1]} `;\n                    break;\n            }\n        }\n        return path.trim();\n    }\n    toPaths(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.defaultOptions;\n        const paths = [];\n        for (const drawing of sets) {\n            let path = null;\n            switch (drawing.type) {\n                case 'path':\n                    path = {\n                        d: this.opsToPath(drawing),\n                        stroke: o.stroke,\n                        strokeWidth: o.strokeWidth,\n                        fill: NOS,\n                    };\n                    break;\n                case 'fillPath':\n                    path = {\n                        d: this.opsToPath(drawing),\n                        stroke: NOS,\n                        strokeWidth: 0,\n                        fill: o.fill || NOS,\n                    };\n                    break;\n                case 'fillSketch':\n                    path = this.fillSketch(drawing, o);\n                    break;\n            }\n            if (path) {\n                paths.push(path);\n            }\n        }\n        return paths;\n    }\n    fillSketch(drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        return {\n            d: this.opsToPath(drawing),\n            stroke: o.fill || NOS,\n            strokeWidth: fweight,\n            fill: NOS,\n        };\n    }\n}\n","import { RoughGenerator } from './generator';\nexport class RoughCanvas {\n    constructor(canvas, config) {\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext('2d');\n        this.gen = new RoughGenerator(config);\n    }\n    draw(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.getDefaultOptions();\n        const ctx = this.ctx;\n        const precision = drawable.options.fixedDecimalPlaceDigits;\n        for (const drawing of sets) {\n            switch (drawing.type) {\n                case 'path':\n                    ctx.save();\n                    ctx.strokeStyle = o.stroke === 'none' ? 'transparent' : o.stroke;\n                    ctx.lineWidth = o.strokeWidth;\n                    if (o.strokeLineDash) {\n                        ctx.setLineDash(o.strokeLineDash);\n                    }\n                    if (o.strokeLineDashOffset) {\n                        ctx.lineDashOffset = o.strokeLineDashOffset;\n                    }\n                    this._drawToContext(ctx, drawing, precision);\n                    ctx.restore();\n                    break;\n                case 'fillPath': {\n                    ctx.save();\n                    ctx.fillStyle = o.fill || '';\n                    const fillRule = (drawable.shape === 'curve' || drawable.shape === 'polygon' || drawable.shape === 'path') ? 'evenodd' : 'nonzero';\n                    this._drawToContext(ctx, drawing, precision, fillRule);\n                    ctx.restore();\n                    break;\n                }\n                case 'fillSketch':\n                    this.fillSketch(ctx, drawing, o);\n                    break;\n            }\n        }\n    }\n    fillSketch(ctx, drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        ctx.save();\n        if (o.fillLineDash) {\n            ctx.setLineDash(o.fillLineDash);\n        }\n        if (o.fillLineDashOffset) {\n            ctx.lineDashOffset = o.fillLineDashOffset;\n        }\n        ctx.strokeStyle = o.fill || '';\n        ctx.lineWidth = fweight;\n        this._drawToContext(ctx, drawing, o.fixedDecimalPlaceDigits);\n        ctx.restore();\n    }\n    _drawToContext(ctx, drawing, fixedDecimals, rule = 'nonzero') {\n        ctx.beginPath();\n        for (const item of drawing.ops) {\n            const data = ((typeof fixedDecimals === 'number') && fixedDecimals >= 0) ? (item.data.map((d) => +d.toFixed(fixedDecimals))) : item.data;\n            switch (item.op) {\n                case 'move':\n                    ctx.moveTo(data[0], data[1]);\n                    break;\n                case 'bcurveTo':\n                    ctx.bezierCurveTo(data[0], data[1], data[2], data[3], data[4], data[5]);\n                    break;\n                case 'lineTo':\n                    ctx.lineTo(data[0], data[1]);\n                    break;\n            }\n        }\n        if (drawing.type === 'fillPath') {\n            ctx.fill(rule);\n        }\n        else {\n            ctx.stroke();\n        }\n    }\n    get generator() {\n        return this.gen;\n    }\n    getDefaultOptions() {\n        return this.gen.defaultOptions;\n    }\n    line(x1, y1, x2, y2, options) {\n        const d = this.gen.line(x1, y1, x2, y2, options);\n        this.draw(d);\n        return d;\n    }\n    rectangle(x, y, width, height, options) {\n        const d = this.gen.rectangle(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    ellipse(x, y, width, height, options) {\n        const d = this.gen.ellipse(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    circle(x, y, diameter, options) {\n        const d = this.gen.circle(x, y, diameter, options);\n        this.draw(d);\n        return d;\n    }\n    linearPath(points, options) {\n        const d = this.gen.linearPath(points, options);\n        this.draw(d);\n        return d;\n    }\n    polygon(points, options) {\n        const d = this.gen.polygon(points, options);\n        this.draw(d);\n        return d;\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n        this.draw(d);\n        return d;\n    }\n    curve(points, options) {\n        const d = this.gen.curve(points, options);\n        this.draw(d);\n        return d;\n    }\n    path(d, options) {\n        const drawing = this.gen.path(d, options);\n        this.draw(drawing);\n        return drawing;\n    }\n}\n","import { clamp, Point } from '@blocksuite/blocks/std';\nimport { assertNotExists } from '@blocksuite/global/utils';\nimport { RoughCanvas } from 'roughjs/bin/canvas.js';\nimport { ZOOM_MAX, ZOOM_MIN } from './consts.js';\nimport { GridManager } from './grid.js';\nimport { intersects } from './utils/hit-utils.js';\nexport class Renderer {\n    constructor() {\n        this.gridManager = new GridManager();\n        this._left = 0;\n        this._top = 0;\n        this._width = 0;\n        this._height = 0;\n        this._zoom = 1.0;\n        this._center = new Point();\n        this._shouldUpdate = false;\n        this.applyDeltaCenter = (deltaX, deltaY) => {\n            this.setCenter(this.centerX + deltaX, this.centerY + deltaY);\n        };\n        const canvas = document.createElement('canvas');\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext('2d');\n        this.rc = new RoughCanvas(canvas);\n    }\n    get left() {\n        return this._left;\n    }\n    get top() {\n        return this._top;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get zoom() {\n        return this._zoom;\n    }\n    get centerX() {\n        return this._center.x;\n    }\n    get centerY() {\n        return this._center.y;\n    }\n    get center() {\n        return this._center;\n    }\n    get viewportX() {\n        const { centerX, width, zoom } = this;\n        return centerX - width / 2 / zoom;\n    }\n    get viewportY() {\n        const { centerY, height, zoom } = this;\n        return centerY - height / 2 / zoom;\n    }\n    get viewportMinXY() {\n        const { centerX, centerY, width, height, zoom } = this;\n        return {\n            x: centerX - width / 2 / zoom,\n            y: centerY - height / 2 / zoom,\n        };\n    }\n    get viewportMaxXY() {\n        const { centerX, centerY, width, height, zoom } = this;\n        return {\n            x: centerX + width / 2 / zoom,\n            y: centerY + height / 2 / zoom,\n        };\n    }\n    get viewportBounds() {\n        const { viewportMinXY, viewportMaxXY } = this;\n        return {\n            ...viewportMinXY,\n            w: viewportMaxXY.x - viewportMinXY.x,\n            h: viewportMaxXY.y - viewportMinXY.y,\n        };\n    }\n    toModelCoord(viewX, viewY) {\n        const { viewportX, viewportY, zoom } = this;\n        return [viewportX + viewX / zoom, viewportY + viewY / zoom];\n    }\n    toViewCoord(logicalX, logicalY) {\n        const { viewportX, viewportY, zoom } = this;\n        return [(logicalX - viewportX) * zoom, (logicalY - viewportY) * zoom];\n    }\n    setCenter(centerX, centerY) {\n        this._center.set(centerX, centerY);\n        this._shouldUpdate = true;\n    }\n    /**\n     *\n     * @param zoom zoom\n     * @param focusPoint canvas coordinate\n     */\n    setZoom(zoom, focusPoint) {\n        const prevZoom = this.zoom;\n        focusPoint = focusPoint ?? this._center;\n        this._zoom = clamp(zoom, ZOOM_MIN, ZOOM_MAX);\n        const newZoom = this.zoom;\n        const offset = this.center.subtract(focusPoint);\n        const newCenter = focusPoint.add(offset.scale(prevZoom / newZoom));\n        this.setCenter(newCenter.x, newCenter.y);\n        this._shouldUpdate = true;\n    }\n    addElement(element) {\n        this.gridManager.add(element);\n        this._shouldUpdate = true;\n    }\n    removeElement(element) {\n        this.gridManager.remove(element);\n        this._shouldUpdate = true;\n    }\n    load(elements) {\n        for (let i = 0; i < elements.length; i++) {\n            this.gridManager.add(elements[i]);\n        }\n        this._shouldUpdate = true;\n    }\n    refresh() {\n        this._shouldUpdate = true;\n    }\n    attach(container) {\n        assertNotExists(this._container, 'Phasor surface is attached multiple times');\n        this._container = container;\n        container.appendChild(this.canvas);\n        this._resetSize();\n        this._loop();\n    }\n    onResize() {\n        const oldWidth = this.width;\n        const oldHeight = this.height;\n        this._resetSize();\n        this.setCenter(this.centerX - (oldWidth - this.width) / 2, this.centerY - (oldHeight - this.height) / 2);\n        // Re-render once the canvas size changed. Otherwise it will flicker.\n        // Because the observer will be called after DOM element rendered,\n        // by the time the canvas content is stale.\n        this._render();\n        this._shouldUpdate = false;\n    }\n    _resetSize() {\n        const { canvas } = this;\n        const dpr = window.devicePixelRatio;\n        canvas.style.width = '100%';\n        canvas.style.height = '100%';\n        const bbox = canvas.getBoundingClientRect();\n        canvas.width = Math.ceil(bbox.width * dpr);\n        canvas.height = Math.ceil(bbox.height * dpr);\n        this._left = bbox.left;\n        this._top = bbox.top;\n        this._width = bbox.width;\n        this._height = bbox.height;\n        this._shouldUpdate = true;\n    }\n    _loop() {\n        requestAnimationFrame(() => {\n            if (this._shouldUpdate) {\n                this._render();\n            }\n            this._shouldUpdate = false;\n            this._loop();\n        });\n    }\n    _render() {\n        const { ctx, gridManager, viewportBounds, width, height, rc, zoom } = this;\n        const dpr = window.devicePixelRatio;\n        ctx.clearRect(0, 0, width * dpr, height * dpr);\n        ctx.save();\n        ctx.setTransform(zoom * dpr, 0, 0, zoom * dpr, 0, 0);\n        const elements = gridManager.search(viewportBounds);\n        for (const element of elements) {\n            const dx = element.x - viewportBounds.x;\n            const dy = element.y - viewportBounds.y;\n            ctx.save();\n            ctx.translate(dx, dy);\n            if (intersects(element, viewportBounds) && element.display) {\n                element.render(ctx, rc);\n            }\n            ctx.restore();\n        }\n        ctx.restore();\n    }\n}\n//# sourceMappingURL=renderer.js.map","// License: CC0 (no rights reserved).\n\n// This is based on https://observablehq.com/@dgreensp/implementing-fractional-indexing\n\nexport const BASE_62_DIGITS =\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n// `a` may be empty string, `b` is null or non-empty string.\n// `a < b` lexicographically if `b` is non-null.\n// no trailing zeros allowed.\n// digits is a string such as '0123456789' for base 10.  Digits must be in\n// ascending character code order!\n/**\n * @param {string} a\n * @param {string | null | undefined} b\n * @param {string} digits\n * @returns {string}\n */\nfunction midpoint(a, b, digits) {\n  const zero = digits[0];\n  if (b != null && a >= b) {\n    throw new Error(a + \" >= \" + b);\n  }\n  if (a.slice(-1) === zero || (b && b.slice(-1) === zero)) {\n    throw new Error(\"trailing zero\");\n  }\n  if (b) {\n    // remove longest common prefix.  pad `a` with 0s as we\n    // go.  note that we don't need to pad `b`, because it can't\n    // end before `a` while traversing the common prefix.\n    let n = 0;\n    while ((a[n] || zero) === b[n]) {\n      n++;\n    }\n    if (n > 0) {\n      return b.slice(0, n) + midpoint(a.slice(n), b.slice(n), digits);\n    }\n  }\n  // first digits (or lack of digit) are different\n  const digitA = a ? digits.indexOf(a[0]) : 0;\n  const digitB = b != null ? digits.indexOf(b[0]) : digits.length;\n  if (digitB - digitA > 1) {\n    const midDigit = Math.round(0.5 * (digitA + digitB));\n    return digits[midDigit];\n  } else {\n    // first digits are consecutive\n    if (b && b.length > 1) {\n      return b.slice(0, 1);\n    } else {\n      // `b` is null or has length 1 (a single digit).\n      // the first digit of `a` is the previous digit to `b`,\n      // or 9 if `b` is null.\n      // given, for example, midpoint('49', '5'), return\n      // '4' + midpoint('9', null), which will become\n      // '4' + '9' + midpoint('', null), which is '495'\n      return digits[digitA] + midpoint(a.slice(1), null, digits);\n    }\n  }\n}\n\n/**\n * @param {string} int\n * @return {void}\n */\n\nfunction validateInteger(int) {\n  if (int.length !== getIntegerLength(int[0])) {\n    throw new Error(\"invalid integer part of order key: \" + int);\n  }\n}\n\n/**\n * @param {string} head\n * @return {number}\n */\n\nfunction getIntegerLength(head) {\n  if (head >= \"a\" && head <= \"z\") {\n    return head.charCodeAt(0) - \"a\".charCodeAt(0) + 2;\n  } else if (head >= \"A\" && head <= \"Z\") {\n    return \"Z\".charCodeAt(0) - head.charCodeAt(0) + 2;\n  } else {\n    throw new Error(\"invalid order key head: \" + head);\n  }\n}\n\n/**\n * @param {string} key\n * @return {string}\n */\n\nfunction getIntegerPart(key) {\n  const integerPartLength = getIntegerLength(key[0]);\n  if (integerPartLength > key.length) {\n    throw new Error(\"invalid order key: \" + key);\n  }\n  return key.slice(0, integerPartLength);\n}\n\n/**\n * @param {string} key\n * @param {string} digits\n * @return {void}\n */\n\nfunction validateOrderKey(key, digits) {\n  if (key === \"A\" + digits[0].repeat(26)) {\n    throw new Error(\"invalid order key: \" + key);\n  }\n  // getIntegerPart will throw if the first character is bad,\n  // or the key is too short.  we'd call it to check these things\n  // even if we didn't need the result\n  const i = getIntegerPart(key);\n  const f = key.slice(i.length);\n  if (f.slice(-1) === digits[0]) {\n    throw new Error(\"invalid order key: \" + key);\n  }\n}\n\n// note that this may return null, as there is a largest integer\n/**\n * @param {string} x\n * @param {string} digits\n * @return {string | null}\n */\nfunction incrementInteger(x, digits) {\n  validateInteger(x);\n  const [head, ...digs] = x.split(\"\");\n  let carry = true;\n  for (let i = digs.length - 1; carry && i >= 0; i--) {\n    const d = digits.indexOf(digs[i]) + 1;\n    if (d === digits.length) {\n      digs[i] = digits[0];\n    } else {\n      digs[i] = digits[d];\n      carry = false;\n    }\n  }\n  if (carry) {\n    if (head === \"Z\") {\n      return \"a\" + digits[0];\n    }\n    if (head === \"z\") {\n      return null;\n    }\n    const h = String.fromCharCode(head.charCodeAt(0) + 1);\n    if (h > \"a\") {\n      digs.push(digits[0]);\n    } else {\n      digs.pop();\n    }\n    return h + digs.join(\"\");\n  } else {\n    return head + digs.join(\"\");\n  }\n}\n\n// note that this may return null, as there is a smallest integer\n/**\n * @param {string} x\n * @param {string} digits\n * @return {string | null}\n */\n\nfunction decrementInteger(x, digits) {\n  validateInteger(x);\n  const [head, ...digs] = x.split(\"\");\n  let borrow = true;\n  for (let i = digs.length - 1; borrow && i >= 0; i--) {\n    const d = digits.indexOf(digs[i]) - 1;\n    if (d === -1) {\n      digs[i] = digits.slice(-1);\n    } else {\n      digs[i] = digits[d];\n      borrow = false;\n    }\n  }\n  if (borrow) {\n    if (head === \"a\") {\n      return \"Z\" + digits.slice(-1);\n    }\n    if (head === \"A\") {\n      return null;\n    }\n    const h = String.fromCharCode(head.charCodeAt(0) - 1);\n    if (h < \"Z\") {\n      digs.push(digits.slice(-1));\n    } else {\n      digs.pop();\n    }\n    return h + digs.join(\"\");\n  } else {\n    return head + digs.join(\"\");\n  }\n}\n\n// `a` is an order key or null (START).\n// `b` is an order key or null (END).\n// `a < b` lexicographically if both are non-null.\n// digits is a string such as '0123456789' for base 10.  Digits must be in\n// ascending character code order!\n/**\n * @param {string | null | undefined} a\n * @param {string | null | undefined} b\n * @param {string=} digits\n * @return {string}\n */\nexport function generateKeyBetween(a, b, digits = BASE_62_DIGITS) {\n  if (a != null) {\n    validateOrderKey(a, digits);\n  }\n  if (b != null) {\n    validateOrderKey(b, digits);\n  }\n  if (a != null && b != null && a >= b) {\n    throw new Error(a + \" >= \" + b);\n  }\n  if (a == null) {\n    if (b == null) {\n      return \"a\" + digits[0];\n    }\n\n    const ib = getIntegerPart(b);\n    const fb = b.slice(ib.length);\n    if (ib === \"A\" + digits[0].repeat(26)) {\n      return ib + midpoint(\"\", fb, digits);\n    }\n    if (ib < b) {\n      return ib;\n    }\n    const res = decrementInteger(ib, digits);\n    if (res == null) {\n      throw new Error(\"cannot decrement any more\");\n    }\n    return res;\n  }\n\n  if (b == null) {\n    const ia = getIntegerPart(a);\n    const fa = a.slice(ia.length);\n    const i = incrementInteger(ia, digits);\n    return i == null ? ia + midpoint(fa, null, digits) : i;\n  }\n\n  const ia = getIntegerPart(a);\n  const fa = a.slice(ia.length);\n  const ib = getIntegerPart(b);\n  const fb = b.slice(ib.length);\n  if (ia === ib) {\n    return ia + midpoint(fa, fb, digits);\n  }\n  const i = incrementInteger(ia, digits);\n  if (i == null) {\n    throw new Error(\"cannot increment any more\");\n  }\n  if (i < b) {\n    return i;\n  }\n  return ia + midpoint(fa, null, digits);\n}\n\n/**\n * same preconditions as generateKeysBetween.\n * n >= 0.\n * Returns an array of n distinct keys in sorted order.\n * If a and b are both null, returns [a0, a1, ...]\n * If one or the other is null, returns consecutive \"integer\"\n * keys.  Otherwise, returns relatively short keys between\n * a and b.\n * @param {string | null | undefined} a\n * @param {string | null | undefined} b\n * @param {number} n\n * @param {string} digits\n * @return {string[]}\n */\nexport function generateNKeysBetween(a, b, n, digits = BASE_62_DIGITS) {\n  if (n === 0) {\n    return [];\n  }\n  if (n === 1) {\n    return [generateKeyBetween(a, b, digits)];\n  }\n  if (b == null) {\n    let c = generateKeyBetween(a, b, digits);\n    const result = [c];\n    for (let i = 0; i < n - 1; i++) {\n      c = generateKeyBetween(c, b, digits);\n      result.push(c);\n    }\n    return result;\n  }\n  if (a == null) {\n    let c = generateKeyBetween(a, b, digits);\n    const result = [c];\n    for (let i = 0; i < n - 1; i++) {\n      c = generateKeyBetween(a, c, digits);\n      result.push(c);\n    }\n    result.reverse();\n    return result;\n  }\n  const mid = Math.floor(n / 2);\n  const c = generateKeyBetween(a, b, digits);\n  return [\n    ...generateNKeysBetween(a, c, mid, digits),\n    c,\n    ...generateNKeysBetween(c, b, n - mid - 1, digits),\n  ];\n}\n","import { nanoid } from 'nanoid';\nimport { ZOOM_STEP } from '../consts.js';\nexport { generateKeyBetween, generateNKeysBetween } from 'fractional-indexing';\nexport function generateElementId() {\n    return nanoid(10);\n}\n/**\n * Normalizes wheel delta.\n *\n * See https://stackoverflow.com/a/13650579\n *\n * From https://github.com/excalidraw/excalidraw/blob/master/src/components/App.tsx\n * MIT License\n */\nexport function normalizeWheelDeltaY(delta, zoom = 1) {\n    const sign = Math.sign(delta);\n    const abs = Math.abs(delta);\n    const maxStep = ZOOM_STEP * 100;\n    if (abs > maxStep) {\n        delta = maxStep * sign;\n    }\n    let newZoom = zoom - delta / 100;\n    // increase zoom steps the more zoomed-in we are (applies to >100% only)\n    newZoom +=\n        Math.log10(Math.max(1, zoom)) *\n            -sign *\n            // reduced amplification for small deltas (small movements on a trackpad)\n            Math.min(1, abs / 20);\n    return newZoom;\n}\n//# sourceMappingURL=std.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport { randomSeed } from 'roughjs/bin/math.js';\nimport * as Y from 'yjs';\nimport { ConnectorElement, ElementCtors, ElementDefaultProps, } from './elements/index.js';\nimport { compare } from './grid.js';\nimport { Renderer } from './renderer.js';\nimport { contains, getCommonBound } from './utils/bound.js';\nimport { intersects } from './utils/hit-utils.js';\nimport { generateElementId, generateKeyBetween, normalizeWheelDeltaY, } from './utils/std.js';\nimport { serializeXYWH } from './utils/xywh.js';\nexport class SurfaceManager {\n    constructor(yContainer, computedValue = v => v) {\n        this._elements = new Map();\n        this._bindings = new Map();\n        this.indexes = { min: 'a0', max: 'a0' };\n        this._onYContainer = (event) => {\n            // skip empty event\n            if (event.changes.keys.size === 0)\n                return;\n            event.keysChanged.forEach(id => {\n                const type = event.changes.keys.get(id);\n                if (!type) {\n                    console.error('invalid event', event);\n                    return;\n                }\n                if (type.action === 'add') {\n                    const yElement = this._yContainer.get(id);\n                    const type = yElement.get('type');\n                    const ElementCtor = ElementCtors[type];\n                    assertExists(ElementCtor);\n                    const element = new ElementCtor(yElement, this);\n                    element.computedValue = this._computedValue;\n                    element.mount(this._renderer);\n                    this._elements.set(element.id, element);\n                    if (element.index > this.indexes.max) {\n                        this.indexes.max = element.index;\n                    }\n                    this._updateBindings(element);\n                }\n                else if (type.action === 'update') {\n                    console.error('update event on yElements is not supported', event);\n                }\n                else if (type.action === 'delete') {\n                    const element = this._elements.get(id);\n                    assertExists(element);\n                    element.unmount();\n                    this._elements.delete(id);\n                    if (element.index === this.indexes.min) {\n                        this.indexes.min = generateKeyBetween(element.index, null);\n                    }\n                }\n            });\n        };\n        this._renderer = new Renderer();\n        this._yContainer = yContainer;\n        this._computedValue = computedValue;\n        this._syncFromExistingContainer();\n        this._yContainer.observe(this._onYContainer);\n    }\n    get viewport() {\n        return this._renderer;\n    }\n    _addBinding(id0, id1) {\n        if (!this._bindings.has(id0)) {\n            this._bindings.set(id0, new Set());\n        }\n        this._bindings.get(id0)?.add(id1);\n    }\n    _updateBindings(element) {\n        if (element instanceof ConnectorElement) {\n            if (element.startElement) {\n                this._addBinding(element.startElement.id, element.id);\n                this._addBinding(element.id, element.startElement.id);\n            }\n            if (element.endElement) {\n                this._addBinding(element.endElement.id, element.id);\n                this._addBinding(element.id, element.endElement.id);\n            }\n        }\n    }\n    _syncFromExistingContainer() {\n        this._transact(() => {\n            this._yContainer.forEach(yElement => {\n                const type = yElement.get('type');\n                const ElementCtor = ElementCtors[type];\n                assertExists(ElementCtor);\n                const element = new ElementCtor(yElement, this);\n                element.computedValue = this._computedValue;\n                element.mount(this._renderer);\n                this._elements.set(element.id, element);\n                if (element.index > this.indexes.max) {\n                    this.indexes.max = element.index;\n                }\n                else if (element.index < this.indexes.min) {\n                    this.indexes.min = element.index;\n                }\n                this._updateBindings(element);\n            });\n        });\n    }\n    _transact(callback) {\n        const doc = this._yContainer.doc;\n        doc.transact(callback, doc.clientID);\n    }\n    refresh() {\n        this._renderer.refresh();\n    }\n    updateIndexes(keys, elements, callback) {\n        this._transact(() => {\n            let newIndex;\n            let i = 0;\n            const len = elements.length;\n            for (; i < len; i++) {\n                newIndex = keys[i];\n                const yElement = this._yContainer.get(elements[i].id);\n                const oldIndex = yElement.get('index');\n                if (oldIndex === newIndex)\n                    continue;\n                yElement.set('index', newIndex);\n            }\n            callback(keys);\n        });\n    }\n    attach(container) {\n        this._renderer.attach(container);\n    }\n    onResize() {\n        this._renderer.onResize();\n    }\n    getElementsBound() {\n        return getCommonBound([...this._elements.values()]);\n    }\n    addElement(type, properties) {\n        const id = generateElementId();\n        const yMap = new Y.Map();\n        const defaultProps = ElementDefaultProps[type];\n        const props = {\n            ...defaultProps,\n            ...properties,\n            id,\n            index: generateKeyBetween(this.indexes.max, null),\n            seed: randomSeed(),\n        };\n        this._transact(() => {\n            for (const [key, value] of Object.entries(props)) {\n                if (key === 'text' && !(value instanceof Y.Text)) {\n                    yMap.set(key, new Y.Text(value));\n                }\n                else {\n                    yMap.set(key, value);\n                }\n            }\n            this._yContainer.set(id, yMap);\n        });\n        return id;\n    }\n    updateElement(id, properties) {\n        this._transact(() => {\n            const element = this._elements.get(id);\n            assertExists(element);\n            element.applyUpdate(properties);\n        });\n    }\n    setElementBound(id, bound) {\n        this.updateElement(id, {\n            xywh: serializeXYWH(bound.x, bound.y, bound.w, bound.h),\n        });\n    }\n    removeElement(id) {\n        this._transact(() => {\n            this._yContainer.delete(id);\n        });\n    }\n    hasElement(id) {\n        return this._yContainer.has(id);\n    }\n    toModelCoord(viewX, viewY) {\n        return this._renderer.toModelCoord(viewX, viewY);\n    }\n    toViewCoord(modelX, modelY) {\n        return this._renderer.toViewCoord(modelX, modelY);\n    }\n    pickById(id) {\n        return this._elements.get(id);\n    }\n    pickByPoint(x, y, options) {\n        const bound = { x: x - 1, y: y - 1, w: 2, h: 2 };\n        const candidates = this._renderer.gridManager.search(bound);\n        const picked = candidates.filter(element => {\n            return element.hitTest(x, y, options);\n        });\n        return picked;\n    }\n    pickTop(x, y) {\n        const results = this.pickByPoint(x, y);\n        return results[results.length - 1] ?? null;\n    }\n    pickByBound(bound) {\n        const candidates = this._renderer.gridManager.search(bound);\n        const picked = candidates.filter((element) => {\n            return contains(bound, element) || intersects(bound, element);\n        });\n        return picked;\n    }\n    getSortedElementsWithViewportBounds() {\n        return this.pickByBound(this.viewport.viewportBounds).sort(compare);\n    }\n    getBindingElements(id) {\n        const bindingIds = this._bindings.get(id);\n        if (!bindingIds?.size) {\n            return [];\n        }\n        return [...bindingIds.values()]\n            .map(bindingId => this.pickById(bindingId))\n            .filter(e => !!e);\n    }\n    dispose() {\n        this._yContainer.unobserve(this._onYContainer);\n    }\n    /** @internal Only for testing */\n    initDefaultGestureHandler() {\n        const { _renderer } = this;\n        _renderer.canvas.addEventListener('wheel', e => {\n            e.preventDefault();\n            // pan\n            if (!e.ctrlKey) {\n                const dx = e.deltaX / _renderer.zoom;\n                const dy = e.deltaY / _renderer.zoom;\n                _renderer.setCenter(_renderer.centerX + dx, _renderer.centerY + dy);\n            }\n            // zoom\n            else {\n                const zoom = normalizeWheelDeltaY(e.deltaY);\n                _renderer.setZoom(zoom);\n            }\n        });\n    }\n    getElements() {\n        return [...this._elements.values()];\n    }\n}\n//# sourceMappingURL=surface.js.map","/// <reference types=\"@blocksuite/global\" />\nexport { StrokeStyle, ZOOM_MAX, ZOOM_MIN, ZOOM_STEP } from './consts.js';\nexport { ConnectorMode } from './elements/connector/types.js';\nexport * from './elements/index.js';\nexport { compare } from './grid.js';\nexport { Renderer } from './renderer.js';\nexport * from './surface.js';\nexport * from './utils/bound.js';\nexport * from './utils/hit-utils.js';\nexport * from './utils/std.js';\nexport * from './utils/xywh.js';\n//# sourceMappingURL=index.js.map","import{noChange as t}from\"../lit-html.js\";import{directive as i,Directive as s,PartType as r}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o=i(class extends s{constructor(t){var i;if(super(t),t.type!==r.ATTRIBUTE||\"class\"!==t.name||(null===(i=t.strings)||void 0===i?void 0:i.length)>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return\" \"+Object.keys(t).filter((i=>t[i])).join(\" \")+\" \"}update(i,[s]){var r,o;if(void 0===this.it){this.it=new Set,void 0!==i.strings&&(this.nt=new Set(i.strings.join(\" \").split(/\\s/).filter((t=>\"\"!==t))));for(const t in s)s[t]&&!(null===(r=this.nt)||void 0===r?void 0:r.has(t))&&this.it.add(t);return this.render(s)}const e=i.element.classList;this.it.forEach((t=>{t in s||(e.remove(t),this.it.delete(t))}));for(const t in s){const i=!!s[t];i===this.it.has(t)||(null===(o=this.nt)||void 0===o?void 0:o.has(t))||(i?(e.add(t),this.it.add(t)):(e.remove(t),this.it.delete(t)))}return t}});export{o as classMap};\n//# sourceMappingURL=class-map.js.map\n","export*from\"lit-html/directives/class-map.js\";\n//# sourceMappingURL=class-map.js.map\n"],"names":["module","exports","s","a","o","h","u","r","e","l","n","code","i","call","t","undefined","length","d","c","p","encode","f","getTypeOf","charCodeAt","push","charAt","join","decode","substr","replace","uint8array","Uint8Array","indexOf","compressedSize","uncompressedSize","crc32","compression","compressedContent","prototype","getContentWorker","Promise","resolve","pipe","uncompressWorker","on","streamInfo","data_length","getCompressedWorker","withStreamInfo","createWorkerFrom","compressWorker","STORE","magic","DEFLATE","base64","binary","dir","createFolders","date","compressionOptions","comment","unixPermissions","dosPermissions","lie","Uint16Array","Uint32Array","_pako","_pakoAction","_pakoOptions","meta","inherits","processChunk","_createPako","transformTo","data","flush","cleanUp","raw","level","onData","pako","A","String","fromCharCode","file","O","utf8encode","I","name","m","_","g","b","v","y","w","k","x","S","z","C","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCFullYear","getUTCMonth","getUTCDate","B","E","fileRecord","R","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","bytesWritten","zipComment","zipPlatform","encodeFileName","streamFiles","accumulate","contentBuffer","dirRecords","currentSourceOffset","entriesCount","currentFile","_sources","percent","openedSource","closedSource","DATA_DESCRIPTOR","shift","CENTRAL_DIRECTORY_END","prepareNextSource","previous","isPaused","pause","resume","registerPrevious","end","error","generatedError","lock","generateWorker","platform","forEach","options","_compressWorker","arguments","files","Object","create","root","clone","loadAsync","support","defaults","version","external","extend","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","isNode","isStream","reject","prepareContent","then","load","decompressed","all","fileNameStr","fileCommentStr","unsafeOriginalName","_upstreamEnded","_bindStream","_stream","Readable","_helper","emit","_read","Buffer","newBufferFrom","from","allocBuffer","alloc","fill","isBuffer","Date","toUpperCase","parseInt","slice","substring","lastIndexOf","toString","filter","test","folder","remove","generate","generateInternalStream","type","mimeType","toLowerCase","checkSupport","generateAsync","generateNodeStream","toNodejsStream","stream","byteAt","zero","lastIndexOfSignature","readAndCheckSignature","readData","checkOffset","index","checkIndex","setIndex","skip","readInt","readString","readDate","UTC","subarray","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","destType","propName","dataIsReady","max","_tickScheduled","_tickAndRepeat","delay","isFinished","_tick","Math","min","extraStreamInfo","isLocked","_listeners","mergeStreamInfo","hasOwnProperty","nodestream","_internalType","_outputType","_mimeType","_worker","newBlob","Array","concat","apply","set","objectMode","array","string","arraybuffer","ArrayBuffer","nodebuffer","blob","Blob","size","self","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","leftOver","applyFromCharCode","Utf8DecodeWorker","Utf8EncodeWorker","stringifyByChunk","stringifyByChar","applyCanBeUsed","floor","buffer","byteLength","split","pop","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","setImmediate","FileReader","onload","target","result","onerror","readAsArrayBuffer","setimmediate","loadOptions","checkSignature","reader","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","zip64ExtensibleData","id","value","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","abs","prepareReader","isEncrypted","bitFlag","useUTF8","fileNameLength","fileName","compressionMethod","versionMadeBy","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","_data","_dataBinary","internalStream","_decompressWorker","async","nodeStream","MutationObserver","WebKitMutationObserver","document","createTextNode","observe","characterData","MessageChannel","createElement","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","port1","onmessage","port2","postMessage","__webpack_require__","window","state","queue","outcome","promise","onFulfilled","callFulfilled","otherCallFulfilled","onRejected","callRejected","otherCallRejected","status","finally","constructor","catch","race","immediate","assign","method","chunkSize","windowBits","memLevel","strategy","to","gzip","err","msg","ended","chunks","strm","avail_out","deflateInit2","header","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","deflateRaw","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","inflateRaw","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","T","D","F","pending","pending_buf","pending_out","total_out","N","_tr_flush_block","block_start","strstart","U","P","L","max_chain_length","prev_length","nice_match","w_size","w_mask","prev","good_match","lookahead","match_start","j","window_size","hash_size","head","wrap","adler","total_in","insert","ins_h","hash_shift","hash_mask","Z","match_length","_tr_tally","max_lazy_match","last_lit","W","prev_match","match_available","M","good_length","max_lazy","nice_length","max_chain","func","H","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","G","data_type","_tr_init","K","Y","deflateInit","deflateReset","deflateResetKeep","text","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","done","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","mode","sane","last","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","have","next","lens","work","lendyn","distdyn","back","was","inflateReset","inflateReset2","inflateResetKeep","inflateInit","inflateInfo","static_tree","extra_bits","extra_base","elems","max_length","has_stree","dyn_tree","max_code","stat_desc","X","V","q","J","getPrototypeOf","process","nextTick","importScripts","random","addEventListener","attachEvent","callback","args","clearImmediate","source","EdgelessClipboard","page","edgeless","_onCut","active_editor_manager","isActive","_edgeless","preventDefault","_onCopy","selection","active","container_operations","tD","_page","transact","selected","utils","Zi","deleteBlock","surface","removeElement","slots","selectionUpdated","dist","Gy","commons","mM","range","block_range","zE","store_dist","kP","p3","map","mt","json","serialize","clipboardItems","pure","fQ","_onPaste","_pasteInTextFrame","elementsRawData","j$","_pasteShapesAndFrames","init","body","dispose","removeEventListener","blocks","hA","clipboardData","captureSync","focusedBlockModel","models","service","_internal_service","getService","flavour","json2Block","_createPhasorElements","elements","phasorElements","addElement","element","pickById","_createFrameBlocks","frames","pasteX","pasteY","oldCommonBound","frameIds","xywh","children","background","oldX","oldY","oldW","oldH","CV","xM","GB","newXywh","cJ","frameId","addBlock","frame","getBlockById","json2block","_getOldCommonBound","commonBound","ci","_emitSelectionChangeAfterPaste","phasorElementIds","newSelected","groupedByType","std","vM","lastMousePos","modelX","modelY","toModelCoord","ele","newXYWH","updateElement","PageClipboard","pageEle","_ele","_internal_utils","normalizedBlocks","P2","page_block","pasted","copied","getBlockClipboardInfo","model","begin","_service_js__WEBPACK_IMPORTED_MODULE_2__","html","block2html","block2Text","block2Json","copyBlocks","createPageClipboardItems","clipGroups","startOffset","endOffset","stringifiesData","JSON","stringify","group","isChildBlock","block","parentBlock","findIndex","childBlock","customClipboardFragment","_pure_js__WEBPACK_IMPORTED_MODULE_5__","g8","L_","BLOCKSUITE_PAGE","textClipboardItem","_clipboard_item_js__WEBPACK_IMPORTED_MODULE_6__","TEXT","reduce","htmlClipboardItem","HTML","pageClipboardItem","savedRange","_utils_index_js__WEBPACK_IMPORTED_MODULE_3__","E7","bR","xT","clipboardData2Blocks","contentParser","_content_parser_index_js__WEBPACK_IMPORTED_MODULE_1__","Q2","file2Blocks","HTMLClipboardData","getData","blockSuiteClipboardData","wK","parse","textClipData","shouldConvertMarkdown","_markdown_js__WEBPACK_IMPORTED_MODULE_4__","checkIfTextContainsMd","htmlText2Block","markdown2Block","text2blocks","normalizeDelta","deltas","backlinkIndexer","workspace","indexer","backlink","delta","attributes","reference","refNode","parentPage","getParentPage","pageId","normalizePasteBlocks","copySurfaceText","surfaceTextEditor","querySelector","vEditor","_blocksuite_store__WEBPACK_IMPORTED_MODULE_0__","vRange","getVRange","yText","clipboardItem","setKeeping","rootElement","focus","setVRange","MarkdownUtils","_detab","_checkRegArr","text1","_wholeMatch","m1","leadingText","numSpaces","__webpack_exports__","__decorate","decorators","key","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","AffineLink","_blocksuite_lit__WEBPACK_IMPORTED_MODULE_0__","link","_blocksuite_virgo__WEBPACK_IMPORTED_MODULE_1__","$m","popoverHoverOpenDelay","_popoverTimer","_isHovering","onHover","_onHoverEnd","_utils_index_js__WEBPACK_IMPORTED_MODULE_6__","readonly","onDelayHover","HTMLElement","contains","linkState","_components_link_popover_index_js__WEBPACK_IMPORTED_MODULE_5__","anchorEl","showMask","interactionKind","newText","_updateLink","isUpdateText","_onConvertToBookmark","oldStr","oldTextAttributes","textElement","_blocksuite_global_utils__WEBPACK_IMPORTED_MODULE_8__","textNode","childNodes","find","node","Text","richText","closest","domPoint","gX","textPointToDomPoint","virgoContainer","deleteText","insertText","formatText","newAttributes","parent","getParent","url","title","clearTimeout","_onMouseUp","anchorElement","isContentEditable","contentEditable","removeAttribute","render","style","_virgo_affine_text_js__WEBPACK_IMPORTED_MODULE_7__","lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_4__","lit__WEBPACK_IMPORTED_MODULE_2__","dy","_blocksuite_global_config__WEBPACK_IMPORTED_MODULE_9__","styles","iv","lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__","Cb","SB","Mo","LinkMockSelection","lit","oi","rects","rect","style_map","position","width","height","top","left","backgroundColor","createLink","blockRange","startModel","gj","format","getFormat","yd","getClientRects","container","VA","containerRect","getBoundingClientRect","mockSelection","DOMRect","affineEditorContainer","link_popover","shadowRoot","REFERENCE_NODE","AffineReference","$T","_refAttribute","_updateRefMeta","refAttribute","_blocksuite_global_utils__WEBPACK_IMPORTED_MODULE_6__","_refMeta","pageMetas","connectedCallback","console","_utils_index_js__WEBPACK_IMPORTED_MODULE_4__","_disposables","add","pagesUpdated","_onClick","refMeta","warn","targetPageId","cP","pageLinkClicked","unavailable","_virgo_affine_text_js__WEBPACK_IMPORTED_MODULE_5__","color","_blocksuite_global_config__WEBPACK_IMPORTED_MODULE_7__","eG","H0","Sj","handleBlockEndEnter","nextSibling","getNextSibling","blockProps","getProps","shouldInheritFlavour","_blocksuite_global_utils__WEBPACK_IMPORTED_MODULE_4__","h$","cQ","isInsideBlockByFlavour","child","newParent","newBlockIndex","childrenLength","nextModel","_utils_common_operations_js__WEBPACK_IMPORTED_MODULE_1__","a6","prevParent","prevIndex","updateBlock","handleSoftEnter","handleBlockSplit","splitIndex","splitLength","xv","right","handleIndent","previousSibling","getPreviousSibling","_utils_std_js__WEBPACK_IMPORTED_MODULE_5__","$v","kH","handleMultiBlockIndent","at","every","idx","previousModel","p1","p2","handleUnindent","capture","grandParent","previousSiblings","getPreviousSiblings","nextSiblings","getNextSiblings","handleLineStartBackspace","handleCodeBlockBackspace","_utils_selection_js__WEBPACK_IMPORTED_MODULE_3__","focusBlockByModel","handleListBlockBackspace","handleParagraphBlockBackspace","isHandled","handleParagraphDeleteActions","handleNoPreviousSibling","titleElement","pageModel","_utils_query_js__WEBPACK_IMPORTED_MODULE_2__","textLength","focusTitle","nt","handleParagraphOrListSibling","preTextLength","bringChildrenTo","handleUnknownBlockBackspace","handleKeyUp","event","editableContainer","getCurrentNativeRange","collapsed","collapse","isFirstLine","_utils_check_line_js__WEBPACK_IMPORTED_MODULE_6__","zw","m7","stopPropagation","RV","handleKeyDown","isLastLine","$K","st","InlineSuggestionController","host","_abortController","AbortController","SJ","_suggestionState","show","loading","onFocusIn","inlineSuggestProvider","provider","editor","vRangeUpdated","_updateSuggestions","onFocusOut","abort","Ds","len","pageBlock","_setSuggestionState","_updatePosition","textStr","abortController","signal","suggestion","abortSignal","aborted","leading","onKeyDown","isComposing","requestAnimationFrame","addController","hostConnected","hostDisconnected","newState","previousState","requestUpdate","richTextRect","hasNativeSelection","rangeRect","Ld","bracketPairs","SHORT_KEY_PROPERTY","cj","Mq","IGNORED_ATTRIBUTES","autoIdentifyLink","context","linkPattern","linkDeltaInfo","deltaService","getDeltasByVRange","rangePositionInDelta","match","exec","resetText","line","getLine","prefixText","textContent","linkText","startIndex","RichText","_vEditor","_inlineSuggestController","_virgoContainer","firstUpdated","virgo_dist","virgo","textSchema","setAttributeSchema","attributesSchema","setAttributeRenderer","textRenderer","keyboardBindings","createKeyboardBindings","blockKeyBinding","defineKeymap","linkedPage","altKey","shiftKey","handler","prefix","endsWith","consts","flag","awarenessStore","getFlag","dist_utils","rangeUpdated","once","curRange","linked_page","slash","slash_menu","createBracketAutoCompleteBindings","bindings","pair","keyDownHandler","createKeyDownHandler","bindingStore","values","binding","addBinding","keyBinding","shortKey","keys","isArray","singleBinding","evt","parentModel","defaultPrevented","keyBindings","which","some","startContainer","endContainer","leafStart","offsetStart","getTextPoint","leafEnd","offsetEnd","suffixText","curContext","empty","suffix","prevented","ifPrefixSpace","mount","bindHandlers","keydown","virgoInput","ctx","inputType","attr","virgoCompositionEnd","setReadonly","inlineSuggestionProvider","updated","IO","affineTextStyles","props","override","textDecorations","underline","strike","inlineCodeStyle","padding","border","bold","italic","AffineText","attributeRenderer","defaultTemplate","lit__WEBPACK_IMPORTED_MODULE_0__","lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_1__","_reference_node_js__WEBPACK_IMPORTED_MODULE_2__","item","affineTextAttributes","_blocksuite_virgo__WEBPACK_IMPORTED_MODULE_0__","mq","zod__WEBPACK_IMPORTED_MODULE_1__","object","optional","blockService","code_block","E6","database_service","paragraph_block","Vs","list_block","pu","embed_block","Xk","divider_block","fu","frame_block","Kg","bookmark_block","lI","services","Map","hasService","has","registerService","Constructor","get","getServiceOrRegister","pattern","action","annotatedText","codeId","language","utils_consts","AY","codeBlock","search","matchedText","hrefText","hrefLink","start","markdownConvert","onSoftEnter","rich_text_operations","hardEnter","isLastChild","lastChild","isEmptyList","isEnd","softEnterable","isSoftEnterable","endWithTwoBlankLines","delete","isSoftEnterBlock","BaseService","childText","sliceToDelta","deltaLeaf2Html","pastedBlocks","onBlockPasted","deltaLeaf","strikethrough","refPageId","pageMeta","location","origin","referenceLink","referenceTitle","updateEffect","bind","enterMarkdownMatch","spaceMarkdownMatch","softEnter","insertLineAfter","tab","shiftTab","backspace","uI","up","down","onKeyLeft","lineStart","onKeyRight","lineEnd","inputRule","onSpace","tryMatchSpaceHotkey","isParagraphQuoteBlock","Xy","isCodeBlock","isConverted","trim","Sf","checked","WP","AE","convertToPastedIfEmpty","firstBlock","lastBlock","isFocusedBlockEmpty","shouldMergeFirstBlock","shouldMergeLastBlock","sum","shouldSplitBlock","_rich_text_rich_text_operations_js__WEBPACK_IMPORTED_MODULE_1__","insertList","addSerializedBlocks","setRange","insertPosition","ids","lastModel","rangeOffset","nextSiblingModel","_E","serializedBlocks","addedBlockIds","pendingModels","sourceId","caption","databaseProps","titleColumnName","titleColumnWidth","description","icon","image","crawled","initialProps","getInitialPropsByFlavour","applyDelta","rowIds","cells","columns","COLOR_VARIABLES","SIZE_VARIABLES","FONT_FAMILY_VARIABLES","VARIABLES","isCssVariable","includes","getClosestEditorContainer","listenToThemeChange","currentELement","themeObserver","getThemePropertyValue","cssVariables","isAtLineEdge","nextRange","shiftRange","isTextLikeNode","nodeType","Node","TEXT_NODE","COMMENT_NODE","CDATA_SECTION_NODE","maxOffset","cloneRange","setStart","setEnd","nextTextNode","findNextTextNode","checkWalkBoundary","nodeIdx","findTextNode","nextRangeRect","noLineEdge","checkFirstLine","commonAncestorContainer","lineHeight","checkLastLine","bottom","isLastLineWithoutEdge","atLineEdgeRange","nextLineHeight","clearMarksOnDiscontinuousInput","resetMarks","setupVirgoScroll","shouldLineScrollIntoView","_query_js__WEBPACK_IMPORTED_MODULE_0__","im","DefaultIcon","RefreshIcon","DeleteIcon","EditIcon","LinkIcon","CopyIcon","CaptionIcon","DuplicateIcon","CloseIcon","MoreIcon","LoadingBanner","DarkLoadingBanner","reloadBookmarkBlock","bookmarkElement","force","apis","ui","getBookmarkDataByLink","metaData","withoutTransact","cloneBookmarkProperties","bookmark_model","operations","label","clipboard","toast","clonedProps","_internal_","_b","BookmarkOperationMenu","menuItems","repeat","divider","onSelected","bookmark_toolbar_decorate","config","tooltip","yjs","BookmarkToolbar","_menu","_toggleMenu","createBookmarkOperationMenu","menu","popper","lib_popper","fi","placement","modifiers","destroy","moreButton","buttons","bookmark_edit_modal_decorate","bookmarkModalStyles","BookmarkEditModal","_modalKeyboardListener","_onConfirm","onCancel","titleInput","setSelectionRange","disconnectedCallback","descInput","onConfirm","modal","bookmark_create_modal_decorate","BookmarkCreateModal","linkInput","loader_decorate","Loader","updateComplete","setProperty","BookmarkBlockService","DefaultBanner","bookmark_block_decorate","BookmarkBlockComponent","z3","openInitialModal","g7","_showCreateModal","_showToolbar","_showEditModal","_isLoading","_timer","_onToolbarSelected","_input","classList","propsUpdated","_caption","_onInputChange","_onInputBlur","_onHover","_onHoverOut","FV","createModal","editModal","toolbar","linkCard","LangList","_filterText","_currentSelectedIndex","_clickAwayListener","renderRoot","parentElement","dispatchEvent","yM","filterInput","_onLanguageClicked","filteredLanguages","NL","index_esm","tc","startsWith","aliases","alias","sort","code_languages","Infinity","onLanguageSelect","icons_text","W1","allIndexOf","symbol","indexArr","CodeBlockService","setLang","lang","standardLang","langName","richTextElement","config_consts","SF","preElement","codeElement","setAttribute","innerHTML","querySelectorAll","outerHTML","texts","lines","op","keymap","reverse","getCodeLineRenderer","highlightOptionsGetter","code_block_decorate","CodeBlockComponent","_showLangList","_optionPosition","_wrap","lib","highlighter","_highlighter","_richTextResizeObserver","ResizeObserver","_updateLineNumbers","_themeChangeObserver","_preLang","hoverState","_startHighlight","FP","theme","$J","f8","themes","langs","paths","wasm","languages","timer","childrenUpdated","updatePosition","HEADER_HEIGHT","hover","HOVER_DELAY","addFromEvent","viewportElement","lN","disconnect","_onClickWrapBtn","toggle","theme_utils","zp","currentLangs","getLoadedLanguages","loadLanguage","_onClickLangBtn","_langListTemplate","normalizedLang","ve","detail","_codeOptionTemplate","CodeOptionTemplate","onClickWrap","DL","TI","P9","ug","pJ","lineNumbersContainer","generateLineNumberRender","lineNumberRender","sY","content","IconButton","disabled","click","tabIndex","lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__","handlePreventDocumentDragOverDelay","DragIndicator","lit__WEBPACK_IMPORTED_MODULE_1__","lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_3__","transform","lit_decorators_js__WEBPACK_IMPORTED_MODULE_2__","DragPreview","DragHandle","_draggingElements","_scale","_currentClientX","_currentClientY","_stopPropagation","_handleAnchorState","_handleAnchorDisposable","_lastDroppingTarget","_lastDroppingType","_indicator","_dragPreview","selectedBlocks","modelState","setSelectedBlock","toggleAttribute","Boolean","_onDragOverDocument","_blocksuite_global_utils__WEBPACK_IMPORTED_MODULE_5__","vU","clientX","clientY","onDragStart","draggable","dataTransfer","effectAllowed","draggingBlockElements","_createDragPreview","_internal_index_js__WEBPACK_IMPORTED_MODULE_4__","rc","setDragType","onDrag","passed","isScrolling","_dragHandle","cursor","screenY","offsetX","offsetY","point","E9","_getClosestBlockElement","lastModelState","e1","gc","Lb","onDragEnd","dropEffect","_removeDragPreview","hide","onDropCallback","getDropAllowedBlocks","_getSelectedBlocks","getSelectedBlocks","getClosestBlockElement","_container","onContainerMouseMove","frameBlock","frameBlockRect","startX","startY","tempSelectedBlocks","first","az","display","posX","DRAG_HANDLE_WIDTH","Z_","posY","opacity","toFixed","_calcDragHandleY","reset","setPointerEvents","pointerEvents","setScale","disposables","_onMouseMoveOnHost","scale","DRAG_HANDLE_HEIGHT","blockElements","grabbing","dragPreview","fragment","createDocumentFragment","blur","FormatBarButton","_button_js__WEBPACK_IMPORTED_MODULE_2__","_mousedown","FormatQuickBar_1","paragraphPanelStyle","formatQuickBarStyle","FormatQuickBar","positionUpdated","_paragraphType","block_hub","I_","_paragraphPanelHoverDelay","_paragraphPanelTimer","_showParagraphPanel","paragraphPanelMaxHeight","_format","_customElements","_selectionChangeHandler","page_block_utils","vC","update","changedProperties","customElements","customItemsElement","mutationObserver","Et","childList","subtree","Xz","formatQuickBarElement","actionItems","utils_const","showWhen","enabledWhen","disabledToolTip","enabled","toolTip","edgeless_utils","UW","paragraphIcon","paragraphItems","paragraphPanel","ParagraphPanel","showParagraphPanel","paragraphType","onHoverEnd","onUpdateModels","onParagraphTypeChange","maxHeight","updateParagraphType","alreadyTargetType","defaultFlavour","defaultType","targetFlavour","targetType","newModels","WV","codeModel","FA","vq","schema","flavourSchemaMap","formatItems","format_config","activeWhen","formatQuickBarInstance","showFormatQuickBar","direction","_internal_utils_block_range_js__WEBPACK_IMPORTED_MODULE_2__","_blocksuite_store__WEBPACK_IMPORTED_MODULE_1__","formatQuickBar","_format_bar_node_js__WEBPACK_IMPORTED_MODULE_6__","positionUpdatedSlot","updatePos","_internal_utils_std_js__WEBPACK_IMPORTED_MODULE_7__","positioningPoint","Range","_page_block_utils_position_js__WEBPACK_IMPORTED_MODULE_5__","Ak","boundaryRect","formatBarRect","isBottom","safeCoordinate","Ne","objRect","scrollContainer","_internal_utils_query_js__WEBPACK_IMPORTED_MODULE_3__","dK","passive","pointerDownHandler","popstateHandler","_page_block_index_js__WEBPACK_IMPORTED_MODULE_4__","hostModel","radius","uv","ExportToMarkdownIcon","ExportToHTMLIcon","NotionIcon","NewIcon","HelpIcon","import_page_decorate","ImportPage","lit_dist","multiple","onSuccess","_loading","_startX","_startY","_onMouseMove","changedProps","_onMouseDown","_onCloseClick","_selectFile","accept","onchange","_onImportSuccess","pageIds","_importFile","fileExtension","needLoadingHandler","parseContentHandler","hidden","needLoading","importPageIds","_importMarkDown","totalSize","createPage","rootId","content_parser","importMarkdown","_importHtml","importHtml","_importNotion","zip","jszip_min","zipFile","fileArray","fileContent","allPageMap","parseZipFile","pageMap","promises","csvFiles","lastSplitIndex","innerZipFile","pagePromises","isHtml","fetchFileHandler","joinWebPaths","decodeURI","textStyleHandler","textStyle","subPageLink","linkPage","tableParserHandler","tagName","getAttribute","href","tableString","titles","rows","row","rowArray","maxLen","addNum","databasePropsId","rowId","columnId","allPromises","flat","fullPath","parts","resolvedParts","part","_openLearnImportLink","open","showImportModal","importPage","BlockHubCards","blockHubItems","shouldDisplayCard","isGrabbing","showTooltip","shouldScroll","overflowY","BlockHub","_expanded","_isGrabbing","_visibleCardType","_showTooltip","_inEdgelessMode","_maxHeight","_isCardListVisible","_lastDraggingFlavour","_onTransitionStart","_blockHubMenuContainer","_blockHubIconsContainer","overflow","_onClickOutside","_hideCardList","_onClickCard","blockHubElement","affineType","_onClickCardCallback","_onBlockHubButtonClick","_onDragStart","setData","_onDragStartCallback","web","_onDrag","frameRect","getHoveringFrameState","_resetDropState","cy","snapToEdge","_onDragOver","_onDragEnd","_onDrop","_onDropCallback","_onCardMouseDown","_onCardMouseUp","_onBlankMenuMouseDown","_onBlankMenuMouseUp","_onBlockHubMenuMouseOver","currentTarget","cardType","_onBlockHubEntryMouseOver","_onResize","boundingClientRect","_mouseRoot","mouseRoot","_enableDatabase","enableDatabase","getAllowedBlocks","onDrop","onClickCard","pageModeSwitched","blockHubMenu","_blockHubCards","card","_blockHubMenus","_blockHubMenuEntry","_blockHubButton","toggleMenu","expanded","isCardListVisible","visibleCardType","BlockHubMenu","blockHubListCards","blockHubFileCards","Xr","menuNum","xo","i5","oP","FL","Th","blockHubCards","s9","classes","class_map","$","aM","US","Kt","menu_divider_decorate","MenuDivider","vertical","remote_selection_decorate","RemoteSelection","_ranges","_colorMap","_resizeObserver","subscribe","rangeMap","awareness","clientID","user","userRange","prefixedId","splice","history","stackItem","blockIds","_getSelectionRect","nativeRange","query","nativeRects","_getCursorRect","endBlockId","endModel","clear","selections","flatMap","randomColor","hex","cursorRect","hexColor","normalized","round","selected_blocks_decorate","AffineSelectedBlocks","grab","_onPointerUp","PointerEvent","bubbles","willUpdate","firstRect","editLinkStyle","linkPopoverStyle","ALLOWED_SCHEMES","MAIL_REGEX","URL_REGEX","normalizeUrl","hasScheme","scheme","isEmail","isValidLink","str","LinkPopover","previewLink","showBookmarkOperation","_bodyOverflowStyle","_disableConfirm","_changedProperties","_hide","CustomEvent","textInput","navigator","writeText","_onUnlink","_onLinkToCard","_onEdit","_onInput","isValid","_onKeydown","confirmBtnTemplate","q1","createLinkTemplate","previewTemplate","Md","ZJ","dY","simpleTemplate","isCreateLink","editTemplate","mask","popover","cssText","popoverContainer","showLinkPopover","editLinkEle","createEditLinkElement","linkPanel","unsubscribeHoverAbort","bindHoverState","controller","handleMouseEnter","handleMouseLeave","abortHandler","U6","viewport","ZT","res","DEFAULT_PAGE_NAME","LinkedPagePopover","_actionList","pageName","_query","displayPageName","filteredPageList","_pageList","Qn","_activatedItemIndex","YA","_insertLinkedNode","yR","_createPage","_c","_importPage","_position","onUpdateQuery","onMove","step","scrollIntoView","onEsc","cleanSpecifiedTail","reference_node","import_page","visibility","pageList","createList","showLinkedPagePopover","linkedPageElement","utils_position","W$","Portal","template","_portalRoot","createRenderRoot","portalRoot","insertContent","formatDate","year","getFullYear","month","getMonth","padStart","day","getDate","strTime","insideDatabase","menuGroups","items","HM","setMarks","IY","newPage","u7","mw","addSiblingBlocks","pl","GK","$M","Gz","setDate","l3","p_","hours","getHours","minutes","getMinutes","amOrPm","initDatabaseBlock","D3","default_utils","Kf","NA","fromDelta","AQ","toDelta","groupName","collectGroupNames","menuItem","acc","SlashMenu","_leftPanelActivated","_filterItems","_searchString","_onClickAway","_updateItem","components_utils","interceptor","isControlled","Jc","isShift","val","newFilteredItems","configLen","groupNames","nowGroupIdx","targetGroup","_handleClickCategory","ejectedCnt","_scrollToItem","_handleClickItem","searchStr","allMenus","_categoryTemplate","showCategory","activatedGroupName","groups","slashMenuStyles","btnItems","showDivider","globalAbortController","showSlashMenu","slashMenu","Il","slashMenuElement","onAbort","positionCallback","AbortSignal","reason","DOMException","ToastContainer","htmlToElement","strings","htmlString","cur","firstChild","createToastContainer","message","duration","fadeIn","easing","animate","fadeOut","animation","finished","margin","tooltipStyle","createKeydownObserver","_blocksuite_global_utils__WEBPACK_IMPORTED_MODULE_1__","updateQuery","_v","_std_js__WEBPACK_IMPORTED_MODULE_0__","curIndex","previousQuery","keyDownListener","_internal_utils_std_js__WEBPACK_IMPORTED_MODULE_2__","isOnlyCmd","ctrlKey","metaKey","escListener","DatabaseBlockService","_internal_service_index_js__WEBPACK_IMPORTED_MODULE_2__","_lastRowSelection","_lastCellSelection","tableViewRowSelectionUpdated","tableViewCellSelectionUpdated","databaseId","_table_components_selection_utils_js__WEBPACK_IMPORTED_MODULE_4__","I9","clearLastRowSelection","Gt","coords","Cf","xt","rE","isAppendNewRow","_std_js__WEBPACK_IMPORTED_MODULE_3__","blockModel","updateColumn","applyColumnUpdate","_internal_service_js__WEBPACK_IMPORTED_MODULE_1__","columnIds","column","newColumnIds","nonIdProps","newRowIds","rowIndex","newRowId","columnIndex","cellData","updateCell","clearSelection","clearRowSelection","clearCellLevelSelection","setRowSelection","setRowSelectionByElement","_table_selection_manager_utils_js__WEBPACK_IMPORTED_MODULE_5__","tJ","refreshRowSelection","toggleRowSelection","getLastRowSelection","setCellSelection","cellSelectionState","getLastCellSelection","CellLevelSelection","setSelection","_getStyles","getCellSelectionRectByCoords","rowsContainer","getRowsContainer","_zoom","scaledLeft","scaledTop","edgelessPageBlock","zoom","row_selection_decorate","RowLevelSelection","hideStyles","startRow","endRow","getRowsByIds","startRowId","endRowId","containerPos","scaledHeight","calcSelectionHeight","clearAllDatabaseRowsSelection","databases","database","rowLevelSelection","setDatabaseRowsSelection","setDatabaseCellSelection","cellLevelSelection","currentCell","getCellElementByCoord","clearAllDatabaseCellSelection","setDatabaseCellEditing","coord","cell","firstElementChild","shouldClearCellSelection","focusEnd","cellType","richTextCell","clearDatabaseCellSelectionByDatabaseId","getCellCoord","cellRects","getAllCellsRect","rowsCount","cellsCount","cellCoord","Element","getCellCoordByElement","cellIndex","nextCellCoord","getNextCellCoord","currentCellCoord","getNextCellCoordByTab","nextCellPos","getNextCellCoordByArrowUp","getNextCellCoordByArrowDown","getNextCellCoordByArrowLeft","getDatabaseById","allRows","allCells","getClosestRowIndex","Number","getClosestRowId","getSelectedRowIdsByIndexes","indexes","getRowIdByIndex","getSelectedRowIndexes","startCell","endCell","currentRowIndex","startRowIndex","minIndex","maxIndex","rowIndexes","getClosestDatabase","getClosestDatabaseId","isInDatabase","DividerBlockService","DividerBlockComponent","qL","ImageBlockComponent_1","AffineImageBlockCircleLoading","loading_card_decorate","AffineImageBlockLoadingCard","notFoundIcon","AffineImageBlockNotFoundCard","image_not_found_decorate","image_block_decorate","ImageBlockComponent","_imageReady","_imageState","_retryCount","_fetchError","maxRetryCount","_fetchImage","storage","blobs","_source","URL","createObjectURL","resizeImg","blobUpdate","revokeObjectURL","resizeImgStyle","img","waitUploaded","ready","failed","EmbedBlockService","EmbedBlockComponent","activeElement","slot","FrameBlockService","FrameBlockComponent","colors","ColumnInsertPosition","SearchState","SelectMode","CounterBlock","count","_notify","composed","highlightCache","maxSize","cache","firstKey","affine_code_line_decorate","AffineCodeLine","vText","Jj","cacheKey","tokens","codeToThemedTokens","vTexts","token","onClickOutside","reusable","outsideClickListener","elem","path","composedPath","isOutside","offsetWidth","offsetHeight","removeClickListener","tagColorPoll","getTagColor","isDivider","actionStyles","column_type_popup_decorate","columnTypes","VL","uh","eD","VI","iH","oX","column_type_popup_styles","ColumnTypePopup","columnType","onChangeColumnType","changeColumnType","_U","targetColumn","targetModel","columnRenderer","isTitleColumn","currentType","convertCellsByColumn","renderer","propertyCreator","deleteCellsByColumn","schemaProperties","currentSchema","getColumn","edit_column_popup_decorate","columnActions","Mw","f_","JM","h7","xV","VN","titleColumnActions","EditColumnPopup","_onShowColumnType","_columnTypePopup","_changeColumnType","_onHideColumnType","closePopup","_onActionClick","actionType","onActionClick","setTitleColumnEditId","insertColumn","Right","Left","deleteColumn","moveColumn","copyId","addColumn","copyCellsByColumn","_renderActions","actions","onMouseOver","column_drag_indicator_decorate","ColumnDragIndicator","targetRect","ColumnDragPreview","column_drag_preview_decorate","styles_styles","table_consts","jg","column_header_decorate","columnTypeIconMap","select","number","checkbox","progress","DatabaseColumnHeader","_editingColumnId","_changingColumnTypeId","_widthChangingIndex","_columnWidthDisposables","disposable","_columnMoveDisposables","_isHeaderHover","_editingColumnPopupIndex","setEditingColumnId","showAddColumnButton","databaseElement","boundaryRight","headerAddColumnButtonLeft","_headerAddColumnButton","isInHeader","O0","needShow","_addColumnButton","_setChangingColumnIndex","_onShowEditColumnPopup","currentEl","editColumn","insertIdex","_onShowColumnTypePopup","popup","_saveColumnTitle","_titleColumnInput","_onUpdateTitleColumn","_onUpdateNormalColumn","_onEditColumnTitle","_onAddColumn","tableContainer","_initChangeColumnWidthHandlers","_initSetDragHandleHeightEffect","_initHeaderMousemoveHandlers","_initMoveColumnHandlers","_initResizeEffect","_setDragHandleHeight","resizeObserver","entries","containerRight","databaseBody","dragHandleHeight","clientHeight","allDragHandle","handle","_headerContainer","isChangingWidth","initChangeColumnWidthHandlers","headerContainer","changeActiveColumnIndex","changeColumnWidthConfig","onColumnWidthPointerdown","currentColumnCells","dragHandleCell","rowCells","scrollLeft","lastClientX","startClientX","rawWidth","clientWidth","rafId","onColumnWidthPointermove","startScrollLeft","onUpdateDOM","columnWidth","titleText","boundaryLeft","dragHandleRight","dragHandleLeft","cancelAnimationFrame","onColumnWidthPointerup","columnProps","dragHandles","dragHandle","initMoveColumnHandlers","dragColumnConfig","indicator","onColumnDragStart","headerColumns","dragIcon","dragHeaderColumn","dragIndex","tableBody","targetIndex","indicatorHeight","previewBoundaries","createDragPreview","previewFragment","headerColumn","headerColumnClone","cloneNode","previewContent","setDragImage","onColumnDrag","getClosestElement","firstColumnRect","elementRect","outOfBoundaries","autoLeft","autoRight","auto","autoScroll","onColumnDragEnd","fromIndex","toIndex","columnMoveElements","moveElement","isTitleEditing","static_html","isEditing","isChangingColumnType","e2","ml","register_decorate","DatabaseCellElement","defineColumnRenderer","defaultValue","components","displayName","ColumnRendererHelper","_columns","register","list","cell_container_decorate","DatabaseCellContainer","_isEditing","setEditing","setHeight","CELL_PADDING","databaseModel","rowModel","setValue","option","queueMicrotask","updateColumnProperty","newProperty","getCell","CellEditing","editingTag","tag","previewTag","Cell","toolbar_action_popup_decorate","toolbarActions","databaseTypes","DatabaseTypePopup","isKanban","dbType","ToolbarActionPopup","close","_onShowDatabaseType","_databaseTypePopup","_onHideDatabaseType","toolbar_decorate","NewRecordPreview","pO","toolbar_toolbar_decorate","toolbar_styles","DatabaseToolbar","_recordAddDisposables","_onSearch","el","inputValue","setSearchState","Searching","SearchInput","_databaseMap","existingRowIds","toLocaleLowerCase","filteredRowIds","setFilteredRowIds","_onSearchKeydown","_searchInput","_resetSearchStatus","_searchContainer","_clearSearch","_onShowSearch","removeListener","searchState","SearchIcon","_onFocusSearchInput","_onShowAction","_toolbarAction","_closeToolbarAction","Action","_moreActionContainer","_onAddNewRecord","addRow","_initAddRecordHandlers","initAddNewRecordHandlers","dragConfig","rowContainer","getClosestRow","insertRowIndex","isLast","rectTop","databaseWidth","databaseLeft","UL","fromLWTH","_newRecord","databaseMap","columnMap","columnValues","expandSearch","isActiveMoreAction","onSearchIconClick","closeIcon","ws","searchTool","lC","xh","VirgoInput","yDoc","Doc","_active","maxLength","getText","YTEXT_NAME","doc","undoManager","UndoManager","trackedOrigins","Set","paste","restLength","stopCapturing","originalText","tmpText","skipDefault","KeyboardEvent","redo","undo","num","parseFloat","transformedText","isNaN","setActive","database_title_decorate","DatabaseTitle","_titleVInput","_handleKeyDown","_onTitleFocus","_titleContainer","_onTitleBlur","i2","_initTitleVEditor","onStopPropagation","sJ","isEmpty","CheckboxCell","_onChange","rowHost","icons","TF","XN","i0","checkbox_decorate","CheckboxColumnRenderer","multi_select_decorate","MultiSelectCell","MultiSelectCellEditing","Multi","MultiSelectColumnRenderer","number_decorate","NumberCellEditing","_vInput","_onInitVEditor","YText","NumberColumnRenderer","decimal","progress_decorate","progress_styles","progressColors","processing","success","ProgressCellEditing","_dragConfig","_progressBgWidth","_onDocumentMove","_onPointerDown","_progressBg","visibleWidth","stepWidth","boundLeft","containerWidth","_onPointerMove","steps","_setDragHandlePosition","fgStyles","bgStyles","ProgressColumnRenderer","rich_text_decorate","toggleStyle","attrs","oldAttributes","fromEntries","syncVRange","TextCell","_initYText","_onSoftEnter","_handleClick","RichTextColumnRenderer","select_option_decorate","SelectOption","_onOptionFocus","_onOptionBlur","editing","setText","getSelectionValue","VV","saveSelectionName","setEditingIndex","CELL_SELECTION_MOVE_KEYS","CELL_SELECTION_ENTER_KEYS","CellSelectionManager","dispatcher","_service","_onCellSelectionMove","cellSelection","nextCoord","selection_utils","VT","_add","fn","_dispatcher","onCellSelectionChange","selectCellByElement","_model","hasRowSelection","select_option_popup_decorate","tagActions","SelectActionPopup","_onAction","onAction","onClose","select_cell_editing_decorate","KEYS_WHITE_LIST","select_cell_editing_styles","SelectCellEditing","Single","_inputValue","_editingIndex","_selectedOptionIndex","_selectColor","_onSelectOption","selectionList","isSingleMode","currentSelection","_onSelect","_selectOptionContainer","_selectCell","exitEditing","_onDeleteSelected","selectedValue","filteredValue","_onSelectSearchInput","_onSelectOrAdd","selectTag","_onAddSelection","isExist","isSelected","newValue","_calcRowHostHeight","tagColor","newSelect","x0","property","selectCell","_onSelectAction","_setEditingIndex","deleteSelectedCellTag","_showSelectAction","selectOption","optionIcon","_onSaveSelectionName","oldSelect","renameSelectedCellTag","O2","_selectInput","filteredSelection","selectedTag","showCreateTip","selectCreateTip","SelectCell","maxWidth","select_decorate","SelectColumnRenderer","RowSelectionManager","_startCell","_database","_columnWidthHandles","_startRange","_rowIds","_isInDatabase","selection_manager_utils","pD","startRange","Qo","YK","elementFromPoint","uW","_setColumnWidthHandleDisplay","_onDragMove","elementsFromPoint","cS","_clearRowSelection","g5","wy","drag_handle","DU","rowSelection","_onRowSelectionDelete","KP","table_view_decorate","table_view_styles","DatabaseTable","_searchState","_filteredRowIds","_hoverState","_columnRenderer","registerInternalRenderer","_initRowSelectionEvents","_rowSelection","uiEventDispatcher","_initCellSelectionEvents","_cellSelection","_setFilteredRowIds","_setSearchState","_onDatabaseScroll","_columnHeaderComponent","_onMouseOver","_onMouseLeave","_updateHoverState","_resetHoverState","_resetSearchState","_addRow","currentSearchState","_addColumn","currentColumns","defaultColumnType","cV","tableContent","_tableContainer","DataBaseRowContainer","databaseBlock","filteredChildren","renderModel","kanban_view_decorate","kanban_view_styles","DatabaseKanban","DatabaseBlockComponent","databaseTag","s2","database_block_decorate","extractCssVariables","getComputedStyle","variables","css_variables","qn","cssName","getPropertyValue","ThemeObserver","_mode","_cssVariables","observer","_observer","attributeFilter","pagePreset","page_model","surface_model","list_model","Q","frame_model","database_model","divider_model","code_model","embed_model","paragraph_model","mN","edgelessPreset","env","globalThis","global","importIdentifier","ListBlockService","previousSiblingBlock","nextSiblingBlock","number2letter","ordZ","getIndex","siblings","fakeIndex","getListDeep","deep","getListInfo","ListBlockComponent","showChildren","types","attribute_renderer","_onClickIcon","checkedPropObj","_select","De","blocks_dist","DefaultPageBlockComponent","selectOneBlock","listIcon","ListIcon","onClick","Ym","getNumberPrefix","getPrefix","number2roman","lookup","CM","CD","XC","XL","IX","IV","romanStr","VX","Bo","shouldAddMarginTop","toggleRight","toggleDown","checkboxChecked","checkboxUnchecked","points","downloadImage","fileType","getUrlByModel","arrayBuffer","downloadUrl","MouseEvent","download","copyImage","_internal_clipboard_index_js__WEBPACK_IMPORTED_MODULE_0__","_components_toast_js__WEBPACK_IMPORTED_MODULE_4__","copyBlock","copyData","copySuccess","performNativeCopy","tempElem","listener","execCommand","focusCaption","blockEle","_internal_index_js__WEBPACK_IMPORTED_MODULE_1__","dom","store","copyCode","codeBlockModel","getAllowSelectedBlocks","dfs","createDragHandle","_components_index_js__WEBPACK_IMPORTED_MODULE_3__","_point","editingState","dragBlockParent","moveBlocks","_internal_service_js__WEBPACK_IMPORTED_MODULE_2__","setSelectedBlocks","dragging","toggled","innerRect","ColorEvent","Event","DEFAULT_COLORS","DEFAULT_SELECTED_COLOR","isTransparent","isSameColorWithBackground","ColorUnit","hollowCircle","letter","additionIcon","TransparentColor","borderRadius","stroke","_blocksuite_global_config__WEBPACK_IMPORTED_MODULE_4__","wR","BorderedHollowCircle","strokeWidth","colorStyle","borderStyle","alignItems","justifyContent","boxSizing","EdgelessColorPanel","showLetterMark","lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_2__","unit","EdgelessAlignPanel","onSelect","jQ","UP","mh","change_text_button_decorate","TEXT_COLORS","DEFAULT_DARK_TEXT_COLOR","DEFAULT_LIGHT_TEXT_COLOR","EdgelessChangeTextButton","_popperShow","_colorSelectorPopper","_textAlignPopper","_setTextColor","selectionState","_setTextAlign","align","textAlign","Rx","_textColorButton","_textColorMenu","_textAlignButton","_textAlignMenu","selectedColor","getMostCommonColor","VF","UT","selectedAlign","getMostCommonAlign","aligns","color_panel","Gs","getCommonRectStyle","getSelectedRect","selectable","_utils_js__WEBPACK_IMPORTED_MODULE_2__","ry","XA","_blocksuite_phasor__WEBPACK_IMPORTED_MODULE_0__","getSelectableBounds","bounds","bound","Mb","deserialize","ATTR_SHOW","createButtonPopper","popperElement","stateUpdated","_popperjs_core__WEBPACK_IMPORTED_MODULE_3__","setOptions","hasAttribute","clickAway","listenClickAway","onClickAway","inside","getTooltipWithShortcut","tip","shortcut","BinaryHeap","scoreFunction","_content","_scoreFunction","sinkDown","bubbleUp","rescoreElement","parentN","elemScore","child2N","child1N","swap","child1Score","child1","child2","child2Score","manhattan","Graph","nodes","edges","connections","gridX","gridY","_init","_addGraphNodesAndInitGrid","_linkGraphNodes","_createGraphNode","cost","basic","fromNode","directionChanged","xs","ys","getKey","topKey","leftKey","neighbors","getNode","parseKey","route","rectangles","graph","createGraph","shouldManualGenerateGraph","p0x","p0y","p1x","p1y","maxX","maxY","pointsBothOnLeft","manualGenerateGraph","isVertical","edgeCenters","inflatedRectangles","rulers","inflatedRects","createRulers","minX","minY","sortedColumns","sortedRows","createNodes","findPointInRect","addPoint","hasPoint","getGrid","createValidNodesAndGrid","sortedGridX","sortedGridY","addRulersPoints","isRowEdge","isColumnEdge","currentX","currentY","nextX","nextY","forceAddPointsAsNodes","relativeDirection","columnsValue","rowsValue","routed","aStarRoute","heuristic","openHeap","currentNode","pathTo","curr","unshift","closed","il","neighbor","gScore","beenVisited","visited","simplifiedRoute","simplify_path","SurfaceTextEditor","_element","_keeping","keeping","_syncRect","vLines","viewportUpdated","setDisplay","_unmount","unmount","virgoStyle","ae","fontSize","fontFamily","outline","transformOrigin","xZ","FRAME_MIN_WIDTH","FRAME_MIN_HEIGHT","DEFAULT_FRAME_WIDTH","DEFAULT_FRAME_HEIGHT","DEFAULT_FRAME_OFFSET_X","DEFAULT_FRAME_OFFSET_Y","isTopLevelBlock","isPhasorElement","pickTopBlock","isPointIn","pointX","pointY","Gn","pickBlocksByBound","blockBound","r3","kK","getSelectionBoxBound","modelW","modelH","toViewCoord","getXYWH","getCursorMode","mouseMode","panning","pickBy","selectedShapes","pickByPoint","generateConnectorPath","startRect","endRect","startPoint","endPoint","originControllers","oI","Orthogonal","fixed","customizedStart","customizedEnd","customized","part0EndPoint","part0","part1","part2StartPoint","part2","getAttachedPointByDirection","getAttachedPoint","attachedPoint","distance","sqrt","pow","getAttachedPointByPosition","getConnectorAttachedInfo","startElement","endElement","rectangle","controllers","isConnectorAndBindingsAllSelected","connector","connectorSelected","startSelected","endSelected","handleElementChangedEffectForConnector","bindingElements","getBindingElements","bindingElement","vy","routes","getBackgroundGrid","viewportX","viewportY","showGrid","gap","translateX","translateY","grid","addNote","addFrameWithPoint","mouseModeUpdated","bQ","mountTextEditor","textEditor","pageBlockContainer","switchToDefaultMode","addText","pickTop","change_text_button","ZM","LF","xywhArrayToObject","HandleDirection","DefaultModeDragType","BacklinkButton","_backlinks","_showPopover","getBacklink","indexUpdated","linkedBacklinks","backlinkPopover","backlinks","metas","blockId","Tm","threshold","zQ","updateLocalSelectionRange","Wc","setLocalRange","selectedRectsUpdated","calculatedRects","hooks","scrollHeight","scrollTop","rafID","clearRaf","ceil","onScroll","BlockDragHandlers","onStart","updateViewport","resetDraggingArea","refreshBlockRectCache","draggingArea","updateDraggingArea","blockCache","viewportOffset","selectBlocksByDraggingArea","clearDraggingArea","draggingAreaUpdated","EmbedResizeManager","_originPosition","_dropContainer","_dropContainerSize","_dragMoveTarget","pageX","pageY","className","activeComponent","selectedEmbeds","embedRectsUpdated","activeImg","dragModel","getModelByElement","NativeDragHandlers","resetStartRange","lastPoint","PreviewDragHandlers","Ye","PageSelectionState","focusedBlock","_richTextCache","_blockCache","_embedCache","_activeComponent","component","richTextCache","embedCache","allBlocks","rr","clearNativeSelection","clearBlockSelection","clearEmbedSelection","shouldFilterMouseEvent","DefaultSelectionManager","nF","_onContainerDragStart","zv","Rn","hK","IE","_embedResizeManager","_onContainerDragMove","_onContainerDragEnd","selectedType","$U","format_quick_bar","EM","_onContainerPointerDown","_onContainerClick","hasAddedFrame","_ensureFrameExists","tq","selectedBlocksWithShiftClick","allCaptions","clickBlockInfo","fl","lastSelectionPosition","getSelection","removeAllRanges","HTMLInputElement","_onContainerDblClick","Xf","_onContainerTripleClick","_onContainerContextMenu","R7","_onContainerPointerMove","hoverEditingState","H7","shouldClear","tempRect","fromDOMRect","embedEditingStateUpdated","_onSelectionChangeWithDebounce","anchorNode","focusNode","containsNode","offsetDelta","anchorOffset","focusOffset","selectionDirection","_onSelectionChangeWithoutDebounce","isDragging","hasFlavour","hasFrame","fromPoints","toDOMRect","updateRects","refreshSelectedBlocksRects","refreshEmbedRects","refreshDraggingArea","refreshSelectedBlocksRectsByModels","embedRects","Or","refreshRemoteSelection","selectAllBlocks","filterBlocksExcludeSubtrees","results","prevBlock","previousElementSibling","lastIndex","hasOneBlock","lastRect","pos","setFocusedBlock","blockElement","default_page_block_decorate","jd","_draggingArea","_selectedRects","_selectedEmbedRects","_isComposing","nativeSelectionToggled","_titleVEditor","_updateTitleInMeta","setPageMeta","_onTitleKeyDown","hasContent","defaultFrame","newFirstParagraphId","firstText","_onTitlePaste","_onWheel","deltaY","_onScroll","_embedEditingState","_initDragHandle","createHandle","dx","draggingBlockIds","rV","enable_drag_handle","enable","titleVEditor","innerWidth","innerHeight","_initSlotEffects","embedEditingState","_initFrameSizeEffect","uQ","scope","AL","newScope","GF","AFFINE_PAGE","setScope","activeSlot","deleteScope","withScope","bind_hotkey","Ps","enableHotkey","PageBlockService","ST","DraggingArea","selectedEmbedContainer","embedEditingContainer","EmbedEditingContainer","Ql","ch","GN","_8","_x","rj","tool_icon_button_decorate","EdgelessToolIconButton","coming","tipPosition","activeMode","classnames","ShapeComponentConfig","Re","nb","FE","YX","ShapeComponentConfigMap","shape_menu_decorate","EdgelessShapeMenu","selectedShape","lineSizeButtonStyles","lineStyleButtonStyles","panelWrapperStyle","lineStylesPanelStyles","LineStylesPanel","selectedLineSize","selectedLineStyle","lineStyle","lineSizeButtons","LineSizeButton","tooltipFromProps","lineStyleButtons","LineStyleButton","getModeIcon","Uw","PC","SC","solid","dash","none","PanelWrapper","change_shape_button_decorate","FILL_COLORS","DEFAULT_SHAPE_FILL_COLOR","STROKE_COLORS","DEFAULT_SHAPE_STROKE_COLOR","EdgelessChangeShapeButton","_shapeMenuPopper","_fillColorMenuPopper","_strokeColorMenuPopper","_lineStylesPanelPopper","_forceUpdateSelection","_setShapeFillColor","filled","Qm","fillColor","_setShapeStrokeColor","strokeColor","_setShapeStrokeWidth","_setShapeStrokeStyle","strokeStyle","_setShapeStyles","phasor_dist","qb","Solid","Dashed","None","_changeShapeButton","_shapeMenu","shapeType","updatedProps","_fillColorButton","_fillColorMenu","_strokeColorButton","_strokeColorMenu","_lineStylesButton","_lineStylesPanel","getMostCommonShape","shapeTypes","utils_std","selectedFillColor","getMostCommonFillColor","selectedStrokeColor","getMostCommonStrokeColor","getMostCommonLineSize","sizes","getMostCommonLineStyle","oR","change_brush_button_decorate","EdgelessChangeBrushButton","_colorPanelPopper","_setBrushSize","lineWidth","_setBrushColor","_colorPanel","EJ","selectedSize","getMostCommonSize","Thin","Thick","change_connector_button_decorate","EdgelessChangeConnectorButton","_setConnectorMode","T7","_setConnectorColor","_colorButton","change_connector_button_getMostCommonColor","selectedMode","getMostCommonMode","modes","getMostCommonLineWidth","change_connector_button_getMostCommonLineStyle","Straight","Nb","change_frame_button_decorate","EdgelessChangeFrameButton","_renderSelectedColor","_setBlockBackground","_colorSelector","selectedBackground","getMostCommonBackground","je","more_button_decorate","ACTIONS","EdgelessMoreButton","_actionsMenuPopper","_runAction","_delete","shapes","_splitElements","reorderingFramesUpdated","reorderingShapesUpdated","_actionsMenu","component_toolbar_decorate","EdgelessComponentToolbar","_groupSelected","_getShapeButton","shapeElements","shapeButton","_getBrushButton","brushElements","_getConnectorButton","connectorElements","_getFrameButton","_getTextButton","textElements","groupedSelected","shape","brush","selectedAtLeastTwoTypes","Ky","ResizeHandle","handleDirection","onPointerDown","handlerPointerDown","HandleResizeManager","onResizeMove","onResizeEnd","_dragDirection","_dragPos","_bounds","_commonBound","_aspectRatio","_resizeMode","_shiftKey","resizeMode","_resize","_onResizeEnd","_onResizeMove","aspectRatio","dragPos","isCorner","endX","endY","deltaX","oldMinX","oldMinY","oldMaxX","oldMaxY","oldCommonW","oldCommonH","flipX","flipY","TopLeft","BottomRight","TopRight","BottomLeft","dw","dh","scaleX","scaleY","bw","bh","isTall","th","tw","newCommonBound","newBounds","nx","ny","shapeX","shapeY","shapeW","shapeH","onPressShiftKey","pressed","capPointerdown","connectorMode","anchorPoint","elementX","elementY","pointermove","mousePointerEvent","picked","D9","newRect","newPoint","attachedPointPosition","sI","pointerup","edgeless_selected_rect_decorate","EdgelessSelectedRect","_componentToolbarPopper","_lock","selectedMap","frameX","frameY","frameW","frameH","j4","Iq","setElementBound","bt","_resizeManager","hasBlockElement","pressShiftKeyUpdated","_componentToolbar","_selectedRect","fallbackPlacements","selectedRect","TO","hasResizeHandles","resizeHandles","ResizeHandles","handleTopLeft","handleTopRight","handleBottomLeft","handleBottomRight","handleLeft","handleRight","connectorHandles","SingleConnectorHandles","controllerHandles","getControllerHandles","handles","current","centerControllerPointerdown","absoluteControllers","pointerMoveEvent","point0","newPoint0","point1","newPoint1","componentToolbar","T3","shape_tool_button_decorate","EdgelessShapeToolButton","_toggleShapeMenu","setMouseMode","zH","brush_menu_decorate","EdgelessBrushMenu","_setBrushWidth","brushSizeButtonGroup","BrushSizeButtonGroup","setBrushWidth","hY","brush_tool_button_decorate","EdgelessBrushToolButton","_brushMenu","_toggleBrushMenu","createBrushMenuPopper","brushMenu","connector_menu_decorate","EdgelessConnectorMenu","ConnectorModeButtonGroup","setConnectorMode","straightLineTooltip","orthogonalTooltip","connector_tool_button_decorate","EdgelessConnectorToolButton","createConnectorMenuPopper","p7","EdgelessToolbar","_imageLoading","_rafId","_setCenter","setCenter","_setZoom","focusPoint","setZoom","_setZoomByStep","_smoothZoom","uZ","tm","yF","innerSmoothZoom","nextZoom","_cutoff","ref","sign","_zoomToFit","frameXYWH","frameBound","surfaceElementsBound","getElementsBound","centerX","centerY","preZoom","newZoom","cofficient","_smoothTranslate","center","newCenter","subtract","innerSmoothTranslate","nextCenter","signX","signY","_addImage","realSize","sh","sw","addNewFrame","setZoomByAction","V4","formattedZoom","GV","XB","q$","V_","edgeless_toolbar_decorate","MouseModeController","enableHover","_surface","_blocks","sortedFrames","DefaultModeController","dragType","_dragStartPos","_dragLastPos","_isDoubleClickedOnMask","Selecting","DOMPoint","_pick","sU","_setNoneSelectionState","_setSelectionState","_handleClickOnSelected","clearSelectedBlocks","selectedBlocksUpdated","_handleDragMoveEffect","_handleSurfaceDragMove","boundX","boundY","boundW","boundH","i1","_handleBlockDragMove","_isInSelectedRect","viewX","viewY","_tryDeleteEmptyBlocks","emptyBlocks","xb","_updateDragHandle","frameBlockElement","fromDOM","onContainerClick","onContainerContextMenu","onContainerDblClick","RT","F4","onContainerTripleClick","_determineDragType","NativeEditing","ContentMoving","_cloneContent","_cloneSelected","frameService","onContainerDragStart","alt","AltCloning","initializeDragState","onContainerDragMove","YC","pickByBound","Xd","onContainerDragEnd","PreviewDragging","onContainerMouseOut","FrameResizeObserver","_cachedElements","_lastRects","resize","resizedFrames","entry","dA","contentRect","resetListener","unCachedKeys","cachedElement","unobserve","ignoreActiveState","BrushModeController","_draggingElementId","_draggingPathPoints","surfaceUpdated","ConnectorModeController","_draggingStartElement","_draggingStartRect","_pickBy","startPosition","_draggingStartPoint","endModelX","endModelY","endPosition","NoteModeController","_dragStartEvent","_addNote","hoverUpdated","startEvent","PanModeController","_lastPoint","lastX","lastY","applyDeltaCenter","ShapeModeController","TextModeController","selection_manager_shouldFilterMouseEvent","EdgelessSelectionManager","_lastMousePos","_mouseMode","_controllers","currentController","dispacher","_rightClickTimer","lastState","button","_updateLastMousePos","_onContainerPointerOut","timeStamp","_onContainerPointerUp","default","pan","note","_initMouseAndWheelEvents","ok","WheelEvent","KO","baseX","baseY","rQ","getHoverState","hovered","edgeless_page_block_decorate","EdgelessPageBlockComponent","_rectsOfSelectedBlocks","rn","zoomUpdated","subpageLinked","subpageUnlinked","_frameResizeObserver","blockElementsExcludeSubtrees","focusId","targetFrameBlock","lK","firstModelIndex","lastModelIndex","moveBlocksWithNewFrame","frameIndex","nextFirstBlockElement","nextFirstBlockRect","hoveringFrame","ev","reorderFrames","updateIndexes","_reorderTo","_reorder","vk","pickedElements","getSortedElementsWithViewportBounds","jR","JP","reorderShapes","qu","_clearSelection","_initSurface","surfaceBlock","yBlock","getYBlockById","yContainer","YMap","cssValue","cx","refresh","_handleToolbarFlag","createToolbar","enable_edgeless_toolbar","prevZoom","historyUpdated","bindEdgelessHotkeys","hotkey","AFFINE_EDGELESS","activeDispose","shouldRevertMode","lastMode","addListener","LM","vo","DOWN","DZ","ESC","SELECT_ALL","keyboardEvent","getElements","SPACE","keyup","bindDelete","BACKSPACE","DELETE","bindShift","ANY_KEY","domRect","newModelHeight","getIndexes","YT","zJ","pick","order","HP","viewportBounds","Js","yC","parentId","addBlocks","frameModel","onResize","attach","_surfaceContainer","childrenContainer","EdgelessBlockChild","zIndex","boxShadow","draggingAreaTpl","EdgelessDraggingArea","hoverRectTpl","EdgelessHoverRect","blockContainerStyle","zr","_getAllSubTexts","bindCommonHotkey","_format_config_js__WEBPACK_IMPORTED_MODULE_8__","hotkeyStr","_internal_index_js__WEBPACK_IMPORTED_MODULE_0__","isReadonly","_const_js__WEBPACK_IMPORTED_MODULE_6__","_internal_utils_block_range_js__WEBPACK_IMPORTED_MODULE_3__","_container_operations_js__WEBPACK_IMPORTED_MODULE_7__","_blocksuite_global_config__WEBPACK_IMPORTED_MODULE_10__","UNDO","canUndo","_internal_utils_index_js__WEBPACK_IMPORTED_MODULE_4__","MO","REDO","canRedo","Ty","_utils_index_js__WEBPACK_IMPORTED_MODULE_5__","hw","zl","removeCommonHotKey","handleUp","selectedModel","_blocksuite_global_utils__WEBPACK_IMPORTED_MODULE_11__","CL","Y8","previousBlock","$k","handleDown","lastEle","rq","atLineEdge","_internal_utils_check_line_js__WEBPACK_IMPORTED_MODULE_12__","bindHotkeys","SHIFT_UP","SHIFT_DOWN","LEFT","RIGHT","ENTER","TAB","ib","$x","addRange","handleTab","_internal_rich_text_rich_text_operations_js__WEBPACK_IMPORTED_MODULE_1__","removeHotkeys","databaseViews","isComingSoon","DatabaseModal","_selectedView","_convertToDatabase","viewType","defaultPageBlock","view","DATABASE_WHITE_LIST","actionConfig","isShow","showDatabaseModal","databaseModal","handleBlockSelectionBatchDelete","_blocksuite_global_utils__WEBPACK_IMPORTED_MODULE_9__","newBlock","_internal_index_js__WEBPACK_IMPORTED_MODULE_2__","_internal_utils_common_operations_js__WEBPACK_IMPORTED_MODULE_4__","deleteModelsByRange","handleMultiBlockBackspace","d2","updateBlockType","hasSamePage","savedBlockRange","mergeToCodeBlocks","nextSiblingId","newModel","nc","newId","transformBlock","y3","allTextUpdated","onModelTextUpdated","getCombinedFormat","loose","formatArr","startFormat","endFormat","newFormat","typedKey","getCurrentCombinedFormat","handleFormat","formatBlockRange","getDeltaByRangeIndex","marks","_internal_utils_virgo_js__WEBPACK_IMPORTED_MODULE_5__","handleSelectAll","nodeName","I8","handleKeydownAfterSelectBlocks","defaultPage","_components_slash_menu_index_js__WEBPACK_IMPORTED_MODULE_7__","w_","onModelElementUpdated","jo","tryUpdateFrameSize","showFormatQuickBarByClicks","jx","nE","HTMLTextAreaElement","_components_format_quick_bar_index_js__WEBPACK_IMPORTED_MODULE_6__","_position_js__WEBPACK_IMPORTED_MODULE_8__","formatConfig","_blocksuite_global_config__WEBPACK_IMPORTED_MODULE_2__","mY","_blocksuite_global_config__WEBPACK_IMPORTED_MODULE_3__","noneCodeBlockSelected","_container_operations_js__WEBPACK_IMPORTED_MODULE_1__","OA","h3","Ad","ux","xP","_internal_rich_text_link_node_index_js__WEBPACK_IMPORTED_MODULE_0__","repairContextMenuRange","currentRange","rangeCount","getRangeAt","pointRange","isPointInRange","getDragDirection","selectedOneLine","us","getNativeSelectionMouseDragInfo","isSelectedNothing","calcPositionPointByRange","isStartAnchor","targetNode","lineRange","maybeShiftRange","_internal_utils_check_line_js__WEBPACK_IMPORTED_MODULE_2__","lineRect","calcCurrentSelectionPosition","pageSelectionState","targetBlock","calcSafeCoordinate","edgeGap","safeX","compareTopAndBottomSpace","obj","spaceRect","topSpace","bottomSpace","topOrBottom","getPopperPosition","referenceRect","popperRect","ParagraphBlockService","tipsPlaceholderPreventDefault","ParagraphBlockComponent","tipsPos","_tipsPlaceholderTemplate","_isFocus","_placeholderDisposables","_updatePlaceholder","_richTextElement","parentRect","relativeTop","relativeLeft","TipsPlaceholder","blockHub","v_","placeholders","h1","h2","h4","h5","h6","quote","_onFocusIn","_onFocusOut","tipsPlaceholderTemplate","fontWeight","Rectangle","horizontal","directionValues","simplifyPath","tolerance","highestQuality","sqTolerance","simplifyDouglasPeucker","simplified","simplifyDPStep","maxSqDist","sqDist","getSqSegDist","simplifyRadialDist","prevPoint","newPoints","getSqDist","paragraphConfig","_platform_js__WEBPACK_IMPORTED_MODULE_0__","_icons_index_js__WEBPACK_IMPORTED_MODULE_1__","LV","bM","g3","fw","Zr","mF","W0","kS","MM","PE","RK","BLOCKHUB_TEXT_ITEMS","BLOCKHUB_LIST_ITEMS","BLOCKHUB_FILE_ITEMS","_icons_index_js__WEBPACK_IMPORTED_MODULE_2__","DatabaseSearchIcon","DatabaseDuplicate","DatabaseInsertLeft","DatabaseInsertRight","DatabaseMoveLeft","DatabaseMoveRight","DatabaseMultiSelect","DatabaseNumber","DatabaseSelect","DatabaseProgress","DatabaseSearchClose","DatabaseDone","addColumnStyle","DatabaseAddColumn","DatabaseDragIcon","SelectIcon","ShapeIcon","ImageSVG","YP","ImageIcon","ImageIcon20","EmbedIcon","BookmarkIcon","ConnectorIcon","PenIcon","HandIcon","SquareIcon","EllipseIcon","DiamondIcon","TriangleIcon","RoundedRectangleIcon","MinusIcon","PlusIcon","ViewBarIcon","TransparentIcon","MoreHorizontalIcon","LineStyleIcon","ConnectorXIcon","ConnectorLIcon","DashLineIcon","BanIcon","NoteIcon","ImportIcon","AlighLeftIcon","AlignCenterIcon","AlignRightIcon","fontIcon","svg","baseSize","fontIconStyle","TextSVG","TextIcon","TextIconLarge","H1Icon","H2Icon","H3Icon","H4Icon","H5Icon","H6Icon","BulletedListSVG","BulletedListIcon","NumberedListIconLarge","NumberedListIcon","DatabaseTableViewIcon","DatabaseKanbanViewIcon","TodoIcon","CodeBlockIcon","QuoteIcon","DividerIcon","BoldIcon","ItalicIcon","UnderlineIcon","StrikethroughIcon","InlineCodeIcon","LinkSVG","FontLinkIcon","TodayIcon","TomorrowIcon","YesterdayIcon","NowIcon","CrossIcon","InsertBlocksIcon","BlockHubIcon20","BlockHubIcon","BlockHubRoundedRectangleIcon","ConfirmIcon","UnlinkIcon","LinkToCardIcon","DownloadIcon","WrapIcon","CancelWrapIcon","ArrowDownIcon","PageIconSVG","LinkedPageSVG","FontPageIcon","FontLinkedPageIcon","PageIcon","LinkedPageIcon","NewPageIcon","DualLinkSVG","DualLinkIcon","DualLinkIcon16","WithDisposable","SuperClass","disposed","ShadowlessElement","finalizeStyles","elementStyles","styleRoot","disableShadowRoot","c3","BlockElement","UIEventState","UIEventStateContext","_map","states","PointerEventState","containerOffset","cmd","KeyboardEventState","KeyboardControl","_down","keyboardEventState","run","_up","listen","isFarEnough","PointerControl","_lastPointerDownEvent","_startDragState","_lastDragState","_pointerDownCount","_dragging","_reset","pointerEventState","_rect","_move","_moveOn","_out","bypassEventNames","globalEventNames","eventNames","UIEventDispatcher","_handlersMap","_pointerControl","_keyboardControl","_bindEvents","handlers","eventName","lit_root_decorate","BlockSuiteRoot","blockIdAttr","modelSubscribed","componentMap","_onLoadModel","generateNKeysBetween","digits","BASE_62_DIGITS","generateKeyBetween","mid","ZOOM_MAX","ZOOM_MIN","ZOOM_STEP","getStrokeRadius","thinning","pressure","sub","mul","per","dpr","dist2","uni","hypot","rotAround","sin","cos","px","py","lrp","StrokeStyle","ConnectorMode","PI","FIXED_PI","Vec","clamp","clampV","cross","snap","neg","addScalar","subScalar","vec","mulV","div","divV","cpr","len2","pry","normalize","tangent","fastDist","aV","ang","atan2","angle","med","rot","rotWith","isEqual","int","ang3","pc","v1","v2","rescale","isLeft","clockwise","nearestPointOnLineThroughPoint","distanceToLineThroughPoint","nearestPointOnLineSegment","distanceToLineSegment","nearestPointOnBounds","distanceToBounds","nudge","nudgeAtAngle","toPrecision","pointsBetween","slope","NaN","TAU","TLBoundsEdge","TLBoundsCorner","SnapPoints","Utils","lerp","y1","y2","mu","lerpColor","color1","color2","factor","h2r","c1","c2","rgb","modulate","rangeA","rangeB","fromLow","fromHigh","v0","deepClone","rng","seed","pointsToLineSegments","segments","getRectangleSides","rotation","tl","tr","br","bl","circleFromThreePoints","x1","x2","x3","perimeterOfEllipse","rx","shortAngleDist","a0","a1","da","longAngleDist","lerpAngles","angleDelta","getSweep","clampRadians","snapAngleToSegments","seg","isAngleBetween","AB","AC","degreesToRadians","radiansToDegrees","getArcLength","sweep","getSweepFlag","angleAC","angleAB","angleCAB","getLargeArcFlag","anglePA","anglePC","getArcDashOffset","del0","len0","off0","getEllipseDashOffset","pointInCircle","pointInEllipse","tdx","tdy","pointInRect","pointInPolygon","wn","pointInBounds","pointInPolyline","getBoundsSides","expandBounds","boundsCollide","boundsContain","boundsContained","boundsAreEqual","getBoundsFromPoints","pt","centerBounds","boundsCenter","getBoundsCenter","translateBounds","snapBoundsToGrid","gridSize","rotateBounds","getRotatedEllipseBounds","getExpandedBounds","getCommonBounds","getRotatedCorners","getTransformedBoundingBox","isAspectRatioLocked","ax0","ay0","ax1","ay1","bx0","by0","bx1","by1","Top","Bottom","aw","ah","ar","cv","c0","getTransformAnchor","isFlippedX","isFlippedY","anchor","getRelativeTransformedBoundingBox","initialBounds","initialShapeBounds","nw","nh","getRotatedSize","getBoundsWithCenter","midX","midY","getCommonTopLeft","getFromCache","getNext","Error","uniqueId","rotateArray","arr","debounce","ms","timeoutId","getSvgPathFromStroke","average","getSvgPathFromStrokePoints","getPerfectDashProps","outset","lengthRatio","dashLength","strokeDashoffset","ratio","strokeDasharray","dashes","gapLength","isMobileSafari","ua","userAgent","iOS","webkit","throttle","limit","inThrottle","lastResult","isDarwin","lns","serializeXYWH","deserializeXYWH","getSnapPoints","others","snapDistance","snapLines","snaps","isSnapped","snapResults","isCareful","gapX","gapY","deepMerge","patch","Bound","getCommonBound","getExpandedBound","getBoundFromPoints","inflateBound","half","newBound","transformPointsToNewBound","oldBound","oldMargin","newMargin","wholeOldMargin","wholeNewMargin","newW","newH","transformedPoints","intersects","SurfaceElement","_display","yMap","computedValue","_onMap","minWidth","minHeight","applyUpdate","updates","toJSON","hitTest","observeDeep","unobserveDeep","getArrowPoints","arrowSize","sides","ConnectorElement","roughness","realStrokeColor","linearPath","strokeLineDash","secondToLast","getConnectorPointsBound","arrowPoints","boundWidthLineWidth","relativeControllers","transformed","ConnectorElementDefaultProps","ShapeElementDefaultProps","ShapeMethodsMap","realFillColor","renderOffset","renderWidth","renderHeight","translate","kRect","triangle","polygon","ellipse","diamond","TextElementDefaultProps","RE_RTL_CHECK","isRTL","isChrome","getFontString","splitIntoLines","normalizeText","transformDelta","tmpString","TextElement","_maxTextWidth","_maxTextHeight","_lineHeight","_lines","deltaInsertsToChunks","transformedDelta","chunksGenerator","chunk","lineHeightPx","font","horizontalOffset","lineIndex","beforeTextWidth","save","rtl","shouldTemporarilyAttach","canvas","isConnected","fillStyle","textBaseline","fillText","getTextWidth","getLineWidth","canvas2dContext","getContext","measureText","restore","ElementCtors","debug","fillRect","getStroke","getStrokeOutlinePoints","firstRadius","smoothing","simulatePressure","isComplete","cap","capStart","taperStartEase","capEnd","taperEndEase","totalLength","runningLength","taperStart","taper","taperEnd","minDistance","leftPts","rightPts","prevPressure","sp","rp","prevVector","vector","pr","isPrevPointSharpCorner","ts","te","nextVector","nextDpr","prevDpr","isPointSharpCorner","isNextPointSharpCorner","firstPoint","startCap","endCap","dotPts","cornersVector","offsetA","offsetB","getStrokePoints","streamline","pts","strokePoints","hasReachedMinimumLength","commands","Path2D","relativePoints","ElementDefaultProps","getGridIndex","rangeFromBound","minRow","maxRow","minCol","maxCol","compare","GridManager","_grids","_elementToGrids","_createGrid","col","_getGrid","grids","boundHasChanged","minRow2","maxRow2","minCol2","maxCol2","gridElements","sorted","rotatePoints","degrees","lineLength","polygonHachureLines","polygonList","hachureAngle","hachureGap","rotationCenter","straightHachureLines","vertexArray","vertices","ymin","ymax","islope","activeEdges","ix","removed","edge","ae1","ae2","nexti","ce","ne","rotateLines","HachureFiller","helper","fillPolygons","_fillPolygons","ops","renderLines","doubleLineOps","ZigZagFiller","o2","zigZagAngle","zigzagLines","dgx","dgy","HatchFiller","set2","DotFiller","dotsOnLines","fweight","fillWeight","ro","dl","DashedFiller","dashedLine","dashOffset","dashGap","alpha","atan","lstart","lend","ZigZagLineFiller","zo","zigzagOffset","dz","middle","fillers","randomSeed","Random","imul","PARAMS","parsePath","tokenize","RegExp","$1","paramsCount","params","numbeToken","segment","absolutize","subx","suby","out","newdata","lastType","lcx","lcy","cx1","cy1","cx2","cy2","r1","r2","largeArcFlag","sweepFlag","curves","arcToCubicCurves","recursive","angleRad","f1","f2","rotate","r1Pow","r2Pow","asin","df","f2old","x2old","y2old","s1","tan","hx","hy","m2","m3","m4","curve","randOffset","_offsetOpt","randOffsetWithRange","_offset","generateEllipseParams","ellipseWithParams","opset","_doubleLine","stepCount","curveStepCount","curveFitRandomness","curveFitting","increment","ellipseParams","ap1","cp1","_computeEllipsePoints","o1","_curve","disableMultiStroke","ap2","estimatedPoints","arc","stop","roughClosure","strt","stp","ellipseInc","arcInc","_arc","solidFillPolygon","maxRandomnessOffset","patternFillPolygons","getFiller","fillerName","randomizer","roughnessGain","filling","singleStroke","disableMultiStrokeFill","_line","move","overlay","lengthSq","halfOffset","divergePoint","midDispX","bowing","midDispY","randomHalf","randomFull","preserveVertices","_curveWithOffset","ps","closePoint","curveTightness","cachedVertArray","overlap","coreOnly","corePoints","allPoints","radOffset","endAngle","distanceSq","simplifyPoints","epsilon","outPoints","maxDistSq","maxNdx","distSq","distanceToSegmentSq","l2","pointsOnBezierCurves","numSegments","getPointsOnBezierCurveWithSplitting","flatness","p4","uy","vx","p0","q2","q3","red","NOS","RoughGenerator","defaultOptions","_o","newSeed","_d","sets","ellipseResponse","circle","diameter","ret","fillOptions","patternFillArc","cloneOptionsAlterSeed","bcurve","curveToBezier","pointsIn","polyPoints","hasFill","hasStroke","simplification","pointsOnPath","currentPoints","pendingCurve","appendPendingCurve","appendPendingPoints","simplifiedSet","svgPath","pv","_bezierTo","ros","iterations","opsToPath","drawing","fixedDecimals","toPaths","drawable","fillSketch","RoughCanvas","gen","draw","getDefaultOptions","precision","fixedDecimalPlaceDigits","setLineDash","strokeLineDashOffset","lineDashOffset","_drawToContext","fillRule","fillLineDash","fillLineDashOffset","rule","beginPath","moveTo","bezierCurveTo","lineTo","generator","Renderer","gridManager","_left","_top","_width","_height","_center","_shouldUpdate","viewportMinXY","viewportMaxXY","logicalX","logicalY","Np","_resetSize","_loop","oldWidth","oldHeight","_render","devicePixelRatio","bbox","clearRect","setTransform","midpoint","digitA","digitB","validateInteger","getIntegerLength","getIntegerPart","integerPartLength","validateOrderKey","incrementInteger","digs","carry","fb","decrementInteger","borrow","ia","fa","normalizeWheelDeltaY","maxStep","log10","SurfaceManager","_elements","_bindings","_onYContainer","changes","keysChanged","yElement","_yContainer","ElementCtor","_computedValue","_renderer","_updateBindings","_syncFromExistingContainer","_addBinding","id0","id1","_transact","newIndex","oldIndex","properties","index_browser","defaultProps","hasElement","candidates","bindingIds","bindingId","initDefaultGestureHandler","directive","XM","Xe","pX","ATTRIBUTE","it","lit_html","Jb"],"sourceRoot":""}