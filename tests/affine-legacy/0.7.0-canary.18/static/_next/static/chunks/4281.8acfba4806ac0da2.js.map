{"version":3,"file":"static/chunks/4281.8acfba4806ac0da2.js","mappings":"kJAGO,IAAMA,EAAwBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAqB,UAG7CC,EAAoBD,CAAAA,EAAAA,EAAAA,EAAAA,EAK/BE,GAAOA,EAAIH,GACX,CAACG,EAAKC,EAAKC,IAAW,CACpBD,EAAIJ,EAAuBM,GAAQ,CAOjC,IAAMC,EAAYC,CALd,mBAAOH,EACF,IAAMA,EAENA,GAEcC,GACvB,GAAIC,WAAAA,EACF,OAAOA,CACR,CACD,GAAIA,WAAAA,EAAUE,KAAK,CACjB,MAAM,MAAU,oDAAqD,CAEvE,GAAIF,EAAUG,eAAe,EAAIH,EAAUG,eAAe,CAAG,GAC3D,MAAM,MAAU,kDAAmD,CAErE,OAAOH,CACT,EACF,yRG3BF,IAAMI,EAAU,IAAIC,gGCyCpB,IAAMC,EAAgBC,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,SAAuBC,CAM1B,CAAE,KAiBtBC,KAvB8C,CAChDC,UAAAA,CAAAA,CACAC,OAAAA,CAAAA,CACAC,OAAAA,CAAAA,CACAC,OAAAA,CAAAA,CACAC,SAAAA,CAAAA,CACsB,CAN0BN,EAO1CO,EAAmBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAaC,EAAAA,EAAiBA,EACjDC,EAAUC,CAAAA,EAAAA,EAAAA,OAAAA,EACd,IAAMC,OAAOC,MAAM,CAACN,GACpB,CAACA,EAAiB,EAEdO,EAAsBZ,EAAUY,mBAAmB,CACnDC,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAA2BF,EAAqBX,GAC7D,GAAI,CAACY,EACH,MAAM,IAAIE,EAAAA,EAAiBA,CAACH,EAAqBX,EAAQ,CAE3D,IAAMe,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAAsBL,GAAqBM,IAAI,CAC1DF,GAAQA,EAAKG,EAAE,GAAKlB,GAEhBmB,EAAkBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBpB,GACpCF,EAAcO,CAAAA,EAAAA,EAAAA,EAAAA,EAAac,GAC3BE,EACJvB,IAAiB,GAAjBA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAawB,IAAI,GAAjBxB,KAAAA,IAAAA,EAAAA,EACCyB,EAAAA,EAA2BA,GAAKvB,EAAS,WAAa,MAAM,CAEzDwB,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,EAAWC,EAAAA,EAAqBA,EAElD,MADAC,CAAAA,EAAAA,EAAAA,EAAAA,EAAaZ,GAEX,GAAAa,EAAAC,EAAA,EAACC,EAAAA,CAAMA,CAAAA,CACLC,MAAO,CACLC,OAAQ,mBACV,EAEAV,KAAMnB,EAAW,OAASkB,CAAW,CACrCT,KAAMA,EACNX,OAAQgC,CAAAA,EAAAA,EAAAA,WAAAA,EACN,CAACrB,EAAYsB,IAAsC,CACjDC,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB,IAAM,CACpBX,EAAUU,EACZ,GACAjC,EAAOW,EAAMsB,EACf,EACA,CAACjC,EAAQuB,EAAU,EAErBtB,OAAQ+B,CAAAA,EAAAA,EAAAA,WAAAA,EACN,CAACrB,EAAYsB,IAA4B,CACvCC,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB,IAAM,CACpBX,EAAUU,EACZ,GACAtB,EAAKb,SAAS,CAACqC,WAAW,CAACxB,EAAKM,EAAE,CAAE,CAClCmB,YAAaC,KAAKC,GAAG,EACvB,GACAC,aAAaC,OAAO,CAAC,eAAgB7B,EAAKM,EAAE,EAC5C,IAAIwB,EAAU,IAAM,CAAC,EACjBxC,GACFwC,CAAAA,EAAUxC,EAAOU,EAAMsB,EAAAA,EAEzB,IAAMS,EAAepC,EAClBqC,GAAG,CAACC,GAAUA,EAAOC,iBAAiB,CAACC,WAAW,EAClDC,MAAM,CAAC,GACNC,CAAAA,CAAQC,GAENC,EAAWR,EAAaC,GAAG,CAACM,GAAMA,EAAGhB,IAC3C,MAAO,IAAM,CACXiB,EAASC,OAAO,CAACC,GAAMA,KACvBX,GACF,CACF,EACA,CAACnC,EAASL,EAAQsB,EAAU,GApCzB,GAAwBzB,MAAAA,CAArBA,EAAUuD,OAAO,CAAC,KAAmBtD,MAAAA,CAAhBD,EAAUmB,EAAE,CAAC,KAAUqC,MAAA,CAAPvD,GAwCnD,GAEMwD,EAAuB5D,CAAAA,EAAAA,EAAAA,IAAAA,EAE1B,SAA8BC,CAAiB,CAAE,IAAnB,CAAE4D,cAAAA,CAAAA,CAAe,CAAjB5D,EAC/B,MACE,GAAA+B,EAAAC,EAAA,EAAC6B,MAAAA,CAAIC,UF5HF,mBE6HAF,EAAc,CACbzE,kBAAiBA,EAAAA,CAAAA,IAIzB,GAQM4E,EAAchE,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,SAASgE,EAChCC,CAAuB,CACT,CACd,IAAMC,EAAOD,EAAMC,IAAI,CACvB,GAAI,iBAAOA,EAYT,MACE,GAAAlC,EAAAmC,EAAA,EAACC,EAAAA,EAAUA,CAAAA,CACTjC,MAAO,CACLC,OAAQ,mBACV,EACAiC,UAAWH,EAAKG,SAAS,WAEzB,GAAArC,EAAAC,EAAA,EAACqC,EAAAA,EAAKA,CAAAA,CAACC,YAAaL,EAAKtE,eAAe,UACtC,GAAAoC,EAAAC,EAAA,EAACuC,EAAAA,QAAQA,CAAAA,UACP,GAAAxC,EAAAC,EAAA,EAAC+B,EAAAA,CACCE,KAAMA,EAAKvE,KAAK,CAChB8E,YAAaR,EAAMQ,WAAW,CAC9B9D,QAASsD,EAAMtD,OAAO,OAI5B,GAAAqB,EAAAC,EAAA,EAACyC,EAAAA,EAAiBA,CAAAA,CAAAA,GAClB,GAAA1C,EAAAC,EAAA,EAACqC,EAAAA,EAAKA,CAAAA,CAACC,YAAa,IAAML,EAAKtE,eAAe,UAC5C,GAAAoC,EAAAC,EAAA,EAACuC,EAAAA,QAAQA,CAAAA,UACP,GAAAxC,EAAAC,EAAA,EAAC+B,EAAAA,CACCE,KAAMA,EAAKS,MAAM,CACjBF,YAAaR,EAAMQ,WAAW,CAC9B9D,QAASsD,EAAMtD,OAAO,SAMjC,CAvCC,GAAIuD,WAAAA,EACF,MAAO,GAAAlC,EAAAC,EAAA,EAAClC,EAAAA,CAAe,GAAGkE,EAAMQ,WAAW,EAQ5C,EANC,IAAMxB,EAASgB,EAAMtD,OAAO,CAACU,IAAI,CAC/B4B,GAAUA,EAAO2B,UAAU,CAACtD,EAAE,GAAK4C,GAE/BW,EAAU5B,MAAAA,EAAAA,KAAAA,EAAAA,EAAQ6B,SAAS,CAACjB,aAAa,CAE/C,MADA9B,CAAAA,EAAAA,EAAAA,EAAAA,EAAa8C,GACN,GAAA7C,EAAAC,EAAA,EAAC2B,EAAAA,CAAqBC,cAAegB,GAC9C,CA+BJ,GAEaE,EAA8Cd,GAAS,CAClE,GAAM,CAAE9D,UAAAA,CAAAA,CAAWC,OAAAA,CAAAA,CAAQ,CAAG6D,EACxBlD,EAAsBZ,EAAUY,mBAAmB,CACnDC,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAA2BF,EAAqBX,GAC7D,GAAI,CAACY,EACH,MAAM,IAAIE,EAAAA,EAAiBA,CAACH,EAAqBX,EAAQ,CAE3D,IAAM4E,EAAQC,SDjKdlE,CAA8B,CAC9BX,CAAc,CACd,CACA,IAAM8E,EAAYC,SA5BHC,CAAY,CAAEhF,CAAc,CAAgB,CACtDP,EAAQwF,GAAG,CAACD,IACfvF,EAAQP,GAAG,CAAC8F,EAAG,IAAIE,KAErB,IAAMtC,EAAMnD,EAAQR,GAAG,CAAC+F,GAExB,GADArD,CAAAA,EAAAA,EAAAA,EAAAA,EAAaiB,GACRA,EAAIqC,GAAG,CAACjF,GAcX,OAAO4C,EAAI3D,GAAG,CAACe,EAChB,MAd+BgF,EAA9B,IAAMG,EAAWpG,CAAAA,EAAAA,EAAAA,EAAAA,EAAaiG,CAAAA,IAAUhF,GAAVgF,CAAAA,EAAAA,EAAEI,OAAO,CAACpF,EAAAA,GAAVgF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjE,IAAAA,CAAK6D,KAAK,GAAI,YAW/D,OAVAO,EAASE,OAAO,CAAGnG,GAAO,CACxB,IAAMoG,EAAaN,EAAEjE,IAAI,CAACwE,gBAAgB,CAACC,EAAE,CAAC,IAAM,CAClD,IAAM5E,EAAOoE,EAAEI,OAAO,CAACpF,GACvBd,EAAI0B,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMG,IAAI,CAAC6D,KAAK,GAAI,WAC1B,GACA,MAAO,IAAM,CACXU,EAAW5C,OAAO,EACpB,CACF,EACAE,EAAI1D,GAAG,CAACc,EAAQmF,GACTA,CACT,CAGF,EAM4BxE,EAAqBX,GAE/C,MADA2B,CAAAA,EAAAA,EAAAA,EAAAA,EAAamD,GACNzE,CAAAA,EAAAA,EAAAA,EAAAA,EAAayE,EACtB,EC2JgDnE,EAAqBX,GAE7Db,EAASkB,CAAAA,EAAAA,EAAAA,EAAAA,EAAarB,EAAAA,CAAiBA,EACvCoB,EAAmBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAaC,EAAAA,EAAiBA,EACjDC,EAAUC,CAAAA,EAAAA,EAAAA,OAAAA,EACd,IAAMC,OAAOC,MAAM,CAACN,GACpB,CAACA,EAAiB,EAGpB,MACE,GAAAwB,EAAAmC,EAAA,EAAAnC,EAAA6D,EAAA,YACE,GAAA7D,EAAAC,EAAA,EAAC6D,IAAIA,UACH,GAAA9D,EAAAC,EAAA,EAAC+C,QAAAA,UAAOA,MAEV,GAAAhD,EAAAC,EAAA,EAACuC,EAAAA,QAAQA,CAAAA,UACP,GAAAxC,EAAAC,EAAA,EAAC+B,EAAAA,CAAYE,KAAM3E,EAAQkF,YAAaR,EAAOtD,QAASA,QAIhE,0ME9KA,IAAMoF,EAAoBC,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,IAC7BC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,MAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,QAAiCE,IAAI,CAACE,GAAW,EAC/CC,QAASD,EAAOR,iBAAiB,CACnC,IAGIU,EAAuB,GAAsC,CACjE,GAAM,CAAEnG,OAAAA,CAAAA,CAAQU,KAAAA,CAAAA,CAAMU,KAAAA,CAAAA,CAAMS,MAAAA,CAAAA,CAAO9B,OAAAA,CAAAA,CAAQ,CAAG4D,EACxCyC,EAAuBjG,CAAAA,EAAAA,EAAAA,EAAAA,EAC3BkG,EAAAA,CAAyBA,EAE3B5E,CAAAA,EAAAA,EAAAA,EAAAA,EAAaf,EAAM,2BACnB,IAAM4F,EAAYC,CAAAA,EAAAA,EAAAA,MAAAA,EAA+B,IAAI,EAC/CC,EAAcD,CAAAA,EAAAA,EAAAA,MAAAA,EAAwB,IAAI,EACtB,IAAI,GAA1BD,EAAUG,OAAO,GACnBH,EAAUG,OAAO,CAAG,IAAIL,EACxBE,EAAUG,OAAO,CAACC,SAAS,CAAG,GAC9BC,WAAWC,aAAa,CAAGN,EAAUG,OAAO,EAE9C,IAAMzE,EAASsE,EAAUG,OAAO,CAChChF,CAAAA,EAAAA,EAAAA,EAAAA,EAAa6E,EAAW,wCACpBtE,EAAOZ,IAAI,GAAKA,GAClBY,CAAAA,EAAOZ,IAAI,CAAGA,CAAAA,EAGhByF,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACV7E,EAAOtB,IAAI,GAAKA,IAClBsB,EAAOtB,IAAI,CAAGA,EACI,IAAI,GAAlBA,EAAKoG,IAAI,EACX/G,EAAOW,EAAMsB,GAGnB,EAAG,CAACA,EAAQtB,EAAMX,EAAO,EAEzB8G,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACd,GAAI7E,EAAOtB,IAAI,EAAIV,EAAQ,CACzB,IAAMiD,EAAW,EAAE,CAEnB,OADAA,EAAS8D,IAAI,CAAC/G,MAAAA,EAAAA,KAAAA,EAAAA,EAASU,EAAMsB,EAAAA,EACtB,IAAM,CACXiB,EACGH,MAAM,CAAC,GAAoC,CAAC,CAACN,GAC7CU,OAAO,CAACV,GAAWA,IACxB,CACF,CAAC,EAEA,CAACR,EAAQA,EAAOtB,IAAI,CAAEA,EAAMV,EAAO,EAEtC,IAAMgH,EAAMT,CAAAA,EAAAA,EAAAA,MAAAA,EAAuB,IAAI,EAEvCM,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACd,IAAM7E,EAASsE,EAAUG,OAAO,CAChChF,CAAAA,EAAAA,EAAAA,EAAAA,EAAaO,GACb,IAAMiF,EAAYD,EAAIP,OAAO,CAC7B,GAAKQ,EA0BL,OAvBIvG,EAAKwG,cAAc,CAACC,OAAO,CAAC,qBAC9BnF,EACGoF,cAAc,GACdrB,IAAI,CAACsB,GAAY,CACZb,EAAYC,OAAO,EACrBD,EAAYC,OAAO,CAACa,MAAM,GAE5Bd,EAAYC,OAAO,CAAGY,EACtB,IAAME,EAAcC,SAASC,aAAa,CAAC,gBACtCF,EAKHA,EAAYG,WAAW,CAACL,GAJxBM,QAAQC,IAAI,CACV,kEAKN,GACCC,KAAK,CAACC,GAAO,CACZH,QAAQI,KAAK,CAACD,EAChB,GAGJb,EAAUS,WAAW,CAAC1F,GACf,IAAM,KACXwE,CAAAA,CAAmB,OAAnBA,CAAAA,EAAAA,EAAYC,OAAO,GAAnBD,KAAAA,IAAAA,GAAAA,EAAqBc,MAAAA,GACrBL,EAAUe,WAAW,CAAChG,EACxB,CA3BC,EA4BA,CAACA,EAAQtB,EAAK,EAGjB,IAAM+C,EAAY,kBAA8BJ,MAAA,CAAZrB,EAAOZ,IAAI,CAAC,SAChD,MACE,GAAAM,EAAAC,EAAA,EAAC6B,MAAAA,CACCyE,cAAa,UAAkB5E,MAAA,CAAR3C,EAAKM,EAAE,EAC9ByC,UAAWA,EACX5B,MAAOA,EACPmF,IAAKA,GAGX,EAEMkB,EAA0B,GAI5B,GAAAxG,EAAAmC,EAAA,EAACL,MAAAA,WACC,GAAA9B,EAAAC,EAAA,EAACwG,KAAAA,UAAG,+BACJ,GAAAzG,EAAAC,EAAA,EAAC6B,MAAAA,UAAKG,EAAMoE,KAAK,CAACK,OAAO,GACzB,GAAA1G,EAAAC,EAAA,EAAC0G,SAAAA,CACCJ,cAAY,8BACZK,QAAS,IAAM,KACb3E,CAAAA,CAAa,OAAbA,CAAAA,EAAAA,EAAM4E,OAAO,GAAb5E,KAAAA,IAAAA,GAAAA,EAAAA,IAAAA,CAAAA,GACAA,EAAM6E,kBAAkB,EAC1B,WACD,iBAOMC,EAAqB/I,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,UAA8B,CACnE,MACE,GAAAgC,EAAAmC,EAAA,EAACL,MAAAA,CAAIC,UD3JF,oBC4JD,GAAA/B,EAAAC,EAAA,EAAC+G,EAAAA,CAAQA,CAAAA,CACPjF,UD9JD,UC+JCkF,UAAU,OACV7G,OAAQ,KAEV,GAAAJ,EAAAC,EAAA,EAAC+G,EAAAA,CAAQA,CAAAA,CAACC,UAAU,OAAO7G,OAAQ,GAAI8G,MAAM,UAGnD,GAEaC,EAAmBnJ,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,SACnCiE,CAAuC,CACzB,CACd,MACE,GAAAjC,EAAAmC,EAAA,EAACiF,EAAAA,EAAaA,CAAAA,CACZC,eAAgBhH,CAAAA,EAAAA,EAAAA,WAAAA,EACd,GACE,GAAAL,EAAAC,EAAA,EAACuG,EAAAA,CAAyB,GAAGc,CAAa,CAAET,QAAS5E,EAAM4E,OAAO,GAEpE,CAAC5E,EAAM4E,OAAO,CAAC,YAGjB,GAAA7G,EAAAC,EAAA,EAACuC,EAAAA,QAAQA,CAAAA,CAAC+E,SAAU,GAAAvH,EAAAC,EAAA,EAAC8G,EAAAA,CAAAA,YACnB,GAAA/G,EAAAC,EAAA,EAACwE,EAAAA,CAAsB,GAAGxC,CAAK,KAEhCuF,EAAAA,EAAAA,CAAAA,uBAA8B,EAAIvF,EAAMjD,IAAI,EAC3C,GAAAgB,EAAAC,EAAA,EAACuC,EAAAA,QAAQA,CAAAA,CAAC+E,SAAU,IAAI,UACrBE,CAAAA,EAAAA,EAAAA,YAAAA,EACC,GAAAzH,EAAAC,EAAA,EAAC8D,EAAAA,CACC5F,UAAW8D,EAAMjD,IAAI,CAACb,SAAS,CAC/BC,OAAQ6D,EAAMjD,IAAI,CAACM,EAAE,GAEvBwG,SAAS4B,IAAI,MAMzB,EAEAP,CAAAA,EAAiBQ,WAAW,CAAG,2JC/K/B,IAAM9J,EAAU,IAAIC,QAEb,SAASsB,EACdL,CAA8B,CAClB,CACZ,GAAI,CAAClB,EAAQwF,GAAG,CAACtE,GAAsB,CACrC,IAAMwE,EAAWpG,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB4B,EAAoBI,IAAI,CAACyI,SAAS,EACpE/J,EAAQP,GAAG,CAACyB,EAAqBwE,GACjCA,EAASE,OAAO,CAAGnG,GAAO,CACxB,IAAMwD,EAAU/B,EAAoBI,IAAI,CAACwE,gBAAgB,CAACC,EAAE,CAAC,IAAM,CACjEtG,EAAIyB,EAAoBI,IAAI,CAACyI,SAAS,CACxC,GACA,MAAO,IAAM,CACX9G,EAAQA,OAAO,EACjB,CACF,CACF,CAAC,MACMrC,CAAAA,EAAAA,EAAAA,EAAAA,EAAaZ,EAAQR,GAAG,CAAC0B,GAClC,CAEO,SAAS8I,EAAkB9I,CAA8B,CAAE,CAChE,MAAOH,CAAAA,EAAAA,EAAAA,OAAAA,EACL,IAAO,EACLkJ,aAAc,CAAC1J,EAAgB2J,IAAqB,CAClD,IAAM/I,EAAOD,EAAoByE,OAAO,CAACpF,GACzC2B,CAAAA,EAAAA,EAAAA,EAAAA,EAAaf,GACb,IAAMgJ,EAAYhJ,EACfiJ,iBAAiB,CAAC,eAClBC,EAAE,CAAC,GACNnI,CAAAA,EAAAA,EAAAA,EAAAA,EAAaiI,GACbhJ,EAAKmJ,QAAQ,CAAC,IAAM,CAClBH,EAAUhF,KAAK,CAACoF,MAAM,CAAC,EAAGJ,EAAUhF,KAAK,CAACqF,MAAM,EAChDL,EAAUhF,KAAK,CAACsF,MAAM,CAACP,EAAU,EACnC,GACAhJ,EAAoBI,IAAI,CAACqB,WAAW,CAACpC,EAAQ,CAAE4E,MAAO+E,CAAS,EACjE,EACAvH,YAAa,CAACpC,EAAgBmK,IAAgC,CAC5DxJ,EAAoBI,IAAI,CAACqB,WAAW,CAACpC,EAAQmK,EAC/C,EACAC,YAAa,GACJzJ,EAAoBI,IAAI,CAACqJ,WAAW,CAACpK,GAK9CqK,cAAe,CAACrK,EAAgBsK,IACvB3J,EAAoBI,IAAI,CAACsJ,aAAa,CAACrK,EAAQsK,EAE1D,GACA,CAAC3J,EAAoB,CAEzB,yGCrEA,IAAMlB,EAAU,IAAIC,QAEd6K,EAAYxL,CAAAA,EAAAA,EAAAA,EAAAA,EAAkB,IAAI,EAwCjC,SAAS8B,EACdF,CAA8B,CAC9BX,CAAqB,CACR,CACb,IAAMwK,EAAWzF,SA1CFC,CAAY,CAAEhF,CAAqB,CAAqB,CACvE,GAAI,CAACA,EACH,OAAOuK,CACR,CACI9K,EAAQwF,GAAG,CAACD,IACfvF,EAAQP,GAAG,CAAC8F,EAAG,IAAIE,KAErB,IAAMtC,EAAMnD,EAAQR,GAAG,CAAC+F,GAExB,GADArD,CAAAA,EAAAA,EAAAA,EAAAA,EAAaiB,GACRA,EAAIqC,GAAG,CAACjF,GAyBX,OAAO4C,EAAI3D,GAAG,CAACe,EAChB,EAzBC,IAAMmF,EAAWpG,CAAAA,EAAAA,EAAAA,EAAAA,EAAKiG,EAAEI,OAAO,CAACpF,IAsBhC,OArBAmF,EAASE,OAAO,CAAGnG,GAAO,CACxB,IAAMuL,EAAQ,IAAIC,EAAAA,EAAeA,CAejC,OAdAD,EAAME,GAAG,CACP3F,EAAE4F,KAAK,CAACC,SAAS,CAACrF,EAAE,CAACtE,GAAM,CACrBlB,IAAWkB,GACbhC,EAAI8F,EAAEI,OAAO,CAAClE,GAElB,IAEFuJ,EAAME,GAAG,CACP3F,EAAE4F,KAAK,CAACE,WAAW,CAACtF,EAAE,CAACtE,GAAM,CACvBlB,IAAWkB,GACbhC,EAAI,IAAI,CAEZ,IAEK,IAAM,CACXuL,EAAM/H,OAAO,EACf,CACF,EACAE,EAAI1D,GAAG,CAACc,EAAQmF,GACTA,CACT,CAGF,EAM2BxE,EAAqBX,GAE9C,MADA2B,CAAAA,EAAAA,EAAAA,EAAAA,EAAa6I,GACNnK,CAAAA,EAAAA,EAAAA,EAAAA,EAAamK,EACtB","sources":["webpack://_N_E/./src/atoms/layout.ts","webpack://_N_E/./src/components/blocksuite/block-suite-editor/index.tsx","webpack://_N_E/./src/components/page-detail-editor.css.ts","webpack://_N_E/../../packages/hooks/src/use-block-suite-workspace-page-title.ts","webpack://_N_E/./src/components/page-detail-editor.tsx","webpack://_N_E/../../packages/component/src/components/block-suite-editor/index.css.ts","webpack://_N_E/../../packages/component/src/components/block-suite-editor/index.tsx","webpack://_N_E/../../packages/hooks/src/use-block-suite-page-meta.ts","webpack://_N_E/../../packages/hooks/src/use-block-suite-workspace-page.ts","webpack://_N_E/../../node_modules/@vanilla-extract/webpack-plugin/extracted.js?6ba6","webpack://_N_E/../../node_modules/@vanilla-extract/webpack-plugin/extracted.js?075b","webpack://_N_E/<anon>"],"sourcesContent":["import type { ExpectedLayout } from '@toeverything/plugin-infra/type';\nimport { atom } from 'jotai';\n\nexport const contentLayoutBaseAtom = atom<ExpectedLayout>('editor');\n\ntype SetStateAction<Value> = Value | ((prev: Value) => Value);\nexport const contentLayoutAtom = atom<\n  ExpectedLayout,\n  [SetStateAction<ExpectedLayout>],\n  void\n>(\n  get => get(contentLayoutBaseAtom),\n  (get, set, layout) => {\n    set(contentLayoutBaseAtom, prev => {\n      let setV: (prev: ExpectedLayout) => ExpectedLayout;\n      if (typeof layout !== 'function') {\n        setV = () => layout;\n      } else {\n        setV = layout;\n      }\n      const nextValue = setV(prev);\n      if (nextValue === 'editor') {\n        return nextValue;\n      }\n      if (nextValue.first !== 'editor') {\n        throw new Error('The first element of the layout should be editor.');\n      }\n      if (nextValue.splitPercentage && nextValue.splitPercentage < 70) {\n        throw new Error('The split percentage should be greater than 70.');\n      }\n      return nextValue;\n    });\n  }\n);\n","export type { EditorProps } from '@affine/component/block-suite-editor';\nexport { BlockSuiteEditor } from '@affine/component/block-suite-editor';\n","import \"src/components/page-detail-editor.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/page-detail-editor.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Lmxib2VxNzAgewogIGhlaWdodDogMTAwJTsKICB3aWR0aDogMTAwJTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var pluginContainer = 'lboeq70';","import type { Workspace } from '@blocksuite/store';\nimport { assertExists } from '@blocksuite/store';\nimport type { Atom } from 'jotai';\nimport { atom, useAtomValue } from 'jotai';\n\nconst weakMap = new WeakMap<Workspace, Map<string, Atom<string>>>();\n\nfunction getAtom(w: Workspace, pageId: string): Atom<string> {\n  if (!weakMap.has(w)) {\n    weakMap.set(w, new Map());\n  }\n  const map = weakMap.get(w);\n  assertExists(map);\n  if (!map.has(pageId)) {\n    const baseAtom = atom<string>(w.getPage(pageId)?.meta.title || 'Untitled');\n    baseAtom.onMount = set => {\n      const disposable = w.meta.pageMetasUpdated.on(() => {\n        const page = w.getPage(pageId);\n        set(page?.meta.title || 'Untitled');\n      });\n      return () => {\n        disposable.dispose();\n      };\n    };\n    map.set(pageId, baseAtom);\n    return baseAtom;\n  } else {\n    return map.get(pageId) as Atom<string>;\n  }\n}\n\nexport function useBlockSuiteWorkspacePageTitle(\n  blockSuiteWorkspace: Workspace,\n  pageId: string\n) {\n  const titleAtom = getAtom(blockSuiteWorkspace, pageId);\n  assertExists(titleAtom);\n  return useAtomValue(titleAtom);\n}\n","import './page-detail-editor.css';\n\nimport {\n  DEFAULT_HELLO_WORLD_PAGE_ID,\n  PageNotFoundError,\n} from '@affine/env/constant';\nimport { rootCurrentEditorAtom } from '@affine/workspace/atom';\nimport type { EditorContainer } from '@blocksuite/editor';\nimport type { Page } from '@blocksuite/store';\nimport { assertExists } from '@blocksuite/store';\nimport { useBlockSuitePageMeta } from '@toeverything/hooks/use-block-suite-page-meta';\nimport { useBlockSuiteWorkspacePage } from '@toeverything/hooks/use-block-suite-workspace-page';\nimport { useBlockSuiteWorkspacePageTitle } from '@toeverything/hooks/use-block-suite-workspace-page-title';\nimport { affinePluginsAtom } from '@toeverything/plugin-infra/manager';\nimport type {\n  AffinePlugin,\n  LayoutNode,\n  PluginUIAdapter,\n} from '@toeverything/plugin-infra/type';\nimport type { PluginBlockSuiteAdapter } from '@toeverything/plugin-infra/type';\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport Head from 'next/head';\nimport type { FC, ReactElement } from 'react';\nimport React, {\n  memo,\n  startTransition,\n  Suspense,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { Panel, PanelGroup, PanelResizeHandle } from 'react-resizable-panels';\n\nimport { pageSettingFamily } from '../atoms';\nimport { contentLayoutAtom } from '../atoms/layout';\nimport type { AffineOfficialWorkspace } from '../shared';\nimport { BlockSuiteEditor as Editor } from './blocksuite/block-suite-editor';\nimport { pluginContainer } from './page-detail-editor.css';\n\nexport type PageDetailEditorProps = {\n  isPublic?: boolean;\n  workspace: AffineOfficialWorkspace;\n  pageId: string;\n  onInit: (page: Page, editor: Readonly<EditorContainer>) => void;\n  onLoad?: (page: Page, editor: EditorContainer) => () => void;\n};\n\nconst EditorWrapper = memo(function EditorWrapper({\n  workspace,\n  pageId,\n  onInit,\n  onLoad,\n  isPublic,\n}: PageDetailEditorProps) {\n  const affinePluginsMap = useAtomValue(affinePluginsAtom);\n  const plugins = useMemo(\n    () => Object.values(affinePluginsMap),\n    [affinePluginsMap]\n  );\n  const blockSuiteWorkspace = workspace.blockSuiteWorkspace;\n  const page = useBlockSuiteWorkspacePage(blockSuiteWorkspace, pageId);\n  if (!page) {\n    throw new PageNotFoundError(blockSuiteWorkspace, pageId);\n  }\n  const meta = useBlockSuitePageMeta(blockSuiteWorkspace).find(\n    meta => meta.id === pageId\n  );\n  const pageSettingAtom = pageSettingFamily(pageId);\n  const pageSetting = useAtomValue(pageSettingAtom);\n  const currentMode =\n    pageSetting?.mode ??\n    (DEFAULT_HELLO_WORLD_PAGE_ID === pageId ? 'edgeless' : 'page');\n\n  const setEditor = useSetAtom(rootCurrentEditorAtom);\n  assertExists(meta);\n  return (\n    <Editor\n      style={{\n        height: 'calc(100% - 52px)',\n      }}\n      key={`${workspace.flavour}-${workspace.id}-${pageId}`}\n      mode={isPublic ? 'page' : currentMode}\n      page={page}\n      onInit={useCallback(\n        (page: Page, editor: Readonly<EditorContainer>) => {\n          startTransition(() => {\n            setEditor(editor);\n          });\n          onInit(page, editor);\n        },\n        [onInit, setEditor]\n      )}\n      onLoad={useCallback(\n        (page: Page, editor: EditorContainer) => {\n          startTransition(() => {\n            setEditor(editor);\n          });\n          page.workspace.setPageMeta(page.id, {\n            updatedDate: Date.now(),\n          });\n          localStorage.setItem('last_page_id', page.id);\n          let dispose = () => {};\n          if (onLoad) {\n            dispose = onLoad(page, editor);\n          }\n          const uiDecorators = plugins\n            .map(plugin => plugin.blockSuiteAdapter.uiDecorator)\n            .filter((ui): ui is PluginBlockSuiteAdapter['uiDecorator'] =>\n              Boolean(ui)\n            );\n          const disposes = uiDecorators.map(ui => ui(editor));\n          return () => {\n            disposes.forEach(fn => fn());\n            dispose();\n          };\n        },\n        [plugins, onLoad, setEditor]\n      )}\n    />\n  );\n});\n\nconst PluginContentAdapter = memo<{\n  detailContent: PluginUIAdapter['detailContent'];\n}>(function PluginContentAdapter({ detailContent }) {\n  return (\n    <div className={pluginContainer}>\n      {detailContent({\n        contentLayoutAtom,\n      })}\n    </div>\n  );\n});\n\ntype LayoutPanelProps = {\n  node: LayoutNode;\n  editorProps: PageDetailEditorProps;\n  plugins: AffinePlugin<string>[];\n};\n\nconst LayoutPanel = memo(function LayoutPanel(\n  props: LayoutPanelProps\n): ReactElement {\n  const node = props.node;\n  if (typeof node === 'string') {\n    if (node === 'editor') {\n      return <EditorWrapper {...props.editorProps} />;\n    } else {\n      const plugin = props.plugins.find(\n        plugin => plugin.definition.id === node\n      );\n      const Content = plugin?.uiAdapter.detailContent;\n      assertExists(Content);\n      return <PluginContentAdapter detailContent={Content} />;\n    }\n  } else {\n    return (\n      <PanelGroup\n        style={{\n          height: 'calc(100% - 52px)',\n        }}\n        direction={node.direction}\n      >\n        <Panel defaultSize={node.splitPercentage}>\n          <Suspense>\n            <LayoutPanel\n              node={node.first}\n              editorProps={props.editorProps}\n              plugins={props.plugins}\n            />\n          </Suspense>\n        </Panel>\n        <PanelResizeHandle />\n        <Panel defaultSize={100 - node.splitPercentage}>\n          <Suspense>\n            <LayoutPanel\n              node={node.second}\n              editorProps={props.editorProps}\n              plugins={props.plugins}\n            />\n          </Suspense>\n        </Panel>\n      </PanelGroup>\n    );\n  }\n});\n\nexport const PageDetailEditor: FC<PageDetailEditorProps> = props => {\n  const { workspace, pageId } = props;\n  const blockSuiteWorkspace = workspace.blockSuiteWorkspace;\n  const page = useBlockSuiteWorkspacePage(blockSuiteWorkspace, pageId);\n  if (!page) {\n    throw new PageNotFoundError(blockSuiteWorkspace, pageId);\n  }\n  const title = useBlockSuiteWorkspacePageTitle(blockSuiteWorkspace, pageId);\n\n  const layout = useAtomValue(contentLayoutAtom);\n  const affinePluginsMap = useAtomValue(affinePluginsAtom);\n  const plugins = useMemo(\n    () => Object.values(affinePluginsMap),\n    [affinePluginsMap]\n  );\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <Suspense>\n        <LayoutPanel node={layout} editorProps={props} plugins={plugins} />\n      </Suspense>\n    </>\n  );\n};\n","import \"../../packages/component/src/components/block-suite-editor/index.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"../../packages/component/src/components/block-suite-editor/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LmdsNTFjZTAgewogIG1heC13aWR0aDogdmFyKC0tYWZmaW5lLWVkaXRvci13aWR0aCk7CiAgbWFyZ2luOiAwIDJyZW07CiAgcGFkZGluZzogMCAyNHB4Owp9Ci5nbDUxY2UxIHsKICBtYXJnaW4tdG9wOiA0MHB4OwogIG1hcmdpbi1ib3R0b206IDQwcHg7Cn0=\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var blockSuiteEditorHeaderStyle = 'gl51ce1';\nexport var blockSuiteEditorStyle = 'gl51ce0';","import { config } from '@affine/env';\nimport { editorContainerModuleAtom } from '@affine/jotai';\nimport type { BlockHub } from '@blocksuite/blocks';\nimport type { EditorContainer } from '@blocksuite/editor';\nimport { assertExists } from '@blocksuite/global/utils';\nimport type { Page } from '@blocksuite/store';\nimport { Skeleton } from '@mui/material';\nimport { useAtomValue } from 'jotai';\nimport type { CSSProperties, ReactElement } from 'react';\nimport { lazy, memo, Suspense, useCallback, useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport type { FallbackProps } from 'react-error-boundary';\nimport { ErrorBoundary } from 'react-error-boundary';\n\nimport {\n  blockSuiteEditorHeaderStyle,\n  blockSuiteEditorStyle,\n} from './index.css';\n\nexport type EditorProps = {\n  page: Page;\n  mode: 'page' | 'edgeless';\n  onInit: (page: Page, editor: Readonly<EditorContainer>) => void;\n  onLoad?: (page: Page, editor: EditorContainer) => () => void;\n  style?: CSSProperties;\n};\n\nexport type ErrorBoundaryProps = {\n  onReset?: () => void;\n};\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var currentPage: Page | undefined;\n  // eslint-disable-next-line no-var\n  var currentEditor: EditorContainer | undefined;\n}\n\nconst ImagePreviewModal = lazy(() =>\n  import('../image-preview-modal').then(module => ({\n    default: module.ImagePreviewModal,\n  }))\n);\n\nconst BlockSuiteEditorImpl = (props: EditorProps): ReactElement => {\n  const { onLoad, page, mode, style, onInit } = props;\n  const JotaiEditorContainer = useAtomValue(\n    editorContainerModuleAtom\n  ) as typeof EditorContainer;\n  assertExists(page, 'page should not be null');\n  const editorRef = useRef<EditorContainer | null>(null);\n  const blockHubRef = useRef<BlockHub | null>(null);\n  if (editorRef.current === null) {\n    editorRef.current = new JotaiEditorContainer();\n    editorRef.current.autofocus = true;\n    globalThis.currentEditor = editorRef.current;\n  }\n  const editor = editorRef.current;\n  assertExists(editorRef, 'editorRef.current should not be null');\n  if (editor.mode !== mode) {\n    editor.mode = mode;\n  }\n\n  useEffect(() => {\n    if (editor.page !== page) {\n      editor.page = page;\n      if (page.root === null) {\n        onInit(page, editor);\n      }\n    }\n  }, [editor, page, onInit]);\n\n  useEffect(() => {\n    if (editor.page && onLoad) {\n      const disposes = [] as ((() => void) | undefined)[];\n      disposes.push(onLoad?.(page, editor));\n      return () => {\n        disposes\n          .filter((dispose): dispose is () => void => !!dispose)\n          .forEach(dispose => dispose());\n      };\n    }\n    return;\n  }, [editor, editor.page, page, onLoad]);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const editor = editorRef.current;\n    assertExists(editor);\n    const container = ref.current;\n    if (!container) {\n      return;\n    }\n    if (page.awarenessStore.getFlag('enable_block_hub')) {\n      editor\n        .createBlockHub()\n        .then(blockHub => {\n          if (blockHubRef.current) {\n            blockHubRef.current.remove();\n          }\n          blockHubRef.current = blockHub;\n          const toolWrapper = document.querySelector('#toolWrapper');\n          if (!toolWrapper) {\n            console.warn(\n              'toolWrapper not found, block hub feature will not be available.'\n            );\n          } else {\n            toolWrapper.appendChild(blockHub);\n          }\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    container.appendChild(editor);\n    return () => {\n      blockHubRef.current?.remove();\n      container.removeChild(editor);\n    };\n  }, [editor, page]);\n\n  // issue: https://github.com/toeverything/AFFiNE/issues/2004\n  const className = `editor-wrapper ${editor.mode}-mode`;\n  return (\n    <div\n      data-testid={`editor-${page.id}`}\n      className={className}\n      style={style}\n      ref={ref}\n    />\n  );\n};\n\nconst BlockSuiteErrorFallback = (\n  props: FallbackProps & ErrorBoundaryProps\n): ReactElement => {\n  return (\n    <div>\n      <h1>Sorry.. there was an error</h1>\n      <div>{props.error.message}</div>\n      <button\n        data-testid=\"error-fallback-reset-button\"\n        onClick={() => {\n          props.onReset?.();\n          props.resetErrorBoundary();\n        }}\n      >\n        Try again\n      </button>\n    </div>\n  );\n};\n\nexport const BlockSuiteFallback = memo(function BlockSuiteFallback() {\n  return (\n    <div className={blockSuiteEditorStyle}>\n      <Skeleton\n        className={blockSuiteEditorHeaderStyle}\n        animation=\"wave\"\n        height={50}\n      />\n      <Skeleton animation=\"wave\" height={30} width=\"40%\" />\n    </div>\n  );\n});\n\nexport const BlockSuiteEditor = memo(function BlockSuiteEditor(\n  props: EditorProps & ErrorBoundaryProps\n): ReactElement {\n  return (\n    <ErrorBoundary\n      fallbackRender={useCallback(\n        (fallbackProps: FallbackProps) => (\n          <BlockSuiteErrorFallback {...fallbackProps} onReset={props.onReset} />\n        ),\n        [props.onReset]\n      )}\n    >\n      <Suspense fallback={<BlockSuiteFallback />}>\n        <BlockSuiteEditorImpl {...props} />\n      </Suspense>\n      {config.enableImagePreviewModal && props.page && (\n        <Suspense fallback={null}>\n          {createPortal(\n            <ImagePreviewModal\n              workspace={props.page.workspace}\n              pageId={props.page.id}\n            />,\n            document.body\n          )}\n        </Suspense>\n      )}\n    </ErrorBoundary>\n  );\n});\n\nBlockSuiteEditor.displayName = 'BlockSuiteEditor';\n","import type { PageBlockModel } from '@blocksuite/blocks';\nimport type { PageMeta, Workspace } from '@blocksuite/store';\nimport { assertExists } from '@blocksuite/store';\nimport type { Atom } from 'jotai';\nimport { atom, useAtomValue } from 'jotai';\nimport { useMemo } from 'react';\n\ndeclare module '@blocksuite/store' {\n  interface PageMeta {\n    favorite?: boolean;\n    subpageIds: string[];\n    // If a page remove to trash, and it is a subpage, it will remove from its parent `subpageIds`, 'trashRelate' is use for save it parent\n    trashRelate?: string;\n    trash?: boolean;\n    trashDate?: number;\n    updatedDate?: number;\n    mode?: 'page' | 'edgeless';\n    jumpOnce?: boolean;\n    // todo: support `number` in the future\n    isPublic?: boolean;\n  }\n}\n\nconst weakMap = new WeakMap<Workspace, Atom<PageMeta[]>>();\n\nexport function useBlockSuitePageMeta(\n  blockSuiteWorkspace: Workspace\n): PageMeta[] {\n  if (!weakMap.has(blockSuiteWorkspace)) {\n    const baseAtom = atom<PageMeta[]>(blockSuiteWorkspace.meta.pageMetas);\n    weakMap.set(blockSuiteWorkspace, baseAtom);\n    baseAtom.onMount = set => {\n      const dispose = blockSuiteWorkspace.meta.pageMetasUpdated.on(() => {\n        set(blockSuiteWorkspace.meta.pageMetas);\n      });\n      return () => {\n        dispose.dispose();\n      };\n    };\n  }\n  return useAtomValue(weakMap.get(blockSuiteWorkspace) as Atom<PageMeta[]>);\n}\n\nexport function usePageMetaHelper(blockSuiteWorkspace: Workspace) {\n  return useMemo(\n    () => ({\n      setPageTitle: (pageId: string, newTitle: string) => {\n        const page = blockSuiteWorkspace.getPage(pageId);\n        assertExists(page);\n        const pageBlock = page\n          .getBlockByFlavour('affine:page')\n          .at(0) as PageBlockModel;\n        assertExists(pageBlock);\n        page.transact(() => {\n          pageBlock.title.delete(0, pageBlock.title.length);\n          pageBlock.title.insert(newTitle, 0);\n        });\n        blockSuiteWorkspace.meta.setPageMeta(pageId, { title: newTitle });\n      },\n      setPageMeta: (pageId: string, pageMeta: Partial<PageMeta>) => {\n        blockSuiteWorkspace.meta.setPageMeta(pageId, pageMeta);\n      },\n      getPageMeta: (pageId: string) => {\n        return blockSuiteWorkspace.meta.getPageMeta(pageId);\n      },\n      /**\n       * @deprecated\n       */\n      shiftPageMeta: (pageId: string, index: number) => {\n        return blockSuiteWorkspace.meta.shiftPageMeta(pageId, index);\n      },\n    }),\n    [blockSuiteWorkspace]\n  );\n}\n","import type { Page, Workspace } from '@blocksuite/store';\nimport { assertExists, DisposableGroup } from '@blocksuite/store';\nimport type { Atom } from 'jotai';\nimport { atom, useAtomValue } from 'jotai';\n\nconst weakMap = new WeakMap<Workspace, Map<string, Atom<Page | null>>>();\n\nconst emptyAtom = atom<Page | null>(null);\n\nfunction getAtom(w: Workspace, pageId: string | null): Atom<Page | null> {\n  if (!pageId) {\n    return emptyAtom;\n  }\n  if (!weakMap.has(w)) {\n    weakMap.set(w, new Map());\n  }\n  const map = weakMap.get(w);\n  assertExists(map);\n  if (!map.has(pageId)) {\n    const baseAtom = atom(w.getPage(pageId));\n    baseAtom.onMount = set => {\n      const group = new DisposableGroup();\n      group.add(\n        w.slots.pageAdded.on(id => {\n          if (pageId === id) {\n            set(w.getPage(id));\n          }\n        })\n      );\n      group.add(\n        w.slots.pageRemoved.on(id => {\n          if (pageId === id) {\n            set(null);\n          }\n        })\n      );\n      return () => {\n        group.dispose();\n      };\n    };\n    map.set(pageId, baseAtom);\n    return baseAtom;\n  } else {\n    return map.get(pageId) as Atom<Page | null>;\n  }\n}\n\nexport function useBlockSuiteWorkspacePage(\n  blockSuiteWorkspace: Workspace,\n  pageId: string | null\n): Page | null {\n  const pageAtom = getAtom(blockSuiteWorkspace, pageId);\n  assertExists(pageAtom);\n  return useAtomValue(pageAtom);\n}\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin"],"names":["contentLayoutBaseAtom","atom","contentLayoutAtom","get","set","layout","prev","nextValue","setV","first","splitPercentage","weakMap","WeakMap","EditorWrapper","memo","param","pageSetting","workspace","pageId","onInit","onLoad","isPublic","affinePluginsMap","useAtomValue","affinePluginsAtom","plugins","useMemo","Object","values","blockSuiteWorkspace","page","useBlockSuiteWorkspacePage","PageNotFoundError","meta","useBlockSuitePageMeta","find","id","pageSettingAtom","pageSettingFamily","currentMode","mode","DEFAULT_HELLO_WORLD_PAGE_ID","setEditor","useSetAtom","rootCurrentEditorAtom","assertExists","emotion_react_jsx_runtime_browser_esm","tZ","Editor","style","height","useCallback","editor","startTransition","setPageMeta","updatedDate","Date","now","localStorage","setItem","dispose","uiDecorators","map","plugin","blockSuiteAdapter","uiDecorator","filter","Boolean","ui","disposes","forEach","fn","flavour","concat","PluginContentAdapter","detailContent","div","className","LayoutPanel","props","node","BX","PanelGroup","direction","Panel","defaultSize","Suspense","editorProps","PanelResizeHandle","second","definition","Content","uiAdapter","PageDetailEditor","title","useBlockSuiteWorkspacePageTitle","titleAtom","getAtom","w","has","Map","baseAtom","getPage","onMount","disposable","pageMetasUpdated","on","HY","Head","ImagePreviewModal","lazy","Promise","all","__webpack_require__","e","then","bind","module","default","BlockSuiteEditorImpl","JotaiEditorContainer","editorContainerModuleAtom","editorRef","useRef","blockHubRef","current","autofocus","globalThis","currentEditor","useEffect","root","push","ref","container","awarenessStore","getFlag","createBlockHub","blockHub","remove","toolWrapper","document","querySelector","appendChild","console","warn","catch","err","error","removeChild","data-testid","BlockSuiteErrorFallback","h1","message","button","onClick","onReset","resetErrorBoundary","BlockSuiteFallback","Skeleton","animation","width","BlockSuiteEditor","ErrorBoundary","fallbackRender","fallbackProps","fallback","config","createPortal","body","displayName","pageMetas","usePageMetaHelper","setPageTitle","newTitle","pageBlock","getBlockByFlavour","at","transact","delete","length","insert","pageMeta","getPageMeta","shiftPageMeta","index","emptyAtom","pageAtom","group","DisposableGroup","add","slots","pageAdded","pageRemoved"],"sourceRoot":""}