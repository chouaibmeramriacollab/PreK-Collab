{"version":3,"file":"static/chunks/pages/public-workspace/[workspaceId]-8a1f904d147c7ca0.js","mappings":"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","sources":["webpack://_N_E/?9e07","webpack://_N_E/./src/pages/public-workspace/[workspaceId].tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/public-workspace/[workspaceId]\",\n      function () {\n        return require(\"private-next-pages/public-workspace/[workspaceId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/public-workspace/[workspaceId]\"])\n      });\n    }\n  ","import { Breadcrumbs, IconButton, ListSkeleton } from '@affine/component';\nimport { StyledTableContainer } from '@affine/component/page-list';\nimport { QueryParamError } from '@affine/env/constant';\nimport { rootCurrentWorkspaceIdAtom } from '@affine/workspace/atom';\nimport { SearchIcon } from '@blocksuite/icons';\nimport { useBlockSuiteWorkspaceAvatarUrl } from '@toeverything/hooks/use-block-suite-workspace-avatar-url';\nimport { useBlockSuiteWorkspaceName } from '@toeverything/hooks/use-block-suite-workspace-name';\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport { useRouter } from 'next/router';\nimport type React from 'react';\nimport { lazy, Suspense, useCallback, useEffect } from 'react';\n\nimport { openQuickSearchModalAtom } from '../../atoms';\nimport {\n  publicWorkspaceAtom,\n  publicWorkspaceIdAtom,\n} from '../../atoms/public-workspace';\nimport { WorkspaceAvatar } from '../../components/pure/footer';\nimport { PageLoading } from '../../components/pure/loading';\nimport {\n  PublicQuickSearch,\n  PublicWorkspaceLayout,\n} from '../../layouts/public-workspace-layout';\nimport type { NextPageWithLayout } from '../../shared';\nimport { NavContainer, StyledBreadcrumbs } from './[workspaceId]/[pageId]';\n\nconst BlockSuitePageList = lazy(() =>\n  import('../../components/blocksuite/block-suite-page-list').then(module => ({\n    default: module.BlockSuitePageList,\n  }))\n);\n\nconst ListPageInner: React.FC<{\n  workspaceId: string;\n}> = ({ workspaceId }) => {\n  const router = useRouter();\n  const publicWorkspace = useAtomValue(publicWorkspaceAtom);\n  const blockSuiteWorkspace = publicWorkspace.blockSuiteWorkspace;\n  const handleClickPage = useCallback(\n    (pageId: string) => {\n      return router.push({\n        pathname: `/public-workspace/[workspaceId]/[pageId]`,\n        query: {\n          workspaceId,\n          pageId,\n        },\n      });\n    },\n    [router, workspaceId]\n  );\n  const [name] = useBlockSuiteWorkspaceName(blockSuiteWorkspace);\n  const [avatar] = useBlockSuiteWorkspaceAvatarUrl(blockSuiteWorkspace);\n  const setSearchModalOpen = useSetAtom(openQuickSearchModalAtom);\n  const handleOpen = useCallback(() => {\n    setSearchModalOpen(true);\n  }, [setSearchModalOpen]);\n  if (!blockSuiteWorkspace) {\n    return <PageLoading />;\n  }\n  return (\n    <>\n      <PublicQuickSearch workspace={publicWorkspace} />\n      <NavContainer sx={{ px: '20px' }}>\n        <Breadcrumbs>\n          <StyledBreadcrumbs\n            href={`/public-workspace/${blockSuiteWorkspace.id}`}\n          >\n            <WorkspaceAvatar size={24} name={name} avatar={avatar} />\n            <span>{name}</span>\n          </StyledBreadcrumbs>\n        </Breadcrumbs>\n        <IconButton onClick={handleOpen}>\n          <SearchIcon />\n        </IconButton>\n      </NavContainer>\n      <Suspense\n        fallback={\n          <StyledTableContainer>\n            <ListSkeleton />\n          </StyledTableContainer>\n        }\n      >\n        <BlockSuitePageList\n          listType=\"public\"\n          isPublic={true}\n          onOpenPage={handleClickPage}\n          blockSuiteWorkspace={blockSuiteWorkspace}\n        />\n      </Suspense>\n    </>\n  );\n};\n\n// This is affine only page, so we don't need to dynamic use WorkspacePlugin\nconst ListPage: NextPageWithLayout = () => {\n  const router = useRouter();\n  const workspaceId = router.query.workspaceId;\n  const setWorkspaceId = useSetAtom(publicWorkspaceIdAtom);\n  // todo: remove this atom usage here\n  const setCurrentWorkspaceId = useSetAtom(rootCurrentWorkspaceIdAtom);\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n    if (typeof workspaceId === 'string') {\n      setWorkspaceId(workspaceId);\n      setCurrentWorkspaceId(workspaceId);\n    }\n  }, [router.isReady, setCurrentWorkspaceId, setWorkspaceId, workspaceId]);\n  const value = useAtomValue(publicWorkspaceIdAtom);\n  if (!router.isReady || !value) {\n    return <PageLoading />;\n  }\n  if (typeof workspaceId !== 'string') {\n    throw new QueryParamError('workspaceId', workspaceId);\n  }\n  return (\n    <Suspense\n      fallback={\n        <StyledTableContainer>\n          <ListSkeleton />\n        </StyledTableContainer>\n      }\n    >\n      <ListPageInner workspaceId={workspaceId} />\n    </Suspense>\n  );\n};\n\nexport default ListPage;\n\nListPage.getLayout = page => {\n  return <PublicWorkspaceLayout>{page}</PublicWorkspaceLayout>;\n};\n"],"names":["window","__NEXT_P","push","__webpack_require__","BlockSuitePageList","lazy","e","then","bind","module","default","ListPageInner","workspaceId","param","router","useRouter","publicWorkspace","useAtomValue","publicWorkspaceAtom","blockSuiteWorkspace","handleClickPage","useCallback","pathname","query","pageId","name","useBlockSuiteWorkspaceName","avatar","useBlockSuiteWorkspaceAvatarUrl","setSearchModalOpen","useSetAtom","openQuickSearchModalAtom","handleOpen","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__","BX","HY","tZ","PublicQuickSearch","workspace","NavContainer","sx","px","Breadcrumbs","StyledBreadcrumbs","href","concat","id","WorkspaceAvatar","size","span","IconButton","onClick","SearchIcon","Suspense","fallback","StyledTableContainer","ListSkeleton","listType","isPublic","onOpenPage","PageLoading","ListPage","setWorkspaceId","publicWorkspaceIdAtom","setCurrentWorkspaceId","rootCurrentWorkspaceIdAtom","useEffect","isReady","value","QueryParamError","__webpack_exports__","getLayout","page","PublicWorkspaceLayout"],"sourceRoot":""}