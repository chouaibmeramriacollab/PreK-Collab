{"version":3,"file":"static/chunks/pages/_debug/login.dev-b68ba09b4eb3625d.js","mappings":"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","sources":["webpack://_N_E/?fc06","webpack://_N_E/./src/pages/_debug/login.dev.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_debug/login.dev\",\n      function () {\n        return require(\"private-next-pages/_debug/login.dev.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_debug/login.dev\"])\n      });\n    }\n  ","import { Button } from '@affine/component';\nimport { AppContainer, MainContainer } from '@affine/component/workspace';\nimport { currentAffineUserAtom } from '@affine/workspace/affine/atom';\nimport {\n  clearLoginStorage,\n  createAffineAuth,\n  getLoginStorage,\n  isExpired,\n  parseIdToken,\n  setLoginStorage,\n  SignMethod,\n} from '@affine/workspace/affine/login';\nimport { useAtom } from 'jotai';\nimport type { NextPage } from 'next';\nimport { lazy, Suspense, useMemo } from 'react';\n\nimport { toast } from '../../utils';\n\nconst Viewer = lazy(() =>\n  import('@rich-data/viewer').then(m => ({ default: m.JsonViewer }))\n);\n\nimport { useTheme } from 'next-themes';\n\nconst LoginDevPage: NextPage = () => {\n  const [user, setUser] = useAtom(currentAffineUserAtom);\n  const auth = useMemo(() => createAffineAuth(), []);\n  return (\n    <AppContainer>\n      <MainContainer>\n        <h1>LoginDevPage</h1>\n        <Button\n          onClick={async () => {\n            const storage = getLoginStorage();\n            if (storage) {\n              const user = parseIdToken(storage.token);\n              if (isExpired(user)) {\n                await auth.refreshToken(storage);\n              }\n            }\n            const response = await auth.generateToken(SignMethod.Google);\n            if (response) {\n              setLoginStorage(response);\n              const user = parseIdToken(response.token);\n              setUser(user);\n            } else {\n              toast('Login failed');\n            }\n          }}\n        >\n          Login\n        </Button>\n        <Button\n          onClick={async () => {\n            const storage = getLoginStorage();\n            if (!storage) {\n              throw new Error('No storage');\n            }\n            const response = await auth.refreshToken(storage);\n            if (response) {\n              setLoginStorage(response);\n              const user = parseIdToken(response.token);\n              setUser(user);\n            } else {\n              toast('Login failed');\n            }\n          }}\n        >\n          Refresh Token\n        </Button>\n        <Button\n          onClick={() => {\n            clearLoginStorage();\n            setUser(null);\n          }}\n        >\n          Reset Storage\n        </Button>\n        <Button\n          onClick={async () => {\n            const status = await fetch('/api/workspace', {\n              method: 'GET',\n              headers: {\n                'Cache-Control': 'no-cache',\n                Authorization: getLoginStorage()?.token ?? '',\n              },\n            }).then(r => r.status);\n            toast(`Response Status: ${status}`);\n          }}\n        >\n          Check Permission\n        </Button>\n        <Suspense>\n          <Viewer\n            theme={useTheme().resolvedTheme === 'light' ? 'light' : 'dark'}\n            value={user}\n          />\n        </Suspense>\n      </MainContainer>\n    </AppContainer>\n  );\n};\n\nexport default LoginDevPage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","Viewer","lazy","e","then","bind","m","default","JsonViewer","LoginDevPage","user","setUser","useAtom","currentAffineUserAtom","auth","useMemo","createAffineAuth","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__","tZ","AppContainer","BX","MainContainer","h1","Button","onClick","storage","getLoginStorage","parseIdToken","token","isExpired","refreshToken","response","generateToken","SignMethod","setLoginStorage","toast","clearLoginStorage","status","fetch","method","headers","Authorization","r","concat","Suspense","theme","useTheme","resolvedTheme","value","__webpack_exports__"],"sourceRoot":""}