{"version":3,"file":"static/chunks/pages/plugins-d69449923c351ece.js","mappings":"sIAsEAA,CAAAA,EAAA,EAhDA,SAAAC,CAAA,EACA,IACAC,SAAAA,CAAA,CACAC,MAAAA,EAAA,GACAC,SAAAA,EAAA,KACA,CAAIH,EACJ,CAAAI,EAAAC,EAAA,CAA0CC,EAAAC,QAAc,KAaxD,MAZE,GAAAC,EAAAC,CAAA,EAAiB,KACnBP,GACAG,EAAA,GAEA,EAAG,CAAAH,EAAA,EACDI,EAAAI,SAAe,MACjBR,GACAG,EAAA,GAEA,EAAG,CAAAH,EAAA,EAGmB,GAAAS,EAAAC,GAAA,EAAKN,EAAAO,QAAc,EACzCZ,SAAAG,EAAAH,EAAAE,CAAA,EAEA,yBC3CA,CAAAW,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,WACA,WACA,OAAeC,EAAQ,MACvB,EACA,gKCEA,IAAMC,EAAU,IAAM,CACpB,IAAMC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAAaC,EAAAA,EAAiBA,EAC9C,MACE,GAAAC,EAAAC,EAAA,EAACC,EAAAA,CAAKA,CAAAA,UACJ,GAAAF,EAAAC,EAAA,EAACE,MAAAA,UACEC,OAAOC,MAAM,CAACR,GAASS,GAAG,CAAC,GAA+B,IAA9B,CAAEC,WAAAA,CAAAA,CAAYC,UAAAA,CAAAA,CAAW,CAAAC,EAC9CC,EAAUF,EAAUG,YAAY,CACtC,MACE,GAAAX,EAAAY,EAAA,EAACT,MAAAA,WAEEI,EAAWM,IAAI,CAAChC,QAAQ,CACxB6B,GAAW,GAAAV,EAAAC,EAAA,EAACS,EAAAA,CAAAA,KAHLH,EAAWO,EAAE,CAM3B,MAIR,EAEe,SAASC,GAA2B,QACjD,EAAKC,EAAAA,CAAAA,YAAmB,CAItB,GAAAhB,EAAAC,EAAA,EAACgB,EAAAA,EAAYA,CAAAA,UACX,GAAAjB,EAAAC,EAAA,EAACiB,EAAAA,EAAaA,CAAAA,UACZ,GAAAlB,EAAAC,EAAA,EAACkB,EAAAA,QAAQA,CAAAA,UACP,GAAAnB,EAAAC,EAAA,EAACL,EAAAA,CAAAA,SANA,GAAAI,EAAAC,EAAA,EAAAD,EAAAoB,EAAA,IACR,AAUH","sources":["webpack://_N_E/../../node_modules/@mui/base/NoSsr/NoSsr.js","webpack://_N_E/?0283","webpack://_N_E/./src/pages/plugins.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * *   Escape hatch for broken dependencies not supporting SSR.\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\n * *   Reduce the rendering time on the server.\n * *   Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/base/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/base/react-no-ssr/components-api/#no-ssr)\n */\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n\n  // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport default NoSsr;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/plugins\",\n      function () {\n        return require(\"private-next-pages/plugins.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/plugins\"])\n      });\n    }\n  ","import { AppContainer, MainContainer } from '@affine/component/workspace';\nimport { config } from '@affine/env';\nimport { NoSsr } from '@mui/material';\nimport { affinePluginsAtom } from '@toeverything/plugin-infra/manager';\nimport { useAtomValue } from 'jotai';\nimport type { ReactElement } from 'react';\nimport { Suspense } from 'react';\n\nconst Plugins = () => {\n  const plugins = useAtomValue(affinePluginsAtom);\n  return (\n    <NoSsr>\n      <div>\n        {Object.values(plugins).map(({ definition, uiAdapter }) => {\n          const Content = uiAdapter.debugContent;\n          return (\n            <div key={definition.id}>\n              {/* todo: support i18n */}\n              {definition.name.fallback}\n              {Content && <Content />}\n            </div>\n          );\n        })}\n      </div>\n    </NoSsr>\n  );\n};\n\nexport default function PluginPage(): ReactElement {\n  if (!config.enablePlugin) {\n    return <></>;\n  }\n  return (\n    <AppContainer>\n      <MainContainer>\n        <Suspense>\n          <Plugins />\n        </Suspense>\n      </MainContainer>\n    </AppContainer>\n  );\n}\n"],"names":["__webpack_exports__","props","children","defer","fallback","mountedState","setMountedState","react__WEBPACK_IMPORTED_MODULE_0__","useState","_mui_utils__WEBPACK_IMPORTED_MODULE_2__","Z","useEffect","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","Fragment","window","__NEXT_P","push","__webpack_require__","Plugins","plugins","useAtomValue","affinePluginsAtom","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__","tZ","NoSsr","div","Object","values","map","definition","uiAdapter","param","Content","debugContent","BX","name","id","PluginPage","config","AppContainer","MainContainer","Suspense","HY"],"sourceRoot":""}