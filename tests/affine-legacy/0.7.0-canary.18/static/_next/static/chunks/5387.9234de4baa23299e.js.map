{"version":3,"file":"static/chunks/5387.9234de4baa23299e.js","mappings":"2UCsBO,IAAMA,EAAgD,GAIvD,IAJwD,CAC5DC,KAAAA,CAAAA,CACAC,SAAAA,CAAAA,CACA,GAAGC,EACJ,CAAAC,EACOC,EAAqBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAWC,EAAAA,EAAwBA,EAC9D,MACE,GAAAC,EAAAC,EAAA,EAACC,EAAAA,CAAMA,CAAAA,CAAE,GAAGP,CAAK,UACf,GAAAK,EAAAG,EAAA,EAACC,MAAAA,CAAIC,UAAWC,EAAAA,EAA2B,WACzC,GAAAN,EAAAC,EAAA,EAACG,MAAAA,CAAIC,UAAWC,EAAAA,EAAwB,UAAGb,IAC1CC,EACD,GAAAM,EAAAC,EAAA,EAACM,EAAAA,CAAiBA,CAAAA,CAChBC,QAAS,IAAM,CACbX,EAAmB,GACrB,QAKV,EAEaY,EAAyB,GAAuC,IAAtC,CAAE,GAAGd,EAA4B,CAAAC,EAChEc,EAAIC,CAAAA,EAAAA,EAAAA,CAAAA,IACJ,CAACC,EAAOC,EAAQ,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQC,EAAAA,EAAqBA,EAChDC,EAAoB,GAAmB,CAC3C,GAAIJ,QAAAA,GAAmBA,SAAAA,GAAoBA,aAAAA,EACzC,MAAM,MAAU,qCAAsC,CAExDC,EAAQD,EACV,EACA,MACE,GAAAZ,EAAAC,EAAA,EAACC,EAAAA,CAAMA,CAAAA,CAAE,GAAGP,CAAK,UACf,GAAAK,EAAAC,EAAA,EAACG,MAAAA,CAAIC,UAAWC,EAAAA,EAA8B,UAC5C,GAAAN,EAAAG,EAAA,EAACc,EAAAA,EAAgBA,CAAAA,CACfC,aAAcN,EACdO,cAAeH,YAEf,GAAAhB,EAAAC,EAAA,EAACmB,EAAAA,EAAWA,CAAAA,CAACR,MAAM,MAAMS,MAAO,CAAEC,cAAe,YAAa,WAC3DZ,EAAE,GAAM,KAEX,GAAAV,EAAAC,EAAA,EAACmB,EAAAA,EAAWA,CAAAA,CAACR,MAAM,gBAAQF,EAAE,IAAO,KACpC,GAAAV,EAAAC,EAAA,EAACmB,EAAAA,EAAWA,CAAAA,CAACR,MAAM,oBAAYF,EAAE,QAAW,WAKtD,EChDO,SAASa,EAAgB3B,CAGS,CAAgB,IAHzB,CAC9B4B,iBAAAA,CAAAA,CACAC,aAAAA,CAAAA,CACuC,CAHT7B,EAIxB8B,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,IACVjB,EAAIC,CAAAA,EAAAA,EAAAA,CAAAA,IACV,GAAI,YAAac,EAAc,CAC7B,GAAIA,EAAaG,OAAO,GAAKC,EAAAA,EAAAA,CAAAA,GAAoB,CAAE,CACjD,IAAMC,EAAW,GAAA9B,EAAAC,EAAA,EAAC8B,EAAAA,EAAQA,CAAAA,CAACL,QAASA,IAC9BM,EAAkBN,EAAQO,WAAW,CAACC,UAAU,CAACC,MAAM,CAAG,GAC9D,GAAAnC,EAAAG,EAAA,EAACC,MAAAA,CAAIC,UF7BN,sBE8BG,GAAAL,EAAAC,EAAA,EAACG,MAAAA,CAAIiB,MAAO,CAAEe,KAAM,CAAE,WACpB,GAAApC,EAAAC,EAAA,EAACoC,EAAAA,EAAUA,CAAAA,CACTzB,MAAOc,EAAQO,WAAW,CAACC,UAAU,CACrCI,SAAUJ,GAAc,CACtBR,EAAQa,cAAc,CAACC,GAAS,EAC9B,GAAGA,CAAI,CACPN,WAAAA,CACF,GACF,MAGHO,EAAAA,EAAAA,CAAAA,mBAA0B,EACzB,GAAAzC,EAAAC,EAAA,EAACG,MAAAA,UACEsB,EAAQO,WAAW,CAACS,EAAE,GAAKC,EAAAA,CAAGA,EAC9BjB,EAAQO,WAAW,CAACS,EAAE,GAAKC,EAAAA,CAAGA,EAC7BjB,EAAQO,WAAW,CAACC,UAAU,CAACC,MAAM,CAAG,EACxC,GAAAnC,EAAAC,EAAA,EAAC2C,EAAAA,EAAcA,CAAAA,CACbC,KAAMnB,EAAQO,WAAW,CAACC,UAAU,CACpCY,UAAWpB,EAAQqB,UAAU,GAG/B,GAAA/C,EAAAC,EAAA,EAAC+C,EAAAA,EAAMA,CAAAA,CAACxC,QAAS,IAAMkB,EAAQa,cAAc,CAACU,EAAAA,EAAKA,WAAG,eAGvD,MAKT,MACE,GAAAjD,EAAAG,EAAA,EAAAH,EAAAkD,EAAA,YACE,GAAAlD,EAAAC,EAAA,EAACQ,EAAsBA,CACrB0C,UAAW3B,EACX4B,YAAa,IAAI,CACjBC,SAAU,GACVvB,SAAUA,IAEXE,IAGP,CAsBC,GAtBUP,EAAaG,OAAO,GAAKC,EAAAA,EAAAA,CAAAA,OAAwB,CAC1D,MACE,GAAA7B,EAAAC,EAAA,EAACT,EAAcA,CACb2D,UAAW3B,EACX4B,YAAa,IAAI,CACjBC,SAAU,GACV5D,KAAM,GAAAO,EAAAC,EAAA,EAACqD,EAAAA,YAAYA,CAAAA,CAAAA,YAElB5C,CAAC,CAAC,qBAAqB,IAc7B,CAXM,GACLe,EAAaG,OAAO,GAAKC,EAAAA,EAAAA,CAAAA,MAAuB,EAChDJ,EAAaG,OAAO,GAAKC,EAAAA,EAAAA,CAAAA,KAAsB,CAE/C,MACE,GAAA7B,EAAAC,EAAA,EAACQ,EAAsBA,CACrB0C,UAAW3B,EACX4B,YAAa,IAAI,CACjBC,SAAU,IAGf,MACI,GAAI,WAAY5B,EAAc,CACnC,IAAM8B,EAAS9B,EAAa8B,MAAM,CAC5BF,EAAW7B,EAAiBgC,OAAO,GAAKC,EAAAA,EAAAA,CAAAA,MAAuB,CACrE,MACE,GAAAzD,EAAAC,EAAA,EAACyD,EAAAA,CAAsBA,CAAAA,CACrBL,SAAUA,EACVF,UAAW3B,EACX4B,YAAa5B,EAAiBmC,mBAAmB,CAACC,OAAO,CAACL,IAGhE,CAAC,MACM,GAAAvD,EAAAC,EAAA,EAAAD,EAAAkD,EAAA,IACT","sources":["webpack://_N_E/./src/components/filter-container.css.ts","webpack://_N_E/./src/components/pure/workspace-title/index.tsx","webpack://_N_E/./src/components/workspace-header.tsx","webpack://_N_E/../../node_modules/@vanilla-extract/webpack-plugin/extracted.js?6787","webpack://_N_E/<anon>"],"sourcesContent":["import \"src/components/filter-container.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/filter-container.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xbzRwbzJhMCB7CiAgcGFkZGluZzogMTJweDsKICBkaXNwbGF5OiBmbGV4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouXzFvNHBvMmEwOjphZnRlciB7CiAgY29udGVudDogIiI7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxcHg7CiAgYmFja2dyb3VuZDogdmFyKC0tYWZmaW5lLWJvcmRlci1jb2xvcik7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMDsKICBsZWZ0OiAwOwogIG1hcmdpbjogMCAxcHg7Cn0=\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var filterContainerStyle = '_1o4po2a0';","import { RadioButton, RadioButtonGroup } from '@affine/component';\nimport { useAFFiNEI18N } from '@affine/i18n/hooks';\nimport { useSetAtom } from 'jotai';\nimport { useAtom } from 'jotai';\nimport type { ReactNode } from 'react';\nimport type React from 'react';\n\nimport {\n  allPageModeSelectAtom,\n  openQuickSearchModalAtom,\n} from '../../../atoms';\nimport type { HeaderProps } from '../../blocksuite/workspace-header/header';\nimport { Header } from '../../blocksuite/workspace-header/header';\nimport * as styles from '../../blocksuite/workspace-header/styles.css';\nimport { QuickSearchButton } from '../quick-search-button';\n\nexport type WorkspaceTitleProps = React.PropsWithChildren<\n  HeaderProps & {\n    icon?: ReactNode;\n  }\n>;\n\nexport const WorkspaceTitle: React.FC<WorkspaceTitleProps> = ({\n  icon,\n  children,\n  ...props\n}) => {\n  const setOpenQuickSearch = useSetAtom(openQuickSearchModalAtom);\n  return (\n    <Header {...props}>\n      <div className={styles.pageListTitleWrapper}>\n        <div className={styles.pageListTitleIcon}>{icon}</div>\n        {children}\n        <QuickSearchButton\n          onClick={() => {\n            setOpenQuickSearch(true);\n          }}\n        />\n      </div>\n    </Header>\n  );\n};\n\nexport const WorkspaceModeFilterTab = ({ ...props }: WorkspaceTitleProps) => {\n  const t = useAFFiNEI18N();\n  const [value, setMode] = useAtom(allPageModeSelectAtom);\n  const handleValueChange = (value: string) => {\n    if (value !== 'all' && value !== 'page' && value !== 'edgeless') {\n      throw new Error('Invalid value for page mode option');\n    }\n    setMode(value);\n  };\n  return (\n    <Header {...props}>\n      <div className={styles.allPageListTitleWrapper}>\n        <RadioButtonGroup\n          defaultValue={value}\n          onValueChange={handleValueChange}\n        >\n          <RadioButton value=\"all\" style={{ textTransform: 'capitalize' }}>\n            {t['all']()}\n          </RadioButton>\n          <RadioButton value=\"page\">{t['Page']()}</RadioButton>\n          <RadioButton value=\"edgeless\">{t['Edgeless']()}</RadioButton>\n        </RadioButtonGroup>\n      </div>\n    </Header>\n  );\n};\n","import { Button } from '@affine/component';\nimport {\n  FilterList,\n  SaveViewButton,\n  useAllPageSetting,\n  ViewList,\n} from '@affine/component/page-list';\nimport { config } from '@affine/env';\nimport type { WorkspaceHeaderProps } from '@affine/env/workspace';\nimport { WorkspaceFlavour, WorkspaceSubPath } from '@affine/env/workspace';\nimport { useAFFiNEI18N } from '@affine/i18n/hooks';\nimport { SettingsIcon } from '@blocksuite/icons';\nimport { RESET } from 'jotai/utils';\nimport type { ReactElement } from 'react';\nimport { NIL } from 'uuid';\n\nimport { BlockSuiteEditorHeader } from './blocksuite/workspace-header';\nimport { filterContainerStyle } from './filter-container.css';\nimport { WorkspaceModeFilterTab, WorkspaceTitle } from './pure/workspace-title';\n\nexport function WorkspaceHeader({\n  currentWorkspace,\n  currentEntry,\n}: WorkspaceHeaderProps<WorkspaceFlavour>): ReactElement {\n  const setting = useAllPageSetting();\n  const t = useAFFiNEI18N();\n  if ('subPath' in currentEntry) {\n    if (currentEntry.subPath === WorkspaceSubPath.ALL) {\n      const leftSlot = <ViewList setting={setting}></ViewList>;\n      const filterContainer = setting.currentView.filterList.length > 0 && (\n        <div className={filterContainerStyle}>\n          <div style={{ flex: 1 }}>\n            <FilterList\n              value={setting.currentView.filterList}\n              onChange={filterList => {\n                setting.setCurrentView(view => ({\n                  ...view,\n                  filterList,\n                }));\n              }}\n            />\n          </div>\n          {config.enableAllPageFilter && (\n            <div>\n              {setting.currentView.id !== NIL ||\n              (setting.currentView.id === NIL &&\n                setting.currentView.filterList.length > 0) ? (\n                <SaveViewButton\n                  init={setting.currentView.filterList}\n                  onConfirm={setting.createView}\n                ></SaveViewButton>\n              ) : (\n                <Button onClick={() => setting.setCurrentView(RESET)}>\n                  Back to all\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n      );\n      return (\n        <>\n          <WorkspaceModeFilterTab\n            workspace={currentWorkspace}\n            currentPage={null}\n            isPublic={false}\n            leftSlot={leftSlot}\n          />\n          {filterContainer}\n        </>\n      );\n    } else if (currentEntry.subPath === WorkspaceSubPath.SETTING) {\n      return (\n        <WorkspaceTitle\n          workspace={currentWorkspace}\n          currentPage={null}\n          isPublic={false}\n          icon={<SettingsIcon />}\n        >\n          {t['Workspace Settings']()}\n        </WorkspaceTitle>\n      );\n    } else if (\n      currentEntry.subPath === WorkspaceSubPath.SHARED ||\n      currentEntry.subPath === WorkspaceSubPath.TRASH\n    ) {\n      return (\n        <WorkspaceModeFilterTab\n          workspace={currentWorkspace}\n          currentPage={null}\n          isPublic={false}\n        />\n      );\n    }\n  } else if ('pageId' in currentEntry) {\n    const pageId = currentEntry.pageId;\n    const isPublic = currentWorkspace.flavour === WorkspaceFlavour.PUBLIC;\n    return (\n      <BlockSuiteEditorHeader\n        isPublic={isPublic}\n        workspace={currentWorkspace}\n        currentPage={currentWorkspace.blockSuiteWorkspace.getPage(pageId)}\n      />\n    );\n  }\n  return <></>;\n}\n","// extracted by mini-css-extract-plugin"],"names":["WorkspaceTitle","icon","children","props","param","setOpenQuickSearch","useSetAtom","openQuickSearchModalAtom","emotion_react_jsx_runtime_browser_esm","tZ","Header","BX","div","className","styles","QuickSearchButton","onClick","WorkspaceModeFilterTab","t","useAFFiNEI18N","value","setMode","useAtom","allPageModeSelectAtom","handleValueChange","RadioButtonGroup","defaultValue","onValueChange","RadioButton","style","textTransform","WorkspaceHeader","currentWorkspace","currentEntry","setting","useAllPageSetting","subPath","WorkspaceSubPath","leftSlot","ViewList","filterContainer","currentView","filterList","length","flex","FilterList","onChange","setCurrentView","view","config","id","NIL","SaveViewButton","init","onConfirm","createView","Button","RESET","HY","workspace","currentPage","isPublic","SettingsIcon","pageId","flavour","WorkspaceFlavour","BlockSuiteEditorHeader","blockSuiteWorkspace","getPage"],"sourceRoot":""}